
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b1e8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000033b8  0801b398  0801b398  0002b398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000010b2  0801e750  0801e750  0002e750  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000005c  0801f804  0801f804  0002f804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000108  0801f860  0801f860  0002f860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0017ef40  0801f968  0801f968  0002f968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0819e8a8  0819e8a8  001b0160  2**0
                  CONTENTS
  8 .ARM          00000008  0819e8a8  0819e8a8  001ae8a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0819e8b0  0819e8b0  001b0160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0819e8b0  0819e8b0  001ae8b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0819e8c4  0819e8c4  001ae8c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000160  20000000  0819e8cc  001b0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012594  20000160  0819ea2c  001b0160  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  200126f4  0819ea2c  001b26f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  001b0160  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  001c0000  2**2
                  ALLOC
 17 .debug_line   00031688  00000000  00000000  001b0190  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   0009f850  00000000  00000000  001e1818  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 000126d1  00000000  00000000  00281068  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 000027f0  00000000  00000000  00293740  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    0010a24a  00000000  00000000  00295f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 000036e8  00000000  00000000  003a0180  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001be80  00000000  00000000  003a3868  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002fd14  00000000  00000000  003bf6e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  003ef3fc  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00007740  00000000  00000000  003ef4f8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000160 	.word	0x20000160
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801b380 	.word	0x0801b380

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000164 	.word	0x20000164
 80001ec:	0801b380 	.word	0x0801b380

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000590:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000594:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000596:	e003      	b.n	80005a0 <LoopCopyDataInit>

08000598 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000598:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800059c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059e:	3104      	adds	r1, #4

080005a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a0:	480b      	ldr	r0, [pc, #44]	; (80005d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a2:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a8:	d3f6      	bcc.n	8000598 <CopyDataInit>
  ldr  r2, =_sbss
 80005aa:	4a0b      	ldr	r2, [pc, #44]	; (80005d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005ac:	e002      	b.n	80005b4 <LoopFillZerobss>

080005ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b0:	f842 3b04 	str.w	r3, [r2], #4

080005b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b4:	4b09      	ldr	r3, [pc, #36]	; (80005dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b8:	d3f9      	bcc.n	80005ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ba:	f003 f84b 	bl	8003654 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005be:	f019 ff23 	bl	801a408 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c2:	f000 fe65 	bl	8001290 <main>
  bx  lr    
 80005c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005cc:	0819e8cc 	.word	0x0819e8cc
  ldr  r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d4:	20000160 	.word	0x20000160
  ldr  r2, =_sbss
 80005d8:	20000160 	.word	0x20000160
  ldr  r3, = _ebss
 80005dc:	200126f4 	.word	0x200126f4

080005e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e0:	e7fe      	b.n	80005e0 <ADC_IRQHandler>

080005e2 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e2:	f000 bc5d 	b.w	8000ea0 <touchgfx_init>

080005e6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005e6:	f000 bccb 	b.w	8000f80 <touchgfx_taskEntry>

080005ea <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ea:	4770      	bx	lr

080005ec <_ZN20STM32TouchControllerD0Ev>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	2104      	movs	r1, #4
 80005f0:	4604      	mov	r4, r0
 80005f2:	f019 fe93 	bl	801a31c <_ZdlPvj>
 80005f6:	4620      	mov	r0, r4
 80005f8:	bd10      	pop	{r4, pc}
	...

080005fc <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005fc:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005fe:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000600:	4c0c      	ldr	r4, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000602:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000604:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000606:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000608:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	6863      	ldr	r3, [r4, #4]
 800060c:	4798      	blx	r3
 800060e:	f640 0311 	movw	r3, #2065	; 0x811
 8000612:	4298      	cmp	r0, r3
 8000614:	d10a      	bne.n	800062c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000616:	4d09      	ldr	r5, [pc, #36]	; (800063c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000618:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	2082      	movs	r0, #130	; 0x82
 800061e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000620:	682b      	ldr	r3, [r5, #0]
 8000622:	2082      	movs	r0, #130	; 0x82
 8000624:	68db      	ldr	r3, [r3, #12]
 8000626:	4798      	blx	r3
        ret = TS_OK;
 8000628:	2000      	movs	r0, #0
    }

    return ret;
}
 800062a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800062c:	2001      	movs	r0, #1
 800062e:	e7fc      	b.n	800062a <_Z11BSP_TS_Inittt+0x2e>
 8000630:	2000017c 	.word	0x2000017c
 8000634:	2000004c 	.word	0x2000004c
 8000638:	2000017e 	.word	0x2000017e
 800063c:	20000180 	.word	0x20000180

08000640 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000640:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000644:	20f0      	movs	r0, #240	; 0xf0
 8000646:	f7ff bfd9 	b.w	80005fc <_Z11BSP_TS_Inittt>
	...

0800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800064c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064e:	4d2c      	ldr	r5, [pc, #176]	; (8000700 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000650:	682b      	ldr	r3, [r5, #0]
{
 8000652:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	2082      	movs	r0, #130	; 0x82
 8000658:	4798      	blx	r3
 800065a:	b280      	uxth	r0, r0
 800065c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800065e:	2800      	cmp	r0, #0
 8000660:	d04b      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000662:	682b      	ldr	r3, [r5, #0]
 8000664:	f10d 0206 	add.w	r2, sp, #6
 8000668:	695b      	ldr	r3, [r3, #20]
 800066a:	a901      	add	r1, sp, #4
 800066c:	2082      	movs	r0, #130	; 0x82
 800066e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000670:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000674:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000678:	b29b      	uxth	r3, r3
 800067a:	220b      	movs	r2, #11
 800067c:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000680:	b133      	cbz	r3, 8000690 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000682:	4a20      	ldr	r2, [pc, #128]	; (8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000684:	8812      	ldrh	r2, [r2, #0]
 8000686:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000688:	bf3c      	itt	cc
 800068a:	f102 33ff 	addcc.w	r3, r2, #4294967295
 800068e:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000690:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000694:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000698:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 800069a:	bf95      	itete	ls
 800069c:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 80006a0:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 80006a4:	320e      	addls	r2, #14
            x = 3800 - x;
 80006a6:	3208      	addhi	r2, #8
 80006a8:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80006b0:	220f      	movs	r2, #15
 80006b2:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 80006b6:	b131      	cbz	r1, 80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b8:	4a13      	ldr	r2, [pc, #76]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 80006ba:	8812      	ldrh	r2, [r2, #0]
 80006bc:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 80006be:	bf3c      	itt	cc
 80006c0:	f102 31ff 	addcc.w	r1, r2, #4294967295
 80006c4:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e11      	ldr	r6, [pc, #68]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d11      	ldr	r5, [pc, #68]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
 80006ce:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4281      	cmp	r1, r0
 80006d2:	bf88      	it	hi
 80006d4:	1a8a      	subhi	r2, r1, r2
 80006d6:	b2b8      	uxth	r0, r7
 80006d8:	bf98      	it	ls
 80006da:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	42bb      	cmp	r3, r7
 80006de:	bf8c      	ite	hi
 80006e0:	1a18      	subhi	r0, r3, r0
 80006e2:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e4:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e8:	4402      	add	r2, r0
 80006ea:	2a05      	cmp	r2, #5
        {
            _x = x;
 80006ec:	bfc4      	itt	gt
 80006ee:	6031      	strgt	r1, [r6, #0]
            _y = y;
 80006f0:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80006f2:	6833      	ldr	r3, [r6, #0]
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006fe:	bf00      	nop
 8000700:	20000180 	.word	0x20000180
 8000704:	2000017e 	.word	0x2000017e
 8000708:	2000017c 	.word	0x2000017c
 800070c:	20000184 	.word	0x20000184
 8000710:	20000188 	.word	0x20000188

08000714 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000714:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000716:	4668      	mov	r0, sp
{
 8000718:	460d      	mov	r5, r1
 800071a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800071c:	f7ff ff96 	bl	800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000720:	f8bd 0000 	ldrh.w	r0, [sp]
 8000724:	b130      	cbz	r0, 8000734 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000726:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800072a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800072c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000730:	6023      	str	r3, [r4, #0]
        return true;
 8000732:	2001      	movs	r0, #1
}
 8000734:	b003      	add	sp, #12
 8000736:	bd30      	pop	{r4, r5, pc}

08000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000738:	4770      	bx	lr

0800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800073a:	4770      	bx	lr

0800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800073c:	4770      	bx	lr

0800073e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800073e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000740:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000744:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800074a:	2000      	movs	r0, #0
 800074c:	4770      	bx	lr

0800074e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800074e:	2000      	movs	r0, #0
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000752:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000754:	b10b      	cbz	r3, 800075a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000756:	4608      	mov	r0, r1
 8000758:	4718      	bx	r3
        }
    }
 800075a:	4770      	bx	lr

0800075c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800075c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000760:	4770      	bx	lr

08000762 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000762:	6840      	ldr	r0, [r0, #4]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4718      	bx	r3

0800076a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800076a:	4770      	bx	lr

0800076c <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 800076c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800076e:	6803      	ldr	r3, [r0, #0]
{
 8000770:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000772:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000774:	4798      	blx	r3
    enableInterrupts();
 8000776:	6823      	ldr	r3, [r4, #0]
 8000778:	4620      	mov	r0, r4
 800077a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800077c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800077e:	f000 f921 	bl	80009c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000782:	6823      	ldr	r3, [r4, #0]
 8000784:	4620      	mov	r0, r4
 8000786:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000788:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800078a:	2029      	movs	r0, #41	; 0x29
 800078c:	f001 f856 	bl	800183c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000790:	f000 f918 	bl	80009c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	4620      	mov	r0, r4
 8000798:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800079a:	4798      	blx	r3
 800079c:	e7f8      	b.n	8000790 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

0800079e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800079e:	b510      	push	{r4, lr}
 80007a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007a2:	f008 ff9b 	bl	80096dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	4620      	mov	r0, r4
 80007aa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 80007ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007b2:	4718      	bx	r3

080007b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007b4:	f000 bc80 	b.w	80010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007b8:	f000 bc84 	b.w	80010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007bc:	f000 bc8a 	b.w	80010d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007c0:	f000 bc56 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007c4:	f000 bc8a 	b.w	80010dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007c8:	f000 bc92 	b.w	80010f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007cc:	f000 bc5a 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007d0:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007d2:	b931      	cbnz	r1, 80007e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007d4:	4b0a      	ldr	r3, [pc, #40]	; (8000800 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007d6:	4a0b      	ldr	r2, [pc, #44]	; (8000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007d8:	480b      	ldr	r0, [pc, #44]	; (8000808 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007da:	f44f 7127 	mov.w	r1, #668	; 0x29c
 80007de:	f019 fdc9 	bl	801a374 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007e6:	3200      	adds	r2, #0
 80007e8:	4908      	ldr	r1, [pc, #32]	; (800080c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007ec:	bf18      	it	ne
 80007ee:	2201      	movne	r2, #1
 80007f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80007f2:	3300      	adds	r3, #0
 80007f4:	4a06      	ldr	r2, [pc, #24]	; (8000810 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 80007f6:	bf18      	it	ne
 80007f8:	2301      	movne	r3, #1
 80007fa:	7013      	strb	r3, [r2, #0]
    }
 80007fc:	bd08      	pop	{r3, pc}
 80007fe:	bf00      	nop
 8000800:	0801b415 	.word	0x0801b415
 8000804:	0801b5a0 	.word	0x0801b5a0
 8000808:	0801b44d 	.word	0x0801b44d
 800080c:	200120aa 	.word	0x200120aa
 8000810:	200120ab 	.word	0x200120ab

08000814 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8000814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000818:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800081a:	4b1c      	ldr	r3, [pc, #112]	; (800088c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 800081c:	f89d 5020 	ldrb.w	r5, [sp, #32]
 8000820:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000822:	6819      	ldr	r1, [r3, #0]
 8000824:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8000828:	4607      	mov	r7, r0
 800082a:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800082c:	b10b      	cbz	r3, 8000832 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800082e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8000830:	b900      	cbnz	r0, 8000834 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 8000832:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8000834:	6803      	ldr	r3, [r0, #0]
 8000836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000838:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800083a:	4b15      	ldr	r3, [pc, #84]	; (8000890 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 800083c:	881e      	ldrh	r6, [r3, #0]
 800083e:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 8000840:	f1b9 0f00 	cmp.w	r9, #0
 8000844:	d016      	beq.n	8000874 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8000846:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 800084a:	460a      	mov	r2, r1
        if (useAnimationStorage)
 800084c:	b1ad      	cbz	r5, 800087a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800084e:	180b      	adds	r3, r1, r0
 8000850:	3c01      	subs	r4, #1
 8000852:	b2a4      	uxth	r4, r4
 8000854:	2c1f      	cmp	r4, #31
 8000856:	d812      	bhi.n	800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8000858:	2101      	movs	r1, #1
 800085a:	fa01 f404 	lsl.w	r4, r1, r4
 800085e:	490d      	ldr	r1, [pc, #52]	; (8000894 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 8000860:	4021      	ands	r1, r4
 8000862:	b161      	cbz	r1, 800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000864:	6839      	ldr	r1, [r7, #0]
 8000866:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8000868:	4638      	mov	r0, r7
 800086a:	4641      	mov	r1, r8
 800086c:	46a4      	mov	ip, r4
    }
 800086e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000872:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8000874:	4641      	mov	r1, r8
        void* double_buf = 0;
 8000876:	464a      	mov	r2, r9
 8000878:	e7e8      	b.n	800084c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 800087a:	462b      	mov	r3, r5
 800087c:	e7e8      	b.n	8000850 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800087e:	4b06      	ldr	r3, [pc, #24]	; (8000898 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 8000880:	4a06      	ldr	r2, [pc, #24]	; (800089c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 8000882:	4807      	ldr	r0, [pc, #28]	; (80008a0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8000884:	f240 2189 	movw	r1, #649	; 0x289
 8000888:	f019 fd74 	bl	801a374 <__assert_func>
 800088c:	200120ac 	.word	0x200120ac
 8000890:	200120a8 	.word	0x200120a8
 8000894:	8080808b 	.word	0x8080808b
 8000898:	0801b3f8 	.word	0x0801b3f8
 800089c:	0801b54c 	.word	0x0801b54c
 80008a0:	0801b44d 	.word	0x0801b44d

080008a4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008a4:	f008 b9aa 	b.w	8008bfc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008a8 <_ZN11TouchGFXHALD0Ev>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	2178      	movs	r1, #120	; 0x78
 80008ac:	4604      	mov	r4, r0
 80008ae:	f019 fd35 	bl	801a31c <_ZdlPvj>
 80008b2:	4620      	mov	r0, r4
 80008b4:	bd10      	pop	{r4, pc}

080008b6 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80008b6:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80008ba:	b11b      	cbz	r3, 80008c4 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80008bc:	6840      	ldr	r0, [r0, #4]
 80008be:	6803      	ldr	r3, [r0, #0]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	4718      	bx	r3
    }
 80008c4:	4618      	mov	r0, r3
 80008c6:	4770      	bx	lr

080008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80008c8:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80008ca:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80008ce:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80008d2:	4b10      	ldr	r3, [pc, #64]	; (8000914 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80008d4:	428c      	cmp	r4, r1
 80008d6:	781a      	ldrb	r2, [r3, #0]
 80008d8:	d00d      	beq.n	80008f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80008da:	b95a      	cbnz	r2, 80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008dc:	4a0e      	ldr	r2, [pc, #56]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80008de:	490f      	ldr	r1, [pc, #60]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e0:	480f      	ldr	r0, [pc, #60]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e2:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e4:	4d0f      	ldr	r5, [pc, #60]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e6:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e8:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80008ea:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008ec:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80008ee:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80008f0:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80008f2:	701a      	strb	r2, [r3, #0]
        }
    }
 80008f4:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008f6:	2a00      	cmp	r2, #0
 80008f8:	d0fc      	beq.n	80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80008fa:	4809      	ldr	r0, [pc, #36]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80008fc:	4a07      	ldr	r2, [pc, #28]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80008fe:	8801      	ldrh	r1, [r0, #0]
 8000900:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8000902:	4a05      	ldr	r2, [pc, #20]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000904:	4d07      	ldr	r5, [pc, #28]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000906:	8814      	ldrh	r4, [r2, #0]
 8000908:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800090a:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800090c:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800090e:	2200      	movs	r2, #0
 8000910:	e7ef      	b.n	80008f2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 8000912:	bf00      	nop
 8000914:	200120a4 	.word	0x200120a4
 8000918:	200120a0 	.word	0x200120a0
 800091c:	200120a6 	.word	0x200120a6
 8000920:	200120a2 	.word	0x200120a2
 8000924:	200120a8 	.word	0x200120a8

08000928 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8000928:	f000 bbf6 	b.w	8001118 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800092c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800092c:	2101      	movs	r1, #1
{
 800092e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000930:	2200      	movs	r2, #0
 8000932:	4608      	mov	r0, r1
 8000934:	f005 fe3a 	bl	80065ac <osSemaphoreNew>
 8000938:	4b0a      	ldr	r3, [pc, #40]	; (8000964 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800093a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800093c:	b928      	cbnz	r0, 800094a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800093e:	4b0a      	ldr	r3, [pc, #40]	; (8000968 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000940:	4a0a      	ldr	r2, [pc, #40]	; (800096c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000942:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000944:	480a      	ldr	r0, [pc, #40]	; (8000970 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000946:	f019 fd15 	bl	801a374 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800094a:	2200      	movs	r2, #0
 800094c:	2104      	movs	r1, #4
 800094e:	2001      	movs	r0, #1
 8000950:	f005 fef6 	bl	8006740 <osMessageQueueNew>
 8000954:	4b07      	ldr	r3, [pc, #28]	; (8000974 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000956:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000958:	b918      	cbnz	r0, 8000962 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800095a:	4b07      	ldr	r3, [pc, #28]	; (8000978 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 800095c:	4a03      	ldr	r2, [pc, #12]	; (800096c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800095e:	2129      	movs	r1, #41	; 0x29
 8000960:	e7f0      	b.n	8000944 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000962:	bd08      	pop	{r3, pc}
 8000964:	20000190 	.word	0x20000190
 8000968:	0801b5ee 	.word	0x0801b5ee
 800096c:	0801b6ca 	.word	0x0801b6ca
 8000970:	0801b637 	.word	0x0801b637
 8000974:	2000018c 	.word	0x2000018c
 8000978:	0801b688 	.word	0x0801b688

0800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800097c:	4b02      	ldr	r3, [pc, #8]	; (8000988 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800097e:	f04f 31ff 	mov.w	r1, #4294967295
 8000982:	6818      	ldr	r0, [r3, #0]
 8000984:	f005 be68 	b.w	8006658 <osSemaphoreAcquire>
 8000988:	20000190 	.word	0x20000190

0800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 800098c:	4b01      	ldr	r3, [pc, #4]	; (8000994 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800098e:	6818      	ldr	r0, [r3, #0]
 8000990:	f005 be9e 	b.w	80066d0 <osSemaphoreRelease>
 8000994:	20000190 	.word	0x20000190

08000998 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000998:	4b02      	ldr	r3, [pc, #8]	; (80009a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800099a:	2100      	movs	r1, #0
 800099c:	6818      	ldr	r0, [r3, #0]
 800099e:	f005 be5b 	b.w	8006658 <osSemaphoreAcquire>
 80009a2:	bf00      	nop
 80009a4:	20000190 	.word	0x20000190

080009a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80009a8:	f7ff bff0 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080009ac <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80009ac:	4803      	ldr	r0, [pc, #12]	; (80009bc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80009ae:	4904      	ldr	r1, [pc, #16]	; (80009c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80009b0:	6800      	ldr	r0, [r0, #0]
 80009b2:	2300      	movs	r3, #0
 80009b4:	461a      	mov	r2, r3
 80009b6:	f005 bf09 	b.w	80067cc <osMessageQueuePut>
 80009ba:	bf00      	nop
 80009bc:	2000018c 	.word	0x2000018c
 80009c0:	20000004 	.word	0x20000004

080009c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80009c4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80009c6:	4c08      	ldr	r4, [pc, #32]	; (80009e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80009c8:	2300      	movs	r3, #0
 80009ca:	461a      	mov	r2, r3
 80009cc:	a901      	add	r1, sp, #4
 80009ce:	6820      	ldr	r0, [r4, #0]
 80009d0:	f005 ff3e 	bl	8006850 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80009d4:	f04f 33ff 	mov.w	r3, #4294967295
 80009d8:	2200      	movs	r2, #0
 80009da:	a901      	add	r1, sp, #4
 80009dc:	6820      	ldr	r0, [r4, #0]
 80009de:	f005 ff37 	bl	8006850 <osMessageQueueGet>
}
 80009e2:	b002      	add	sp, #8
 80009e4:	bd10      	pop	{r4, pc}
 80009e6:	bf00      	nop
 80009e8:	2000018c 	.word	0x2000018c

080009ec <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009ec:	6803      	ldr	r3, [r0, #0]
 80009ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009f0:	4718      	bx	r3

080009f2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 80009f2:	2000      	movs	r0, #0
 80009f4:	4770      	bx	lr

080009f6 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009f6:	6803      	ldr	r3, [r0, #0]
 80009f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009fa:	4718      	bx	r3

080009fc <_ZN10STM32F4DMA11getBlitCapsEv>:
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
}
 80009fc:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000a00:	4770      	bx	lr
	...

08000a04 <_ZN10STM32F4DMA10initializeEv>:
{
 8000a04:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000a06:	4c07      	ldr	r4, [pc, #28]	; (8000a24 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000a08:	4b07      	ldr	r3, [pc, #28]	; (8000a28 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000a0a:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000a0c:	4620      	mov	r0, r4
 8000a0e:	f003 f9bf 	bl	8003d90 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a12:	4b06      	ldr	r3, [pc, #24]	; (8000a2c <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000a14:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000a16:	4b06      	ldr	r3, [pc, #24]	; (8000a30 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000a18:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a1a:	4b06      	ldr	r3, [pc, #24]	; (8000a34 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000a1c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a20:	609a      	str	r2, [r3, #8]
}
 8000a22:	bd10      	pop	{r4, pc}
 8000a24:	200125b4 	.word	0x200125b4
 8000a28:	4002b000 	.word	0x4002b000
 8000a2c:	08000a55 	.word	0x08000a55
 8000a30:	08000a39 	.word	0x08000a39
 8000a34:	e000e100 	.word	0xe000e100

08000a38 <DMA2D_XferErrorCallback>:
{
 8000a38:	b508      	push	{r3, lr}
    assert(0);
 8000a3a:	4a03      	ldr	r2, [pc, #12]	; (8000a48 <DMA2D_XferErrorCallback+0x10>)
 8000a3c:	4b03      	ldr	r3, [pc, #12]	; (8000a4c <DMA2D_XferErrorCallback+0x14>)
 8000a3e:	4804      	ldr	r0, [pc, #16]	; (8000a50 <DMA2D_XferErrorCallback+0x18>)
 8000a40:	2136      	movs	r1, #54	; 0x36
 8000a42:	f019 fc97 	bl	801a374 <__assert_func>
 8000a46:	bf00      	nop
 8000a48:	0801b798 	.word	0x0801b798
 8000a4c:	0801c14b 	.word	0x0801c14b
 8000a50:	0801b6f9 	.word	0x0801b6f9

08000a54 <DMA2D_XferCpltCallback>:
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8000a54:	4b02      	ldr	r3, [pc, #8]	; (8000a60 <DMA2D_XferCpltCallback+0xc>)
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a5a:	6803      	ldr	r3, [r0, #0]
 8000a5c:	695b      	ldr	r3, [r3, #20]
 8000a5e:	4718      	bx	r3
 8000a60:	200120ac 	.word	0x200120ac

08000a64 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000a64:	4b08      	ldr	r3, [pc, #32]	; (8000a88 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000a66:	b510      	push	{r4, lr}
 8000a68:	6003      	str	r3, [r0, #0]
 8000a6a:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000a6c:	4807      	ldr	r0, [pc, #28]	; (8000a8c <_ZN10STM32F4DMAD1Ev+0x28>)
 8000a6e:	f003 fa57 	bl	8003f20 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a72:	4b07      	ldr	r3, [pc, #28]	; (8000a90 <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000a74:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a78:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a80:	f3bf 8f6f 	isb	sy
}
 8000a84:	4620      	mov	r0, r4
 8000a86:	bd10      	pop	{r4, pc}
 8000a88:	0801b750 	.word	0x0801b750
 8000a8c:	200125b4 	.word	0x200125b4
 8000a90:	e000e100 	.word	0xe000e100

08000a94 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000a94:	b510      	push	{r4, lr}
 8000a96:	4604      	mov	r4, r0
}
 8000a98:	f7ff ffe4 	bl	8000a64 <_ZN10STM32F4DMAD1Ev>
 8000a9c:	4620      	mov	r0, r4
 8000a9e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000aa2:	f019 fc3b 	bl	801a31c <_ZdlPvj>
 8000aa6:	4620      	mov	r0, r4
 8000aa8:	bd10      	pop	{r4, pc}
	...

08000aac <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000aac:	4b04      	ldr	r3, [pc, #16]	; (8000ac0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000aae:	681b      	ldr	r3, [r3, #0]
 8000ab0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000ab4:	b10a      	cbz	r2, 8000aba <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000ab6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000ab8:	b900      	cbnz	r0, 8000abc <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000aba:	6898      	ldr	r0, [r3, #8]
    }
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop
 8000ac0:	200120ac 	.word	0x200120ac

08000ac4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000ac4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000ac8:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000aca:	2d20      	cmp	r5, #32
{
 8000acc:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000ace:	f000 8097 	beq.w	8000c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000ad2:	2d40      	cmp	r5, #64	; 0x40
 8000ad4:	f000 8094 	beq.w	8000c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000ad8:	1f2a      	subs	r2, r5, #4
 8000ada:	4256      	negs	r6, r2
 8000adc:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000ade:	2d80      	cmp	r5, #128	; 0x80
 8000ae0:	f000 8090 	beq.w	8000c04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000ae4:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000ae8:	425d      	negs	r5, r3
 8000aea:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000aec:	f7ff ffde 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 8000af0:	6803      	ldr	r3, [r0, #0]
 8000af2:	69db      	ldr	r3, [r3, #28]
 8000af4:	4798      	blx	r3

    switch (blitOp.operation)
 8000af6:	6823      	ldr	r3, [r4, #0]
 8000af8:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000afa:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8000afc:	f000 8099 	beq.w	8000c32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8000b00:	f200 8082 	bhi.w	8000c08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 8000b04:	2b04      	cmp	r3, #4
 8000b06:	f000 808d 	beq.w	8000c24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8000b0a:	2b20      	cmp	r3, #32
 8000b0c:	f000 8091 	beq.w	8000c32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000b10:	f1be 0f10 	cmp.w	lr, #16
 8000b14:	bf14      	ite	ne
 8000b16:	f04f 0c01 	movne.w	ip, #1
 8000b1a:	f04f 0c02 	moveq.w	ip, #2
 8000b1e:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b20:	4b4b      	ldr	r3, [pc, #300]	; (8000c50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b22:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b26:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b28:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b2a:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b2e:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b30:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b34:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b38:	bf14      	ite	ne
 8000b3a:	2001      	movne	r0, #1
 8000b3c:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b3e:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b42:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b46:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b48:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b4a:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000b4c:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000b4e:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000b52:	f022 0207 	bic.w	r2, r2, #7
 8000b56:	4302      	orrs	r2, r0
 8000b58:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000b5a:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000b5c:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000b60:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000b64:	433a      	orrs	r2, r7
 8000b66:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000b68:	8aa2      	ldrh	r2, [r4, #20]
 8000b6a:	eba2 0208 	sub.w	r2, r2, r8
 8000b6e:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000b70:	b906      	cbnz	r6, 8000b74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 8000b72:	b395      	cbz	r5, 8000bda <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 8000b74:	7f22      	ldrb	r2, [r4, #28]
 8000b76:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000b78:	bf15      	itete	ne
 8000b7a:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000b7c:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000b7e:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000b82:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000b84:	b31d      	cbz	r5, 8000bce <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 8000b86:	7f22      	ldrb	r2, [r4, #28]
 8000b88:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 8000b8a:	f1be 0f10 	cmp.w	lr, #16
 8000b8e:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 8000b92:	d151      	bne.n	8000c38 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000b94:	f04f 081f 	mov.w	r8, #31
 8000b98:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 8000b9c:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000ba0:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000ba4:	ea01 0208 	and.w	r2, r1, r8
 8000ba8:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000bac:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000bb0:	ea42 020c 	orr.w	r2, r2, ip
 8000bb4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000bb8:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8000bbc:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000bc0:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000bc4:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000bc8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000bcc:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000bce:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000bd2:	2100      	movs	r1, #0
 8000bd4:	481e      	ldr	r0, [pc, #120]	; (8000c50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000bd6:	f003 fa63 	bl	80040a0 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000bda:	2101      	movs	r1, #1
 8000bdc:	481c      	ldr	r0, [pc, #112]	; (8000c50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000bde:	f003 fa5f 	bl	80040a0 <HAL_DMA2D_ConfigLayer>
 8000be2:	8a23      	ldrh	r3, [r4, #16]
 8000be4:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 8000be6:	b906      	cbnz	r6, 8000bea <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8000be8:	b355      	cbz	r5, 8000c40 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000bea:	e9cd 3200 	strd	r3, r2, [sp]
 8000bee:	68e3      	ldr	r3, [r4, #12]
 8000bf0:	6861      	ldr	r1, [r4, #4]
 8000bf2:	4817      	ldr	r0, [pc, #92]	; (8000c50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000bf4:	461a      	mov	r2, r3
 8000bf6:	f003 f915 	bl	8003e24 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000bfa:	b003      	add	sp, #12
 8000bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000c00:	2601      	movs	r6, #1
 8000c02:	e76f      	b.n	8000ae4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000c04:	2501      	movs	r5, #1
 8000c06:	e771      	b.n	8000aec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000c08:	2b80      	cmp	r3, #128	; 0x80
 8000c0a:	d006      	beq.n	8000c1a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8000c0c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c10:	f47f af7e 	bne.w	8000b10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 8000c14:	f04f 0c09 	mov.w	ip, #9
 8000c18:	e001      	b.n	8000c1e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8000c1a:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8000c1e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000c22:	e77d      	b.n	8000b20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c24:	2810      	cmp	r0, #16
 8000c26:	bf14      	ite	ne
 8000c28:	f04f 0c01 	movne.w	ip, #1
 8000c2c:	f04f 0c02 	moveq.w	ip, #2
 8000c30:	e7f5      	b.n	8000c1e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 8000c32:	f04f 0c00 	mov.w	ip, #0
 8000c36:	e7f2      	b.n	8000c1e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000c38:	ea4c 0101 	orr.w	r1, ip, r1
 8000c3c:	6359      	str	r1, [r3, #52]	; 0x34
 8000c3e:	e7c6      	b.n	8000bce <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000c40:	9200      	str	r2, [sp, #0]
 8000c42:	6861      	ldr	r1, [r4, #4]
 8000c44:	68e2      	ldr	r2, [r4, #12]
 8000c46:	4802      	ldr	r0, [pc, #8]	; (8000c50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c48:	f003 f8ce 	bl	8003de8 <HAL_DMA2D_Start_IT>
}
 8000c4c:	e7d5      	b.n	8000bfa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 8000c4e:	bf00      	nop
 8000c50:	200125b4 	.word	0x200125b4

08000c54 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000c56:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000c58:	f7ff ff28 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 8000c5c:	6803      	ldr	r3, [r0, #0]
 8000c5e:	69db      	ldr	r3, [r3, #28]
 8000c60:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c62:	2810      	cmp	r0, #16
 8000c64:	69ab      	ldr	r3, [r5, #24]
 8000c66:	7f29      	ldrb	r1, [r5, #28]
 8000c68:	d166      	bne.n	8000d38 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000c6a:	f003 021f 	and.w	r2, r3, #31
 8000c6e:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c72:	201f      	movs	r0, #31
 8000c74:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c78:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c7c:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c80:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c84:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c88:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c8c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c90:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000c94:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c96:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c98:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c9c:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000ca0:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000ca2:	4827      	ldr	r0, [pc, #156]	; (8000d40 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000ca4:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ca6:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8000ca8:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000caa:	8a2b      	ldrh	r3, [r5, #16]
 8000cac:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000cb0:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000cb2:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000cb4:	bf0c      	ite	eq
 8000cb6:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000cba:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000cbe:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000cc2:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000cc4:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000cc8:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000cca:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000ccc:	f023 0307 	bic.w	r3, r3, #7
 8000cd0:	430b      	orrs	r3, r1
 8000cd2:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000cd4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000cd6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8000cda:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000cde:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 8000ce0:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000ce4:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 8000ce6:	d11c      	bne.n	8000d22 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8000ce8:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8000cea:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000cee:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000cf0:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000cf4:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000cf6:	2100      	movs	r1, #0
 8000cf8:	f003 f9d2 	bl	80040a0 <HAL_DMA2D_ConfigLayer>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000cfc:	2101      	movs	r1, #1
 8000cfe:	4810      	ldr	r0, [pc, #64]	; (8000d40 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d00:	f003 f9ce 	bl	80040a0 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d04:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8000d08:	8a2b      	ldrh	r3, [r5, #16]
 8000d0a:	8a6a      	ldrh	r2, [r5, #18]
 8000d0c:	d10d      	bne.n	8000d2a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000d0e:	68e9      	ldr	r1, [r5, #12]
 8000d10:	480b      	ldr	r0, [pc, #44]	; (8000d40 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d12:	e9cd 3200 	strd	r3, r2, [sp]
 8000d16:	460b      	mov	r3, r1
 8000d18:	460a      	mov	r2, r1
 8000d1a:	f003 f883 	bl	8003e24 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8000d1e:	b003      	add	sp, #12
 8000d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d22:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000d24:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d26:	6283      	str	r3, [r0, #40]	; 0x28
 8000d28:	e7e8      	b.n	8000cfc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8000d2a:	9200      	str	r2, [sp, #0]
 8000d2c:	4621      	mov	r1, r4
 8000d2e:	68ea      	ldr	r2, [r5, #12]
 8000d30:	4803      	ldr	r0, [pc, #12]	; (8000d40 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d32:	f003 f859 	bl	8003de8 <HAL_DMA2D_Start_IT>
}
 8000d36:	e7f2      	b.n	8000d1e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8000d38:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d3c:	2101      	movs	r1, #1
 8000d3e:	e7af      	b.n	8000ca0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8000d40:	200125b4 	.word	0x200125b4

08000d44 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8000d44:	b570      	push	{r4, r5, r6, lr}
 8000d46:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000d48:	462c      	mov	r4, r5
 8000d4a:	4b0a      	ldr	r3, [pc, #40]	; (8000d74 <_ZN10STM32F4DMAC1Ev+0x30>)
 8000d4c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000d4e:	2600      	movs	r6, #0
 8000d50:	6068      	str	r0, [r5, #4]
 8000d52:	722e      	strb	r6, [r5, #8]
 8000d54:	726e      	strb	r6, [r5, #9]
 8000d56:	f844 3b20 	str.w	r3, [r4], #32
 8000d5a:	2260      	movs	r2, #96	; 0x60
 8000d5c:	4621      	mov	r1, r4
 8000d5e:	f008 fde9 	bl	8009934 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000d62:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000d66:	61a6      	str	r6, [r4, #24]
 8000d68:	3420      	adds	r4, #32
 8000d6a:	42a3      	cmp	r3, r4
 8000d6c:	d1fb      	bne.n	8000d66 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 8000d6e:	4628      	mov	r0, r5
 8000d70:	bd70      	pop	{r4, r5, r6, pc}
 8000d72:	bf00      	nop
 8000d74:	0801b750 	.word	0x0801b750

08000d78 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d78:	2001      	movs	r0, #1
 8000d7a:	4770      	bx	lr

08000d7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d7c:	200c      	movs	r0, #12
 8000d7e:	4770      	bx	lr

08000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d80:	230c      	movs	r3, #12
 8000d82:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d86:	3008      	adds	r0, #8
 8000d88:	4770      	bx	lr

08000d8a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d8a:	230c      	movs	r3, #12
 8000d8c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d90:	3008      	adds	r0, #8
 8000d92:	4770      	bx	lr

08000d94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d94:	2001      	movs	r0, #1
 8000d96:	4770      	bx	lr

08000d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d98:	f44f 7026 	mov.w	r0, #664	; 0x298
 8000d9c:	4770      	bx	lr

08000d9e <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d9e:	f44f 7326 	mov.w	r3, #664	; 0x298
 8000da2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000da6:	3008      	adds	r0, #8
 8000da8:	4770      	bx	lr

08000daa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000daa:	f44f 7326 	mov.w	r3, #664	; 0x298
 8000dae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000db2:	3008      	adds	r0, #8
 8000db4:	4770      	bx	lr

08000db6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000db6:	2001      	movs	r0, #1
 8000db8:	4770      	bx	lr

08000dba <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000dba:	2010      	movs	r0, #16
 8000dbc:	4770      	bx	lr

08000dbe <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000dbe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000dc2:	3008      	adds	r0, #8
 8000dc4:	4770      	bx	lr

08000dc6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000dc6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000dca:	3008      	adds	r0, #8
 8000dcc:	4770      	bx	lr

08000dce <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000dce:	4608      	mov	r0, r1
 8000dd0:	f001 b9fc 	b.w	80021cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	4b03      	ldr	r3, [pc, #12]	; (8000de4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dd8:	6003      	str	r3, [r0, #0]
 8000dda:	4604      	mov	r4, r0
 8000ddc:	f007 fd24 	bl	8008828 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000de0:	4620      	mov	r0, r4
 8000de2:	bd10      	pop	{r4, pc}
 8000de4:	0801b83c 	.word	0x0801b83c

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000de8:	b510      	push	{r4, lr}
 8000dea:	4604      	mov	r4, r0
 8000dec:	f7ff fff2 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000df0:	4620      	mov	r0, r4
 8000df2:	2114      	movs	r1, #20
 8000df4:	f019 fa92 	bl	801a31c <_ZdlPvj>
 8000df8:	4620      	mov	r0, r4
 8000dfa:	bd10      	pop	{r4, pc}

08000dfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000dfc:	b510      	push	{r4, lr}
 8000dfe:	4b03      	ldr	r3, [pc, #12]	; (8000e0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e00:	6003      	str	r3, [r0, #0]
 8000e02:	4604      	mov	r4, r0
 8000e04:	f007 fd10 	bl	8008828 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e08:	4620      	mov	r0, r4
 8000e0a:	bd10      	pop	{r4, pc}
 8000e0c:	0801b808 	.word	0x0801b808

08000e10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e10:	b510      	push	{r4, lr}
 8000e12:	4604      	mov	r4, r0
 8000e14:	f7ff fff2 	bl	8000dfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e18:	4620      	mov	r0, r4
 8000e1a:	f44f 7128 	mov.w	r1, #672	; 0x2a0
 8000e1e:	f019 fa7d 	bl	801a31c <_ZdlPvj>
 8000e22:	4620      	mov	r0, r4
 8000e24:	bd10      	pop	{r4, pc}
	...

08000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e28:	b510      	push	{r4, lr}
 8000e2a:	4b03      	ldr	r3, [pc, #12]	; (8000e38 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e2c:	6003      	str	r3, [r0, #0]
 8000e2e:	4604      	mov	r4, r0
 8000e30:	f007 fcfa 	bl	8008828 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e34:	4620      	mov	r0, r4
 8000e36:	bd10      	pop	{r4, pc}
 8000e38:	0801b7d4 	.word	0x0801b7d4

08000e3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e3c:	b510      	push	{r4, lr}
 8000e3e:	4604      	mov	r4, r0
 8000e40:	f7ff fff2 	bl	8000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e44:	4620      	mov	r0, r4
 8000e46:	2118      	movs	r1, #24
 8000e48:	f019 fa68 	bl	801a31c <_ZdlPvj>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	bd10      	pop	{r4, pc}

08000e50 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e50:	b510      	push	{r4, lr}
 8000e52:	4b08      	ldr	r3, [pc, #32]	; (8000e74 <_ZN12FrontendHeapD1Ev+0x24>)
 8000e54:	6003      	str	r3, [r0, #0]
 8000e56:	4604      	mov	r4, r0
 8000e58:	f500 7033 	add.w	r0, r0, #716	; 0x2cc
 8000e5c:	f7ff ffba 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e60:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e64:	f7ff ffca 	bl	8000dfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e68:	f104 0014 	add.w	r0, r4, #20
 8000e6c:	f7ff ffdc 	bl	8000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e70:	4620      	mov	r0, r4
 8000e72:	bd10      	pop	{r4, pc}
 8000e74:	0801b870 	.word	0x0801b870

08000e78 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e78:	b508      	push	{r3, lr}
 8000e7a:	4802      	ldr	r0, [pc, #8]	; (8000e84 <__tcf_0+0xc>)
 8000e7c:	f7ff ffe8 	bl	8000e50 <_ZN12FrontendHeapD1Ev>
 8000e80:	bd08      	pop	{r3, pc}
 8000e82:	bf00      	nop
 8000e84:	20000198 	.word	0x20000198

08000e88 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e88:	b510      	push	{r4, lr}
 8000e8a:	4604      	mov	r4, r0
 8000e8c:	f7ff ffe0 	bl	8000e50 <_ZN12FrontendHeapD1Ev>
 8000e90:	4620      	mov	r0, r4
 8000e92:	f240 413c 	movw	r1, #1084	; 0x43c
 8000e96:	f019 fa41 	bl	801a31c <_ZdlPvj>
 8000e9a:	4620      	mov	r0, r4
 8000e9c:	bd10      	pop	{r4, pc}
	...

08000ea0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000ea0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000ea4:	f001 f8ce 	bl	8002044 <_ZN14BitmapDatabase11getInstanceEv>
 8000ea8:	4605      	mov	r5, r0
 8000eaa:	f001 f8cf 	bl	800204c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000eae:	2400      	movs	r4, #0
 8000eb0:	4601      	mov	r1, r0
 8000eb2:	4623      	mov	r3, r4
 8000eb4:	4628      	mov	r0, r5
 8000eb6:	4622      	mov	r2, r4
 8000eb8:	9400      	str	r4, [sp, #0]
 8000eba:	f00d fd79 	bl	800e9b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000ebe:	4b25      	ldr	r3, [pc, #148]	; (8000f54 <touchgfx_init+0xb4>)
 8000ec0:	4a25      	ldr	r2, [pc, #148]	; (8000f58 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000ec2:	4d26      	ldr	r5, [pc, #152]	; (8000f5c <touchgfx_init+0xbc>)
 8000ec4:	601a      	str	r2, [r3, #0]
  TypedText::registerTexts(&texts);
  Texts::setLanguage(0);
 8000ec6:	4620      	mov	r0, r4
 8000ec8:	f002 f842 	bl	8002f50 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 8000ecc:	4824      	ldr	r0, [pc, #144]	; (8000f60 <touchgfx_init+0xc0>)
 8000ece:	f00d fcb9 	bl	800e844 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000ed2:	782b      	ldrb	r3, [r5, #0]
 8000ed4:	f3bf 8f5b 	dmb	ish
 8000ed8:	07db      	lsls	r3, r3, #31
 8000eda:	d435      	bmi.n	8000f48 <touchgfx_init+0xa8>
 8000edc:	4628      	mov	r0, r5
 8000ede:	f019 fa1f 	bl	801a320 <__cxa_guard_acquire>
 8000ee2:	b388      	cbz	r0, 8000f48 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ee4:	4c1f      	ldr	r4, [pc, #124]	; (8000f64 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ee6:	4b20      	ldr	r3, [pc, #128]	; (8000f68 <touchgfx_init+0xc8>)
 8000ee8:	6023      	str	r3, [r4, #0]
 8000eea:	f504 7639 	add.w	r6, r4, #740	; 0x2e4
 8000eee:	f104 0014 	add.w	r0, r4, #20
 8000ef2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000ef6:	f504 7733 	add.w	r7, r4, #716	; 0x2cc
 8000efa:	6060      	str	r0, [r4, #4]
 8000efc:	f8c4 8008 	str.w	r8, [r4, #8]
 8000f00:	60e7      	str	r7, [r4, #12]
 8000f02:	6126      	str	r6, [r4, #16]
 8000f04:	f007 fc92 	bl	800882c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f08:	4b18      	ldr	r3, [pc, #96]	; (8000f6c <touchgfx_init+0xcc>)
 8000f0a:	6163      	str	r3, [r4, #20]
 8000f0c:	4640      	mov	r0, r8
 8000f0e:	f007 fc8d 	bl	800882c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f12:	4b17      	ldr	r3, [pc, #92]	; (8000f70 <touchgfx_init+0xd0>)
 8000f14:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f16:	4638      	mov	r0, r7
 8000f18:	f007 fc88 	bl	800882c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f1c:	4b15      	ldr	r3, [pc, #84]	; (8000f74 <touchgfx_init+0xd4>)
 8000f1e:	f8c4 32cc 	str.w	r3, [r4, #716]	; 0x2cc
 8000f22:	f504 7038 	add.w	r0, r4, #736	; 0x2e0
 8000f26:	f002 f88d 	bl	8003044 <_ZN5ModelC1Ev>
 8000f2a:	4622      	mov	r2, r4
 8000f2c:	f504 7138 	add.w	r1, r4, #736	; 0x2e0
 8000f30:	4630      	mov	r0, r6
 8000f32:	f002 f87d 	bl	8003030 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000f36:	4630      	mov	r0, r6
 8000f38:	f001 f948 	bl	80021cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	f019 f9fb 	bl	801a338 <__cxa_guard_release>
 8000f42:	480d      	ldr	r0, [pc, #52]	; (8000f78 <touchgfx_init+0xd8>)
 8000f44:	f019 fa34 	bl	801a3b0 <atexit>
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
 8000f48:	480c      	ldr	r0, [pc, #48]	; (8000f7c <touchgfx_init+0xdc>)
}
 8000f4a:	b002      	add	sp, #8
 8000f4c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  hal.initialize();
 8000f50:	f7ff bcea 	b.w	8000928 <_ZN11TouchGFXHAL10initializeEv>
 8000f54:	20012128 	.word	0x20012128
 8000f58:	20001270 	.word	0x20001270
 8000f5c:	20000194 	.word	0x20000194
 8000f60:	20000008 	.word	0x20000008
 8000f64:	20000198 	.word	0x20000198
 8000f68:	0801b870 	.word	0x0801b870
 8000f6c:	0801b7d4 	.word	0x0801b7d4
 8000f70:	0801b808 	.word	0x0801b808
 8000f74:	0801b83c 	.word	0x0801b83c
 8000f78:	08000e79 	.word	0x08000e79
 8000f7c:	200011f8 	.word	0x200011f8

08000f80 <touchgfx_taskEntry>:
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
 8000f80:	4801      	ldr	r0, [pc, #4]	; (8000f88 <touchgfx_taskEntry+0x8>)
 8000f82:	f7ff bbf3 	b.w	800076c <_ZN11TouchGFXHAL9taskEntryEv>
 8000f86:	bf00      	nop
 8000f88:	200011f8 	.word	0x200011f8

08000f8c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f8c:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 8000f8e:	4e28      	ldr	r6, [pc, #160]	; (8001030 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 8000f90:	4c28      	ldr	r4, [pc, #160]	; (8001034 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 8000f92:	4d29      	ldr	r5, [pc, #164]	; (8001038 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8000f94:	4b29      	ldr	r3, [pc, #164]	; (800103c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8000f96:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 8000f98:	4630      	mov	r0, r6
 8000f9a:	f7ff fed3 	bl	8000d44 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 8000f9e:	4628      	mov	r0, r5
 8000fa0:	f010 fd00 	bl	80119a4 <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 8000fa4:	4b26      	ldr	r3, [pc, #152]	; (8001040 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8000fa6:	4827      	ldr	r0, [pc, #156]	; (8001044 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000fa8:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 8000faa:	4827      	ldr	r0, [pc, #156]	; (8001048 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 8000fac:	60dc      	str	r4, [r3, #12]
 8000fae:	2200      	movs	r2, #0
 8000fb0:	2101      	movs	r1, #1
 8000fb2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fb6:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8000fba:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fbe:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fc2:	851a      	strh	r2, [r3, #40]	; 0x28
 8000fc4:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8000fc8:	62da      	str	r2, [r3, #44]	; 0x2c
 8000fca:	861a      	strh	r2, [r3, #48]	; 0x30
 8000fcc:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fd0:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8000fd4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8000fd8:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 8000fdc:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8000fe0:	655a      	str	r2, [r3, #84]	; 0x54
 8000fe2:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8000fe6:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8000fea:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8000fee:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 8000ff2:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000ff6:	671a      	str	r2, [r3, #112]	; 0x70
 8000ff8:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8000ffc:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001000:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 8001004:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001008:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 800100c:	4d10      	ldr	r5, [pc, #64]	; (8001050 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800100e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 8001012:	24f0      	movs	r4, #240	; 0xf0
 8001014:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 8001016:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800101a:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 800101c:	4d0d      	ldr	r5, [pc, #52]	; (8001054 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 800101e:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001020:	4a0d      	ldr	r2, [pc, #52]	; (8001058 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001022:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001024:	4a0d      	ldr	r2, [pc, #52]	; (800105c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001026:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001028:	4a0d      	ldr	r2, [pc, #52]	; (8001060 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800102a:	601a      	str	r2, [r3, #0]
}
 800102c:	bd70      	pop	{r4, r5, r6, pc}
 800102e:	bf00      	nop
 8001030:	200005d8 	.word	0x200005d8
 8001034:	200005d4 	.word	0x200005d4
 8001038:	20001274 	.word	0x20001274
 800103c:	0801b3e8 	.word	0x0801b3e8
 8001040:	200011f8 	.word	0x200011f8
 8001044:	01000001 	.word	0x01000001
 8001048:	200120ac 	.word	0x200120ac
 800104c:	200120a0 	.word	0x200120a0
 8001050:	200120a2 	.word	0x200120a2
 8001054:	200120a4 	.word	0x200120a4
 8001058:	200120a6 	.word	0x200120a6
 800105c:	200120a8 	.word	0x200120a8
 8001060:	0801b49c 	.word	0x0801b49c

08001064 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001064:	4801      	ldr	r0, [pc, #4]	; (800106c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001066:	f7ff bcfd 	b.w	8000a64 <_ZN10STM32F4DMAD1Ev>
 800106a:	bf00      	nop
 800106c:	200005d8 	.word	0x200005d8

08001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001070:	4b03      	ldr	r3, [pc, #12]	; (8001080 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001072:	2290      	movs	r2, #144	; 0x90
 8001074:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001078:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	e000e100 	.word	0xe000e100

08001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001084:	4a09      	ldr	r2, [pc, #36]	; (80010ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001086:	490a      	ldr	r1, [pc, #40]	; (80010b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001088:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800108a:	480a      	ldr	r0, [pc, #40]	; (80010b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800108c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001090:	3b01      	subs	r3, #1
 8001092:	b29b      	uxth	r3, r3
 8001094:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001096:	6911      	ldr	r1, [r2, #16]
 8001098:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800109c:	3901      	subs	r1, #1
 800109e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80010a0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80010a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80010a4:	f043 0301 	orr.w	r3, r3, #1
 80010a8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80010aa:	4770      	bx	lr
 80010ac:	40016800 	.word	0x40016800
 80010b0:	200012ee 	.word	0x200012ee
 80010b4:	200012ec 	.word	0x200012ec

080010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80010b8:	4b01      	ldr	r3, [pc, #4]	; (80010c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80010ba:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 80010bc:	4770      	bx	lr
 80010be:	bf00      	nop
 80010c0:	40016884 	.word	0x40016884

080010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c4:	4b02      	ldr	r3, [pc, #8]	; (80010d0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010c6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c8:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010ca:	f843 2c60 	str.w	r2, [r3, #-96]
}
 80010ce:	4770      	bx	lr
 80010d0:	40016884 	.word	0x40016884

080010d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
  HAL::flushFrameBuffer(rect);
 80010d4:	f007 bd98 	b.w	8008c08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
  return HAL::blockCopy(dest, src, numBytes);
 80010d8:	f007 bebd 	b.w	8008e56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010dc:	4b03      	ldr	r3, [pc, #12]	; (80010ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010e2:	609a      	str	r2, [r3, #8]
 80010e4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e8:	609a      	str	r2, [r3, #8]
}
 80010ea:	4770      	bx	lr
 80010ec:	e000e100 	.word	0xe000e100

080010f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010f0:	4b08      	ldr	r3, [pc, #32]	; (8001114 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010f2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fe:	f3bf 8f6f 	isb	sy
 8001102:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001106:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800110a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110e:	f3bf 8f6f 	isb	sy
}
 8001112:	4770      	bx	lr
 8001114:	e000e100 	.word	0xe000e100

08001118 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001118:	b570      	push	{r4, r5, r6, lr}
 800111a:	4604      	mov	r4, r0
    HAL::initialize();
 800111c:	f008 f856 	bl	80091cc <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001120:	6823      	ldr	r3, [r4, #0]
 8001122:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001124:	f00a fec0 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 8001128:	4601      	mov	r1, r0
 800112a:	4620      	mov	r0, r4
 800112c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf)/(sizeof(uint32_t)*2)), (void*)0);
 800112e:	6823      	ldr	r3, [r4, #0]
 8001130:	4a04      	ldr	r2, [pc, #16]	; (8001144 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x2c>)
 8001132:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001134:	4620      	mov	r0, r4
 8001136:	46ac      	mov	ip, r5
 8001138:	2300      	movs	r3, #0
 800113a:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
}
 800113e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf)/(sizeof(uint32_t)*2)), (void*)0);
 8001142:	4760      	bx	ip
 8001144:	d0025800 	.word	0xd0025800

08001148 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 8001148:	4b13      	ldr	r3, [pc, #76]	; (8001198 <HAL_LTDC_LineEventCallback+0x50>)
 800114a:	4a14      	ldr	r2, [pc, #80]	; (800119c <HAL_LTDC_LineEventCallback+0x54>)
 800114c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800114e:	8811      	ldrh	r1, [r2, #0]
 8001150:	428b      	cmp	r3, r1
    {
 8001152:	b510      	push	{r4, lr}
 8001154:	4c12      	ldr	r4, [pc, #72]	; (80011a0 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 8001156:	d113      	bne.n	8001180 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001158:	4b12      	ldr	r3, [pc, #72]	; (80011a4 <HAL_LTDC_LineEventCallback+0x5c>)
 800115a:	8819      	ldrh	r1, [r3, #0]
 800115c:	f003 feb0 	bl	8004ec0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001160:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001162:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001166:	3301      	adds	r3, #1
 8001168:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800116c:	f7ff fc1e 	bl	80009ac <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001170:	6820      	ldr	r0, [r4, #0]
 8001172:	f008 fab3 	bl	80096dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001176:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 8001178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800117c:	f7ff badc 	b.w	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001180:	f003 fe9e 	bl	8004ec0 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001184:	2000      	movs	r0, #0
 8001186:	f7ff fad8 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 800118a:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800118c:	6803      	ldr	r3, [r0, #0]
    }
 800118e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001192:	699b      	ldr	r3, [r3, #24]
 8001194:	4718      	bx	r3
 8001196:	bf00      	nop
 8001198:	40016800 	.word	0x40016800
 800119c:	200012ee 	.word	0x200012ee
 80011a0:	200120ac 	.word	0x200120ac
 80011a4:	200012ec 	.word	0x200012ec

080011a8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80011a8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011aa:	4b06      	ldr	r3, [pc, #24]	; (80011c4 <SPI5_Write+0x1c>)
{
 80011ac:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011ae:	681b      	ldr	r3, [r3, #0]
{
 80011b0:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011b4:	2201      	movs	r2, #1
 80011b6:	4804      	ldr	r0, [pc, #16]	; (80011c8 <SPI5_Write+0x20>)
 80011b8:	f004 fb7d 	bl	80058b6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80011bc:	b003      	add	sp, #12
 80011be:	f85d fb04 	ldr.w	pc, [sp], #4
 80011c2:	bf00      	nop
 80011c4:	20000010 	.word	0x20000010
 80011c8:	200123bc 	.word	0x200123bc

080011cc <AnalogInput>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_AnalogInput */
void AnalogInput(void *argument)
{
 80011cc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN AnalogInput */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80011ce:	2001      	movs	r0, #1
 80011d0:	f005 f9d2 	bl	8006578 <osDelay>
 80011d4:	e7fb      	b.n	80011ce <AnalogInput+0x2>
	...

080011d8 <SystemClock_Config>:
{
 80011d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011da:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011dc:	2210      	movs	r2, #16
 80011de:	2100      	movs	r1, #0
 80011e0:	a80a      	add	r0, sp, #40	; 0x28
 80011e2:	f019 f950 	bl	801a486 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011e6:	2214      	movs	r2, #20
 80011e8:	2100      	movs	r1, #0
 80011ea:	a803      	add	r0, sp, #12
 80011ec:	f019 f94b 	bl	801a486 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80011f0:	2100      	movs	r1, #0
 80011f2:	2230      	movs	r2, #48	; 0x30
 80011f4:	a814      	add	r0, sp, #80	; 0x50
 80011f6:	f019 f946 	bl	801a486 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80011fa:	2400      	movs	r4, #0
 80011fc:	4b22      	ldr	r3, [pc, #136]	; (8001288 <SystemClock_Config+0xb0>)
 80011fe:	9401      	str	r4, [sp, #4]
 8001200:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001202:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001206:	641a      	str	r2, [r3, #64]	; 0x40
 8001208:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800120a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800120e:	9301      	str	r3, [sp, #4]
 8001210:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001212:	4b1e      	ldr	r3, [pc, #120]	; (800128c <SystemClock_Config+0xb4>)
 8001214:	9402      	str	r4, [sp, #8]
 8001216:	681a      	ldr	r2, [r3, #0]
 8001218:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800121c:	601a      	str	r2, [r3, #0]
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001224:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001226:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001228:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800122a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800122e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001232:	2502      	movs	r5, #2
 8001234:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001238:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800123c:	2708      	movs	r7, #8
 800123e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001242:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001244:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001246:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800124a:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800124c:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800124e:	f003 fe55 	bl	8004efc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001252:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001254:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001258:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800125c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001260:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001264:	a803      	add	r0, sp, #12
 8001266:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001268:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800126a:	f004 f81b 	bl	80052a4 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800126e:	23c0      	movs	r3, #192	; 0xc0
 8001270:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001272:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001274:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001278:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800127a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800127c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800127e:	f004 f8d9 	bl	8005434 <HAL_RCCEx_PeriphCLKConfig>
}
 8001282:	b021      	add	sp, #132	; 0x84
 8001284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001286:	bf00      	nop
 8001288:	40023800 	.word	0x40023800
 800128c:	40007000 	.word	0x40007000

08001290 <main>:
{
 8001290:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001294:	b0a5      	sub	sp, #148	; 0x94
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001296:	2400      	movs	r4, #0
 8001298:	4dc4      	ldr	r5, [pc, #784]	; (80015ac <main+0x31c>)
  HAL_Init();
 800129a:	f002 f9e9 	bl	8003670 <HAL_Init>
  SystemClock_Config();
 800129e:	f7ff ff9b 	bl	80011d8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012a2:	2214      	movs	r2, #20
 80012a4:	2100      	movs	r1, #0
 80012a6:	a817      	add	r0, sp, #92	; 0x5c
 80012a8:	f019 f8ed 	bl	801a486 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012ac:	9401      	str	r4, [sp, #4]
 80012ae:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012b0:	48bf      	ldr	r0, [pc, #764]	; (80015b0 <main+0x320>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012b2:	f043 0320 	orr.w	r3, r3, #32
 80012b6:	632b      	str	r3, [r5, #48]	; 0x30
 80012b8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012ba:	f003 0320 	and.w	r3, r3, #32
 80012be:	9301      	str	r3, [sp, #4]
 80012c0:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80012c2:	9402      	str	r4, [sp, #8]
 80012c4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012ca:	632b      	str	r3, [r5, #48]	; 0x30
 80012cc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80012d2:	9302      	str	r3, [sp, #8]
 80012d4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80012d6:	9403      	str	r4, [sp, #12]
 80012d8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012da:	f043 0304 	orr.w	r3, r3, #4
 80012de:	632b      	str	r3, [r5, #48]	; 0x30
 80012e0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012e2:	f003 0304 	and.w	r3, r3, #4
 80012e6:	9303      	str	r3, [sp, #12]
 80012e8:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012ea:	9404      	str	r4, [sp, #16]
 80012ec:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012ee:	f043 0301 	orr.w	r3, r3, #1
 80012f2:	632b      	str	r3, [r5, #48]	; 0x30
 80012f4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80012f6:	f003 0301 	and.w	r3, r3, #1
 80012fa:	9304      	str	r3, [sp, #16]
 80012fc:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012fe:	9405      	str	r4, [sp, #20]
 8001300:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001302:	f043 0302 	orr.w	r3, r3, #2
 8001306:	632b      	str	r3, [r5, #48]	; 0x30
 8001308:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800130a:	f003 0302 	and.w	r3, r3, #2
 800130e:	9305      	str	r3, [sp, #20]
 8001310:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001312:	9406      	str	r4, [sp, #24]
 8001314:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001316:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800131a:	632b      	str	r3, [r5, #48]	; 0x30
 800131c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800131e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001322:	9306      	str	r3, [sp, #24]
 8001324:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001326:	9407      	str	r4, [sp, #28]
 8001328:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800132a:	f043 0310 	orr.w	r3, r3, #16
 800132e:	632b      	str	r3, [r5, #48]	; 0x30
 8001330:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001332:	f003 0310 	and.w	r3, r3, #16
 8001336:	9307      	str	r3, [sp, #28]
 8001338:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800133a:	9408      	str	r4, [sp, #32]
 800133c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800133e:	f043 0308 	orr.w	r3, r3, #8
 8001342:	632b      	str	r3, [r5, #48]	; 0x30
 8001344:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001346:	f003 0308 	and.w	r3, r3, #8
 800134a:	9308      	str	r3, [sp, #32]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800134c:	4622      	mov	r2, r4
 800134e:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001350:	9b08      	ldr	r3, [sp, #32]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001352:	f002 ffdb 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001356:	4622      	mov	r2, r4
 8001358:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800135c:	4895      	ldr	r0, [pc, #596]	; (80015b4 <main+0x324>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800135e:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001360:	f002 ffd4 	bl	800430c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001364:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001366:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800136a:	a917      	add	r1, sp, #92	; 0x5c
 800136c:	4890      	ldr	r0, [pc, #576]	; (80015b0 <main+0x320>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800136e:	9419      	str	r4, [sp, #100]	; 0x64
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001370:	e9cd 8617 	strd	r8, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001374:	971a      	str	r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001376:	f002 fedd 	bl	8004134 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800137a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800137e:	a917      	add	r1, sp, #92	; 0x5c
 8001380:	488c      	ldr	r0, [pc, #560]	; (80015b4 <main+0x324>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001382:	e9cd 3617 	strd	r3, r6, [sp, #92]	; 0x5c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001386:	e9cd 4719 	strd	r4, r7, [sp, #100]	; 0x64
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800138a:	f002 fed3 	bl	8004134 <HAL_GPIO_Init>
  __HAL_RCC_DMA2_CLK_ENABLE();
 800138e:	9400      	str	r4, [sp, #0]
 8001390:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001392:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001396:	632b      	str	r3, [r5, #48]	; 0x30
 8001398:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  hi2c3.Instance = I2C3;
 800139a:	4d87      	ldr	r5, [pc, #540]	; (80015b8 <main+0x328>)
  __HAL_RCC_DMA2_CLK_ENABLE();
 800139c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80013a0:	4621      	mov	r1, r4
 80013a2:	4622      	mov	r2, r4
  __HAL_RCC_DMA2_CLK_ENABLE();
 80013a4:	9300      	str	r3, [sp, #0]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80013a6:	2038      	movs	r0, #56	; 0x38
  __HAL_RCC_DMA2_CLK_ENABLE();
 80013a8:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 80013aa:	f002 faf7 	bl	800399c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 80013ae:	2038      	movs	r0, #56	; 0x38
 80013b0:	f002 fb28 	bl	8003a04 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80013b4:	4881      	ldr	r0, [pc, #516]	; (80015bc <main+0x32c>)
 80013b6:	4b82      	ldr	r3, [pc, #520]	; (80015c0 <main+0x330>)
 80013b8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80013ba:	f002 fb45 	bl	8003a48 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80013be:	4a81      	ldr	r2, [pc, #516]	; (80015c4 <main+0x334>)
 80013c0:	4b81      	ldr	r3, [pc, #516]	; (80015c8 <main+0x338>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80013c2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80013c4:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80013c8:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80013ca:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80013ce:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80013d2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80013d6:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80013da:	f003 f971 	bl	80046c0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80013de:	2110      	movs	r1, #16
 80013e0:	4628      	mov	r0, r5
 80013e2:	f003 fbb5 	bl	8004b50 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80013e6:	4621      	mov	r1, r4
 80013e8:	4628      	mov	r0, r5
 80013ea:	f003 fbd0 	bl	8004b8e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80013ee:	4877      	ldr	r0, [pc, #476]	; (80015cc <main+0x33c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80013f0:	4977      	ldr	r1, [pc, #476]	; (80015d0 <main+0x340>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80013f2:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80013f4:	f44f 7382 	mov.w	r3, #260	; 0x104
 80013f8:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80013fc:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001400:	2318      	movs	r3, #24
 8001402:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001406:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001408:	4d72      	ldr	r5, [pc, #456]	; (80015d4 <main+0x344>)
  hspi5.Init.CRCPolynomial = 10;
 800140a:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800140c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001410:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001414:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001418:	f004 fa10 	bl	800583c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800141c:	4b6e      	ldr	r3, [pc, #440]	; (80015d8 <main+0x348>)
  SdramTiming.LoadToActiveDelay = 2;
 800141e:	9717      	str	r7, [sp, #92]	; 0x5c
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001420:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001424:	f04f 0a10 	mov.w	sl, #16
 8001428:	2340      	movs	r3, #64	; 0x40
 800142a:	e9c5 a304 	strd	sl, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800142e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001432:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001436:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800143a:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800143e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001442:	f04f 0b03 	mov.w	fp, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001446:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001448:	a917      	add	r1, sp, #92	; 0x5c
  SdramTiming.ExitSelfRefreshDelay = 7;
 800144a:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800144c:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 800144e:	e9cd 3818 	strd	r3, r8, [sp, #96]	; 0x60
  SdramTiming.RowCycleDelay = 7;
 8001452:	931a      	str	r3, [sp, #104]	; 0x68
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001454:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001458:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 800145c:	e9cd b71b 	strd	fp, r7, [sp, #108]	; 0x6c
  SdramTiming.RCDDelay = 2;
 8001460:	971d      	str	r7, [sp, #116]	; 0x74
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001462:	f004 f911 	bl	8005688 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001466:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800146a:	a90a      	add	r1, sp, #40	; 0x28
 800146c:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800146e:	e9cd 960b 	strd	r9, r6, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8001472:	9409      	str	r4, [sp, #36]	; 0x24
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001474:	960a      	str	r6, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 8001476:	940d      	str	r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001478:	f004 f926 	bl	80056c8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800147c:	4630      	mov	r0, r6
 800147e:	f002 f923 	bl	80036c8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001482:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001486:	a90a      	add	r1, sp, #40	; 0x28
 8001488:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800148a:	e9cd 790a 	strd	r7, r9, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 800148e:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001492:	f004 f919 	bl	80056c8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001496:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800149a:	a90a      	add	r1, sp, #40	; 0x28
 800149c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800149e:	e9cd b90a 	strd	fp, r9, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = 0;
 80014a2:	e9cd 840c 	strd	r8, r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014a6:	f004 f90f 	bl	80056c8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80014aa:	f44f 730c 	mov.w	r3, #560	; 0x230
 80014ae:	9309      	str	r3, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = tmpmrd;
 80014b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80014b2:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014b8:	a90a      	add	r1, sp, #40	; 0x28
 80014ba:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014bc:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  Command->AutoRefreshNumber       = 1;
 80014c0:	960c      	str	r6, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014c2:	f004 f901 	bl	80056c8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80014c6:	f240 516a 	movw	r1, #1386	; 0x56a
 80014ca:	4628      	mov	r0, r5
 80014cc:	f004 f913 	bl	80056f6 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80014d0:	2234      	movs	r2, #52	; 0x34
 80014d2:	4621      	mov	r1, r4
 80014d4:	a80a      	add	r0, sp, #40	; 0x28
 80014d6:	f018 ffd6 	bl	801a486 <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80014da:	2234      	movs	r2, #52	; 0x34
 80014dc:	4621      	mov	r1, r4
 80014de:	a817      	add	r0, sp, #92	; 0x5c
 80014e0:	f018 ffd1 	bl	801a486 <memset>
  hltdc.Instance = LTDC;
 80014e4:	4d3d      	ldr	r5, [pc, #244]	; (80015dc <main+0x34c>)
 80014e6:	4b3e      	ldr	r3, [pc, #248]	; (80015e0 <main+0x350>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80014e8:	612c      	str	r4, [r5, #16]
  hltdc.Instance = LTDC;
 80014ea:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80014ee:	2309      	movs	r3, #9
  hltdc.Init.HorizontalSync = 9;
 80014f0:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.VerticalSync = 1;
 80014f4:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveW = 269;
 80014f6:	f240 1c0d 	movw	ip, #269	; 0x10d
  hltdc.Init.AccumulatedHBP = 29;
 80014fa:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 80014fe:	f240 1343 	movw	r3, #323	; 0x143
 8001502:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001506:	f240 1e17 	movw	lr, #279	; 0x117
 800150a:	f240 1347 	movw	r3, #327	; 0x147
 800150e:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001512:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 327;
 8001516:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001518:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800151c:	4628      	mov	r0, r5
 800151e:	f003 fbdb 	bl	8004cd8 <HAL_LTDC_Init>
  pLayerCfg.WindowX0 = 0;
 8001522:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001524:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowY0 = 0;
 8001526:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800152a:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800152e:	f04f 0805 	mov.w	r8, #5
  pLayerCfg.WindowX1 = 240;
 8001532:	e9cd 240b 	strd	r2, r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
 8001536:	e9cd 140f 	strd	r1, r4, [sp, #60]	; 0x3c
  pLayerCfg.FBStartAdress = 0;
 800153a:	e9cd 4213 	strd	r4, r2, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800153e:	a90a      	add	r1, sp, #40	; 0x28
 8001540:	4622      	mov	r2, r4
 8001542:	4628      	mov	r0, r5
  pLayerCfg.WindowY1 = 320;
 8001544:	e9cd 370d 	strd	r3, r7, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001548:	e9cd 9811 	strd	r9, r8, [sp, #68]	; 0x44
  pLayerCfg.ImageWidth = 240;
 800154c:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowX0 = 0;
 800154e:	940a      	str	r4, [sp, #40]	; 0x28
  pLayerCfg.ImageHeight = 320;
 8001550:	f8ad 4058 	strh.w	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Green = 0;
 8001554:	f88d 405a 	strb.w	r4, [sp, #90]	; 0x5a
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001558:	f003 fc89 	bl	8004e6e <HAL_LTDC_ConfigLayer>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 800155c:	4632      	mov	r2, r6
 800155e:	a917      	add	r1, sp, #92	; 0x5c
 8001560:	4628      	mov	r0, r5
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001562:	e9cd 981e 	strd	r9, r8, [sp, #120]	; 0x78
  LcdDrv = &ili9341_drv;
 8001566:	4d1f      	ldr	r5, [pc, #124]	; (80015e4 <main+0x354>)
  pLayerCfg1.ImageWidth = 0;
 8001568:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg1.WindowX1 = 0;
 800156a:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  pLayerCfg1.WindowY1 = 0;
 800156e:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  pLayerCfg1.Alpha = 0;
 8001572:	e9cd 441c 	strd	r4, r4, [sp, #112]	; 0x70
  pLayerCfg1.FBStartAdress = 0;
 8001576:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  pLayerCfg1.ImageHeight = 0;
 800157a:	f8ad 408c 	strh.w	r4, [sp, #140]	; 0x8c
  pLayerCfg1.Backcolor.Green = 0;
 800157e:	f88d 408e 	strb.w	r4, [sp, #142]	; 0x8e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 8001582:	f003 fc74 	bl	8004e6e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001586:	4b18      	ldr	r3, [pc, #96]	; (80015e8 <main+0x358>)
 8001588:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800158a:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800158c:	f8df 8064 	ldr.w	r8, [pc, #100]	; 80015f4 <main+0x364>
  LcdDrv->Init();
 8001590:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001592:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001594:	4d15      	ldr	r5, [pc, #84]	; (80015ec <main+0x35c>)
  LcdDrv->DisplayOff();
 8001596:	68db      	ldr	r3, [r3, #12]
 8001598:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800159a:	4b15      	ldr	r3, [pc, #84]	; (80015f0 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800159c:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80015a0:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015a4:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80015a6:	e9c5 3400 	strd	r3, r4, [r5]
 80015aa:	e025      	b.n	80015f8 <main+0x368>
 80015ac:	40023800 	.word	0x40023800
 80015b0:	40020800 	.word	0x40020800
 80015b4:	40020c00 	.word	0x40020c00
 80015b8:	20012368 	.word	0x20012368
 80015bc:	20012454 	.word	0x20012454
 80015c0:	40023000 	.word	0x40023000
 80015c4:	40005c00 	.word	0x40005c00
 80015c8:	000186a0 	.word	0x000186a0
 80015cc:	200123bc 	.word	0x200123bc
 80015d0:	40015000 	.word	0x40015000
 80015d4:	20012634 	.word	0x20012634
 80015d8:	a0000140 	.word	0xa0000140
 80015dc:	20012460 	.word	0x20012460
 80015e0:	40016800 	.word	0x40016800
 80015e4:	200012f0 	.word	0x200012f0
 80015e8:	20000014 	.word	0x20000014
 80015ec:	200125b4 	.word	0x200125b4
 80015f0:	4002b000 	.word	0x4002b000
 80015f4:	40012000 	.word	0x40012000
  hdma2d.Init.OutputOffset = 0;
 80015f8:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015fc:	f002 fbc8 	bl	8003d90 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001600:	4631      	mov	r1, r6
 8001602:	4628      	mov	r0, r5
 8001604:	f002 fd4c 	bl	80040a0 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001608:	4d45      	ldr	r5, [pc, #276]	; (8001720 <main+0x490>)
  ADC_ChannelConfTypeDef sConfig = {0};
 800160a:	4652      	mov	r2, sl
 800160c:	4621      	mov	r1, r4
 800160e:	a817      	add	r0, sp, #92	; 0x5c
 8001610:	f018 ff39 	bl	801a486 <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001614:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001618:	e9c5 8300 	strd	r8, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800161c:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;
 800161e:	f04f 63c0 	mov.w	r3, #100663296	; 0x6000000
 8001622:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
 8001626:	e9c5 390a 	strd	r3, r9, [r5, #40]	; 0x28
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800162a:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 800162c:	612e      	str	r6, [r5, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800162e:	762e      	strb	r6, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001630:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001634:	60ec      	str	r4, [r5, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001636:	61ee      	str	r6, [r5, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 8001638:	f885 6030 	strb.w	r6, [r5, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 800163c:	616c      	str	r4, [r5, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800163e:	f002 f857 	bl	80036f0 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001642:	a917      	add	r1, sp, #92	; 0x5c
 8001644:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001646:	e9cd 4617 	strd	r4, r6, [sp, #92]	; 0x5c
  htim10.Instance = TIM10;
 800164a:	4d36      	ldr	r5, [pc, #216]	; (8001724 <main+0x494>)
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800164c:	9419      	str	r4, [sp, #100]	; 0x64
  htim10.Init.Prescaler = 420-1;
 800164e:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800174c <main+0x4bc>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001652:	f002 f8f3 	bl	800383c <HAL_ADC_ConfigChannel>
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001656:	221c      	movs	r2, #28
 8001658:	4621      	mov	r1, r4
 800165a:	a817      	add	r0, sp, #92	; 0x5c
 800165c:	f018 ff13 	bl	801a486 <memset>
  htim10.Init.Prescaler = 420-1;
 8001660:	f240 13a3 	movw	r3, #419	; 0x1a3
 8001664:	e9c5 a300 	strd	sl, r3, [r5]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8001668:	4628      	mov	r0, r5
  htim10.Init.Period = 2000-1;
 800166a:	f240 73cf 	movw	r3, #1999	; 0x7cf
  htim10.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800166e:	e9c5 3403 	strd	r3, r4, [r5, #12]
  htim10.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001672:	60ac      	str	r4, [r5, #8]
  htim10.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001674:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim10) != HAL_OK)
 8001676:	f004 fcf9 	bl	800606c <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim10) != HAL_OK)
 800167a:	4628      	mov	r0, r5
 800167c:	f004 fd2a 	bl	80060d4 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001680:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001682:	4622      	mov	r2, r4
 8001684:	a917      	add	r1, sp, #92	; 0x5c
 8001686:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 8001688:	e9cd 3417 	strd	r3, r4, [sp, #92]	; 0x5c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800168c:	9419      	str	r4, [sp, #100]	; 0x64
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800168e:	941b      	str	r4, [sp, #108]	; 0x6c
  if (HAL_TIM_PWM_ConfigChannel(&htim10, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001690:	f004 fd9e 	bl	80061d0 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim10);
 8001694:	4628      	mov	r0, r5
 8001696:	f000 fb71 	bl	8001d7c <HAL_TIM_MspPostInit>
  htim2.Instance = TIM2;
 800169a:	4d23      	ldr	r5, [pc, #140]	; (8001728 <main+0x498>)
  TIM_OC_InitTypeDef sConfigOC = {0};
 800169c:	221c      	movs	r2, #28
 800169e:	4621      	mov	r1, r4
 80016a0:	a817      	add	r0, sp, #92	; 0x5c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016a2:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
  htim2.Init.Prescaler = 8400-1;
 80016a6:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  TIM_OC_InitTypeDef sConfigOC = {0};
 80016aa:	f018 feec 	bl	801a486 <memset>
  htim2.Init.Prescaler = 8400-1;
 80016ae:	f242 03cf 	movw	r3, #8399	; 0x20cf
 80016b2:	e9c5 b300 	strd	fp, r3, [r5]
  htim2.Init.Period = 84-1;
 80016b6:	2353      	movs	r3, #83	; 0x53
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016b8:	e9c5 3403 	strd	r3, r4, [r5, #12]
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 80016bc:	4628      	mov	r0, r5
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80016be:	2380      	movs	r3, #128	; 0x80
 80016c0:	61ab      	str	r3, [r5, #24]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016c2:	60ac      	str	r4, [r5, #8]
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 80016c4:	f004 fcec 	bl	80060a0 <HAL_TIM_OC_Init>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 80016c8:	2320      	movs	r3, #32
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80016ca:	a90a      	add	r1, sp, #40	; 0x28
 80016cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80016ce:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80016d2:	f004 fddf 	bl	8006294 <HAL_TIMEx_MasterConfigSynchronization>
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80016d6:	4622      	mov	r2, r4
 80016d8:	a917      	add	r1, sp, #92	; 0x5c
 80016da:	4628      	mov	r0, r5
  sConfigOC.Pulse = 0;
 80016dc:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80016e0:	9419      	str	r4, [sp, #100]	; 0x64
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80016e2:	941b      	str	r4, [sp, #108]	; 0x6c
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80016e4:	f004 fd46 	bl	8006174 <HAL_TIM_OC_ConfigChannel>
  MX_TouchGFX_Init();
 80016e8:	f7fe ff7b 	bl	80005e2 <MX_TouchGFX_Init>
  osKernelInitialize();
 80016ec:	f004 feb4 	bl	8006458 <osKernelInitialize>
  myBinarySemAnalaogHandle = osSemaphoreNew(1, 1, &myBinarySemAnalaog_attributes);
 80016f0:	4a0e      	ldr	r2, [pc, #56]	; (800172c <main+0x49c>)
 80016f2:	4631      	mov	r1, r6
 80016f4:	4630      	mov	r0, r6
 80016f6:	f004 ff59 	bl	80065ac <osSemaphoreNew>
 80016fa:	4b0d      	ldr	r3, [pc, #52]	; (8001730 <main+0x4a0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016fc:	4a0d      	ldr	r2, [pc, #52]	; (8001734 <main+0x4a4>)
  myBinarySemAnalaogHandle = osSemaphoreNew(1, 1, &myBinarySemAnalaog_attributes);
 80016fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001700:	4621      	mov	r1, r4
 8001702:	480d      	ldr	r0, [pc, #52]	; (8001738 <main+0x4a8>)
 8001704:	f004 fee2 	bl	80064cc <osThreadNew>
 8001708:	4b0c      	ldr	r3, [pc, #48]	; (800173c <main+0x4ac>)
  taskAnalogInputHandle = osThreadNew(AnalogInput, NULL, &taskAnalogInput_attributes);
 800170a:	4a0d      	ldr	r2, [pc, #52]	; (8001740 <main+0x4b0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800170c:	6018      	str	r0, [r3, #0]
  taskAnalogInputHandle = osThreadNew(AnalogInput, NULL, &taskAnalogInput_attributes);
 800170e:	4621      	mov	r1, r4
 8001710:	480c      	ldr	r0, [pc, #48]	; (8001744 <main+0x4b4>)
 8001712:	f004 fedb 	bl	80064cc <osThreadNew>
 8001716:	4b0c      	ldr	r3, [pc, #48]	; (8001748 <main+0x4b8>)
 8001718:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800171a:	f004 feb7 	bl	800648c <osKernelStart>
 800171e:	e7fe      	b.n	800171e <main+0x48e>
 8001720:	20012508 	.word	0x20012508
 8001724:	20012414 	.word	0x20012414
 8001728:	200125f4 	.word	0x200125f4
 800172c:	0801b8a0 	.word	0x0801b8a0
 8001730:	20012668 	.word	0x20012668
 8001734:	0801b87c 	.word	0x0801b87c
 8001738:	080005e7 	.word	0x080005e7
 800173c:	200125b0 	.word	0x200125b0
 8001740:	0801b8dc 	.word	0x0801b8dc
 8001744:	080011cd 	.word	0x080011cd
 8001748:	2001245c 	.word	0x2001245c
 800174c:	40014400 	.word	0x40014400

08001750 <IOE_Init>:
 8001750:	4770      	bx	lr

08001752 <IOE_ITConfig>:
 8001752:	4770      	bx	lr

08001754 <IOE_Write>:
{
 8001754:	b510      	push	{r4, lr}
 8001756:	b086      	sub	sp, #24
 8001758:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800175a:	4b07      	ldr	r3, [pc, #28]	; (8001778 <IOE_Write+0x24>)
 800175c:	f804 2d01 	strb.w	r2, [r4, #-1]!
 8001760:	681b      	ldr	r3, [r3, #0]
 8001762:	9302      	str	r3, [sp, #8]
 8001764:	2301      	movs	r3, #1
 8001766:	460a      	mov	r2, r1
 8001768:	e9cd 4300 	strd	r4, r3, [sp]
 800176c:	4601      	mov	r1, r0
 800176e:	4803      	ldr	r0, [pc, #12]	; (800177c <IOE_Write+0x28>)
 8001770:	f003 f852 	bl	8004818 <HAL_I2C_Mem_Write>
}
 8001774:	b006      	add	sp, #24
 8001776:	bd10      	pop	{r4, pc}
 8001778:	2000000c 	.word	0x2000000c
 800177c:	20012368 	.word	0x20012368

08001780 <IOE_Read>:
{
 8001780:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001782:	aa06      	add	r2, sp, #24
 8001784:	2300      	movs	r3, #0
 8001786:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800178a:	4b08      	ldr	r3, [pc, #32]	; (80017ac <IOE_Read+0x2c>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	9302      	str	r3, [sp, #8]
 8001790:	2301      	movs	r3, #1
 8001792:	e9cd 2300 	strd	r2, r3, [sp]
 8001796:	460a      	mov	r2, r1
 8001798:	4601      	mov	r1, r0
 800179a:	4805      	ldr	r0, [pc, #20]	; (80017b0 <IOE_Read+0x30>)
 800179c:	f003 f8cc 	bl	8004938 <HAL_I2C_Mem_Read>
}
 80017a0:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80017a4:	b007      	add	sp, #28
 80017a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80017aa:	bf00      	nop
 80017ac:	2000000c 	.word	0x2000000c
 80017b0:	20012368 	.word	0x20012368

080017b4 <IOE_ReadMultiple>:
{
 80017b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80017b6:	4c08      	ldr	r4, [pc, #32]	; (80017d8 <IOE_ReadMultiple+0x24>)
 80017b8:	6824      	ldr	r4, [r4, #0]
 80017ba:	9200      	str	r2, [sp, #0]
 80017bc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80017c0:	460a      	mov	r2, r1
 80017c2:	2301      	movs	r3, #1
 80017c4:	4601      	mov	r1, r0
 80017c6:	4805      	ldr	r0, [pc, #20]	; (80017dc <IOE_ReadMultiple+0x28>)
 80017c8:	f003 f8b6 	bl	8004938 <HAL_I2C_Mem_Read>
}
 80017cc:	3000      	adds	r0, #0
 80017ce:	bf18      	it	ne
 80017d0:	2001      	movne	r0, #1
 80017d2:	b004      	add	sp, #16
 80017d4:	bd10      	pop	{r4, pc}
 80017d6:	bf00      	nop
 80017d8:	2000000c 	.word	0x2000000c
 80017dc:	20012368 	.word	0x20012368

080017e0 <IOE_Delay>:
 80017e0:	f001 bf72 	b.w	80036c8 <HAL_Delay>

080017e4 <LCD_IO_Init>:
{
 80017e4:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017e6:	4c06      	ldr	r4, [pc, #24]	; (8001800 <LCD_IO_Init+0x1c>)
 80017e8:	2200      	movs	r2, #0
 80017ea:	4620      	mov	r0, r4
 80017ec:	2104      	movs	r1, #4
 80017ee:	f002 fd8d 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017f2:	4620      	mov	r0, r4
 80017f4:	2201      	movs	r2, #1
 80017f6:	2104      	movs	r1, #4
}
 80017f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017fc:	f002 bd86 	b.w	800430c <HAL_GPIO_WritePin>
 8001800:	40020800 	.word	0x40020800

08001804 <LCD_IO_WriteData>:
{
 8001804:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001806:	4c0b      	ldr	r4, [pc, #44]	; (8001834 <LCD_IO_WriteData+0x30>)
{
 8001808:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800180a:	2201      	movs	r2, #1
 800180c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001810:	4809      	ldr	r0, [pc, #36]	; (8001838 <LCD_IO_WriteData+0x34>)
 8001812:	f002 fd7b 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001816:	2200      	movs	r2, #0
 8001818:	2104      	movs	r1, #4
 800181a:	4620      	mov	r0, r4
 800181c:	f002 fd76 	bl	800430c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001820:	4628      	mov	r0, r5
 8001822:	f7ff fcc1 	bl	80011a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001826:	4620      	mov	r0, r4
 8001828:	2201      	movs	r2, #1
 800182a:	2104      	movs	r1, #4
}
 800182c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001830:	f002 bd6c 	b.w	800430c <HAL_GPIO_WritePin>
 8001834:	40020800 	.word	0x40020800
 8001838:	40020c00 	.word	0x40020c00

0800183c <LCD_IO_WriteReg>:
{
 800183c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800183e:	4c0b      	ldr	r4, [pc, #44]	; (800186c <LCD_IO_WriteReg+0x30>)
{
 8001840:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001842:	2200      	movs	r2, #0
 8001844:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001848:	4809      	ldr	r0, [pc, #36]	; (8001870 <LCD_IO_WriteReg+0x34>)
 800184a:	f002 fd5f 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800184e:	2200      	movs	r2, #0
 8001850:	2104      	movs	r1, #4
 8001852:	4620      	mov	r0, r4
 8001854:	f002 fd5a 	bl	800430c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001858:	4628      	mov	r0, r5
 800185a:	f7ff fca5 	bl	80011a8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800185e:	4620      	mov	r0, r4
 8001860:	2201      	movs	r2, #1
 8001862:	2104      	movs	r1, #4
}
 8001864:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001868:	f002 bd50 	b.w	800430c <HAL_GPIO_WritePin>
 800186c:	40020800 	.word	0x40020800
 8001870:	40020c00 	.word	0x40020c00

08001874 <LCD_IO_ReadData>:
{
 8001874:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001876:	4c14      	ldr	r4, [pc, #80]	; (80018c8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001878:	4d14      	ldr	r5, [pc, #80]	; (80018cc <LCD_IO_ReadData+0x58>)
{
 800187a:	4607      	mov	r7, r0
 800187c:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800187e:	4620      	mov	r0, r4
 8001880:	2200      	movs	r2, #0
 8001882:	2104      	movs	r1, #4
 8001884:	f002 fd42 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001888:	2200      	movs	r2, #0
 800188a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800188e:	4628      	mov	r0, r5
 8001890:	f002 fd3c 	bl	800430c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001894:	4638      	mov	r0, r7
 8001896:	f7ff fc87 	bl	80011a8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800189a:	4b0d      	ldr	r3, [pc, #52]	; (80018d0 <LCD_IO_ReadData+0x5c>)
 800189c:	480d      	ldr	r0, [pc, #52]	; (80018d4 <LCD_IO_ReadData+0x60>)
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	4632      	mov	r2, r6
 80018a2:	a901      	add	r1, sp, #4
 80018a4:	f004 f99f 	bl	8005be6 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018a8:	4628      	mov	r0, r5
 80018aa:	2201      	movs	r2, #1
 80018ac:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80018b0:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018b2:	f002 fd2b 	bl	800430c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018b6:	4620      	mov	r0, r4
 80018b8:	2201      	movs	r2, #1
 80018ba:	2104      	movs	r1, #4
 80018bc:	f002 fd26 	bl	800430c <HAL_GPIO_WritePin>
}
 80018c0:	4630      	mov	r0, r6
 80018c2:	b003      	add	sp, #12
 80018c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018c6:	bf00      	nop
 80018c8:	40020800 	.word	0x40020800
 80018cc:	40020c00 	.word	0x40020c00
 80018d0:	20000010 	.word	0x20000010
 80018d4:	200123bc 	.word	0x200123bc

080018d8 <LCD_Delay>:
  HAL_Delay(Delay);
 80018d8:	f001 bef6 	b.w	80036c8 <HAL_Delay>

080018dc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80018dc:	6802      	ldr	r2, [r0, #0]
 80018de:	4b03      	ldr	r3, [pc, #12]	; (80018ec <HAL_TIM_PeriodElapsedCallback+0x10>)
 80018e0:	429a      	cmp	r2, r3
 80018e2:	d101      	bne.n	80018e8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80018e4:	f001 bede 	b.w	80036a4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80018e8:	4770      	bx	lr
 80018ea:	bf00      	nop
 80018ec:	40001000 	.word	0x40001000

080018f0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80018f0:	4770      	bx	lr
	...

080018f4 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80018f4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018f6:	4b0e      	ldr	r3, [pc, #56]	; (8001930 <HAL_MspInit+0x3c>)
 80018f8:	2200      	movs	r2, #0
 80018fa:	9200      	str	r2, [sp, #0]
 80018fc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80018fe:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001902:	6459      	str	r1, [r3, #68]	; 0x44
 8001904:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001906:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800190a:	9100      	str	r1, [sp, #0]
 800190c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800190e:	9201      	str	r2, [sp, #4]
 8001910:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001912:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001916:	6419      	str	r1, [r3, #64]	; 0x40
 8001918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800191a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800191e:	9301      	str	r3, [sp, #4]
 8001920:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001922:	210f      	movs	r1, #15
 8001924:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001928:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800192a:	f002 b837 	b.w	800399c <HAL_NVIC_SetPriority>
 800192e:	bf00      	nop
 8001930:	40023800 	.word	0x40023800

08001934 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001934:	b570      	push	{r4, r5, r6, lr}
 8001936:	4606      	mov	r6, r0
 8001938:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800193a:	2214      	movs	r2, #20
 800193c:	2100      	movs	r1, #0
 800193e:	a803      	add	r0, sp, #12
 8001940:	f018 fda1 	bl	801a486 <memset>
  if(hadc->Instance==ADC1)
 8001944:	6832      	ldr	r2, [r6, #0]
 8001946:	4b20      	ldr	r3, [pc, #128]	; (80019c8 <HAL_ADC_MspInit+0x94>)
 8001948:	429a      	cmp	r2, r3
 800194a:	d13a      	bne.n	80019c2 <HAL_ADC_MspInit+0x8e>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800194c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001950:	2500      	movs	r5, #0
 8001952:	9501      	str	r5, [sp, #4]
 8001954:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA0/WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001956:	481d      	ldr	r0, [pc, #116]	; (80019cc <HAL_ADC_MspInit+0x98>)

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8001958:	4c1d      	ldr	r4, [pc, #116]	; (80019d0 <HAL_ADC_MspInit+0x9c>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 800195a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800195e:	645a      	str	r2, [r3, #68]	; 0x44
 8001960:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001962:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001966:	9201      	str	r2, [sp, #4]
 8001968:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800196a:	9502      	str	r5, [sp, #8]
 800196c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800196e:	f042 0201 	orr.w	r2, r2, #1
 8001972:	631a      	str	r2, [r3, #48]	; 0x30
 8001974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001976:	f003 0301 	and.w	r3, r3, #1
 800197a:	9302      	str	r3, [sp, #8]
 800197c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800197e:	2201      	movs	r2, #1
 8001980:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001982:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001984:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001988:	f002 fbd4 	bl	8004134 <HAL_GPIO_Init>
    hdma_adc1.Instance = DMA2_Stream0;
 800198c:	4b11      	ldr	r3, [pc, #68]	; (80019d4 <HAL_ADC_MspInit+0xa0>)
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800198e:	f44f 6180 	mov.w	r1, #1024	; 0x400
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001992:	e9c4 3500 	strd	r3, r5, [r4]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001996:	f44f 6300 	mov.w	r3, #2048	; 0x800
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800199a:	f44f 5000 	mov.w	r0, #8192	; 0x2000
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800199e:	e9c4 1304 	strd	r1, r3, [r4, #16]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 80019a2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80019a6:	e9c4 0306 	strd	r0, r3, [r4, #24]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80019aa:	4620      	mov	r0, r4
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 80019ac:	e9c4 5502 	strd	r5, r5, [r4, #8]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80019b0:	e9c4 5508 	strd	r5, r5, [r4, #32]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 80019b4:	f002 f86e 	bl	8003a94 <HAL_DMA_Init>
 80019b8:	b108      	cbz	r0, 80019be <HAL_ADC_MspInit+0x8a>
    {
      Error_Handler();
 80019ba:	f7ff ff99 	bl	80018f0 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 80019be:	63b4      	str	r4, [r6, #56]	; 0x38
 80019c0:	63a6      	str	r6, [r4, #56]	; 0x38
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80019c2:	b008      	add	sp, #32
 80019c4:	bd70      	pop	{r4, r5, r6, pc}
 80019c6:	bf00      	nop
 80019c8:	40012000 	.word	0x40012000
 80019cc:	40020000 	.word	0x40020000
 80019d0:	20012550 	.word	0x20012550
 80019d4:	40026410 	.word	0x40026410

080019d8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019d8:	6802      	ldr	r2, [r0, #0]
 80019da:	4b09      	ldr	r3, [pc, #36]	; (8001a00 <HAL_CRC_MspInit+0x28>)
 80019dc:	429a      	cmp	r2, r3
{
 80019de:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019e0:	d10b      	bne.n	80019fa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019e2:	2300      	movs	r3, #0
 80019e4:	9301      	str	r3, [sp, #4]
 80019e6:	4b07      	ldr	r3, [pc, #28]	; (8001a04 <HAL_CRC_MspInit+0x2c>)
 80019e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ea:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019ee:	631a      	str	r2, [r3, #48]	; 0x30
 80019f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019f6:	9301      	str	r3, [sp, #4]
 80019f8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019fa:	b002      	add	sp, #8
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	40023000 	.word	0x40023000
 8001a04:	40023800 	.word	0x40023800

08001a08 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a08:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a0a:	4b0f      	ldr	r3, [pc, #60]	; (8001a48 <HAL_DMA2D_MspInit+0x40>)
 8001a0c:	6802      	ldr	r2, [r0, #0]
 8001a0e:	429a      	cmp	r2, r3
 8001a10:	d116      	bne.n	8001a40 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a12:	2200      	movs	r2, #0
 8001a14:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a18:	9201      	str	r2, [sp, #4]
 8001a1a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a1c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a20:	6319      	str	r1, [r3, #48]	; 0x30
 8001a22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a24:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a28:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a2a:	2105      	movs	r1, #5
 8001a2c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a2e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a30:	f001 ffb4 	bl	800399c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a34:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a36:	b003      	add	sp, #12
 8001a38:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a3c:	f001 bfe2 	b.w	8003a04 <HAL_NVIC_EnableIRQ>
}
 8001a40:	b003      	add	sp, #12
 8001a42:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a46:	bf00      	nop
 8001a48:	4002b000 	.word	0x4002b000

08001a4c <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a4c:	6802      	ldr	r2, [r0, #0]
 8001a4e:	4b06      	ldr	r3, [pc, #24]	; (8001a68 <HAL_DMA2D_MspDeInit+0x1c>)
 8001a50:	429a      	cmp	r2, r3
 8001a52:	d107      	bne.n	8001a64 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a54:	4a05      	ldr	r2, [pc, #20]	; (8001a6c <HAL_DMA2D_MspDeInit+0x20>)
 8001a56:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a58:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a5c:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001a5e:	205a      	movs	r0, #90	; 0x5a
 8001a60:	f001 bfde 	b.w	8003a20 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001a64:	4770      	bx	lr
 8001a66:	bf00      	nop
 8001a68:	4002b000 	.word	0x4002b000
 8001a6c:	40023800 	.word	0x40023800

08001a70 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a74:	4604      	mov	r4, r0
 8001a76:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a78:	2214      	movs	r2, #20
 8001a7a:	2100      	movs	r1, #0
 8001a7c:	a803      	add	r0, sp, #12
 8001a7e:	f018 fd02 	bl	801a486 <memset>
  if(hi2c->Instance==I2C3)
 8001a82:	6822      	ldr	r2, [r4, #0]
 8001a84:	4b24      	ldr	r3, [pc, #144]	; (8001b18 <HAL_I2C_MspInit+0xa8>)
 8001a86:	429a      	cmp	r2, r3
 8001a88:	d143      	bne.n	8001b12 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a8a:	4c24      	ldr	r4, [pc, #144]	; (8001b1c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a8c:	4824      	ldr	r0, [pc, #144]	; (8001b20 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a8e:	2500      	movs	r5, #0
 8001a90:	9500      	str	r5, [sp, #0]
 8001a92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a94:	f043 0304 	orr.w	r3, r3, #4
 8001a98:	6323      	str	r3, [r4, #48]	; 0x30
 8001a9a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a9c:	f003 0304 	and.w	r3, r3, #4
 8001aa0:	9300      	str	r3, [sp, #0]
 8001aa2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001aa4:	9501      	str	r5, [sp, #4]
 8001aa6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aa8:	f043 0301 	orr.w	r3, r3, #1
 8001aac:	6323      	str	r3, [r4, #48]	; 0x30
 8001aae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ab0:	f003 0301 	and.w	r3, r3, #1
 8001ab4:	9301      	str	r3, [sp, #4]
 8001ab6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ab8:	f04f 0912 	mov.w	r9, #18
 8001abc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ac0:	f04f 0801 	mov.w	r8, #1
 8001ac4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ac6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ac8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001aca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ace:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ad2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ad4:	f002 fb2e 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ad8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001adc:	a903      	add	r1, sp, #12
 8001ade:	4811      	ldr	r0, [pc, #68]	; (8001b24 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ae0:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ae2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ae6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aea:	f002 fb23 	bl	8004134 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001aee:	9502      	str	r5, [sp, #8]
 8001af0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001af2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001af6:	6423      	str	r3, [r4, #64]	; 0x40
 8001af8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001afa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001afe:	9302      	str	r3, [sp, #8]
 8001b00:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001b02:	6a23      	ldr	r3, [r4, #32]
 8001b04:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b08:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001b0a:	6a23      	ldr	r3, [r4, #32]
 8001b0c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001b10:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001b12:	b009      	add	sp, #36	; 0x24
 8001b14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b18:	40005c00 	.word	0x40005c00
 8001b1c:	40023800 	.word	0x40023800
 8001b20:	40020800 	.word	0x40020800
 8001b24:	40020000 	.word	0x40020000

08001b28 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b2a:	4604      	mov	r4, r0
 8001b2c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2e:	2214      	movs	r2, #20
 8001b30:	2100      	movs	r1, #0
 8001b32:	a807      	add	r0, sp, #28
 8001b34:	f018 fca7 	bl	801a486 <memset>
  if(hltdc->Instance==LTDC)
 8001b38:	6822      	ldr	r2, [r4, #0]
 8001b3a:	4b57      	ldr	r3, [pc, #348]	; (8001c98 <HAL_LTDC_MspInit+0x170>)
 8001b3c:	429a      	cmp	r2, r3
 8001b3e:	f040 80a8 	bne.w	8001c92 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b42:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001b46:	2500      	movs	r5, #0
 8001b48:	9500      	str	r5, [sp, #0]
 8001b4a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b4c:	4853      	ldr	r0, [pc, #332]	; (8001c9c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b4e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b52:	645a      	str	r2, [r3, #68]	; 0x44
 8001b54:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b56:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001b5a:	9200      	str	r2, [sp, #0]
 8001b5c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b5e:	9501      	str	r5, [sp, #4]
 8001b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b62:	f042 0220 	orr.w	r2, r2, #32
 8001b66:	631a      	str	r2, [r3, #48]	; 0x30
 8001b68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b6a:	f002 0220 	and.w	r2, r2, #32
 8001b6e:	9201      	str	r2, [sp, #4]
 8001b70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b72:	9502      	str	r5, [sp, #8]
 8001b74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b76:	f042 0201 	orr.w	r2, r2, #1
 8001b7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b7e:	f002 0201 	and.w	r2, r2, #1
 8001b82:	9202      	str	r2, [sp, #8]
 8001b84:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b86:	9503      	str	r5, [sp, #12]
 8001b88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b8a:	f042 0202 	orr.w	r2, r2, #2
 8001b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b92:	f002 0202 	and.w	r2, r2, #2
 8001b96:	9203      	str	r2, [sp, #12]
 8001b98:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b9a:	9504      	str	r5, [sp, #16]
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b9e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ba2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ba4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ba6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001baa:	9204      	str	r2, [sp, #16]
 8001bac:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bae:	9505      	str	r5, [sp, #20]
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f042 0204 	orr.w	r2, r2, #4
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bba:	f002 0204 	and.w	r2, r2, #4
 8001bbe:	9205      	str	r2, [sp, #20]
 8001bc0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bc2:	9506      	str	r5, [sp, #24]
 8001bc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bc6:	f042 0208 	orr.w	r2, r2, #8
 8001bca:	631a      	str	r2, [r3, #48]	; 0x30
 8001bcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bce:	f003 0308 	and.w	r3, r3, #8
 8001bd2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bd6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bda:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bdc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001be6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be8:	f002 faa4 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001bec:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bf0:	a907      	add	r1, sp, #28
 8001bf2:	482b      	ldr	r0, [pc, #172]	; (8001ca0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bf4:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001bfa:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bfc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c00:	f002 fa98 	bl	8004134 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c04:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c06:	a907      	add	r1, sp, #28
 8001c08:	4826      	ldr	r0, [pc, #152]	; (8001ca4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c0a:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c0c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c10:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c14:	f002 fa8e 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c18:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c1c:	a907      	add	r1, sp, #28
 8001c1e:	4821      	ldr	r0, [pc, #132]	; (8001ca4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c20:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c22:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c26:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c2a:	f002 fa83 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c2e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c32:	a907      	add	r1, sp, #28
 8001c34:	481c      	ldr	r0, [pc, #112]	; (8001ca8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c36:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c38:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c40:	f002 fa78 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001c44:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c46:	a907      	add	r1, sp, #28
 8001c48:	4818      	ldr	r0, [pc, #96]	; (8001cac <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c4a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c50:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c54:	f002 fa6e 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001c58:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c5a:	a907      	add	r1, sp, #28
 8001c5c:	4814      	ldr	r0, [pc, #80]	; (8001cb0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c5e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c60:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c64:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c68:	f002 fa64 	bl	8004134 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001c6c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c70:	a907      	add	r1, sp, #28
 8001c72:	480d      	ldr	r0, [pc, #52]	; (8001ca8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c74:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c76:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c7a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c7e:	f002 fa59 	bl	8004134 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c82:	2058      	movs	r0, #88	; 0x58
 8001c84:	462a      	mov	r2, r5
 8001c86:	2105      	movs	r1, #5
 8001c88:	f001 fe88 	bl	800399c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c8c:	2058      	movs	r0, #88	; 0x58
 8001c8e:	f001 feb9 	bl	8003a04 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c92:	b00d      	add	sp, #52	; 0x34
 8001c94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c96:	bf00      	nop
 8001c98:	40016800 	.word	0x40016800
 8001c9c:	40021400 	.word	0x40021400
 8001ca0:	40020000 	.word	0x40020000
 8001ca4:	40020400 	.word	0x40020400
 8001ca8:	40021800 	.word	0x40021800
 8001cac:	40020800 	.word	0x40020800
 8001cb0:	40020c00 	.word	0x40020c00

08001cb4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001cb4:	b510      	push	{r4, lr}
 8001cb6:	4604      	mov	r4, r0
 8001cb8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cba:	2214      	movs	r2, #20
 8001cbc:	2100      	movs	r1, #0
 8001cbe:	a803      	add	r0, sp, #12
 8001cc0:	f018 fbe1 	bl	801a486 <memset>
  if(hspi->Instance==SPI5)
 8001cc4:	6822      	ldr	r2, [r4, #0]
 8001cc6:	4b14      	ldr	r3, [pc, #80]	; (8001d18 <HAL_SPI_MspInit+0x64>)
 8001cc8:	429a      	cmp	r2, r3
 8001cca:	d123      	bne.n	8001d14 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ccc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001cd0:	2100      	movs	r1, #0
 8001cd2:	9101      	str	r1, [sp, #4]
 8001cd4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cd6:	4811      	ldr	r0, [pc, #68]	; (8001d1c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001cd8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001cdc:	645a      	str	r2, [r3, #68]	; 0x44
 8001cde:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ce0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001ce4:	9201      	str	r2, [sp, #4]
 8001ce6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ce8:	9102      	str	r1, [sp, #8]
 8001cea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cec:	f042 0220 	orr.w	r2, r2, #32
 8001cf0:	631a      	str	r2, [r3, #48]	; 0x30
 8001cf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cf4:	f003 0320 	and.w	r3, r3, #32
 8001cf8:	9302      	str	r3, [sp, #8]
 8001cfa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001d00:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d02:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d04:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d08:	2305      	movs	r3, #5
 8001d0a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d0e:	a903      	add	r1, sp, #12
 8001d10:	f002 fa10 	bl	8004134 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d14:	b008      	add	sp, #32
 8001d16:	bd10      	pop	{r4, pc}
 8001d18:	40015000 	.word	0x40015000
 8001d1c:	40021400 	.word	0x40021400

08001d20 <HAL_TIM_OC_MspInit>:
* @param htim_oc: TIM_OC handle pointer
* @retval None
*/
void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* htim_oc)
{
  if(htim_oc->Instance==TIM2)
 8001d20:	6803      	ldr	r3, [r0, #0]
 8001d22:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8001d26:	b082      	sub	sp, #8
  if(htim_oc->Instance==TIM2)
 8001d28:	d10b      	bne.n	8001d42 <HAL_TIM_OC_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	9301      	str	r3, [sp, #4]
 8001d2e:	4b06      	ldr	r3, [pc, #24]	; (8001d48 <HAL_TIM_OC_MspInit+0x28>)
 8001d30:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d32:	f042 0201 	orr.w	r2, r2, #1
 8001d36:	641a      	str	r2, [r3, #64]	; 0x40
 8001d38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d3a:	f003 0301 	and.w	r3, r3, #1
 8001d3e:	9301      	str	r3, [sp, #4]
 8001d40:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8001d42:	b002      	add	sp, #8
 8001d44:	4770      	bx	lr
 8001d46:	bf00      	nop
 8001d48:	40023800 	.word	0x40023800

08001d4c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM10)
 8001d4c:	6802      	ldr	r2, [r0, #0]
 8001d4e:	4b09      	ldr	r3, [pc, #36]	; (8001d74 <HAL_TIM_Base_MspInit+0x28>)
 8001d50:	429a      	cmp	r2, r3
{
 8001d52:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM10)
 8001d54:	d10b      	bne.n	8001d6e <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM10_MspInit 0 */

  /* USER CODE END TIM10_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM10_CLK_ENABLE();
 8001d56:	2300      	movs	r3, #0
 8001d58:	9301      	str	r3, [sp, #4]
 8001d5a:	4b07      	ldr	r3, [pc, #28]	; (8001d78 <HAL_TIM_Base_MspInit+0x2c>)
 8001d5c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d5e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001d62:	645a      	str	r2, [r3, #68]	; 0x44
 8001d64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d6a:	9301      	str	r3, [sp, #4]
 8001d6c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM10_MspInit 1 */

  /* USER CODE END TIM10_MspInit 1 */
  }

}
 8001d6e:	b002      	add	sp, #8
 8001d70:	4770      	bx	lr
 8001d72:	bf00      	nop
 8001d74:	40014400 	.word	0x40014400
 8001d78:	40023800 	.word	0x40023800

08001d7c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001d7c:	b510      	push	{r4, lr}
 8001d7e:	4604      	mov	r4, r0
 8001d80:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d82:	2214      	movs	r2, #20
 8001d84:	2100      	movs	r1, #0
 8001d86:	a801      	add	r0, sp, #4
 8001d88:	f018 fb7d 	bl	801a486 <memset>
  if(htim->Instance==TIM10)
 8001d8c:	6822      	ldr	r2, [r4, #0]
 8001d8e:	4b0d      	ldr	r3, [pc, #52]	; (8001dc4 <HAL_TIM_MspPostInit+0x48>)
 8001d90:	429a      	cmp	r2, r3
 8001d92:	d115      	bne.n	8001dc0 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM10_MspPostInit 0 */

  /* USER CODE END TIM10_MspPostInit 0 */

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d94:	2300      	movs	r3, #0
 8001d96:	9300      	str	r3, [sp, #0]
 8001d98:	4b0b      	ldr	r3, [pc, #44]	; (8001dc8 <HAL_TIM_MspPostInit+0x4c>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d9a:	480c      	ldr	r0, [pc, #48]	; (8001dcc <HAL_TIM_MspPostInit+0x50>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f042 0220 	orr.w	r2, r2, #32
 8001da2:	631a      	str	r2, [r3, #48]	; 0x30
 8001da4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001da6:	f003 0320 	and.w	r3, r3, #32
 8001daa:	9300      	str	r3, [sp, #0]
 8001dac:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dae:	2240      	movs	r2, #64	; 0x40
 8001db0:	2302      	movs	r3, #2
 8001db2:	e9cd 2301 	strd	r2, r3, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db6:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 8001db8:	2303      	movs	r3, #3
 8001dba:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f002 f9ba 	bl	8004134 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM10_MspPostInit 1 */

  /* USER CODE END TIM10_MspPostInit 1 */
  }

}
 8001dc0:	b006      	add	sp, #24
 8001dc2:	bd10      	pop	{r4, pc}
 8001dc4:	40014400 	.word	0x40014400
 8001dc8:	40023800 	.word	0x40023800
 8001dcc:	40021400 	.word	0x40021400

08001dd0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001dd4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001dd6:	2214      	movs	r2, #20
 8001dd8:	2100      	movs	r1, #0
 8001dda:	a801      	add	r0, sp, #4
 8001ddc:	f018 fb53 	bl	801a486 <memset>
  if (FMC_Initialized) {
 8001de0:	4b2b      	ldr	r3, [pc, #172]	; (8001e90 <HAL_SDRAM_MspInit+0xc0>)
 8001de2:	681c      	ldr	r4, [r3, #0]
 8001de4:	2c00      	cmp	r4, #0
 8001de6:	d14f      	bne.n	8001e88 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8001de8:	f04f 0801 	mov.w	r8, #1
 8001dec:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001df0:	4b28      	ldr	r3, [pc, #160]	; (8001e94 <HAL_SDRAM_MspInit+0xc4>)
 8001df2:	9400      	str	r4, [sp, #0]
 8001df4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001df6:	4828      	ldr	r0, [pc, #160]	; (8001e98 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001df8:	ea42 0208 	orr.w	r2, r2, r8
 8001dfc:	639a      	str	r2, [r3, #56]	; 0x38
 8001dfe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e00:	ea03 0308 	and.w	r3, r3, r8
 8001e04:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e06:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e08:	2603      	movs	r6, #3
 8001e0a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e0c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e0e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e10:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e14:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e18:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e1c:	f002 f98a 	bl	8004134 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e20:	a901      	add	r1, sp, #4
 8001e22:	481e      	ldr	r0, [pc, #120]	; (8001e9c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e24:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e26:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e2a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e2e:	f002 f981 	bl	8004134 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e32:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a901      	add	r1, sp, #4
 8001e38:	4819      	ldr	r0, [pc, #100]	; (8001ea0 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e3a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e3c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e40:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e44:	f002 f976 	bl	8004134 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001e48:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e4c:	a901      	add	r1, sp, #4
 8001e4e:	4815      	ldr	r0, [pc, #84]	; (8001ea4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e50:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e52:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e56:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e5a:	f002 f96b 	bl	8004134 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001e5e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e62:	a901      	add	r1, sp, #4
 8001e64:	4810      	ldr	r0, [pc, #64]	; (8001ea8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e66:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e68:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e6c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e70:	f002 f960 	bl	8004134 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001e74:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e76:	a901      	add	r1, sp, #4
 8001e78:	480c      	ldr	r0, [pc, #48]	; (8001eac <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e7a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e7c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e80:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e84:	f002 f956 	bl	8004134 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e88:	b006      	add	sp, #24
 8001e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e8e:	bf00      	nop
 8001e90:	200012f4 	.word	0x200012f4
 8001e94:	40023800 	.word	0x40023800
 8001e98:	40021400 	.word	0x40021400
 8001e9c:	40020800 	.word	0x40020800
 8001ea0:	40021800 	.word	0x40021800
 8001ea4:	40021000 	.word	0x40021000
 8001ea8:	40020c00 	.word	0x40020c00
 8001eac:	40020400 	.word	0x40020400

08001eb0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001eb0:	b530      	push	{r4, r5, lr}
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001eb2:	4601      	mov	r1, r0
{
 8001eb4:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001eb6:	2200      	movs	r2, #0
 8001eb8:	2036      	movs	r0, #54	; 0x36
 8001eba:	f001 fd6f 	bl	800399c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ebe:	2036      	movs	r0, #54	; 0x36
 8001ec0:	f001 fda0 	bl	8003a04 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec4:	2500      	movs	r5, #0
 8001ec6:	4b15      	ldr	r3, [pc, #84]	; (8001f1c <HAL_InitTick+0x6c>)
 8001ec8:	9502      	str	r5, [sp, #8]
 8001eca:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001ecc:	4c14      	ldr	r4, [pc, #80]	; (8001f20 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ece:	f042 0210 	orr.w	r2, r2, #16
 8001ed2:	641a      	str	r2, [r3, #64]	; 0x40
 8001ed4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ed6:	f003 0310 	and.w	r3, r3, #16
 8001eda:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001edc:	a901      	add	r1, sp, #4
 8001ede:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ee0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ee2:	f003 fa89 	bl	80053f8 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ee6:	f003 fa77 	bl	80053d8 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001eea:	4b0e      	ldr	r3, [pc, #56]	; (8001f24 <HAL_InitTick+0x74>)
 8001eec:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001eee:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ef2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ef4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ef6:	4b0c      	ldr	r3, [pc, #48]	; (8001f28 <HAL_InitTick+0x78>)
 8001ef8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001efc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001efe:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f00:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f02:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f04:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f06:	f004 f8b1 	bl	800606c <HAL_TIM_Base_Init>
 8001f0a:	b920      	cbnz	r0, 8001f16 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	f003 ff8f 	bl	8005e30 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f12:	b009      	add	sp, #36	; 0x24
 8001f14:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f16:	2001      	movs	r0, #1
 8001f18:	e7fb      	b.n	8001f12 <HAL_InitTick+0x62>
 8001f1a:	bf00      	nop
 8001f1c:	40023800 	.word	0x40023800
 8001f20:	2001266c 	.word	0x2001266c
 8001f24:	40001000 	.word	0x40001000
 8001f28:	000f4240 	.word	0x000f4240

08001f2c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f2c:	4770      	bx	lr

08001f2e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001f2e:	e7fe      	b.n	8001f2e <HardFault_Handler>

08001f30 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001f30:	e7fe      	b.n	8001f30 <MemManage_Handler>

08001f32 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001f32:	e7fe      	b.n	8001f32 <BusFault_Handler>

08001f34 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001f34:	e7fe      	b.n	8001f34 <UsageFault_Handler>

08001f36 <DebugMon_Handler>:
 8001f36:	4770      	bx	lr

08001f38 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <TIM6_DAC_IRQHandler+0x8>)
 8001f3a:	f003 bf8e 	b.w	8005e5a <HAL_TIM_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	2001266c 	.word	0x2001266c

08001f44 <DMA2_Stream0_IRQHandler>:
void DMA2_Stream0_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001f44:	4801      	ldr	r0, [pc, #4]	; (8001f4c <DMA2_Stream0_IRQHandler+0x8>)
 8001f46:	f001 be23 	b.w	8003b90 <HAL_DMA_IRQHandler>
 8001f4a:	bf00      	nop
 8001f4c:	20012550 	.word	0x20012550

08001f50 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f50:	4801      	ldr	r0, [pc, #4]	; (8001f58 <LTDC_IRQHandler+0x8>)
 8001f52:	f002 bf2f 	b.w	8004db4 <HAL_LTDC_IRQHandler>
 8001f56:	bf00      	nop
 8001f58:	20012460 	.word	0x20012460

08001f5c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f5c:	4801      	ldr	r0, [pc, #4]	; (8001f64 <DMA2D_IRQHandler+0x8>)
 8001f5e:	f002 b815 	b.w	8003f8c <HAL_DMA2D_IRQHandler>
 8001f62:	bf00      	nop
 8001f64:	200125b4 	.word	0x200125b4

08001f68 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f68:	2001      	movs	r0, #1
 8001f6a:	4770      	bx	lr

08001f6c <_kill>:

int _kill(int pid, int sig)
{
 8001f6c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f6e:	f018 fa33 	bl	801a3d8 <__errno>
 8001f72:	2316      	movs	r3, #22
 8001f74:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f76:	f04f 30ff 	mov.w	r0, #4294967295
 8001f7a:	bd08      	pop	{r3, pc}

08001f7c <_exit>:

void _exit (int status)
{
 8001f7c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f7e:	f018 fa2b 	bl	801a3d8 <__errno>
 8001f82:	2316      	movs	r3, #22
 8001f84:	6003      	str	r3, [r0, #0]
 8001f86:	e7fe      	b.n	8001f86 <_exit+0xa>

08001f88 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f88:	b570      	push	{r4, r5, r6, lr}
 8001f8a:	460e      	mov	r6, r1
 8001f8c:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8e:	460c      	mov	r4, r1
 8001f90:	1ba3      	subs	r3, r4, r6
 8001f92:	429d      	cmp	r5, r3
 8001f94:	dc01      	bgt.n	8001f9a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f96:	4628      	mov	r0, r5
 8001f98:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f9a:	f3af 8000 	nop.w
 8001f9e:	f804 0b01 	strb.w	r0, [r4], #1
 8001fa2:	e7f5      	b.n	8001f90 <_read+0x8>

08001fa4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001fa4:	b570      	push	{r4, r5, r6, lr}
 8001fa6:	460e      	mov	r6, r1
 8001fa8:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001faa:	460c      	mov	r4, r1
 8001fac:	1ba3      	subs	r3, r4, r6
 8001fae:	429d      	cmp	r5, r3
 8001fb0:	dc01      	bgt.n	8001fb6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001fb2:	4628      	mov	r0, r5
 8001fb4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001fb6:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001fba:	f3af 8000 	nop.w
 8001fbe:	e7f5      	b.n	8001fac <_write+0x8>

08001fc0 <_close>:

int _close(int file)
{
	return -1;
}
 8001fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8001fc4:	4770      	bx	lr

08001fc6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fc6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fca:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fcc:	2000      	movs	r0, #0
 8001fce:	4770      	bx	lr

08001fd0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fd0:	2001      	movs	r0, #1
 8001fd2:	4770      	bx	lr

08001fd4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fd4:	2000      	movs	r0, #0
 8001fd6:	4770      	bx	lr

08001fd8 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001fd8:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fda:	4b0a      	ldr	r3, [pc, #40]	; (8002004 <_sbrk+0x2c>)
 8001fdc:	6819      	ldr	r1, [r3, #0]
{
 8001fde:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001fe0:	b909      	cbnz	r1, 8001fe6 <_sbrk+0xe>
		heap_end = &end;
 8001fe2:	4909      	ldr	r1, [pc, #36]	; (8002008 <_sbrk+0x30>)
 8001fe4:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001fe6:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001fe8:	4669      	mov	r1, sp
 8001fea:	4402      	add	r2, r0
 8001fec:	428a      	cmp	r2, r1
 8001fee:	d906      	bls.n	8001ffe <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001ff0:	f018 f9f2 	bl	801a3d8 <__errno>
 8001ff4:	230c      	movs	r3, #12
 8001ff6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001ff8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001ffc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001ffe:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8002000:	e7fc      	b.n	8001ffc <_sbrk+0x24>
 8002002:	bf00      	nop
 8002004:	200012f8 	.word	0x200012f8
 8002008:	200126f8 	.word	0x200126f8

0800200c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_15_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800200c:	4770      	bx	lr

0800200e <_ZN23ApplicationFontProviderD0Ev>:
 800200e:	b510      	push	{r4, lr}
 8002010:	2104      	movs	r1, #4
 8002012:	4604      	mov	r4, r0
 8002014:	f018 f982 	bl	801a31c <_ZdlPvj>
 8002018:	4620      	mov	r0, r4
 800201a:	bd10      	pop	{r4, pc}

0800201c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800201c:	2901      	cmp	r1, #1
{
 800201e:	b508      	push	{r3, lr}
    switch (typography)
 8002020:	d008      	beq.n	8002034 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8002022:	d303      	bcc.n	800202c <_ZN23ApplicationFontProvider7getFontEt+0x10>
 8002024:	2902      	cmp	r1, #2
 8002026:	d009      	beq.n	800203c <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 8002028:	2000      	movs	r0, #0
 800202a:	e002      	b.n	8002032 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800202c:	f000 ffda 	bl	8002fe4 <_ZN17TypedTextDatabase8getFontsEv>
 8002030:	6800      	ldr	r0, [r0, #0]
    }
}
 8002032:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002034:	f000 ffd6 	bl	8002fe4 <_ZN17TypedTextDatabase8getFontsEv>
 8002038:	6840      	ldr	r0, [r0, #4]
 800203a:	e7fa      	b.n	8002032 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800203c:	f000 ffd2 	bl	8002fe4 <_ZN17TypedTextDatabase8getFontsEv>
 8002040:	6880      	ldr	r0, [r0, #8]
 8002042:	e7f6      	b.n	8002032 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002044 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002044:	4800      	ldr	r0, [pc, #0]	; (8002048 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002046:	4770      	bx	lr
 8002048:	0801b914 	.word	0x0801b914

0800204c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800204c:	2006      	movs	r0, #6
 800204e:	4770      	bx	lr

08002050 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002050:	b513      	push	{r0, r1, r4, lr}
 8002052:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8002054:	b149      	cbz	r1, 800206a <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8002056:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8002058:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800205a:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800205e:	6802      	ldr	r2, [r0, #0]
 8002060:	6894      	ldr	r4, [r2, #8]
 8002062:	aa01      	add	r2, sp, #4
 8002064:	47a0      	blx	r4
        return glyph;
    }
 8002066:	b002      	add	sp, #8
 8002068:	bd10      	pop	{r4, pc}
            return 0;
 800206a:	4608      	mov	r0, r1
 800206c:	e7fb      	b.n	8002066 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

0800206e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800206e:	8940      	ldrh	r0, [r0, #10]
 8002070:	4770      	bx	lr

08002072 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002072:	8980      	ldrh	r0, [r0, #12]
 8002074:	4770      	bx	lr

08002076 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002076:	8880      	ldrh	r0, [r0, #4]
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800207a:	7983      	ldrb	r3, [r0, #6]
 800207c:	8880      	ldrh	r0, [r0, #4]
 800207e:	4418      	add	r0, r3
    }
 8002080:	b280      	uxth	r0, r0
 8002082:	4770      	bx	lr

08002084 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002084:	79c0      	ldrb	r0, [r0, #7]
    }
 8002086:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800208a:	4770      	bx	lr

0800208c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800208c:	79c0      	ldrb	r0, [r0, #7]
    }
 800208e:	09c0      	lsrs	r0, r0, #7
 8002090:	4770      	bx	lr

08002092 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002092:	4770      	bx	lr

08002094 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002094:	b510      	push	{r4, lr}
    }
 8002096:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002098:	4604      	mov	r4, r0
    }
 800209a:	f018 f93f 	bl	801a31c <_ZdlPvj>
 800209e:	4620      	mov	r0, r4
 80020a0:	bd10      	pop	{r4, pc}

080020a2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80020a2:	4770      	bx	lr

080020a4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80020a4:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80020a8:	6808      	ldr	r0, [r1, #0]
 80020aa:	6849      	ldr	r1, [r1, #4]
 80020ac:	c303      	stmia	r3!, {r0, r1}
    };
 80020ae:	4770      	bx	lr

080020b0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020b4:	6041      	str	r1, [r0, #4]
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020ba:	2301      	movs	r3, #1
 80020bc:	7203      	strb	r3, [r0, #8]
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020c0:	4770      	bx	lr

080020c2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020c2:	4770      	bx	lr

080020c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020c4:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020c6:	68c4      	ldr	r4, [r0, #12]
 80020c8:	6841      	ldr	r1, [r0, #4]
 80020ca:	1062      	asrs	r2, r4, #1
    virtual void execute()
 80020cc:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020ce:	07e4      	lsls	r4, r4, #31
 80020d0:	eb01 0002 	add.w	r0, r1, r2
 80020d4:	689b      	ldr	r3, [r3, #8]
 80020d6:	bf48      	it	mi
 80020d8:	588a      	ldrmi	r2, [r1, r2]
    }
 80020da:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020de:	bf48      	it	mi
 80020e0:	58d3      	ldrmi	r3, [r2, r3]
 80020e2:	4718      	bx	r3

080020e4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020e4:	6843      	ldr	r3, [r0, #4]
 80020e6:	b12b      	cbz	r3, 80020f4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020e8:	6883      	ldr	r3, [r0, #8]
 80020ea:	b92b      	cbnz	r3, 80020f8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020ec:	68c0      	ldr	r0, [r0, #12]
 80020ee:	f000 0001 	and.w	r0, r0, #1
 80020f2:	4770      	bx	lr
 80020f4:	4618      	mov	r0, r3
 80020f6:	4770      	bx	lr
 80020f8:	2001      	movs	r0, #1
    }
 80020fa:	4770      	bx	lr

080020fc <_ZN8touchgfx12NoTransitionD0Ev>:
 80020fc:	b510      	push	{r4, lr}
 80020fe:	210c      	movs	r1, #12
 8002100:	4604      	mov	r4, r0
 8002102:	f018 f90b 	bl	801a31c <_ZdlPvj>
 8002106:	4620      	mov	r0, r4
 8002108:	bd10      	pop	{r4, pc}

0800210a <_ZN23FrontendApplicationBaseD0Ev>:
 800210a:	b510      	push	{r4, lr}
 800210c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002110:	4604      	mov	r4, r0
 8002112:	f018 f903 	bl	801a31c <_ZdlPvj>
 8002116:	4620      	mov	r0, r4
 8002118:	bd10      	pop	{r4, pc}

0800211a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800211a:	b510      	push	{r4, lr}
 800211c:	2110      	movs	r1, #16
 800211e:	4604      	mov	r4, r0
 8002120:	f018 f8fc 	bl	801a31c <_ZdlPvj>
 8002124:	4620      	mov	r0, r4
 8002126:	bd10      	pop	{r4, pc}

08002128 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002128:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 800212a:	f009 febd 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 800212e:	6803      	ldr	r3, [r0, #0]
    }
 8002130:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002134:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002136:	4718      	bx	r3

08002138 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002138:	b510      	push	{r4, lr}
 800213a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800213c:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002140:	b158      	cbz	r0, 800215a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002142:	6803      	ldr	r3, [r0, #0]
 8002144:	68db      	ldr	r3, [r3, #12]
 8002146:	4798      	blx	r3
 8002148:	b138      	cbz	r0, 800215a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800214a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800214e:	6803      	ldr	r3, [r0, #0]
 8002150:	689b      	ldr	r3, [r3, #8]
 8002152:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002154:	2300      	movs	r3, #0
 8002156:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800215a:	bd10      	pop	{r4, pc}

0800215c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800215c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800215e:	4604      	mov	r4, r0
 8002160:	4617      	mov	r7, r2
 8002162:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002164:	f009 fec0 	bl	800bee8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002168:	4b14      	ldr	r3, [pc, #80]	; (80021bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800216a:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 800216e:	601c      	str	r4, [r3, #0]
        return instance;
 8002170:	4e13      	ldr	r6, [pc, #76]	; (80021c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8002172:	4b14      	ldr	r3, [pc, #80]	; (80021c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8002174:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8002176:	2500      	movs	r5, #0
 8002178:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 800217a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800217e:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8002182:	4b11      	ldr	r3, [pc, #68]	; (80021c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8002184:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002188:	6803      	ldr	r3, [r0, #0]
 800218a:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800218e:	689b      	ldr	r3, [r3, #8]
 8002190:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002194:	2101      	movs	r1, #1
 8002196:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 800219a:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800219e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80021a0:	4628      	mov	r0, r5
 80021a2:	f000 fed5 	bl	8002f50 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80021a6:	6833      	ldr	r3, [r6, #0]
 80021a8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80021ac:	b10a      	cbz	r2, 80021b2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 80021ae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80021b0:	b900      	cbnz	r0, 80021b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 80021b2:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80021b4:	f011 f82f 	bl	8013216 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80021b8:	4620      	mov	r0, r4
 80021ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021bc:	20012118 	.word	0x20012118
 80021c0:	200120ac 	.word	0x200120ac
 80021c4:	0801b9bc 	.word	0x0801b9bc
 80021c8:	0801b9a4 	.word	0x0801b9a4

080021cc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021cc:	4b06      	ldr	r3, [pc, #24]	; (80021e8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80021ce:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80021d2:	2300      	movs	r3, #0
 80021d4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021d8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80021dc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80021e0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80021e4:	4770      	bx	lr
 80021e6:	bf00      	nop
 80021e8:	0800234d 	.word	0x0800234d

080021ec <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 80021ec:	4b06      	ldr	r3, [pc, #24]	; (8002208 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 80021ee:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80021f2:	2300      	movs	r3, #0
 80021f4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021f8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80021fc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002200:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002204:	4770      	bx	lr
 8002206:	bf00      	nop
 8002208:	080024b1 	.word	0x080024b1

0800220c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800220c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002210:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002212:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002214:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002218:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800221a:	6803      	ldr	r3, [r0, #0]
 800221c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800221e:	4688      	mov	r8, r1
 8002220:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002222:	4798      	blx	r3
 8002224:	f5b0 7f26 	cmp.w	r0, #664	; 0x298
 8002228:	d205      	bcs.n	8002236 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800222a:	4b42      	ldr	r3, [pc, #264]	; (8002334 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800222c:	4a42      	ldr	r2, [pc, #264]	; (8002338 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800222e:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002230:	4842      	ldr	r0, [pc, #264]	; (800233c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002232:	f018 f89f 	bl	801a374 <__assert_func>
 8002236:	6868      	ldr	r0, [r5, #4]
 8002238:	6803      	ldr	r3, [r0, #0]
 800223a:	6a1b      	ldr	r3, [r3, #32]
 800223c:	4798      	blx	r3
 800223e:	280f      	cmp	r0, #15
 8002240:	d803      	bhi.n	800224a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8002242:	4b3f      	ldr	r3, [pc, #252]	; (8002340 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002244:	4a3c      	ldr	r2, [pc, #240]	; (8002338 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002246:	21a8      	movs	r1, #168	; 0xa8
 8002248:	e7f2      	b.n	8002230 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800224a:	68e8      	ldr	r0, [r5, #12]
 800224c:	6803      	ldr	r3, [r0, #0]
 800224e:	6a1b      	ldr	r3, [r3, #32]
 8002250:	4798      	blx	r3
 8002252:	280b      	cmp	r0, #11
 8002254:	d803      	bhi.n	800225e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8002256:	4b3b      	ldr	r3, [pc, #236]	; (8002344 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002258:	4a37      	ldr	r2, [pc, #220]	; (8002338 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800225a:	21a9      	movs	r1, #169	; 0xa9
 800225c:	e7e8      	b.n	8002230 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 800225e:	f009 fe23 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 8002262:	f009 fe27 	bl	800beb4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002266:	f8d9 0000 	ldr.w	r0, [r9]
 800226a:	b110      	cbz	r0, 8002272 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 800226c:	6803      	ldr	r3, [r0, #0]
 800226e:	68db      	ldr	r3, [r3, #12]
 8002270:	4798      	blx	r3
    if (*currentTrans)
 8002272:	f8d9 0000 	ldr.w	r0, [r9]
 8002276:	b110      	cbz	r0, 800227e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8002278:	6803      	ldr	r3, [r0, #0]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	4798      	blx	r3
    if (*currentScreen)
 800227e:	6838      	ldr	r0, [r7, #0]
 8002280:	b110      	cbz	r0, 8002288 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	695b      	ldr	r3, [r3, #20]
 8002286:	4798      	blx	r3
    if (*currentPresenter)
 8002288:	f8d8 0000 	ldr.w	r0, [r8]
 800228c:	b110      	cbz	r0, 8002294 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 800228e:	6803      	ldr	r3, [r0, #0]
 8002290:	685b      	ldr	r3, [r3, #4]
 8002292:	4798      	blx	r3
    if (*currentScreen)
 8002294:	6838      	ldr	r0, [r7, #0]
 8002296:	b110      	cbz	r0, 800229e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8002298:	6803      	ldr	r3, [r0, #0]
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	4798      	blx	r3
    if (*currentPresenter)
 800229e:	f8d8 0000 	ldr.w	r0, [r8]
 80022a2:	b110      	cbz	r0, 80022aa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 80022a4:	6803      	ldr	r3, [r0, #0]
 80022a6:	689b      	ldr	r3, [r3, #8]
 80022a8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022aa:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022ac:	6803      	ldr	r3, [r0, #0]
 80022ae:	2100      	movs	r1, #0
 80022b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022b2:	4798      	blx	r3
 80022b4:	4604      	mov	r4, r0
 80022b6:	b120      	cbz	r0, 80022c2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 80022b8:	2300      	movs	r3, #0
 80022ba:	6043      	str	r3, [r0, #4]
 80022bc:	7203      	strb	r3, [r0, #8]
 80022be:	4b22      	ldr	r3, [pc, #136]	; (8002348 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80022c0:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022c2:	68a8      	ldr	r0, [r5, #8]
 80022c4:	6803      	ldr	r3, [r0, #0]
 80022c6:	2100      	movs	r1, #0
 80022c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ca:	4798      	blx	r3
 80022cc:	4606      	mov	r6, r0
 80022ce:	b108      	cbz	r0, 80022d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 80022d0:	f000 fee4 	bl	800309c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022d4:	6868      	ldr	r0, [r5, #4]
 80022d6:	6803      	ldr	r3, [r0, #0]
 80022d8:	2100      	movs	r1, #0
 80022da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022dc:	4798      	blx	r3
 80022de:	4605      	mov	r5, r0
 80022e0:	b110      	cbz	r0, 80022e8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 80022e2:	4631      	mov	r1, r6
 80022e4:	f000 fec0 	bl	8003068 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022e8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80022ec:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 80022f0:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80022f2:	b1e5      	cbz	r5, 800232e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 80022f4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022f6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80022fa:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022fc:	f8c5 a008 	str.w	sl, [r5, #8]
 8002300:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002302:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002304:	68db      	ldr	r3, [r3, #12]
 8002306:	4798      	blx	r3
    newPresenter->activate();
 8002308:	682b      	ldr	r3, [r5, #0]
 800230a:	4628      	mov	r0, r5
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002310:	4621      	mov	r1, r4
 8002312:	4630      	mov	r0, r6
 8002314:	f00a ff76 	bl	800d204 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002318:	6823      	ldr	r3, [r4, #0]
 800231a:	4620      	mov	r0, r4
 800231c:	691b      	ldr	r3, [r3, #16]
 800231e:	4798      	blx	r3
    newTransition->invalidate();
 8002320:	6823      	ldr	r3, [r4, #0]
 8002322:	4620      	mov	r0, r4
 8002324:	695b      	ldr	r3, [r3, #20]
 8002326:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002328:	4628      	mov	r0, r5
 800232a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 800232e:	462b      	mov	r3, r5
 8002330:	e7e1      	b.n	80022f6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8002332:	bf00      	nop
 8002334:	0801ba1c 	.word	0x0801ba1c
 8002338:	0801bc37 	.word	0x0801bc37
 800233c:	0801baaa 	.word	0x0801baaa
 8002340:	0801baf1 	.word	0x0801baf1
 8002344:	0801bb94 	.word	0x0801bb94
 8002348:	0801ba00 	.word	0x0801ba00

0800234c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 800234c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800234e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002352:	9300      	str	r3, [sp, #0]
 8002354:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002358:	4b04      	ldr	r3, [pc, #16]	; (800236c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 800235a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800235e:	4804      	ldr	r0, [pc, #16]	; (8002370 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8002360:	f7ff ff54 	bl	800220c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002364:	b003      	add	sp, #12
 8002366:	f85d fb04 	ldr.w	pc, [sp], #4
 800236a:	bf00      	nop
 800236c:	2001210c 	.word	0x2001210c
 8002370:	20012108 	.word	0x20012108

08002374 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002378:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800237a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800237c:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002380:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002382:	6803      	ldr	r3, [r0, #0]
 8002384:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002386:	4688      	mov	r8, r1
 8002388:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800238a:	4798      	blx	r3
 800238c:	28ef      	cmp	r0, #239	; 0xef
 800238e:	d805      	bhi.n	800239c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 8002390:	4b41      	ldr	r3, [pc, #260]	; (8002498 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 8002392:	4a42      	ldr	r2, [pc, #264]	; (800249c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002394:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002396:	4842      	ldr	r0, [pc, #264]	; (80024a0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002398:	f017 ffec 	bl	801a374 <__assert_func>
 800239c:	6868      	ldr	r0, [r5, #4]
 800239e:	6803      	ldr	r3, [r0, #0]
 80023a0:	6a1b      	ldr	r3, [r3, #32]
 80023a2:	4798      	blx	r3
 80023a4:	280f      	cmp	r0, #15
 80023a6:	d803      	bhi.n	80023b0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 80023a8:	4b3e      	ldr	r3, [pc, #248]	; (80024a4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80023aa:	4a3c      	ldr	r2, [pc, #240]	; (800249c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80023ac:	21a8      	movs	r1, #168	; 0xa8
 80023ae:	e7f2      	b.n	8002396 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023b0:	68e8      	ldr	r0, [r5, #12]
 80023b2:	6803      	ldr	r3, [r0, #0]
 80023b4:	6a1b      	ldr	r3, [r3, #32]
 80023b6:	4798      	blx	r3
 80023b8:	280b      	cmp	r0, #11
 80023ba:	d803      	bhi.n	80023c4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 80023bc:	4b3a      	ldr	r3, [pc, #232]	; (80024a8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80023be:	4a37      	ldr	r2, [pc, #220]	; (800249c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80023c0:	21a9      	movs	r1, #169	; 0xa9
 80023c2:	e7e8      	b.n	8002396 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80023c4:	f009 fd70 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 80023c8:	f009 fd74 	bl	800beb4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80023cc:	f8d9 0000 	ldr.w	r0, [r9]
 80023d0:	b110      	cbz	r0, 80023d8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 80023d2:	6803      	ldr	r3, [r0, #0]
 80023d4:	68db      	ldr	r3, [r3, #12]
 80023d6:	4798      	blx	r3
    if (*currentTrans)
 80023d8:	f8d9 0000 	ldr.w	r0, [r9]
 80023dc:	b110      	cbz	r0, 80023e4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 80023de:	6803      	ldr	r3, [r0, #0]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4798      	blx	r3
    if (*currentScreen)
 80023e4:	6838      	ldr	r0, [r7, #0]
 80023e6:	b110      	cbz	r0, 80023ee <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 80023e8:	6803      	ldr	r3, [r0, #0]
 80023ea:	695b      	ldr	r3, [r3, #20]
 80023ec:	4798      	blx	r3
    if (*currentPresenter)
 80023ee:	f8d8 0000 	ldr.w	r0, [r8]
 80023f2:	b110      	cbz	r0, 80023fa <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 80023f4:	6803      	ldr	r3, [r0, #0]
 80023f6:	685b      	ldr	r3, [r3, #4]
 80023f8:	4798      	blx	r3
    if (*currentScreen)
 80023fa:	6838      	ldr	r0, [r7, #0]
 80023fc:	b110      	cbz	r0, 8002404 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 80023fe:	6803      	ldr	r3, [r0, #0]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4798      	blx	r3
    if (*currentPresenter)
 8002404:	f8d8 0000 	ldr.w	r0, [r8]
 8002408:	b110      	cbz	r0, 8002410 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	689b      	ldr	r3, [r3, #8]
 800240e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002410:	68e8      	ldr	r0, [r5, #12]
 8002412:	6803      	ldr	r3, [r0, #0]
 8002414:	2100      	movs	r1, #0
 8002416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002418:	4798      	blx	r3
 800241a:	4604      	mov	r4, r0
 800241c:	b120      	cbz	r0, 8002428 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb4>
 800241e:	2300      	movs	r3, #0
 8002420:	6043      	str	r3, [r0, #4]
 8002422:	7203      	strb	r3, [r0, #8]
 8002424:	4b21      	ldr	r3, [pc, #132]	; (80024ac <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002426:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002428:	68a8      	ldr	r0, [r5, #8]
 800242a:	6803      	ldr	r3, [r0, #0]
 800242c:	2100      	movs	r1, #0
 800242e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002430:	4798      	blx	r3
 8002432:	4606      	mov	r6, r0
 8002434:	b108      	cbz	r0, 800243a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
 8002436:	f000 fe63 	bl	8003100 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800243a:	6868      	ldr	r0, [r5, #4]
 800243c:	6803      	ldr	r3, [r0, #0]
 800243e:	2100      	movs	r1, #0
 8002440:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002442:	4798      	blx	r3
 8002444:	4605      	mov	r5, r0
 8002446:	b110      	cbz	r0, 800244e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xda>
 8002448:	4631      	mov	r1, r6
 800244a:	f000 fe3f 	bl	80030cc <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 800244e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002452:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 8002456:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002458:	b1e5      	cbz	r5, 8002494 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 800245a:	1d2b      	adds	r3, r5, #4
 800245c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002460:	6833      	ldr	r3, [r6, #0]
 8002462:	f8c5 a008 	str.w	sl, [r5, #8]
 8002466:	4630      	mov	r0, r6
 8002468:	63f5      	str	r5, [r6, #60]	; 0x3c
 800246a:	68db      	ldr	r3, [r3, #12]
 800246c:	4798      	blx	r3
    newPresenter->activate();
 800246e:	682b      	ldr	r3, [r5, #0]
 8002470:	4628      	mov	r0, r5
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002476:	4621      	mov	r1, r4
 8002478:	4630      	mov	r0, r6
 800247a:	f00a fec3 	bl	800d204 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800247e:	6823      	ldr	r3, [r4, #0]
 8002480:	4620      	mov	r0, r4
 8002482:	691b      	ldr	r3, [r3, #16]
 8002484:	4798      	blx	r3
    newTransition->invalidate();
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	4620      	mov	r0, r4
 800248a:	695b      	ldr	r3, [r3, #20]
 800248c:	4798      	blx	r3
}
 800248e:	4628      	mov	r0, r5
 8002490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 8002494:	462b      	mov	r3, r5
 8002496:	e7e1      	b.n	800245c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 8002498:	0801ba1c 	.word	0x0801ba1c
 800249c:	0801bd3b 	.word	0x0801bd3b
 80024a0:	0801baaa 	.word	0x0801baaa
 80024a4:	0801baf1 	.word	0x0801baf1
 80024a8:	0801bb94 	.word	0x0801bb94
 80024ac:	0801ba00 	.word	0x0801ba00

080024b0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 80024b0:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80024b2:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80024b6:	9300      	str	r3, [sp, #0]
 80024b8:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80024bc:	4b04      	ldr	r3, [pc, #16]	; (80024d0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 80024be:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80024c2:	4804      	ldr	r0, [pc, #16]	; (80024d4 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 80024c4:	f7ff ff56 	bl	8002374 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80024c8:	b003      	add	sp, #12
 80024ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80024ce:	bf00      	nop
 80024d0:	2001210c 	.word	0x2001210c
 80024d4:	20012108 	.word	0x20012108

080024d8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80024d8:	6a00      	ldr	r0, [r0, #32]
 80024da:	4770      	bx	lr

080024dc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80024dc:	4770      	bx	lr

080024de <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80024de:	888b      	ldrh	r3, [r1, #4]
 80024e0:	6980      	ldr	r0, [r0, #24]
 80024e2:	680a      	ldr	r2, [r1, #0]
 80024e4:	0adb      	lsrs	r3, r3, #11
 80024e6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80024ea:	4410      	add	r0, r2
 80024ec:	4770      	bx	lr

080024ee <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80024ee:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80024f0:	b1c2      	cbz	r2, 8002524 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80024f2:	7b13      	ldrb	r3, [r2, #12]
 80024f4:	b1b3      	cbz	r3, 8002524 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80024f6:	7b54      	ldrb	r4, [r2, #13]
 80024f8:	7ad2      	ldrb	r2, [r2, #11]
 80024fa:	0224      	lsls	r4, r4, #8
 80024fc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002500:	4314      	orrs	r4, r2
 8002502:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002504:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002506:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800250a:	8813      	ldrh	r3, [r2, #0]
 800250c:	428b      	cmp	r3, r1
 800250e:	d102      	bne.n	8002516 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002510:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002514:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002516:	d805      	bhi.n	8002524 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002518:	3801      	subs	r0, #1
 800251a:	b280      	uxth	r0, r0
 800251c:	3204      	adds	r2, #4
 800251e:	2800      	cmp	r0, #0
 8002520:	d1f3      	bne.n	800250a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002522:	e7f7      	b.n	8002514 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002524:	2000      	movs	r0, #0
 8002526:	e7f5      	b.n	8002514 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002528 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002528:	b510      	push	{r4, lr}
 800252a:	2124      	movs	r1, #36	; 0x24
 800252c:	4604      	mov	r4, r0
 800252e:	f017 fef5 	bl	801a31c <_ZdlPvj>
 8002532:	4620      	mov	r0, r4
 8002534:	bd10      	pop	{r4, pc}
	...

08002538 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002538:	b530      	push	{r4, r5, lr}
 800253a:	b089      	sub	sp, #36	; 0x24
 800253c:	4604      	mov	r4, r0
    gsubTable(gsubData)
 800253e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002542:	9506      	str	r5, [sp, #24]
 8002544:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002548:	9505      	str	r5, [sp, #20]
 800254a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800254e:	9504      	str	r5, [sp, #16]
 8002550:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002554:	9503      	str	r5, [sp, #12]
 8002556:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800255a:	9502      	str	r5, [sp, #8]
 800255c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002560:	9501      	str	r5, [sp, #4]
 8002562:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002566:	9500      	str	r5, [sp, #0]
 8002568:	f00a fa28 	bl	800c9bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800256c:	4b05      	ldr	r3, [pc, #20]	; (8002584 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 800256e:	6023      	str	r3, [r4, #0]
 8002570:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002572:	61a3      	str	r3, [r4, #24]
 8002574:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002576:	61e3      	str	r3, [r4, #28]
 8002578:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800257a:	6223      	str	r3, [r4, #32]
}
 800257c:	4620      	mov	r0, r4
 800257e:	b009      	add	sp, #36	; 0x24
 8002580:	bd30      	pop	{r4, r5, pc}
 8002582:	bf00      	nop
 8002584:	0801be48 	.word	0x0801be48

08002588 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002588:	b570      	push	{r4, r5, r6, lr}
 800258a:	461e      	mov	r6, r3
    {
        setXY(x, y);
 800258c:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800258e:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 8002592:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002594:	4604      	mov	r4, r0
        setXY(x, y);
 8002596:	4798      	blx	r3
        setWidth(width);
 8002598:	6823      	ldr	r3, [r4, #0]
 800259a:	4631      	mov	r1, r6
 800259c:	4620      	mov	r0, r4
 800259e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80025a0:	4790      	blx	r2
        setHeight(height);
 80025a2:	6823      	ldr	r3, [r4, #0]
 80025a4:	4629      	mov	r1, r5
 80025a6:	4620      	mov	r0, r4
 80025a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80025aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80025ae:	4718      	bx	r3

080025b0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80025b0:	8081      	strh	r1, [r0, #4]
    }
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80025b4:	80c1      	strh	r1, [r0, #6]
    }
 80025b6:	4770      	bx	lr

080025b8 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80025b8:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80025ba:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 80025bc:	4604      	mov	r4, r0
        setX(x);
 80025be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 80025c0:	4615      	mov	r5, r2
        setX(x);
 80025c2:	4798      	blx	r3
        setY(y);
 80025c4:	6823      	ldr	r3, [r4, #0]
 80025c6:	4629      	mov	r1, r5
 80025c8:	4620      	mov	r0, r4
 80025ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80025cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80025d0:	4718      	bx	r3

080025d2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80025d2:	8101      	strh	r1, [r0, #8]
    }
 80025d4:	4770      	bx	lr

080025d6 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80025d6:	8141      	strh	r1, [r0, #10]
    }
 80025d8:	4770      	bx	lr

080025da <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80025da:	4770      	bx	lr

080025dc <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80025dc:	4770      	bx	lr

080025de <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80025de:	4770      	bx	lr

080025e0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80025e0:	4770      	bx	lr

080025e2 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80025e2:	4770      	bx	lr

080025e4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 80025e4:	88c3      	ldrh	r3, [r0, #6]
 80025e6:	1ad2      	subs	r2, r2, r3
 80025e8:	8883      	ldrh	r3, [r0, #4]
 80025ea:	1ac9      	subs	r1, r1, r3
 80025ec:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 80025ee:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 80025f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 80025f2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80025f6:	b212      	sxth	r2, r2
 80025f8:	b209      	sxth	r1, r1
 80025fa:	4718      	bx	r3

080025fc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80025fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002600:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002602:	f04f 33ff 	mov.w	r3, #4294967295
 8002606:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002608:	6813      	ldr	r3, [r2, #0]
 800260a:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800260c:	6010      	str	r0, [r2, #0]
    }
 800260e:	4770      	bx	lr

08002610 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002610:	4770      	bx	lr

08002612 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002612:	4770      	bx	lr

08002614 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002614:	4770      	bx	lr

08002616 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002616:	4770      	bx	lr

08002618 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002618:	4770      	bx	lr

0800261a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800261a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800261e:	b11a      	cbz	r2, 8002628 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002620:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002624:	b102      	cbz	r2, 8002628 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002626:	6018      	str	r0, [r3, #0]
        }
    }
 8002628:	4770      	bx	lr

0800262a <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 800262a:	4770      	bx	lr

0800262c <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800262c:	4770      	bx	lr

0800262e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800262e:	4770      	bx	lr

08002630 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002630:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002632:	68c5      	ldr	r5, [r0, #12]
 8002634:	6844      	ldr	r4, [r0, #4]
 8002636:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002638:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800263a:	07ed      	lsls	r5, r5, #31
 800263c:	eb04 0002 	add.w	r0, r4, r2
 8002640:	689b      	ldr	r3, [r3, #8]
 8002642:	bf48      	it	mi
 8002644:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002646:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002648:	bf48      	it	mi
 800264a:	58d3      	ldrmi	r3, [r2, r3]
 800264c:	4718      	bx	r3

0800264e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800264e:	6843      	ldr	r3, [r0, #4]
 8002650:	b12b      	cbz	r3, 800265e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002652:	6883      	ldr	r3, [r0, #8]
 8002654:	b92b      	cbnz	r3, 8002662 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002656:	68c0      	ldr	r0, [r0, #12]
 8002658:	f000 0001 	and.w	r0, r0, #1
 800265c:	4770      	bx	lr
 800265e:	4618      	mov	r0, r3
 8002660:	4770      	bx	lr
 8002662:	2001      	movs	r0, #1
    }
 8002664:	4770      	bx	lr

08002666 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002666:	b510      	push	{r4, lr}
 8002668:	2110      	movs	r1, #16
 800266a:	4604      	mov	r4, r0
 800266c:	f017 fe56 	bl	801a31c <_ZdlPvj>
 8002670:	4620      	mov	r0, r4
 8002672:	bd10      	pop	{r4, pc}

08002674 <_ZN15Screen1ViewBaseD0Ev>:
 8002674:	b510      	push	{r4, lr}
 8002676:	f44f 7126 	mov.w	r1, #664	; 0x298
 800267a:	4604      	mov	r4, r0
 800267c:	f017 fe4e 	bl	801a31c <_ZdlPvj>
 8002680:	4620      	mov	r0, r4
 8002682:	bd10      	pop	{r4, pc}

08002684 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002684:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8002688:	4288      	cmp	r0, r1
{
 800268a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800268c:	d105      	bne.n	800269a <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800268e:	f009 fc0b 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
 8002692:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 8002696:	f7ff bda9 	b.w	80021ec <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 800269a:	bd08      	pop	{r3, pc}

0800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 800269c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800269e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    {
        if (typedText.hasValidId())
 80026a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80026a4:	4299      	cmp	r1, r3
    void updateTextPosition()
 80026a6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80026a8:	d032      	beq.n	8002710 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80026aa:	4b1b      	ldr	r3, [pc, #108]	; (8002718 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	b92b      	cbnz	r3, 80026bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80026b0:	4b1a      	ldr	r3, [pc, #104]	; (800271c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80026b2:	4a1b      	ldr	r2, [pc, #108]	; (8002720 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80026b4:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80026b6:	481b      	ldr	r0, [pc, #108]	; (8002724 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80026b8:	f017 fe5c 	bl	801a374 <__assert_func>
 80026bc:	4a1a      	ldr	r2, [pc, #104]	; (8002728 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x8c>)
 80026be:	8812      	ldrh	r2, [r2, #0]
 80026c0:	428a      	cmp	r2, r1
 80026c2:	d803      	bhi.n	80026cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x30>
 80026c4:	4b19      	ldr	r3, [pc, #100]	; (800272c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x90>)
 80026c6:	4a16      	ldr	r2, [pc, #88]	; (8002720 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80026c8:	21b2      	movs	r1, #178	; 0xb2
 80026ca:	e7f4      	b.n	80026b6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 80026cc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80026d0:	4b17      	ldr	r3, [pc, #92]	; (8002730 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x94>)
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80026d8:	4b16      	ldr	r3, [pc, #88]	; (8002734 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>)
 80026da:	6818      	ldr	r0, [r3, #0]
 80026dc:	f000 fc72 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80026e0:	682b      	ldr	r3, [r5, #0]
 80026e2:	4607      	mov	r7, r0
 80026e4:	4601      	mov	r1, r0
 80026e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026e8:	4628      	mov	r0, r5
 80026ea:	4798      	blx	r3
 80026ec:	682b      	ldr	r3, [r5, #0]
 80026ee:	4604      	mov	r4, r0
 80026f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026f2:	4639      	mov	r1, r7
 80026f4:	4628      	mov	r0, r5
 80026f6:	4798      	blx	r3
 80026f8:	682b      	ldr	r3, [r5, #0]
 80026fa:	fb14 f400 	smulbb	r4, r4, r0
 80026fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002700:	4639      	mov	r1, r7
 8002702:	4628      	mov	r0, r5
 8002704:	4798      	blx	r3
 8002706:	b2e4      	uxtb	r4, r4
 8002708:	4420      	add	r0, r4
 800270a:	f886 0045 	strb.w	r0, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800270e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            textHeightIncludingSpacing = 0;
 8002710:	2300      	movs	r3, #0
 8002712:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002716:	e7fa      	b.n	800270e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x72>
 8002718:	2001211c 	.word	0x2001211c
 800271c:	0801beac 	.word	0x0801beac
 8002720:	0801c0a0 	.word	0x0801c0a0
 8002724:	0801beee 	.word	0x0801beee
 8002728:	20012120 	.word	0x20012120
 800272c:	0801bf35 	.word	0x0801bf35
 8002730:	20012124 	.word	0x20012124
 8002734:	20012128 	.word	0x20012128

08002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002738:	4613      	mov	r3, r2
        return instance;
 800273a:	4a0c      	ldr	r2, [pc, #48]	; (800276c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 800273c:	b570      	push	{r4, r5, r6, lr}
 800273e:	6814      	ldr	r4, [r2, #0]
 8002740:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8002742:	b92c      	cbnz	r4, 8002750 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8002744:	4b0a      	ldr	r3, [pc, #40]	; (8002770 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8002746:	4a0b      	ldr	r2, [pc, #44]	; (8002774 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002748:	480b      	ldr	r0, [pc, #44]	; (8002778 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 800274a:	2135      	movs	r1, #53	; 0x35
 800274c:	f017 fe12 	bl	801a374 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002750:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8002754:	b10a      	cbz	r2, 800275a <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8002756:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002758:	b900      	cbnz	r0, 800275c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 800275a:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 800275c:	6802      	ldr	r2, [r0, #0]
 800275e:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8002760:	460a      	mov	r2, r1
 8002762:	46a4      	mov	ip, r4
 8002764:	4629      	mov	r1, r5
    }
 8002766:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 800276a:	4760      	bx	ip
 800276c:	200120ac 	.word	0x200120ac
 8002770:	0801bf87 	.word	0x0801bf87
 8002774:	0801c044 	.word	0x0801c044
 8002778:	0801bfca 	.word	0x0801bfca

0800277c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800277c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002780:	4604      	mov	r4, r0
 8002782:	b08f      	sub	sp, #60	; 0x3c
        : presenter(0)
 8002784:	f00a fbc2 	bl	800cf0c <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002788:	4622      	mov	r2, r4
 800278a:	2500      	movs	r5, #0
 800278c:	4bdf      	ldr	r3, [pc, #892]	; (8002b0c <_ZN15Screen1ViewBaseC1Ev+0x390>)
 800278e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002790:	f842 3b40 	str.w	r3, [r2], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8002794:	4bde      	ldr	r3, [pc, #888]	; (8002b10 <_ZN15Screen1ViewBaseC1Ev+0x394>)
 8002796:	6423      	str	r3, [r4, #64]	; 0x40
 8002798:	26ff      	movs	r6, #255	; 0xff
          visible(true)
 800279a:	f04f 0801 	mov.w	r8, #1
 800279e:	f104 0370 	add.w	r3, r4, #112	; 0x70
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 80027a2:	f8a4 5044 	strh.w	r5, [r4, #68]	; 0x44
        this->y = y;
 80027a6:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
        this->width = width;
 80027aa:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
        this->height = height;
 80027ae:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
        this->x = 0;
 80027b2:	f8a4 504c 	strh.w	r5, [r4, #76]	; 0x4c
        this->y = 0;
 80027b6:	f8a4 504e 	strh.w	r5, [r4, #78]	; 0x4e
        this->width = 0;
 80027ba:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
        this->height = 0;
 80027be:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80027c2:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 80027c6:	65e5      	str	r5, [r4, #92]	; 0x5c
 80027c8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
        color = col;
 80027cc:	66a5      	str	r5, [r4, #104]	; 0x68
 80027ce:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 80027d2:	f884 8065 	strb.w	r8, [r4, #101]	; 0x65
 80027d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80027da:	4618      	mov	r0, r3
 80027dc:	9208      	str	r2, [sp, #32]
 80027de:	9302      	str	r3, [sp, #8]
 80027e0:	f007 f910 	bl	8009a04 <_ZN8touchgfx13ScalableImageC1Ev>
 80027e4:	f104 039c 	add.w	r3, r4, #156	; 0x9c
 80027e8:	9307      	str	r3, [sp, #28]
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80027ea:	4bca      	ldr	r3, [pc, #808]	; (8002b14 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 80027ec:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        : typedTextId(id)
 80027f0:	4bc9      	ldr	r3, [pc, #804]	; (8002b18 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 80027f2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 80027f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027fa:	f104 02d8 	add.w	r2, r4, #216	; 0xd8
 80027fe:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8002802:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002806:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
        this->x = x;
 800280a:	f8a4 50a0 	strh.w	r5, [r4, #160]	; 0xa0
        this->y = y;
 800280e:	f8a4 50a2 	strh.w	r5, [r4, #162]	; 0xa2
        this->width = width;
 8002812:	f8a4 50a4 	strh.w	r5, [r4, #164]	; 0xa4
        this->height = height;
 8002816:	f8a4 50a6 	strh.w	r5, [r4, #166]	; 0xa6
        this->x = 0;
 800281a:	f8a4 50a8 	strh.w	r5, [r4, #168]	; 0xa8
        this->y = 0;
 800281e:	f8a4 50aa 	strh.w	r5, [r4, #170]	; 0xaa
        this->width = 0;
 8002822:	f8a4 50ac 	strh.w	r5, [r4, #172]	; 0xac
        this->height = 0;
 8002826:	f8a4 50ae 	strh.w	r5, [r4, #174]	; 0xae
 800282a:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 800282e:	f8c4 50b8 	str.w	r5, [r4, #184]	; 0xb8
 8002832:	f884 50c0 	strb.w	r5, [r4, #192]	; 0xc0
        color = col;
 8002836:	f8c4 50cc 	str.w	r5, [r4, #204]	; 0xcc
 800283a:	f884 50d4 	strb.w	r5, [r4, #212]	; 0xd4
 800283e:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8002842:	f884 80c1 	strb.w	r8, [r4, #193]	; 0xc1
 8002846:	4610      	mov	r0, r2
 8002848:	9203      	str	r2, [sp, #12]
 800284a:	f007 ff83 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800284e:	f504 7290 	add.w	r2, r4, #288	; 0x120
 8002852:	4610      	mov	r0, r2
 8002854:	9204      	str	r2, [sp, #16]
 8002856:	f007 ff7d 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800285a:	f504 72b4 	add.w	r2, r4, #360	; 0x168
 800285e:	4610      	mov	r0, r2
 8002860:	9205      	str	r2, [sp, #20]
 8002862:	f007 ff77 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002866:	f504 72d8 	add.w	r2, r4, #432	; 0x1b0
 800286a:	f504 7bfc 	add.w	fp, r4, #504	; 0x1f8
 800286e:	4610      	mov	r0, r2
 8002870:	f504 7910 	add.w	r9, r4, #576	; 0x240
 8002874:	9206      	str	r2, [sp, #24]
 8002876:	f007 ff6d 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800287a:	4658      	mov	r0, fp
 800287c:	f007 ff6a 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002880:	4648      	mov	r0, r9
 8002882:	f007 ff67 	bl	800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>
    {
 8002886:	4ba5      	ldr	r3, [pc, #660]	; (8002b1c <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 8002888:	f8c4 3288 	str.w	r3, [r4, #648]	; 0x288
    __background.setPosition(0, 0, 240, 320);
 800288c:	f44f 7aa0 	mov.w	sl, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 8002890:	4ba3      	ldr	r3, [pc, #652]	; (8002b20 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8002892:	f8c4 3290 	str.w	r3, [r4, #656]	; 0x290
 8002896:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
 800289a:	23f0      	movs	r3, #240	; 0xf0
 800289c:	f8cd a000 	str.w	sl, [sp]
 80028a0:	462a      	mov	r2, r5
 80028a2:	4629      	mov	r1, r5
 80028a4:	9808      	ldr	r0, [sp, #32]
        this->pobject = pobject;
 80028a6:	f8c4 428c 	str.w	r4, [r4, #652]	; 0x28c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028aa:	af0e      	add	r7, sp, #56	; 0x38
 80028ac:	f7ff fe6c 	bl	8002588 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80028b0:	462a      	mov	r2, r5
 80028b2:	4629      	mov	r1, r5
 80028b4:	4628      	mov	r0, r5
 80028b6:	f7ff ff3f 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80028ba:	f04f 0204 	mov.w	r2, #4
 80028be:	f827 2d08 	strh.w	r2, [r7, #-8]!
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80028c2:	66a0      	str	r0, [r4, #104]	; 0x68
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_CPU_FAN_512_ID));
 80028c4:	4639      	mov	r1, r7
 80028c6:	9802      	ldr	r0, [sp, #8]
 80028c8:	f007 f851 	bl	800996e <_ZN8touchgfx13ScalableImage9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 240, 320);
 80028cc:	23f0      	movs	r3, #240	; 0xf0
 80028ce:	462a      	mov	r2, r5
 80028d0:	f8cd a000 	str.w	sl, [sp]
 80028d4:	4629      	mov	r1, r5
 80028d6:	9802      	ldr	r0, [sp, #8]
 80028d8:	f7ff fe56 	bl	8002588 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80028dc:	4629      	mov	r1, r5
 80028de:	9802      	ldr	r0, [sp, #8]
 80028e0:	f007 f83e 	bl	8009960 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    textArea1.setXY(35, 9);
 80028e4:	9807      	ldr	r0, [sp, #28]
 80028e6:	2209      	movs	r2, #9
 80028e8:	2123      	movs	r1, #35	; 0x23
 80028ea:	f7ff fe65 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
 80028ee:	462a      	mov	r2, r5
 80028f0:	4629      	mov	r1, r5
 80028f2:	4630      	mov	r0, r6
 80028f4:	f7ff ff20 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80028f8:	4b87      	ldr	r3, [pc, #540]	; (8002b18 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80028fa:	f8c4 00cc 	str.w	r0, [r4, #204]	; 0xcc
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 80028fe:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002902:	4639      	mov	r1, r7
 8002904:	9807      	ldr	r0, [sp, #28]
 8002906:	930c      	str	r3, [sp, #48]	; 0x30
 8002908:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
 800290c:	f007 fc52 	bl	800a1b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    buttonWithLabel1.setXY(151, 59);
 8002910:	9803      	ldr	r0, [sp, #12]
 8002912:	223b      	movs	r2, #59	; 0x3b
 8002914:	2197      	movs	r1, #151	; 0x97
 8002916:	f7ff fe4f 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
 800291a:	463a      	mov	r2, r7
 800291c:	a90b      	add	r1, sp, #44	; 0x2c
 800291e:	9803      	ldr	r0, [sp, #12]
 8002920:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8002924:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8002928:	f007 fc89 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800292c:	2302      	movs	r3, #2
 800292e:	f8a4 3110 	strh.w	r3, [r4, #272]	; 0x110
        updateTextPosition();
 8002932:	9803      	ldr	r0, [sp, #12]
 8002934:	9309      	str	r3, [sp, #36]	; 0x24
 8002936:	f7ff feb1 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
 800293a:	462a      	mov	r2, r5
 800293c:	4629      	mov	r1, r5
 800293e:	4630      	mov	r0, r6
 8002940:	f7ff fefa 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
 8002944:	462a      	mov	r2, r5
        color = col;
 8002946:	f8c4 0114 	str.w	r0, [r4, #276]	; 0x114
 800294a:	4629      	mov	r1, r5
 800294c:	4630      	mov	r0, r6
 800294e:	f7ff fef3 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel2.setXY(35, 59);
 8002952:	223b      	movs	r2, #59	; 0x3b
        colorPressed = col;
 8002954:	f8c4 0118 	str.w	r0, [r4, #280]	; 0x118
 8002958:	2123      	movs	r1, #35	; 0x23
 800295a:	9804      	ldr	r0, [sp, #16]
 800295c:	f7ff fe2c 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
 8002960:	f04f 0a03 	mov.w	sl, #3
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
 8002964:	463a      	mov	r2, r7
 8002966:	a90b      	add	r1, sp, #44	; 0x2c
 8002968:	9804      	ldr	r0, [sp, #16]
 800296a:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800296e:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8002972:	f007 fc64 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002976:	f8a4 a158 	strh.w	sl, [r4, #344]	; 0x158
        updateTextPosition();
 800297a:	9804      	ldr	r0, [sp, #16]
 800297c:	f7ff fe8e 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel2.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
 8002980:	462a      	mov	r2, r5
 8002982:	4631      	mov	r1, r6
 8002984:	4628      	mov	r0, r5
 8002986:	f7ff fed7 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel2.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
 800298a:	462a      	mov	r2, r5
        color = col;
 800298c:	f8c4 015c 	str.w	r0, [r4, #348]	; 0x15c
 8002990:	4631      	mov	r1, r6
 8002992:	4628      	mov	r0, r5
 8002994:	f7ff fed0 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel3.setXY(35, 221);
 8002998:	22dd      	movs	r2, #221	; 0xdd
        colorPressed = col;
 800299a:	f8c4 0160 	str.w	r0, [r4, #352]	; 0x160
 800299e:	2123      	movs	r1, #35	; 0x23
 80029a0:	9805      	ldr	r0, [sp, #20]
 80029a2:	f7ff fe09 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
 80029a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80029a8:	9805      	ldr	r0, [sp, #20]
 80029aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80029ae:	a90b      	add	r1, sp, #44	; 0x2c
 80029b0:	463a      	mov	r2, r7
 80029b2:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 80029b6:	f007 fc42 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029ba:	f04f 0204 	mov.w	r2, #4
 80029be:	f8a4 21a0 	strh.w	r2, [r4, #416]	; 0x1a0
        updateTextPosition();
 80029c2:	9805      	ldr	r0, [sp, #20]
 80029c4:	f7ff fe6a 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029c8:	4632      	mov	r2, r6
 80029ca:	4631      	mov	r1, r6
 80029cc:	4630      	mov	r0, r6
 80029ce:	f7ff feb3 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel3.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029d2:	4632      	mov	r2, r6
        color = col;
 80029d4:	f8c4 01a4 	str.w	r0, [r4, #420]	; 0x1a4
 80029d8:	4631      	mov	r1, r6
 80029da:	4630      	mov	r0, r6
 80029dc:	f7ff feac 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel3.setAction(buttonCallback);
 80029e0:	f504 7322 	add.w	r3, r4, #648	; 0x288
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80029e4:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
        colorPressed = col;
 80029e8:	f8c4 01a8 	str.w	r0, [r4, #424]	; 0x1a8
    buttonWithLabel7.setXY(170, 147);
 80029ec:	2293      	movs	r2, #147	; 0x93
 80029ee:	9806      	ldr	r0, [sp, #24]
 80029f0:	21aa      	movs	r1, #170	; 0xaa
 80029f2:	f7ff fde1 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
 80029f6:	f04f 0a05 	mov.w	sl, #5
    buttonWithLabel7.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
 80029fa:	463a      	mov	r2, r7
 80029fc:	a90b      	add	r1, sp, #44	; 0x2c
 80029fe:	9806      	ldr	r0, [sp, #24]
 8002a00:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8002a04:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8002a08:	f007 fc19 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002a0c:	9806      	ldr	r0, [sp, #24]
 8002a0e:	f8a4 a1e8 	strh.w	sl, [r4, #488]	; 0x1e8
 8002a12:	f7ff fe43 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel7.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a16:	4632      	mov	r2, r6
 8002a18:	4631      	mov	r1, r6
 8002a1a:	4630      	mov	r0, r6
 8002a1c:	f7ff fe8c 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel7.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a20:	4632      	mov	r2, r6
        color = col;
 8002a22:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
 8002a26:	4631      	mov	r1, r6
 8002a28:	4630      	mov	r0, r6
 8002a2a:	f7ff fe85 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel8.setXY(95, 147);
 8002a2e:	2293      	movs	r2, #147	; 0x93
        colorPressed = col;
 8002a30:	f8c4 01f0 	str.w	r0, [r4, #496]	; 0x1f0
 8002a34:	215f      	movs	r1, #95	; 0x5f
 8002a36:	4658      	mov	r0, fp
 8002a38:	f7ff fdbe 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel8.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
 8002a3c:	463a      	mov	r2, r7
 8002a3e:	a90b      	add	r1, sp, #44	; 0x2c
 8002a40:	4658      	mov	r0, fp
 8002a42:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8002a46:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8002a4a:	f007 fbf8 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a4e:	2306      	movs	r3, #6
 8002a50:	f8a4 3230 	strh.w	r3, [r4, #560]	; 0x230
        updateTextPosition();
 8002a54:	4658      	mov	r0, fp
 8002a56:	f7ff fe21 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel8.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a5a:	4632      	mov	r2, r6
 8002a5c:	4631      	mov	r1, r6
 8002a5e:	4630      	mov	r0, r6
 8002a60:	f7ff fe6a 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel8.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a64:	4632      	mov	r2, r6
        color = col;
 8002a66:	f8c4 0234 	str.w	r0, [r4, #564]	; 0x234
 8002a6a:	4631      	mov	r1, r6
 8002a6c:	4630      	mov	r0, r6
 8002a6e:	f7ff fe63 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel9.setXY(5, 147);
 8002a72:	4651      	mov	r1, sl
        colorPressed = col;
 8002a74:	f8c4 0238 	str.w	r0, [r4, #568]	; 0x238
 8002a78:	2293      	movs	r2, #147	; 0x93
 8002a7a:	4648      	mov	r0, r9
 8002a7c:	f7ff fd9c 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel9.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
 8002a80:	463a      	mov	r2, r7
 8002a82:	a90b      	add	r1, sp, #44	; 0x2c
 8002a84:	4648      	mov	r0, r9
 8002a86:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8002a8a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8002a8e:	f007 fbd6 	bl	800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a92:	2307      	movs	r3, #7
 8002a94:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
        updateTextPosition();
 8002a98:	4648      	mov	r0, r9
 8002a9a:	f7ff fdff 	bl	800269c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel9.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a9e:	4632      	mov	r2, r6
 8002aa0:	4631      	mov	r1, r6
 8002aa2:	4630      	mov	r0, r6
 8002aa4:	f7ff fe48 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonWithLabel9.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002aa8:	4632      	mov	r2, r6
        color = col;
 8002aaa:	f8c4 027c 	str.w	r0, [r4, #636]	; 0x27c
 8002aae:	4631      	mov	r1, r6
 8002ab0:	4630      	mov	r0, r6
 8002ab2:	f7ff fe41 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002ab6:	1d25      	adds	r5, r4, #4
        colorPressed = col;
 8002ab8:	f8c4 0280 	str.w	r0, [r4, #640]	; 0x280
 8002abc:	9908      	ldr	r1, [sp, #32]
 8002abe:	4628      	mov	r0, r5
 8002ac0:	f005 ff5c 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ac4:	9902      	ldr	r1, [sp, #8]
 8002ac6:	4628      	mov	r0, r5
 8002ac8:	f005 ff58 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002acc:	9907      	ldr	r1, [sp, #28]
 8002ace:	4628      	mov	r0, r5
 8002ad0:	f005 ff54 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ad4:	9903      	ldr	r1, [sp, #12]
 8002ad6:	4628      	mov	r0, r5
 8002ad8:	f005 ff50 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002adc:	9904      	ldr	r1, [sp, #16]
 8002ade:	4628      	mov	r0, r5
 8002ae0:	f005 ff4c 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002ae4:	9905      	ldr	r1, [sp, #20]
 8002ae6:	4628      	mov	r0, r5
 8002ae8:	f005 ff48 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002aec:	9906      	ldr	r1, [sp, #24]
 8002aee:	4628      	mov	r0, r5
 8002af0:	f005 ff44 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002af4:	4659      	mov	r1, fp
 8002af6:	4628      	mov	r0, r5
 8002af8:	f005 ff40 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002afc:	4628      	mov	r0, r5
 8002afe:	4649      	mov	r1, r9
 8002b00:	f005 ff3c 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002b04:	4620      	mov	r0, r4
 8002b06:	b00f      	add	sp, #60	; 0x3c
 8002b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b0c:	0801c018 	.word	0x0801c018
 8002b10:	0801cf44 	.word	0x0801cf44
 8002b14:	0801ce98 	.word	0x0801ce98
 8002b18:	0801b994 	.word	0x0801b994
 8002b1c:	0801be9c 	.word	0x0801be9c
 8002b20:	08002685 	.word	0x08002685

08002b24 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8002b24:	4770      	bx	lr

08002b26 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 8002b26:	4770      	bx	lr

08002b28 <_ZN15Screen2ViewBaseD0Ev>:
 8002b28:	b510      	push	{r4, lr}
 8002b2a:	21f0      	movs	r1, #240	; 0xf0
 8002b2c:	4604      	mov	r4, r0
 8002b2e:	f017 fbf5 	bl	801a31c <_ZdlPvj>
 8002b32:	4620      	mov	r0, r4
 8002b34:	bd10      	pop	{r4, pc}
	...

08002b38 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase()
 8002b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b3c:	4604      	mov	r4, r0
 8002b3e:	b085      	sub	sp, #20
 8002b40:	46a0      	mov	r8, r4
 8002b42:	2500      	movs	r5, #0
 8002b44:	f00a f9e2 	bl	800cf0c <_ZN8touchgfx6ScreenC1Ev>
 8002b48:	4b65      	ldr	r3, [pc, #404]	; (8002ce0 <_ZN15Screen2ViewBaseC1Ev+0x1a8>)
 8002b4a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002b4c:	f104 0670 	add.w	r6, r4, #112	; 0x70
 8002b50:	f848 3b40 	str.w	r3, [r8], #64
 8002b54:	f04f 0901 	mov.w	r9, #1
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 8002b58:	4b62      	ldr	r3, [pc, #392]	; (8002ce4 <_ZN15Screen2ViewBaseC1Ev+0x1ac>)
        this->x = x;
 8002b5a:	f8a4 5044 	strh.w	r5, [r4, #68]	; 0x44
 8002b5e:	f04f 0bff 	mov.w	fp, #255	; 0xff
        this->y = y;
 8002b62:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
        this->width = width;
 8002b66:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
        this->height = height;
 8002b6a:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
        this->x = 0;
 8002b6e:	f8a4 504c 	strh.w	r5, [r4, #76]	; 0x4c
        this->y = 0;
 8002b72:	f8a4 504e 	strh.w	r5, [r4, #78]	; 0x4e
        this->width = 0;
 8002b76:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
        this->height = 0;
 8002b7a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8002b7e:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8002b82:	65e5      	str	r5, [r4, #92]	; 0x5c
 8002b84:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8002b88:	f884 9065 	strb.w	r9, [r4, #101]	; 0x65
 8002b8c:	6423      	str	r3, [r4, #64]	; 0x40
        color = col;
 8002b8e:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b90:	f884 506c 	strb.w	r5, [r4, #108]	; 0x6c
 8002b94:	f884 b066 	strb.w	fp, [r4, #102]	; 0x66
 8002b98:	4630      	mov	r0, r6
 8002b9a:	f006 ff33 	bl	8009a04 <_ZN8touchgfx13ScalableImageC1Ev>
        : typedTextId(id)
 8002b9e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ba2:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8002ba6:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002baa:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002bae:	4b4e      	ldr	r3, [pc, #312]	; (8002ce8 <_ZN15Screen2ViewBaseC1Ev+0x1b0>)
 8002bb0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8002bb4:	f8df a154 	ldr.w	sl, [pc, #340]	; 8002d0c <_ZN15Screen2ViewBaseC1Ev+0x1d4>
        this->x = x;
 8002bb8:	f8a4 50a0 	strh.w	r5, [r4, #160]	; 0xa0
    __background.setPosition(0, 0, 240, 320);
 8002bbc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002bc0:	462a      	mov	r2, r5
 8002bc2:	4629      	mov	r1, r5
        this->y = y;
 8002bc4:	f8a4 50a2 	strh.w	r5, [r4, #162]	; 0xa2
        this->width = width;
 8002bc8:	f8a4 50a4 	strh.w	r5, [r4, #164]	; 0xa4
        this->height = height;
 8002bcc:	f8a4 50a6 	strh.w	r5, [r4, #166]	; 0xa6
        this->x = 0;
 8002bd0:	f8a4 50a8 	strh.w	r5, [r4, #168]	; 0xa8
        this->y = 0;
 8002bd4:	f8a4 50aa 	strh.w	r5, [r4, #170]	; 0xaa
        this->width = 0;
 8002bd8:	f8a4 50ac 	strh.w	r5, [r4, #172]	; 0xac
        this->height = 0;
 8002bdc:	f8a4 50ae 	strh.w	r5, [r4, #174]	; 0xae
 8002be0:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 8002be4:	f8c4 50b8 	str.w	r5, [r4, #184]	; 0xb8
 8002be8:	f884 50c0 	strb.w	r5, [r4, #192]	; 0xc0
 8002bec:	f884 90c1 	strb.w	r9, [r4, #193]	; 0xc1
        color = col;
 8002bf0:	f8c4 50cc 	str.w	r5, [r4, #204]	; 0xcc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002bf4:	f884 50d4 	strb.w	r5, [r4, #212]	; 0xd4
 8002bf8:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8002bfc:	f8c4 50d8 	str.w	r5, [r4, #216]	; 0xd8
 8002c00:	9300      	str	r3, [sp, #0]
 8002c02:	4640      	mov	r0, r8
 8002c04:	23f0      	movs	r3, #240	; 0xf0
 8002c06:	f8c4 a0c4 	str.w	sl, [r4, #196]	; 0xc4
 8002c0a:	f7ff fcbd 	bl	8002588 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c0e:	f10d 0910 	add.w	r9, sp, #16
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002c12:	462a      	mov	r2, r5
 8002c14:	4629      	mov	r1, r5
 8002c16:	4628      	mov	r0, r5
 8002c18:	f7ff fd8e 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002c1c:	2305      	movs	r3, #5
 8002c1e:	f829 3d08 	strh.w	r3, [r9, #-8]!
        this->color = color;
 8002c22:	66a0      	str	r0, [r4, #104]	; 0x68
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_THERMOMETER_PNG_ICON_19_ID));
 8002c24:	4649      	mov	r1, r9
 8002c26:	4630      	mov	r0, r6
 8002c28:	f006 fea1 	bl	800996e <_ZN8touchgfx13ScalableImage9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(39, 20, 162, 280);
 8002c2c:	f44f 738c 	mov.w	r3, #280	; 0x118
 8002c30:	2214      	movs	r2, #20
 8002c32:	9300      	str	r3, [sp, #0]
 8002c34:	2127      	movs	r1, #39	; 0x27
 8002c36:	23a2      	movs	r3, #162	; 0xa2
 8002c38:	4630      	mov	r0, r6
 8002c3a:	f7ff fca5 	bl	8002588 <_ZN8touchgfx8Drawable11setPositionEssss>
Screen2ViewBase::Screen2ViewBase()
 8002c3e:	f104 079c 	add.w	r7, r4, #156	; 0x9c
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002c42:	4629      	mov	r1, r5
 8002c44:	4630      	mov	r0, r6
 8002c46:	f006 fe8b 	bl	8009960 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    textArea1.setXY(32, 229);
 8002c4a:	22e5      	movs	r2, #229	; 0xe5
 8002c4c:	2120      	movs	r1, #32
 8002c4e:	4638      	mov	r0, r7
 8002c50:	f7ff fcb2 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
 8002c54:	462a      	mov	r2, r5
 8002c56:	4629      	mov	r1, r5
 8002c58:	4658      	mov	r0, fp
 8002c5a:	f7ff fd6d 	bl	8002738 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c5e:	4b23      	ldr	r3, [pc, #140]	; (8002cec <_ZN15Screen2ViewBaseC1Ev+0x1b4>)
        linespace = space;
 8002c60:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 8002c64:	681b      	ldr	r3, [r3, #0]
        this->color = color;
 8002c66:	f8c4 00cc 	str.w	r0, [r4, #204]	; 0xcc
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
 8002c6a:	f104 05dc 	add.w	r5, r4, #220	; 0xdc
 8002c6e:	b92b      	cbnz	r3, 8002c7c <_ZN15Screen2ViewBaseC1Ev+0x144>
 8002c70:	4b1f      	ldr	r3, [pc, #124]	; (8002cf0 <_ZN15Screen2ViewBaseC1Ev+0x1b8>)
 8002c72:	4a20      	ldr	r2, [pc, #128]	; (8002cf4 <_ZN15Screen2ViewBaseC1Ev+0x1bc>)
 8002c74:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c76:	4820      	ldr	r0, [pc, #128]	; (8002cf8 <_ZN15Screen2ViewBaseC1Ev+0x1c0>)
 8002c78:	f017 fb7c 	bl	801a374 <__assert_func>
 8002c7c:	4b1f      	ldr	r3, [pc, #124]	; (8002cfc <_ZN15Screen2ViewBaseC1Ev+0x1c4>)
 8002c7e:	881b      	ldrh	r3, [r3, #0]
 8002c80:	2b09      	cmp	r3, #9
 8002c82:	d803      	bhi.n	8002c8c <_ZN15Screen2ViewBaseC1Ev+0x154>
 8002c84:	4b1e      	ldr	r3, [pc, #120]	; (8002d00 <_ZN15Screen2ViewBaseC1Ev+0x1c8>)
 8002c86:	4a1b      	ldr	r2, [pc, #108]	; (8002cf4 <_ZN15Screen2ViewBaseC1Ev+0x1bc>)
 8002c88:	21b2      	movs	r1, #178	; 0xb2
 8002c8a:	e7f4      	b.n	8002c76 <_ZN15Screen2ViewBaseC1Ev+0x13e>
        return texts->getText(typedTextId);
 8002c8c:	4b1d      	ldr	r3, [pc, #116]	; (8002d04 <_ZN15Screen2ViewBaseC1Ev+0x1cc>)
 8002c8e:	2109      	movs	r1, #9
 8002c90:	6818      	ldr	r0, [r3, #0]
 8002c92:	f000 f997 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 8002c96:	4a1c      	ldr	r2, [pc, #112]	; (8002d08 <_ZN15Screen2ViewBaseC1Ev+0x1d0>)
 8002c98:	4603      	mov	r3, r0
 8002c9a:	210a      	movs	r1, #10
 8002c9c:	4628      	mov	r0, r5
 8002c9e:	f00b fdc3 	bl	800e828 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002ca2:	f8c4 50d8 	str.w	r5, [r4, #216]	; 0xd8
    textArea1.resizeToCurrentText();
 8002ca6:	4638      	mov	r0, r7
 8002ca8:	f007 fa5a 	bl	800a160 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8002cac:	1d25      	adds	r5, r4, #4
        : typedTextId(id)
 8002cae:	2308      	movs	r3, #8
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 8002cb0:	4649      	mov	r1, r9
 8002cb2:	4638      	mov	r0, r7
 8002cb4:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002cb8:	f8cd a008 	str.w	sl, [sp, #8]
 8002cbc:	f007 fa7a 	bl	800a1b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 8002cc0:	4641      	mov	r1, r8
 8002cc2:	4628      	mov	r0, r5
 8002cc4:	f005 fe5a 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002cc8:	4631      	mov	r1, r6
 8002cca:	4628      	mov	r0, r5
 8002ccc:	f005 fe56 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002cd0:	4628      	mov	r0, r5
 8002cd2:	4639      	mov	r1, r7
 8002cd4:	f005 fe52 	bl	800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002cd8:	4620      	mov	r0, r4
 8002cda:	b005      	add	sp, #20
 8002cdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ce0:	0801c0dc 	.word	0x0801c0dc
 8002ce4:	0801cf44 	.word	0x0801cf44
 8002ce8:	0801d044 	.word	0x0801d044
 8002cec:	2001211c 	.word	0x2001211c
 8002cf0:	0801beac 	.word	0x0801beac
 8002cf4:	0801c108 	.word	0x0801c108
 8002cf8:	0801beee 	.word	0x0801beee
 8002cfc:	20012120 	.word	0x20012120
 8002d00:	0801bf35 	.word	0x0801bf35
 8002d04:	20012128 	.word	0x20012128
 8002d08:	0801c0ce 	.word	0x0801c0ce
 8002d0c:	0801b994 	.word	0x0801b994

08002d10 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 19, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0);
 8002d10:	4770      	bx	lr
	...

08002d14 <_Z23getFont_verdana_15_4bppv>:
{
 8002d14:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 19, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0);
 8002d16:	4d15      	ldr	r5, [pc, #84]	; (8002d6c <_Z23getFont_verdana_15_4bppv+0x58>)
 8002d18:	782c      	ldrb	r4, [r5, #0]
 8002d1a:	f3bf 8f5b 	dmb	ish
 8002d1e:	f014 0401 	ands.w	r4, r4, #1
{
 8002d22:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 19, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0);
 8002d24:	d11f      	bne.n	8002d66 <_Z23getFont_verdana_15_4bppv+0x52>
 8002d26:	4628      	mov	r0, r5
 8002d28:	f017 fafa 	bl	801a320 <__cxa_guard_acquire>
 8002d2c:	b1d8      	cbz	r0, 8002d66 <_Z23getFont_verdana_15_4bppv+0x52>
 8002d2e:	233f      	movs	r3, #63	; 0x3f
 8002d30:	9307      	str	r3, [sp, #28]
 8002d32:	4b0f      	ldr	r3, [pc, #60]	; (8002d70 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8002d34:	9306      	str	r3, [sp, #24]
 8002d36:	4b0f      	ldr	r3, [pc, #60]	; (8002d74 <_Z23getFont_verdana_15_4bppv+0x60>)
 8002d38:	9305      	str	r3, [sp, #20]
 8002d3a:	2301      	movs	r3, #1
 8002d3c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002d40:	9302      	str	r3, [sp, #8]
 8002d42:	2204      	movs	r2, #4
 8002d44:	2303      	movs	r3, #3
 8002d46:	e9cd 3200 	strd	r3, r2, [sp]
 8002d4a:	490b      	ldr	r1, [pc, #44]	; (8002d78 <_Z23getFont_verdana_15_4bppv+0x64>)
 8002d4c:	480b      	ldr	r0, [pc, #44]	; (8002d7c <_Z23getFont_verdana_15_4bppv+0x68>)
 8002d4e:	230f      	movs	r3, #15
 8002d50:	2213      	movs	r2, #19
 8002d52:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002d56:	f7ff fbef 	bl	8002538 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002d5a:	4628      	mov	r0, r5
 8002d5c:	f017 faec 	bl	801a338 <__cxa_guard_release>
 8002d60:	4807      	ldr	r0, [pc, #28]	; (8002d80 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8002d62:	f017 fb25 	bl	801a3b0 <atexit>
    return verdana_15_4bpp;
}
 8002d66:	4805      	ldr	r0, [pc, #20]	; (8002d7c <_Z23getFont_verdana_15_4bppv+0x68>)
 8002d68:	b00b      	add	sp, #44	; 0x2c
 8002d6a:	bd30      	pop	{r4, r5, pc}
 8002d6c:	200012fc 	.word	0x200012fc
 8002d70:	0801f804 	.word	0x0801f804
 8002d74:	0801c138 	.word	0x0801c138
 8002d78:	0801f4fc 	.word	0x0801f4fc
 8002d7c:	20001300 	.word	0x20001300
 8002d80:	08002d11 	.word	0x08002d11

08002d84 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 35, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002d84:	4770      	bx	lr
	...

08002d88 <_Z23getFont_verdana_20_4bppv>:
{
 8002d88:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 35, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002d8a:	4d15      	ldr	r5, [pc, #84]	; (8002de0 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002d8c:	782c      	ldrb	r4, [r5, #0]
 8002d8e:	f3bf 8f5b 	dmb	ish
 8002d92:	f014 0401 	ands.w	r4, r4, #1
{
 8002d96:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 35, 20, 4, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002d98:	d11e      	bne.n	8002dd8 <_Z23getFont_verdana_20_4bppv+0x50>
 8002d9a:	4628      	mov	r0, r5
 8002d9c:	f017 fac0 	bl	801a320 <__cxa_guard_acquire>
 8002da0:	b1d0      	cbz	r0, 8002dd8 <_Z23getFont_verdana_20_4bppv+0x50>
 8002da2:	233f      	movs	r3, #63	; 0x3f
 8002da4:	9307      	str	r3, [sp, #28]
 8002da6:	4b0f      	ldr	r3, [pc, #60]	; (8002de4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002da8:	9306      	str	r3, [sp, #24]
 8002daa:	4b0f      	ldr	r3, [pc, #60]	; (8002de8 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002dac:	9305      	str	r3, [sp, #20]
 8002dae:	2301      	movs	r3, #1
 8002db0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002db4:	9302      	str	r3, [sp, #8]
 8002db6:	2304      	movs	r3, #4
 8002db8:	e9cd 3300 	strd	r3, r3, [sp]
 8002dbc:	2223      	movs	r2, #35	; 0x23
 8002dbe:	2314      	movs	r3, #20
 8002dc0:	490a      	ldr	r1, [pc, #40]	; (8002dec <_Z23getFont_verdana_20_4bppv+0x64>)
 8002dc2:	480b      	ldr	r0, [pc, #44]	; (8002df0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002dc4:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002dc8:	f7ff fbb6 	bl	8002538 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002dcc:	4628      	mov	r0, r5
 8002dce:	f017 fab3 	bl	801a338 <__cxa_guard_release>
 8002dd2:	4808      	ldr	r0, [pc, #32]	; (8002df4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002dd4:	f017 faec 	bl	801a3b0 <atexit>
    return verdana_20_4bpp;
}
 8002dd8:	4805      	ldr	r0, [pc, #20]	; (8002df0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002dda:	b00b      	add	sp, #44	; 0x2c
 8002ddc:	bd30      	pop	{r4, r5, pc}
 8002dde:	bf00      	nop
 8002de0:	20001324 	.word	0x20001324
 8002de4:	0801f808 	.word	0x0801f808
 8002de8:	0801c13c 	.word	0x0801c13c
 8002dec:	0801f608 	.word	0x0801f608
 8002df0:	20001328 	.word	0x20001328
 8002df4:	08002d85 	.word	0x08002d85

08002df8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002df8:	4770      	bx	lr
	...

08002dfc <_Z23getFont_verdana_40_4bppv>:
{
 8002dfc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002dfe:	4d14      	ldr	r5, [pc, #80]	; (8002e50 <_Z23getFont_verdana_40_4bppv+0x54>)
 8002e00:	782c      	ldrb	r4, [r5, #0]
 8002e02:	f3bf 8f5b 	dmb	ish
 8002e06:	f014 0401 	ands.w	r4, r4, #1
{
 8002e0a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002e0c:	d11d      	bne.n	8002e4a <_Z23getFont_verdana_40_4bppv+0x4e>
 8002e0e:	4628      	mov	r0, r5
 8002e10:	f017 fa86 	bl	801a320 <__cxa_guard_acquire>
 8002e14:	b1c8      	cbz	r0, 8002e4a <_Z23getFont_verdana_40_4bppv+0x4e>
 8002e16:	233f      	movs	r3, #63	; 0x3f
 8002e18:	9307      	str	r3, [sp, #28]
 8002e1a:	4b0e      	ldr	r3, [pc, #56]	; (8002e54 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002e1c:	9306      	str	r3, [sp, #24]
 8002e1e:	4b0e      	ldr	r3, [pc, #56]	; (8002e58 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002e20:	490e      	ldr	r1, [pc, #56]	; (8002e5c <_Z23getFont_verdana_40_4bppv+0x60>)
 8002e22:	9403      	str	r4, [sp, #12]
 8002e24:	2201      	movs	r2, #1
 8002e26:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002e2a:	2304      	movs	r3, #4
 8002e2c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002e30:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002e34:	2328      	movs	r3, #40	; 0x28
 8002e36:	9400      	str	r4, [sp, #0]
 8002e38:	4809      	ldr	r0, [pc, #36]	; (8002e60 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002e3a:	f7ff fb7d 	bl	8002538 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002e3e:	4628      	mov	r0, r5
 8002e40:	f017 fa7a 	bl	801a338 <__cxa_guard_release>
 8002e44:	4807      	ldr	r0, [pc, #28]	; (8002e64 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002e46:	f017 fab3 	bl	801a3b0 <atexit>
    return verdana_40_4bpp;
}
 8002e4a:	4805      	ldr	r0, [pc, #20]	; (8002e60 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002e4c:	b00b      	add	sp, #44	; 0x2c
 8002e4e:	bd30      	pop	{r4, r5, pc}
 8002e50:	2000134c 	.word	0x2000134c
 8002e54:	0801f85c 	.word	0x0801f85c
 8002e58:	0801c140 	.word	0x0801c140
 8002e5c:	0801f7f4 	.word	0x0801f7f4
 8002e60:	20001350 	.word	0x20001350
 8002e64:	08002df9 	.word	0x08002df9

08002e68 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002e68:	2000      	movs	r0, #0
 8002e6a:	4770      	bx	lr

08002e6c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002e6c:	b40e      	push	{r1, r2, r3}
 8002e6e:	b503      	push	{r0, r1, lr}
 8002e70:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002e72:	2100      	movs	r1, #0
{
 8002e74:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002e78:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002e7a:	f009 fbdb 	bl	800c634 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002e7e:	b002      	add	sp, #8
 8002e80:	f85d eb04 	ldr.w	lr, [sp], #4
 8002e84:	b003      	add	sp, #12
 8002e86:	4770      	bx	lr

08002e88 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002e88:	b40c      	push	{r2, r3}
 8002e8a:	b507      	push	{r0, r1, r2, lr}
 8002e8c:	ab04      	add	r3, sp, #16
 8002e8e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002e92:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002e94:	f009 fbce 	bl	800c634 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002e98:	b003      	add	sp, #12
 8002e9a:	f85d eb04 	ldr.w	lr, [sp], #4
 8002e9e:	b002      	add	sp, #8
 8002ea0:	4770      	bx	lr
	...

08002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002ea4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002ea6:	b510      	push	{r4, lr}
 8002ea8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002eaa:	b373      	cbz	r3, 8002f0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002eac:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002eae:	b92b      	cbnz	r3, 8002ebc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002eb0:	4b18      	ldr	r3, [pc, #96]	; (8002f14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002eb2:	4a19      	ldr	r2, [pc, #100]	; (8002f18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002eb4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002eb6:	4819      	ldr	r0, [pc, #100]	; (8002f1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002eb8:	f017 fa5c 	bl	801a374 <__assert_func>
            return buffer[pos];
 8002ebc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002ebe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002ec2:	8b5b      	ldrh	r3, [r3, #26]
 8002ec4:	b30b      	cbz	r3, 8002f0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002ec6:	f00a fef5 	bl	800dcb4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002eca:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002ecc:	2b01      	cmp	r3, #1
 8002ece:	d803      	bhi.n	8002ed8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002ed0:	4b13      	ldr	r3, [pc, #76]	; (8002f20 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002ed2:	4a14      	ldr	r2, [pc, #80]	; (8002f24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002ed4:	21c5      	movs	r1, #197	; 0xc5
 8002ed6:	e7ee      	b.n	8002eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002ed8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002eda:	1c53      	adds	r3, r2, #1
 8002edc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002ede:	2b09      	cmp	r3, #9
 8002ee0:	4619      	mov	r1, r3
 8002ee2:	bf88      	it	hi
 8002ee4:	f1a3 010a 	subhi.w	r1, r3, #10
 8002ee8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002eec:	f640 103f 	movw	r0, #2367	; 0x93f
 8002ef0:	8b49      	ldrh	r1, [r1, #26]
 8002ef2:	4281      	cmp	r1, r0
 8002ef4:	d109      	bne.n	8002f0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002ef6:	2b0a      	cmp	r3, #10
 8002ef8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002efc:	bf28      	it	cs
 8002efe:	2300      	movcs	r3, #0
 8002f00:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002f04:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002f06:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002f08:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002f0a:	4620      	mov	r0, r4
}
 8002f0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002f10:	f00a bdb4 	b.w	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002f14:	0801c144 	.word	0x0801c144
 8002f18:	0801c277 	.word	0x0801c277
 8002f1c:	0801c14d 	.word	0x0801c14d
 8002f20:	0801c197 	.word	0x0801c197
 8002f24:	0801c1a5 	.word	0x0801c1a5

08002f28 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002f28:	f00a bd62 	b.w	800d9f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002f2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002f2c:	b510      	push	{r4, lr}
 8002f2e:	b086      	sub	sp, #24
 8002f30:	ac02      	add	r4, sp, #8
 8002f32:	e884 0006 	stmia.w	r4, {r1, r2}
 8002f36:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002f38:	ab0a      	add	r3, sp, #40	; 0x28
 8002f3a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002f3c:	9301      	str	r3, [sp, #4]
 8002f3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002f40:	9300      	str	r3, [sp, #0]
 8002f42:	4621      	mov	r1, r4
 8002f44:	9b08      	ldr	r3, [sp, #32]
 8002f46:	f008 f826 	bl	800af96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002f4a:	b006      	add	sp, #24
 8002f4c:	bd10      	pop	{r4, pc}
	...

08002f50 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002f50:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002f52:	b9d8      	cbnz	r0, 8002f8c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8002f54:	4b11      	ldr	r3, [pc, #68]	; (8002f9c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8002f56:	4812      	ldr	r0, [pc, #72]	; (8002fa0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	4912      	ldr	r1, [pc, #72]	; (8002fa4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002f5c:	b1bb      	cbz	r3, 8002f8e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002f5e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002f60:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002f62:	441a      	add	r2, r3
 8002f64:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002f66:	685a      	ldr	r2, [r3, #4]
 8002f68:	441a      	add	r2, r3
 8002f6a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002f6c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 8002f6e:	b16c      	cbz	r4, 8002f8c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8002f70:	4b0d      	ldr	r3, [pc, #52]	; (8002fa8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002f72:	2200      	movs	r2, #0
 8002f74:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002f76:	f000 f835 	bl	8002fe4 <_ZN17TypedTextDatabase8getFontsEv>
 8002f7a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002f7c:	f000 f830 	bl	8002fe0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002f80:	4b0a      	ldr	r3, [pc, #40]	; (8002fac <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002f82:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002f84:	4b0a      	ldr	r3, [pc, #40]	; (8002fb0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002f86:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002f88:	4b0a      	ldr	r3, [pc, #40]	; (8002fb4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002f8a:	8018      	strh	r0, [r3, #0]
    }
}
 8002f8c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 8002f8e:	4b0a      	ldr	r3, [pc, #40]	; (8002fb8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002f90:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002f92:	4b0a      	ldr	r3, [pc, #40]	; (8002fbc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002f94:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002f96:	4b0a      	ldr	r3, [pc, #40]	; (8002fc0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002f98:	681c      	ldr	r4, [r3, #0]
 8002f9a:	e7e8      	b.n	8002f6e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 8002f9c:	20001374 	.word	0x20001374
 8002fa0:	20001378 	.word	0x20001378
 8002fa4:	2000137c 	.word	0x2000137c
 8002fa8:	20001380 	.word	0x20001380
 8002fac:	2001211c 	.word	0x2001211c
 8002fb0:	20012124 	.word	0x20012124
 8002fb4:	20012120 	.word	0x20012120
 8002fb8:	0801f888 	.word	0x0801f888
 8002fbc:	0801f860 	.word	0x0801f860
 8002fc0:	0801f964 	.word	0x0801f964

08002fc4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002fc4:	4b04      	ldr	r3, [pc, #16]	; (8002fd8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002fcc:	4b03      	ldr	r3, [pc, #12]	; (8002fdc <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002fce:	681b      	ldr	r3, [r3, #0]
}
 8002fd0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002fd4:	4770      	bx	lr
 8002fd6:	bf00      	nop
 8002fd8:	2000137c 	.word	0x2000137c
 8002fdc:	20001378 	.word	0x20001378

08002fe0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002fe0:	200a      	movs	r0, #10
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002fe4:	4800      	ldr	r0, [pc, #0]	; (8002fe8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002fe6:	4770      	bx	lr
 8002fe8:	20001384 	.word	0x20001384

08002fec <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_15_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8002fec:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002fee:	f7ff fecb 	bl	8002d88 <_Z23getFont_verdana_20_4bppv>
};
 8002ff2:	4c04      	ldr	r4, [pc, #16]	; (8003004 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002ff4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002ff6:	f7ff ff01 	bl	8002dfc <_Z23getFont_verdana_40_4bppv>
};
 8002ffa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_15_4bpp())
 8002ffc:	f7ff fe8a 	bl	8002d14 <_Z23getFont_verdana_15_4bppv>
};
 8003000:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 8003002:	bd10      	pop	{r4, pc}
 8003004:	20001384 	.word	0x20001384

08003008 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003008:	4770      	bx	lr

0800300a <_ZN19FrontendApplicationD0Ev>:
 800300a:	b510      	push	{r4, lr}
 800300c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003010:	4604      	mov	r4, r0
 8003012:	f017 f983 	bl	801a31c <_ZdlPvj>
 8003016:	4620      	mov	r0, r4
 8003018:	bd10      	pop	{r4, pc}

0800301a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800301a:	b510      	push	{r4, lr}
 800301c:	4604      	mov	r4, r0
    {
        model.tick();
 800301e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003022:	f000 f812 	bl	800304a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003026:	4620      	mov	r0, r4
    }
 8003028:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800302c:	f008 be14 	b.w	800bc58 <_ZN8touchgfx11Application15handleTickEventEv>

08003030 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003030:	b510      	push	{r4, lr}
 8003032:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003034:	f7ff f892 	bl	800215c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003038:	4b01      	ldr	r3, [pc, #4]	; (8003040 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800303a:	6023      	str	r3, [r4, #0]
{

}
 800303c:	4620      	mov	r0, r4
 800303e:	bd10      	pop	{r4, pc}
 8003040:	0801c32c 	.word	0x0801c32c

08003044 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8003044:	2200      	movs	r2, #0
 8003046:	6002      	str	r2, [r0, #0]
{

}
 8003048:	4770      	bx	lr

0800304a <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800304a:	4770      	bx	lr

0800304c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800304c:	4770      	bx	lr

0800304e <_ZThn4_N16Screen1PresenterD1Ev>:
 800304e:	3804      	subs	r0, #4
 8003050:	4770      	bx	lr

08003052 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8003052:	4770      	bx	lr

08003054 <_ZN16Screen1PresenterD0Ev>:
 8003054:	b510      	push	{r4, lr}
 8003056:	2110      	movs	r1, #16
 8003058:	4604      	mov	r4, r0
 800305a:	f017 f95f 	bl	801a31c <_ZdlPvj>
 800305e:	4620      	mov	r0, r4
 8003060:	bd10      	pop	{r4, pc}

08003062 <_ZThn4_N16Screen1PresenterD0Ev>:
 8003062:	f1a0 0004 	sub.w	r0, r0, #4
 8003066:	e7f5      	b.n	8003054 <_ZN16Screen1PresenterD0Ev>

08003068 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8003068:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800306a:	2200      	movs	r2, #0
 800306c:	6082      	str	r2, [r0, #8]
    : view(v)
 800306e:	4a04      	ldr	r2, [pc, #16]	; (8003080 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8003070:	60c1      	str	r1, [r0, #12]
 8003072:	f102 0408 	add.w	r4, r2, #8
 8003076:	3220      	adds	r2, #32
 8003078:	6004      	str	r4, [r0, #0]
 800307a:	6042      	str	r2, [r0, #4]
}
 800307c:	bd10      	pop	{r4, pc}
 800307e:	bf00      	nop
 8003080:	0801c368 	.word	0x0801c368

08003084 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003084:	4770      	bx	lr

08003086 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003086:	4770      	bx	lr

08003088 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003088:	f7ff bad0 	b.w	800262c <_ZN15Screen1ViewBase11setupScreenEv>

0800308c <_ZN11Screen1ViewD0Ev>:
 800308c:	b510      	push	{r4, lr}
 800308e:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003092:	4604      	mov	r4, r0
 8003094:	f017 f942 	bl	801a31c <_ZdlPvj>
 8003098:	4620      	mov	r0, r4
 800309a:	bd10      	pop	{r4, pc}

0800309c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800309c:	b510      	push	{r4, lr}
 800309e:	4604      	mov	r4, r0
 80030a0:	f7ff fb6c 	bl	800277c <_ZN15Screen1ViewBaseC1Ev>
 80030a4:	4b01      	ldr	r3, [pc, #4]	; (80030ac <_ZN11Screen1ViewC1Ev+0x10>)
 80030a6:	6023      	str	r3, [r4, #0]
}
 80030a8:	4620      	mov	r0, r4
 80030aa:	bd10      	pop	{r4, pc}
 80030ac:	0801c398 	.word	0x0801c398

080030b0 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80030b0:	4770      	bx	lr

080030b2 <_ZThn4_N16Screen2PresenterD1Ev>:
 80030b2:	3804      	subs	r0, #4
 80030b4:	4770      	bx	lr

080030b6 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80030b6:	4770      	bx	lr

080030b8 <_ZN16Screen2PresenterD0Ev>:
 80030b8:	b510      	push	{r4, lr}
 80030ba:	2110      	movs	r1, #16
 80030bc:	4604      	mov	r4, r0
 80030be:	f017 f92d 	bl	801a31c <_ZdlPvj>
 80030c2:	4620      	mov	r0, r4
 80030c4:	bd10      	pop	{r4, pc}

080030c6 <_ZThn4_N16Screen2PresenterD0Ev>:
 80030c6:	f1a0 0004 	sub.w	r0, r0, #4
 80030ca:	e7f5      	b.n	80030b8 <_ZN16Screen2PresenterD0Ev>

080030cc <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 80030cc:	b510      	push	{r4, lr}
 80030ce:	2200      	movs	r2, #0
 80030d0:	6082      	str	r2, [r0, #8]
    : view(v)
 80030d2:	4a04      	ldr	r2, [pc, #16]	; (80030e4 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 80030d4:	60c1      	str	r1, [r0, #12]
 80030d6:	f102 0408 	add.w	r4, r2, #8
 80030da:	3220      	adds	r2, #32
 80030dc:	6004      	str	r4, [r0, #0]
 80030de:	6042      	str	r2, [r0, #4]
}
 80030e0:	bd10      	pop	{r4, pc}
 80030e2:	bf00      	nop
 80030e4:	0801c3c4 	.word	0x0801c3c4

080030e8 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 80030e8:	4770      	bx	lr

080030ea <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 80030ea:	4770      	bx	lr

080030ec <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 80030ec:	f7ff bd1b 	b.w	8002b26 <_ZN15Screen2ViewBase11setupScreenEv>

080030f0 <_ZN11Screen2ViewD0Ev>:
 80030f0:	b510      	push	{r4, lr}
 80030f2:	21f0      	movs	r1, #240	; 0xf0
 80030f4:	4604      	mov	r4, r0
 80030f6:	f017 f911 	bl	801a31c <_ZdlPvj>
 80030fa:	4620      	mov	r0, r4
 80030fc:	bd10      	pop	{r4, pc}
	...

08003100 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8003100:	b510      	push	{r4, lr}
 8003102:	4604      	mov	r4, r0
 8003104:	f7ff fd18 	bl	8002b38 <_ZN15Screen2ViewBaseC1Ev>
 8003108:	4b01      	ldr	r3, [pc, #4]	; (8003110 <_ZN11Screen2ViewC1Ev+0x10>)
 800310a:	6023      	str	r3, [r4, #0]
}
 800310c:	4620      	mov	r0, r4
 800310e:	bd10      	pop	{r4, pc}
 8003110:	0801c3f4 	.word	0x0801c3f4

08003114 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8003114:	20f0      	movs	r0, #240	; 0xf0
 8003116:	4770      	bx	lr

08003118 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003118:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800311c:	4770      	bx	lr

0800311e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800311e:	2029      	movs	r0, #41	; 0x29
 8003120:	f7fe bb8c 	b.w	800183c <LCD_IO_WriteReg>

08003124 <ili9341_DisplayOff>:
 8003124:	2028      	movs	r0, #40	; 0x28
 8003126:	f7fe bb89 	b.w	800183c <LCD_IO_WriteReg>

0800312a <ili9341_Init>:
{
 800312a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800312c:	f7fe fb5a 	bl	80017e4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8003130:	20ca      	movs	r0, #202	; 0xca
 8003132:	f7fe fb83 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003136:	20c3      	movs	r0, #195	; 0xc3
 8003138:	f7fe fb64 	bl	8001804 <LCD_IO_WriteData>
 800313c:	2008      	movs	r0, #8
 800313e:	f7fe fb61 	bl	8001804 <LCD_IO_WriteData>
 8003142:	2050      	movs	r0, #80	; 0x50
 8003144:	f7fe fb5e 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003148:	20cf      	movs	r0, #207	; 0xcf
 800314a:	f7fe fb77 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800314e:	2000      	movs	r0, #0
 8003150:	f7fe fb58 	bl	8001804 <LCD_IO_WriteData>
 8003154:	20c1      	movs	r0, #193	; 0xc1
 8003156:	f7fe fb55 	bl	8001804 <LCD_IO_WriteData>
 800315a:	2030      	movs	r0, #48	; 0x30
 800315c:	f7fe fb52 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003160:	20ed      	movs	r0, #237	; 0xed
 8003162:	f7fe fb6b 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003166:	2064      	movs	r0, #100	; 0x64
 8003168:	f7fe fb4c 	bl	8001804 <LCD_IO_WriteData>
 800316c:	2003      	movs	r0, #3
 800316e:	f7fe fb49 	bl	8001804 <LCD_IO_WriteData>
 8003172:	2012      	movs	r0, #18
 8003174:	f7fe fb46 	bl	8001804 <LCD_IO_WriteData>
 8003178:	2081      	movs	r0, #129	; 0x81
 800317a:	f7fe fb43 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800317e:	20e8      	movs	r0, #232	; 0xe8
 8003180:	f7fe fb5c 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003184:	2085      	movs	r0, #133	; 0x85
 8003186:	f7fe fb3d 	bl	8001804 <LCD_IO_WriteData>
 800318a:	2000      	movs	r0, #0
 800318c:	f7fe fb3a 	bl	8001804 <LCD_IO_WriteData>
 8003190:	2078      	movs	r0, #120	; 0x78
 8003192:	f7fe fb37 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003196:	20cb      	movs	r0, #203	; 0xcb
 8003198:	f7fe fb50 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800319c:	2039      	movs	r0, #57	; 0x39
 800319e:	f7fe fb31 	bl	8001804 <LCD_IO_WriteData>
 80031a2:	202c      	movs	r0, #44	; 0x2c
 80031a4:	f7fe fb2e 	bl	8001804 <LCD_IO_WriteData>
 80031a8:	2000      	movs	r0, #0
 80031aa:	f7fe fb2b 	bl	8001804 <LCD_IO_WriteData>
 80031ae:	2034      	movs	r0, #52	; 0x34
 80031b0:	f7fe fb28 	bl	8001804 <LCD_IO_WriteData>
 80031b4:	2002      	movs	r0, #2
 80031b6:	f7fe fb25 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031ba:	20f7      	movs	r0, #247	; 0xf7
 80031bc:	f7fe fb3e 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80031c0:	2020      	movs	r0, #32
 80031c2:	f7fe fb1f 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031c6:	20ea      	movs	r0, #234	; 0xea
 80031c8:	f7fe fb38 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80031cc:	2000      	movs	r0, #0
 80031ce:	f7fe fb19 	bl	8001804 <LCD_IO_WriteData>
 80031d2:	2000      	movs	r0, #0
 80031d4:	f7fe fb16 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031d8:	20b1      	movs	r0, #177	; 0xb1
 80031da:	f7fe fb2f 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80031de:	2000      	movs	r0, #0
 80031e0:	f7fe fb10 	bl	8001804 <LCD_IO_WriteData>
 80031e4:	201b      	movs	r0, #27
 80031e6:	f7fe fb0d 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031ea:	20b6      	movs	r0, #182	; 0xb6
 80031ec:	f7fe fb26 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80031f0:	200a      	movs	r0, #10
 80031f2:	f7fe fb07 	bl	8001804 <LCD_IO_WriteData>
 80031f6:	20a2      	movs	r0, #162	; 0xa2
 80031f8:	f7fe fb04 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031fc:	20c0      	movs	r0, #192	; 0xc0
 80031fe:	f7fe fb1d 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003202:	2010      	movs	r0, #16
 8003204:	f7fe fafe 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003208:	20c1      	movs	r0, #193	; 0xc1
 800320a:	f7fe fb17 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800320e:	2010      	movs	r0, #16
 8003210:	f7fe faf8 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003214:	20c5      	movs	r0, #197	; 0xc5
 8003216:	f7fe fb11 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800321a:	2045      	movs	r0, #69	; 0x45
 800321c:	f7fe faf2 	bl	8001804 <LCD_IO_WriteData>
 8003220:	2015      	movs	r0, #21
 8003222:	f7fe faef 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003226:	20c7      	movs	r0, #199	; 0xc7
 8003228:	f7fe fb08 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800322c:	2090      	movs	r0, #144	; 0x90
 800322e:	f7fe fae9 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003232:	2036      	movs	r0, #54	; 0x36
 8003234:	f7fe fb02 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003238:	20c8      	movs	r0, #200	; 0xc8
 800323a:	f7fe fae3 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800323e:	20f2      	movs	r0, #242	; 0xf2
 8003240:	f7fe fafc 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003244:	2000      	movs	r0, #0
 8003246:	f7fe fadd 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800324a:	20b0      	movs	r0, #176	; 0xb0
 800324c:	f7fe faf6 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003250:	20c2      	movs	r0, #194	; 0xc2
 8003252:	f7fe fad7 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003256:	20b6      	movs	r0, #182	; 0xb6
 8003258:	f7fe faf0 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800325c:	200a      	movs	r0, #10
 800325e:	f7fe fad1 	bl	8001804 <LCD_IO_WriteData>
 8003262:	20a7      	movs	r0, #167	; 0xa7
 8003264:	f7fe face 	bl	8001804 <LCD_IO_WriteData>
 8003268:	2027      	movs	r0, #39	; 0x27
 800326a:	f7fe facb 	bl	8001804 <LCD_IO_WriteData>
 800326e:	2004      	movs	r0, #4
 8003270:	f7fe fac8 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003274:	202a      	movs	r0, #42	; 0x2a
 8003276:	f7fe fae1 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800327a:	2000      	movs	r0, #0
 800327c:	f7fe fac2 	bl	8001804 <LCD_IO_WriteData>
 8003280:	2000      	movs	r0, #0
 8003282:	f7fe fabf 	bl	8001804 <LCD_IO_WriteData>
 8003286:	2000      	movs	r0, #0
 8003288:	f7fe fabc 	bl	8001804 <LCD_IO_WriteData>
 800328c:	20ef      	movs	r0, #239	; 0xef
 800328e:	f7fe fab9 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003292:	202b      	movs	r0, #43	; 0x2b
 8003294:	f7fe fad2 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003298:	2000      	movs	r0, #0
 800329a:	f7fe fab3 	bl	8001804 <LCD_IO_WriteData>
 800329e:	2000      	movs	r0, #0
 80032a0:	f7fe fab0 	bl	8001804 <LCD_IO_WriteData>
 80032a4:	2001      	movs	r0, #1
 80032a6:	f7fe faad 	bl	8001804 <LCD_IO_WriteData>
 80032aa:	203f      	movs	r0, #63	; 0x3f
 80032ac:	f7fe faaa 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032b0:	20f6      	movs	r0, #246	; 0xf6
 80032b2:	f7fe fac3 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032b6:	2001      	movs	r0, #1
 80032b8:	f7fe faa4 	bl	8001804 <LCD_IO_WriteData>
 80032bc:	2000      	movs	r0, #0
 80032be:	f7fe faa1 	bl	8001804 <LCD_IO_WriteData>
 80032c2:	2006      	movs	r0, #6
 80032c4:	f7fe fa9e 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032c8:	202c      	movs	r0, #44	; 0x2c
 80032ca:	f7fe fab7 	bl	800183c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80032ce:	20c8      	movs	r0, #200	; 0xc8
 80032d0:	f7fe fb02 	bl	80018d8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80032d4:	2026      	movs	r0, #38	; 0x26
 80032d6:	f7fe fab1 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032da:	2001      	movs	r0, #1
 80032dc:	f7fe fa92 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80032e0:	20e0      	movs	r0, #224	; 0xe0
 80032e2:	f7fe faab 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80032e6:	200f      	movs	r0, #15
 80032e8:	f7fe fa8c 	bl	8001804 <LCD_IO_WriteData>
 80032ec:	2029      	movs	r0, #41	; 0x29
 80032ee:	f7fe fa89 	bl	8001804 <LCD_IO_WriteData>
 80032f2:	2024      	movs	r0, #36	; 0x24
 80032f4:	f7fe fa86 	bl	8001804 <LCD_IO_WriteData>
 80032f8:	200c      	movs	r0, #12
 80032fa:	f7fe fa83 	bl	8001804 <LCD_IO_WriteData>
 80032fe:	200e      	movs	r0, #14
 8003300:	f7fe fa80 	bl	8001804 <LCD_IO_WriteData>
 8003304:	2009      	movs	r0, #9
 8003306:	f7fe fa7d 	bl	8001804 <LCD_IO_WriteData>
 800330a:	204e      	movs	r0, #78	; 0x4e
 800330c:	f7fe fa7a 	bl	8001804 <LCD_IO_WriteData>
 8003310:	2078      	movs	r0, #120	; 0x78
 8003312:	f7fe fa77 	bl	8001804 <LCD_IO_WriteData>
 8003316:	203c      	movs	r0, #60	; 0x3c
 8003318:	f7fe fa74 	bl	8001804 <LCD_IO_WriteData>
 800331c:	2009      	movs	r0, #9
 800331e:	f7fe fa71 	bl	8001804 <LCD_IO_WriteData>
 8003322:	2013      	movs	r0, #19
 8003324:	f7fe fa6e 	bl	8001804 <LCD_IO_WriteData>
 8003328:	2005      	movs	r0, #5
 800332a:	f7fe fa6b 	bl	8001804 <LCD_IO_WriteData>
 800332e:	2017      	movs	r0, #23
 8003330:	f7fe fa68 	bl	8001804 <LCD_IO_WriteData>
 8003334:	2011      	movs	r0, #17
 8003336:	f7fe fa65 	bl	8001804 <LCD_IO_WriteData>
 800333a:	2000      	movs	r0, #0
 800333c:	f7fe fa62 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003340:	20e1      	movs	r0, #225	; 0xe1
 8003342:	f7fe fa7b 	bl	800183c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003346:	2000      	movs	r0, #0
 8003348:	f7fe fa5c 	bl	8001804 <LCD_IO_WriteData>
 800334c:	2016      	movs	r0, #22
 800334e:	f7fe fa59 	bl	8001804 <LCD_IO_WriteData>
 8003352:	201b      	movs	r0, #27
 8003354:	f7fe fa56 	bl	8001804 <LCD_IO_WriteData>
 8003358:	2004      	movs	r0, #4
 800335a:	f7fe fa53 	bl	8001804 <LCD_IO_WriteData>
 800335e:	2011      	movs	r0, #17
 8003360:	f7fe fa50 	bl	8001804 <LCD_IO_WriteData>
 8003364:	2007      	movs	r0, #7
 8003366:	f7fe fa4d 	bl	8001804 <LCD_IO_WriteData>
 800336a:	2031      	movs	r0, #49	; 0x31
 800336c:	f7fe fa4a 	bl	8001804 <LCD_IO_WriteData>
 8003370:	2033      	movs	r0, #51	; 0x33
 8003372:	f7fe fa47 	bl	8001804 <LCD_IO_WriteData>
 8003376:	2042      	movs	r0, #66	; 0x42
 8003378:	f7fe fa44 	bl	8001804 <LCD_IO_WriteData>
 800337c:	2005      	movs	r0, #5
 800337e:	f7fe fa41 	bl	8001804 <LCD_IO_WriteData>
 8003382:	200c      	movs	r0, #12
 8003384:	f7fe fa3e 	bl	8001804 <LCD_IO_WriteData>
 8003388:	200a      	movs	r0, #10
 800338a:	f7fe fa3b 	bl	8001804 <LCD_IO_WriteData>
 800338e:	2028      	movs	r0, #40	; 0x28
 8003390:	f7fe fa38 	bl	8001804 <LCD_IO_WriteData>
 8003394:	202f      	movs	r0, #47	; 0x2f
 8003396:	f7fe fa35 	bl	8001804 <LCD_IO_WriteData>
 800339a:	200f      	movs	r0, #15
 800339c:	f7fe fa32 	bl	8001804 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80033a0:	2011      	movs	r0, #17
 80033a2:	f7fe fa4b 	bl	800183c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80033a6:	20c8      	movs	r0, #200	; 0xc8
 80033a8:	f7fe fa96 	bl	80018d8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80033ac:	2029      	movs	r0, #41	; 0x29
 80033ae:	f7fe fa45 	bl	800183c <LCD_IO_WriteReg>
 80033b2:	202c      	movs	r0, #44	; 0x2c
}
 80033b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80033b8:	f7fe ba40 	b.w	800183c <LCD_IO_WriteReg>

080033bc <ili9341_ReadID>:
{
 80033bc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80033be:	f7fe fa11 	bl	80017e4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80033c2:	2103      	movs	r1, #3
 80033c4:	20d3      	movs	r0, #211	; 0xd3
 80033c6:	f7fe fa55 	bl	8001874 <LCD_IO_ReadData>
}
 80033ca:	b280      	uxth	r0, r0
 80033cc:	bd08      	pop	{r3, pc}

080033ce <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80033ce:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80033d0:	b2c4      	uxtb	r4, r0
 80033d2:	2202      	movs	r2, #2
 80033d4:	2103      	movs	r1, #3
 80033d6:	4620      	mov	r0, r4
 80033d8:	f7fe f9bc 	bl	8001754 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80033dc:	200a      	movs	r0, #10
 80033de:	f7fe f9ff 	bl	80017e0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80033e2:	4620      	mov	r0, r4
 80033e4:	2200      	movs	r2, #0
 80033e6:	2103      	movs	r1, #3
 80033e8:	f7fe f9b4 	bl	8001754 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 80033ec:	2002      	movs	r0, #2
}
 80033ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80033f2:	f7fe b9f5 	b.w	80017e0 <IOE_Delay>

080033f6 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80033f6:	b538      	push	{r3, r4, r5, lr}
 80033f8:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80033fa:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80033fc:	f7fe f9a8 	bl	8001750 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003400:	2100      	movs	r1, #0
 8003402:	4620      	mov	r0, r4
 8003404:	f7fe f9bc 	bl	8001780 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003408:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800340a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800340c:	4620      	mov	r0, r4
 800340e:	f7fe f9b7 	bl	8001780 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003412:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003416:	b280      	uxth	r0, r0
 8003418:	bd38      	pop	{r3, r4, r5, pc}

0800341a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800341a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800341c:	b2c4      	uxtb	r4, r0
 800341e:	2140      	movs	r1, #64	; 0x40
 8003420:	4620      	mov	r0, r4
 8003422:	f7fe f9ad 	bl	8001780 <IOE_Read>
  
  if(state > 0)
 8003426:	0603      	lsls	r3, r0, #24
 8003428:	d507      	bpl.n	800343a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800342a:	214c      	movs	r1, #76	; 0x4c
 800342c:	4620      	mov	r0, r4
 800342e:	f7fe f9a7 	bl	8001780 <IOE_Read>
    {
      ret = 1;
 8003432:	3000      	adds	r0, #0
 8003434:	bf18      	it	ne
 8003436:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003438:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800343a:	2201      	movs	r2, #1
 800343c:	214b      	movs	r1, #75	; 0x4b
 800343e:	4620      	mov	r0, r4
 8003440:	f7fe f988 	bl	8001754 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003444:	4620      	mov	r0, r4
 8003446:	2200      	movs	r2, #0
 8003448:	214b      	movs	r1, #75	; 0x4b
 800344a:	f7fe f983 	bl	8001754 <IOE_Write>
  uint8_t ret = 0;
 800344e:	2000      	movs	r0, #0
 8003450:	e7f2      	b.n	8003438 <stmpe811_TS_DetectTouch+0x1e>

08003452 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8003452:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003454:	2304      	movs	r3, #4
 8003456:	b2c4      	uxtb	r4, r0
{
 8003458:	460e      	mov	r6, r1
 800345a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800345c:	21d7      	movs	r1, #215	; 0xd7
 800345e:	eb0d 0203 	add.w	r2, sp, r3
 8003462:	4620      	mov	r0, r4
 8003464:	f7fe f9a6 	bl	80017b4 <IOE_ReadMultiple>
 8003468:	9b01      	ldr	r3, [sp, #4]
 800346a:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800346c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800346e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003472:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003474:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003476:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003478:	2201      	movs	r2, #1
 800347a:	214b      	movs	r1, #75	; 0x4b
 800347c:	f7fe f96a 	bl	8001754 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003480:	2200      	movs	r2, #0
 8003482:	214b      	movs	r1, #75	; 0x4b
 8003484:	4620      	mov	r0, r4
 8003486:	f7fe f965 	bl	8001754 <IOE_Write>
}
 800348a:	b002      	add	sp, #8
 800348c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003490 <stmpe811_Init>:
{
 8003490:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8003492:	4a0a      	ldr	r2, [pc, #40]	; (80034bc <stmpe811_Init+0x2c>)
 8003494:	7813      	ldrb	r3, [r2, #0]
 8003496:	4298      	cmp	r0, r3
{
 8003498:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800349a:	d00d      	beq.n	80034b8 <stmpe811_Init+0x28>
 800349c:	7851      	ldrb	r1, [r2, #1]
 800349e:	4288      	cmp	r0, r1
 80034a0:	d00a      	beq.n	80034b8 <stmpe811_Init+0x28>
 80034a2:	b10b      	cbz	r3, 80034a8 <stmpe811_Init+0x18>
 80034a4:	b941      	cbnz	r1, 80034b8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80034a6:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80034a8:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80034aa:	f7fe f951 	bl	8001750 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80034ae:	4620      	mov	r0, r4
}
 80034b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80034b4:	f7ff bf8b 	b.w	80033ce <stmpe811_Reset>
}
 80034b8:	bd10      	pop	{r4, pc}
 80034ba:	bf00      	nop
 80034bc:	20001390 	.word	0x20001390

080034c0 <stmpe811_EnableGlobalIT>:
{
 80034c0:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80034c2:	b2c4      	uxtb	r4, r0
 80034c4:	2109      	movs	r1, #9
 80034c6:	4620      	mov	r0, r4
 80034c8:	f7fe f95a 	bl	8001780 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80034cc:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80034d0:	b2d2      	uxtb	r2, r2
 80034d2:	4620      	mov	r0, r4
 80034d4:	2109      	movs	r1, #9
}
 80034d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80034da:	f7fe b93b 	b.w	8001754 <IOE_Write>

080034de <stmpe811_DisableGlobalIT>:
{
 80034de:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80034e0:	b2c4      	uxtb	r4, r0
 80034e2:	2109      	movs	r1, #9
 80034e4:	4620      	mov	r0, r4
 80034e6:	f7fe f94b 	bl	8001780 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80034ea:	2109      	movs	r1, #9
 80034ec:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80034f0:	4620      	mov	r0, r4
}
 80034f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80034f6:	f7fe b92d 	b.w	8001754 <IOE_Write>

080034fa <stmpe811_EnableITSource>:
{
 80034fa:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80034fc:	b2c5      	uxtb	r5, r0
{
 80034fe:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003500:	4628      	mov	r0, r5
 8003502:	210a      	movs	r1, #10
 8003504:	f7fe f93c 	bl	8001780 <IOE_Read>
  tmp |= Source; 
 8003508:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800350c:	b2d2      	uxtb	r2, r2
 800350e:	4628      	mov	r0, r5
 8003510:	210a      	movs	r1, #10
}
 8003512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003516:	f7fe b91d 	b.w	8001754 <IOE_Write>

0800351a <stmpe811_TS_EnableIT>:
{
 800351a:	b510      	push	{r4, lr}
 800351c:	4604      	mov	r4, r0
  IOE_ITConfig();
 800351e:	f7fe f918 	bl	8001752 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003522:	4620      	mov	r0, r4
 8003524:	211f      	movs	r1, #31
 8003526:	f7ff ffe8 	bl	80034fa <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800352a:	4620      	mov	r0, r4
}
 800352c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003530:	f7ff bfc6 	b.w	80034c0 <stmpe811_EnableGlobalIT>

08003534 <stmpe811_DisableITSource>:
{
 8003534:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003536:	b2c5      	uxtb	r5, r0
{
 8003538:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800353a:	4628      	mov	r0, r5
 800353c:	210a      	movs	r1, #10
 800353e:	f7fe f91f 	bl	8001780 <IOE_Read>
  tmp &= ~Source; 
 8003542:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003546:	b2d2      	uxtb	r2, r2
 8003548:	4628      	mov	r0, r5
 800354a:	210a      	movs	r1, #10
}
 800354c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003550:	f7fe b900 	b.w	8001754 <IOE_Write>

08003554 <stmpe811_TS_DisableIT>:
{
 8003554:	b510      	push	{r4, lr}
 8003556:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003558:	f7ff ffc1 	bl	80034de <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800355c:	4620      	mov	r0, r4
 800355e:	211f      	movs	r1, #31
}
 8003560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003564:	f7ff bfe6 	b.w	8003534 <stmpe811_DisableITSource>

08003568 <stmpe811_ReadGITStatus>:
{
 8003568:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800356a:	b2c0      	uxtb	r0, r0
{
 800356c:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800356e:	210b      	movs	r1, #11
 8003570:	f7fe f906 	bl	8001780 <IOE_Read>
}
 8003574:	4020      	ands	r0, r4
 8003576:	bd10      	pop	{r4, pc}

08003578 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003578:	211f      	movs	r1, #31
 800357a:	f7ff bff5 	b.w	8003568 <stmpe811_ReadGITStatus>

0800357e <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800357e:	460a      	mov	r2, r1
 8003580:	b2c0      	uxtb	r0, r0
 8003582:	210b      	movs	r1, #11
 8003584:	f7fe b8e6 	b.w	8001754 <IOE_Write>

08003588 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003588:	211f      	movs	r1, #31
 800358a:	f7ff bff8 	b.w	800357e <stmpe811_ClearGlobalIT>

0800358e <stmpe811_IO_EnableAF>:
{
 800358e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003590:	b2c5      	uxtb	r5, r0
{
 8003592:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003594:	4628      	mov	r0, r5
 8003596:	2117      	movs	r1, #23
 8003598:	f7fe f8f2 	bl	8001780 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800359c:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80035a0:	b2d2      	uxtb	r2, r2
 80035a2:	4628      	mov	r0, r5
 80035a4:	2117      	movs	r1, #23
}
 80035a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80035aa:	f7fe b8d3 	b.w	8001754 <IOE_Write>

080035ae <stmpe811_TS_Start>:
{
 80035ae:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80035b0:	b2c4      	uxtb	r4, r0
{
 80035b2:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80035b4:	2104      	movs	r1, #4
 80035b6:	4620      	mov	r0, r4
 80035b8:	f7fe f8e2 	bl	8001780 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80035bc:	2104      	movs	r1, #4
 80035be:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80035c2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80035c4:	4620      	mov	r0, r4
 80035c6:	f7fe f8c5 	bl	8001754 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80035ca:	4630      	mov	r0, r6
 80035cc:	21f0      	movs	r1, #240	; 0xf0
 80035ce:	f7ff ffde 	bl	800358e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80035d2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80035d6:	4620      	mov	r0, r4
 80035d8:	2104      	movs	r1, #4
 80035da:	f7fe f8bb 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80035de:	2249      	movs	r2, #73	; 0x49
 80035e0:	2120      	movs	r1, #32
 80035e2:	4620      	mov	r0, r4
 80035e4:	f7fe f8b6 	bl	8001754 <IOE_Write>
  IOE_Delay(2); 
 80035e8:	2002      	movs	r0, #2
 80035ea:	f7fe f8f9 	bl	80017e0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80035ee:	4620      	mov	r0, r4
 80035f0:	2201      	movs	r2, #1
 80035f2:	2121      	movs	r1, #33	; 0x21
 80035f4:	f7fe f8ae 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80035f8:	4620      	mov	r0, r4
 80035fa:	229a      	movs	r2, #154	; 0x9a
 80035fc:	2141      	movs	r1, #65	; 0x41
 80035fe:	f7fe f8a9 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003602:	4620      	mov	r0, r4
 8003604:	2201      	movs	r2, #1
 8003606:	214a      	movs	r1, #74	; 0x4a
 8003608:	f7fe f8a4 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800360c:	4620      	mov	r0, r4
 800360e:	2201      	movs	r2, #1
 8003610:	214b      	movs	r1, #75	; 0x4b
 8003612:	f7fe f89f 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003616:	4620      	mov	r0, r4
 8003618:	2200      	movs	r2, #0
 800361a:	214b      	movs	r1, #75	; 0x4b
 800361c:	f7fe f89a 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003620:	4620      	mov	r0, r4
 8003622:	2201      	movs	r2, #1
 8003624:	2156      	movs	r1, #86	; 0x56
 8003626:	f7fe f895 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800362a:	4620      	mov	r0, r4
 800362c:	2201      	movs	r2, #1
 800362e:	2158      	movs	r1, #88	; 0x58
 8003630:	f7fe f890 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003634:	4620      	mov	r0, r4
 8003636:	2201      	movs	r2, #1
 8003638:	2140      	movs	r1, #64	; 0x40
 800363a:	f7fe f88b 	bl	8001754 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800363e:	4620      	mov	r0, r4
 8003640:	22ff      	movs	r2, #255	; 0xff
 8003642:	210b      	movs	r1, #11
 8003644:	f7fe f886 	bl	8001754 <IOE_Write>
  IOE_Delay(2); 
 8003648:	2002      	movs	r0, #2
}
 800364a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800364e:	f7fe b8c7 	b.w	80017e0 <IOE_Delay>
	...

08003654 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003654:	4b05      	ldr	r3, [pc, #20]	; (800366c <SystemInit+0x18>)
 8003656:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800365a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800365e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003662:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003666:	609a      	str	r2, [r3, #8]
#endif
}
 8003668:	4770      	bx	lr
 800366a:	bf00      	nop
 800366c:	e000ed00 	.word	0xe000ed00

08003670 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003670:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003672:	4b0b      	ldr	r3, [pc, #44]	; (80036a0 <HAL_Init+0x30>)
 8003674:	681a      	ldr	r2, [r3, #0]
 8003676:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800367a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800367c:	681a      	ldr	r2, [r3, #0]
 800367e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003682:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003684:	681a      	ldr	r2, [r3, #0]
 8003686:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800368a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800368c:	2003      	movs	r0, #3
 800368e:	f000 f973 	bl	8003978 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003692:	2000      	movs	r0, #0
 8003694:	f7fe fc0c 	bl	8001eb0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003698:	f7fe f92c 	bl	80018f4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800369c:	2000      	movs	r0, #0
 800369e:	bd08      	pop	{r3, pc}
 80036a0:	40023c00 	.word	0x40023c00

080036a4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80036a4:	4a03      	ldr	r2, [pc, #12]	; (80036b4 <HAL_IncTick+0x10>)
 80036a6:	4b04      	ldr	r3, [pc, #16]	; (80036b8 <HAL_IncTick+0x14>)
 80036a8:	6811      	ldr	r1, [r2, #0]
 80036aa:	781b      	ldrb	r3, [r3, #0]
 80036ac:	440b      	add	r3, r1
 80036ae:	6013      	str	r3, [r2, #0]
}
 80036b0:	4770      	bx	lr
 80036b2:	bf00      	nop
 80036b4:	200126ac 	.word	0x200126ac
 80036b8:	20000078 	.word	0x20000078

080036bc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80036bc:	4b01      	ldr	r3, [pc, #4]	; (80036c4 <HAL_GetTick+0x8>)
 80036be:	6818      	ldr	r0, [r3, #0]
}
 80036c0:	4770      	bx	lr
 80036c2:	bf00      	nop
 80036c4:	200126ac 	.word	0x200126ac

080036c8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80036c8:	b538      	push	{r3, r4, r5, lr}
 80036ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80036cc:	f7ff fff6 	bl	80036bc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80036d0:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80036d2:	bf1c      	itt	ne
 80036d4:	4b05      	ldrne	r3, [pc, #20]	; (80036ec <HAL_Delay+0x24>)
 80036d6:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80036d8:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80036da:	bf18      	it	ne
 80036dc:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80036de:	f7ff ffed 	bl	80036bc <HAL_GetTick>
 80036e2:	1b40      	subs	r0, r0, r5
 80036e4:	42a0      	cmp	r0, r4
 80036e6:	d3fa      	bcc.n	80036de <HAL_Delay+0x16>
  {
  }
}
 80036e8:	bd38      	pop	{r3, r4, r5, pc}
 80036ea:	bf00      	nop
 80036ec:	20000078 	.word	0x20000078

080036f0 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 80036f0:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 80036f2:	4604      	mov	r4, r0
 80036f4:	2800      	cmp	r0, #0
 80036f6:	f000 809b 	beq.w	8003830 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 80036fa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80036fc:	b925      	cbnz	r5, 8003708 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 80036fe:	f7fe f919 	bl	8001934 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8003702:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8003704:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8003708:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800370a:	06db      	lsls	r3, r3, #27
 800370c:	f100 808e 	bmi.w	800382c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8003710:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003712:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8003716:	f023 0302 	bic.w	r3, r3, #2
 800371a:	f043 0302 	orr.w	r3, r3, #2
 800371e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003720:	4b44      	ldr	r3, [pc, #272]	; (8003834 <HAL_ADC_Init+0x144>)
 8003722:	685a      	ldr	r2, [r3, #4]
 8003724:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8003728:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800372a:	685a      	ldr	r2, [r3, #4]
 800372c:	6861      	ldr	r1, [r4, #4]
 800372e:	430a      	orrs	r2, r1
 8003730:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003732:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8003734:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003736:	685a      	ldr	r2, [r3, #4]
 8003738:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800373c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800373e:	685a      	ldr	r2, [r3, #4]
 8003740:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8003744:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8003746:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8003748:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800374a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800374e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8003750:	685a      	ldr	r2, [r3, #4]
 8003752:	430a      	orrs	r2, r1
 8003754:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003756:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003758:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800375a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800375e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003760:	689a      	ldr	r2, [r3, #8]
 8003762:	430a      	orrs	r2, r1
 8003764:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003766:	4934      	ldr	r1, [pc, #208]	; (8003838 <HAL_ADC_Init+0x148>)
 8003768:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800376a:	428a      	cmp	r2, r1
 800376c:	d052      	beq.n	8003814 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800376e:	6899      	ldr	r1, [r3, #8]
 8003770:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8003774:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8003776:	6899      	ldr	r1, [r3, #8]
 8003778:	430a      	orrs	r2, r1
 800377a:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800377c:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800377e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8003780:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003784:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8003786:	689a      	ldr	r2, [r3, #8]
 8003788:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800378a:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800378c:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800378e:	7e21      	ldrb	r1, [r4, #24]
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8003790:	f022 0202 	bic.w	r2, r2, #2
 8003794:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8003796:	689a      	ldr	r2, [r3, #8]
 8003798:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 800379c:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800379e:	f894 2020 	ldrb.w	r2, [r4, #32]
 80037a2:	2a00      	cmp	r2, #0
 80037a4:	d03e      	beq.n	8003824 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80037a6:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80037a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80037aa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80037ae:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80037b0:	685a      	ldr	r2, [r3, #4]
 80037b2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80037b6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80037b8:	685a      	ldr	r2, [r3, #4]
 80037ba:	3901      	subs	r1, #1
 80037bc:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80037c0:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80037c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80037c4:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80037c6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80037ca:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80037cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80037ce:	3901      	subs	r1, #1
 80037d0:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 80037d4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80037d6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80037d8:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80037dc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80037e0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80037e2:	689a      	ldr	r2, [r3, #8]
 80037e4:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 80037e8:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80037ea:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80037ec:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80037ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80037f2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80037f4:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80037f6:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80037f8:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 80037fc:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 80037fe:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8003800:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003802:	f023 0303 	bic.w	r3, r3, #3
 8003806:	f043 0301 	orr.w	r3, r3, #1
 800380a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800380c:	2300      	movs	r3, #0
 800380e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8003812:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8003814:	689a      	ldr	r2, [r3, #8]
 8003816:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800381a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800381c:	689a      	ldr	r2, [r3, #8]
 800381e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003822:	e7b2      	b.n	800378a <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003824:	685a      	ldr	r2, [r3, #4]
 8003826:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800382a:	e7c9      	b.n	80037c0 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800382c:	2001      	movs	r0, #1
 800382e:	e7ed      	b.n	800380c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8003830:	2001      	movs	r0, #1
 8003832:	e7ee      	b.n	8003812 <HAL_ADC_Init+0x122>
 8003834:	40012300 	.word	0x40012300
 8003838:	0f000001 	.word	0x0f000001

0800383c <HAL_ADC_ConfigChannel>:
{
 800383c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800383e:	2300      	movs	r3, #0
 8003840:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8003842:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8003846:	2b01      	cmp	r3, #1
 8003848:	d06a      	beq.n	8003920 <HAL_ADC_ConfigChannel+0xe4>
  if (sConfig->Channel > ADC_CHANNEL_9)
 800384a:	680d      	ldr	r5, [r1, #0]
 800384c:	688e      	ldr	r6, [r1, #8]
  __HAL_LOCK(hadc);
 800384e:	2301      	movs	r3, #1
  if (sConfig->Channel > ADC_CHANNEL_9)
 8003850:	2d09      	cmp	r5, #9
  __HAL_LOCK(hadc);
 8003852:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8003856:	b2ac      	uxth	r4, r5
 8003858:	6803      	ldr	r3, [r0, #0]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800385a:	d929      	bls.n	80038b0 <HAL_ADC_ConfigChannel+0x74>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800385c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8003860:	68df      	ldr	r7, [r3, #12]
 8003862:	3a1e      	subs	r2, #30
 8003864:	f04f 0c07 	mov.w	ip, #7
 8003868:	fa0c fc02 	lsl.w	ip, ip, r2
 800386c:	ea27 070c 	bic.w	r7, r7, ip
 8003870:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8003872:	68df      	ldr	r7, [r3, #12]
 8003874:	fa06 f202 	lsl.w	r2, r6, r2
 8003878:	433a      	orrs	r2, r7
 800387a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 800387c:	6849      	ldr	r1, [r1, #4]
 800387e:	2906      	cmp	r1, #6
 8003880:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8003884:	d824      	bhi.n	80038d0 <HAL_ADC_ConfigChannel+0x94>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8003886:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003888:	3a05      	subs	r2, #5
 800388a:	261f      	movs	r6, #31
 800388c:	4096      	lsls	r6, r2
 800388e:	ea21 0106 	bic.w	r1, r1, r6
 8003892:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8003894:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003896:	fa04 f202 	lsl.w	r2, r4, r2
 800389a:	430a      	orrs	r2, r1
 800389c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800389e:	4a31      	ldr	r2, [pc, #196]	; (8003964 <HAL_ADC_ConfigChannel+0x128>)
 80038a0:	4293      	cmp	r3, r2
 80038a2:	d031      	beq.n	8003908 <HAL_ADC_ConfigChannel+0xcc>
  __HAL_UNLOCK(hadc);
 80038a4:	2300      	movs	r3, #0
 80038a6:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80038aa:	4618      	mov	r0, r3
}
 80038ac:	b003      	add	sp, #12
 80038ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80038b0:	691f      	ldr	r7, [r3, #16]
 80038b2:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80038b6:	f04f 0c07 	mov.w	ip, #7
 80038ba:	fa0c fc02 	lsl.w	ip, ip, r2
 80038be:	ea27 070c 	bic.w	r7, r7, ip
 80038c2:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80038c4:	691f      	ldr	r7, [r3, #16]
 80038c6:	fa06 f202 	lsl.w	r2, r6, r2
 80038ca:	433a      	orrs	r2, r7
 80038cc:	611a      	str	r2, [r3, #16]
 80038ce:	e7d5      	b.n	800387c <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 80038d0:	290c      	cmp	r1, #12
 80038d2:	f04f 011f 	mov.w	r1, #31
 80038d6:	d80b      	bhi.n	80038f0 <HAL_ADC_ConfigChannel+0xb4>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80038d8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 80038da:	3a23      	subs	r2, #35	; 0x23
 80038dc:	4091      	lsls	r1, r2
 80038de:	ea26 0101 	bic.w	r1, r6, r1
 80038e2:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80038e4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80038e6:	fa04 f202 	lsl.w	r2, r4, r2
 80038ea:	430a      	orrs	r2, r1
 80038ec:	631a      	str	r2, [r3, #48]	; 0x30
 80038ee:	e7d6      	b.n	800389e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 80038f0:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80038f2:	3a41      	subs	r2, #65	; 0x41
 80038f4:	4091      	lsls	r1, r2
 80038f6:	ea26 0101 	bic.w	r1, r6, r1
 80038fa:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80038fc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80038fe:	fa04 f202 	lsl.w	r2, r4, r2
 8003902:	430a      	orrs	r2, r1
 8003904:	62da      	str	r2, [r3, #44]	; 0x2c
 8003906:	e7ca      	b.n	800389e <HAL_ADC_ConfigChannel+0x62>
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8003908:	2d12      	cmp	r5, #18
 800390a:	d10b      	bne.n	8003924 <HAL_ADC_ConfigChannel+0xe8>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 800390c:	4b16      	ldr	r3, [pc, #88]	; (8003968 <HAL_ADC_ConfigChannel+0x12c>)
 800390e:	685a      	ldr	r2, [r3, #4]
 8003910:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8003914:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8003916:	685a      	ldr	r2, [r3, #4]
 8003918:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800391c:	605a      	str	r2, [r3, #4]
 800391e:	e7c1      	b.n	80038a4 <HAL_ADC_ConfigChannel+0x68>
  __HAL_LOCK(hadc);
 8003920:	2002      	movs	r0, #2
 8003922:	e7c3      	b.n	80038ac <HAL_ADC_ConfigChannel+0x70>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003924:	4b11      	ldr	r3, [pc, #68]	; (800396c <HAL_ADC_ConfigChannel+0x130>)
 8003926:	429d      	cmp	r5, r3
 8003928:	d001      	beq.n	800392e <HAL_ADC_ConfigChannel+0xf2>
 800392a:	2d11      	cmp	r5, #17
 800392c:	d1ba      	bne.n	80038a4 <HAL_ADC_ConfigChannel+0x68>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800392e:	4b0e      	ldr	r3, [pc, #56]	; (8003968 <HAL_ADC_ConfigChannel+0x12c>)
 8003930:	685a      	ldr	r2, [r3, #4]
 8003932:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8003936:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8003938:	685a      	ldr	r2, [r3, #4]
 800393a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800393e:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8003940:	4b0a      	ldr	r3, [pc, #40]	; (800396c <HAL_ADC_ConfigChannel+0x130>)
 8003942:	429d      	cmp	r5, r3
 8003944:	d1ae      	bne.n	80038a4 <HAL_ADC_ConfigChannel+0x68>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8003946:	4b0a      	ldr	r3, [pc, #40]	; (8003970 <HAL_ADC_ConfigChannel+0x134>)
 8003948:	4a0a      	ldr	r2, [pc, #40]	; (8003974 <HAL_ADC_ConfigChannel+0x138>)
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	fbb3 f2f2 	udiv	r2, r3, r2
 8003950:	230a      	movs	r3, #10
 8003952:	4353      	muls	r3, r2
        counter--;
 8003954:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8003956:	9b01      	ldr	r3, [sp, #4]
 8003958:	2b00      	cmp	r3, #0
 800395a:	d0a3      	beq.n	80038a4 <HAL_ADC_ConfigChannel+0x68>
        counter--;
 800395c:	9b01      	ldr	r3, [sp, #4]
 800395e:	3b01      	subs	r3, #1
 8003960:	e7f8      	b.n	8003954 <HAL_ADC_ConfigChannel+0x118>
 8003962:	bf00      	nop
 8003964:	40012000 	.word	0x40012000
 8003968:	40012300 	.word	0x40012300
 800396c:	10000012 	.word	0x10000012
 8003970:	20000074 	.word	0x20000074
 8003974:	000f4240 	.word	0x000f4240

08003978 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003978:	4a07      	ldr	r2, [pc, #28]	; (8003998 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800397a:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800397c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003980:	041b      	lsls	r3, r3, #16
 8003982:	0c1b      	lsrs	r3, r3, #16
 8003984:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003988:	0200      	lsls	r0, r0, #8
 800398a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800398e:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8003992:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8003994:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003996:	4770      	bx	lr
 8003998:	e000ed00 	.word	0xe000ed00

0800399c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800399c:	4b17      	ldr	r3, [pc, #92]	; (80039fc <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800399e:	b570      	push	{r4, r5, r6, lr}
 80039a0:	68dc      	ldr	r4, [r3, #12]
 80039a2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80039a6:	f1c4 0507 	rsb	r5, r4, #7
 80039aa:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80039ac:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80039b0:	bf28      	it	cs
 80039b2:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80039b4:	f04f 36ff 	mov.w	r6, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80039b8:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80039ba:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80039be:	bf8c      	ite	hi
 80039c0:	3c03      	subhi	r4, #3
 80039c2:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80039c4:	ea21 0303 	bic.w	r3, r1, r3
 80039c8:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80039ca:	fa06 f404 	lsl.w	r4, r6, r4
 80039ce:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 80039d2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80039d4:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039d8:	bfa8      	it	ge
 80039da:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 80039de:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039e2:	bfbc      	itt	lt
 80039e4:	f000 000f 	andlt.w	r0, r0, #15
 80039e8:	4a05      	ldrlt	r2, [pc, #20]	; (8003a00 <HAL_NVIC_SetPriority+0x64>)
 80039ea:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039ec:	bfaa      	itet	ge
 80039ee:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039f2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039f4:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80039f8:	bd70      	pop	{r4, r5, r6, pc}
 80039fa:	bf00      	nop
 80039fc:	e000ed00 	.word	0xe000ed00
 8003a00:	e000ed14 	.word	0xe000ed14

08003a04 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003a04:	2800      	cmp	r0, #0
 8003a06:	db08      	blt.n	8003a1a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003a08:	0942      	lsrs	r2, r0, #5
 8003a0a:	2301      	movs	r3, #1
 8003a0c:	f000 001f 	and.w	r0, r0, #31
 8003a10:	fa03 f000 	lsl.w	r0, r3, r0
 8003a14:	4b01      	ldr	r3, [pc, #4]	; (8003a1c <HAL_NVIC_EnableIRQ+0x18>)
 8003a16:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003a1a:	4770      	bx	lr
 8003a1c:	e000e100 	.word	0xe000e100

08003a20 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003a20:	2800      	cmp	r0, #0
 8003a22:	db0d      	blt.n	8003a40 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003a24:	0943      	lsrs	r3, r0, #5
 8003a26:	2201      	movs	r2, #1
 8003a28:	f000 001f 	and.w	r0, r0, #31
 8003a2c:	fa02 f000 	lsl.w	r0, r2, r0
 8003a30:	3320      	adds	r3, #32
 8003a32:	4a04      	ldr	r2, [pc, #16]	; (8003a44 <HAL_NVIC_DisableIRQ+0x24>)
 8003a34:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003a38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003a3c:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003a40:	4770      	bx	lr
 8003a42:	bf00      	nop
 8003a44:	e000e100 	.word	0xe000e100

08003a48 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003a48:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003a4a:	4604      	mov	r4, r0
 8003a4c:	b150      	cbz	r0, 8003a64 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003a4e:	7943      	ldrb	r3, [r0, #5]
 8003a50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003a54:	b913      	cbnz	r3, 8003a5c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003a56:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003a58:	f7fd ffbe 	bl	80019d8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003a5c:	2301      	movs	r3, #1
 8003a5e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003a60:	2000      	movs	r0, #0
}
 8003a62:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003a64:	2001      	movs	r0, #1
 8003a66:	e7fc      	b.n	8003a62 <HAL_CRC_Init+0x1a>

08003a68 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003a68:	6803      	ldr	r3, [r0, #0]
 8003a6a:	b2da      	uxtb	r2, r3
 8003a6c:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8003a70:	f023 0303 	bic.w	r3, r3, #3
 8003a74:	2118      	movs	r1, #24
 8003a76:	3a10      	subs	r2, #16
 8003a78:	fbb2 f2f1 	udiv	r2, r2, r1
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003a7c:	4904      	ldr	r1, [pc, #16]	; (8003a90 <DMA_CalcBaseAndBitshift+0x28>)
  
  if (stream_number > 3U)
 8003a7e:	2a03      	cmp	r2, #3
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003a80:	bf88      	it	hi
 8003a82:	3304      	addhi	r3, #4
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003a84:	5c89      	ldrb	r1, [r1, r2]
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003a86:	6583      	str	r3, [r0, #88]	; 0x58
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003a88:	65c1      	str	r1, [r0, #92]	; 0x5c
  }
  
  return hdma->StreamBaseAddress;
}
 8003a8a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop
 8003a90:	0801c438 	.word	0x0801c438

08003a94 <HAL_DMA_Init>:
{
 8003a94:	b570      	push	{r4, r5, r6, lr}
 8003a96:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003a98:	f7ff fe10 	bl	80036bc <HAL_GetTick>
 8003a9c:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003a9e:	2c00      	cmp	r4, #0
 8003aa0:	d071      	beq.n	8003b86 <HAL_DMA_Init+0xf2>
  __HAL_UNLOCK(hdma);
 8003aa2:	2300      	movs	r3, #0
 8003aa4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003aa8:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003aaa:	2302      	movs	r3, #2
 8003aac:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003ab0:	6813      	ldr	r3, [r2, #0]
 8003ab2:	f023 0301 	bic.w	r3, r3, #1
 8003ab6:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003ab8:	6821      	ldr	r1, [r4, #0]
 8003aba:	680b      	ldr	r3, [r1, #0]
 8003abc:	07d8      	lsls	r0, r3, #31
 8003abe:	d43c      	bmi.n	8003b3a <HAL_DMA_Init+0xa6>
  tmp = hdma->Instance->CR;
 8003ac0:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003ac2:	4d32      	ldr	r5, [pc, #200]	; (8003b8c <HAL_DMA_Init+0xf8>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003ac4:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003ac6:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003ac8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003acc:	4313      	orrs	r3, r2
 8003ace:	68e2      	ldr	r2, [r4, #12]
 8003ad0:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003ad2:	6922      	ldr	r2, [r4, #16]
 8003ad4:	4313      	orrs	r3, r2
 8003ad6:	6962      	ldr	r2, [r4, #20]
 8003ad8:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003ada:	69e2      	ldr	r2, [r4, #28]
 8003adc:	4303      	orrs	r3, r0
 8003ade:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003ae0:	6a22      	ldr	r2, [r4, #32]
 8003ae2:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003ae4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003ae6:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003ae8:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003aec:	bf02      	ittt	eq
 8003aee:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003af2:	4335      	orreq	r5, r6
 8003af4:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003af6:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003af8:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003afa:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003afc:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003b00:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003b04:	d10b      	bne.n	8003b1e <HAL_DMA_Init+0x8a>
    tmp |= hdma->Init.FIFOThreshold;
 8003b06:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003b08:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003b0a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003b0c:	b13d      	cbz	r5, 8003b1e <HAL_DMA_Init+0x8a>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003b0e:	b9f8      	cbnz	r0, 8003b50 <HAL_DMA_Init+0xbc>
  {
    switch (tmp)
 8003b10:	2a01      	cmp	r2, #1
 8003b12:	d02d      	beq.n	8003b70 <HAL_DMA_Init+0xdc>
 8003b14:	d301      	bcc.n	8003b1a <HAL_DMA_Init+0x86>
 8003b16:	2a02      	cmp	r2, #2
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003b18:	d101      	bne.n	8003b1e <HAL_DMA_Init+0x8a>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003b1a:	01ea      	lsls	r2, r5, #7
 8003b1c:	d42b      	bmi.n	8003b76 <HAL_DMA_Init+0xe2>
  hdma->Instance->FCR = tmp;
 8003b1e:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003b20:	4620      	mov	r0, r4
 8003b22:	f7ff ffa1 	bl	8003a68 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b26:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003b28:	233f      	movs	r3, #63	; 0x3f
 8003b2a:	4093      	lsls	r3, r2
 8003b2c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b2e:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003b30:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b32:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003b34:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003b38:	e009      	b.n	8003b4e <HAL_DMA_Init+0xba>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003b3a:	f7ff fdbf 	bl	80036bc <HAL_GetTick>
 8003b3e:	1b40      	subs	r0, r0, r5
 8003b40:	2805      	cmp	r0, #5
 8003b42:	d9b9      	bls.n	8003ab8 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003b44:	2320      	movs	r3, #32
 8003b46:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003b48:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003b4a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003b4e:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003b50:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003b54:	d113      	bne.n	8003b7e <HAL_DMA_Init+0xea>
    switch (tmp)
 8003b56:	2a03      	cmp	r2, #3
 8003b58:	d8e1      	bhi.n	8003b1e <HAL_DMA_Init+0x8a>
 8003b5a:	a001      	add	r0, pc, #4	; (adr r0, 8003b60 <HAL_DMA_Init+0xcc>)
 8003b5c:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003b60:	08003b77 	.word	0x08003b77
 8003b64:	08003b1b 	.word	0x08003b1b
 8003b68:	08003b77 	.word	0x08003b77
 8003b6c:	08003b71 	.word	0x08003b71
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003b70:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003b74:	d1d3      	bne.n	8003b1e <HAL_DMA_Init+0x8a>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003b76:	2340      	movs	r3, #64	; 0x40
 8003b78:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003b7a:	2001      	movs	r0, #1
 8003b7c:	e7e5      	b.n	8003b4a <HAL_DMA_Init+0xb6>
    switch (tmp)
 8003b7e:	2a02      	cmp	r2, #2
 8003b80:	d9f9      	bls.n	8003b76 <HAL_DMA_Init+0xe2>
 8003b82:	2a03      	cmp	r2, #3
 8003b84:	e7c8      	b.n	8003b18 <HAL_DMA_Init+0x84>
    return HAL_ERROR;
 8003b86:	2001      	movs	r0, #1
 8003b88:	e7e1      	b.n	8003b4e <HAL_DMA_Init+0xba>
 8003b8a:	bf00      	nop
 8003b8c:	f010803f 	.word	0xf010803f

08003b90 <HAL_DMA_IRQHandler>:
{
 8003b90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t count = 0U;
 8003b92:	2300      	movs	r3, #0
 8003b94:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003b96:	4b5c      	ldr	r3, [pc, #368]	; (8003d08 <HAL_DMA_IRQHandler+0x178>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003b98:	6d85      	ldr	r5, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 8003b9a:	681f      	ldr	r7, [r3, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b9c:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 8003b9e:	682e      	ldr	r6, [r5, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003ba0:	2208      	movs	r2, #8
 8003ba2:	409a      	lsls	r2, r3
 8003ba4:	4232      	tst	r2, r6
{
 8003ba6:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003ba8:	d00c      	beq.n	8003bc4 <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003baa:	6801      	ldr	r1, [r0, #0]
 8003bac:	6808      	ldr	r0, [r1, #0]
 8003bae:	0740      	lsls	r0, r0, #29
 8003bb0:	d508      	bpl.n	8003bc4 <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003bb2:	6808      	ldr	r0, [r1, #0]
 8003bb4:	f020 0004 	bic.w	r0, r0, #4
 8003bb8:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003bba:	60aa      	str	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003bbc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8003bbe:	f042 0201 	orr.w	r2, r2, #1
 8003bc2:	6562      	str	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003bc4:	2201      	movs	r2, #1
 8003bc6:	409a      	lsls	r2, r3
 8003bc8:	4232      	tst	r2, r6
 8003bca:	d008      	beq.n	8003bde <HAL_DMA_IRQHandler+0x4e>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003bcc:	6821      	ldr	r1, [r4, #0]
 8003bce:	6949      	ldr	r1, [r1, #20]
 8003bd0:	0609      	lsls	r1, r1, #24
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003bd2:	bf41      	itttt	mi
 8003bd4:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003bd6:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 8003bd8:	f042 0202 	orrmi.w	r2, r2, #2
 8003bdc:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003bde:	2204      	movs	r2, #4
 8003be0:	409a      	lsls	r2, r3
 8003be2:	4232      	tst	r2, r6
 8003be4:	d008      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x68>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003be6:	6821      	ldr	r1, [r4, #0]
 8003be8:	6809      	ldr	r1, [r1, #0]
 8003bea:	0788      	lsls	r0, r1, #30
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003bec:	bf41      	itttt	mi
 8003bee:	60aa      	strmi	r2, [r5, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003bf0:	6d62      	ldrmi	r2, [r4, #84]	; 0x54
 8003bf2:	f042 0204 	orrmi.w	r2, r2, #4
 8003bf6:	6562      	strmi	r2, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003bf8:	2210      	movs	r2, #16
 8003bfa:	409a      	lsls	r2, r3
 8003bfc:	4232      	tst	r2, r6
 8003bfe:	d010      	beq.n	8003c22 <HAL_DMA_IRQHandler+0x92>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003c00:	6823      	ldr	r3, [r4, #0]
 8003c02:	6819      	ldr	r1, [r3, #0]
 8003c04:	0709      	lsls	r1, r1, #28
 8003c06:	d50c      	bpl.n	8003c22 <HAL_DMA_IRQHandler+0x92>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003c08:	60aa      	str	r2, [r5, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003c0a:	681a      	ldr	r2, [r3, #0]
 8003c0c:	0350      	lsls	r0, r2, #13
 8003c0e:	d537      	bpl.n	8003c80 <HAL_DMA_IRQHandler+0xf0>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	0319      	lsls	r1, r3, #12
 8003c14:	d401      	bmi.n	8003c1a <HAL_DMA_IRQHandler+0x8a>
        if(hdma->XferHalfCpltCallback != NULL)
 8003c16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003c18:	e000      	b.n	8003c1c <HAL_DMA_IRQHandler+0x8c>
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003c1a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
        if(hdma->XferHalfCpltCallback != NULL)
 8003c1c:	b10b      	cbz	r3, 8003c22 <HAL_DMA_IRQHandler+0x92>
          hdma->XferHalfCpltCallback(hdma);
 8003c1e:	4620      	mov	r0, r4
 8003c20:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003c22:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003c24:	2220      	movs	r2, #32
 8003c26:	408a      	lsls	r2, r1
 8003c28:	4232      	tst	r2, r6
 8003c2a:	d03a      	beq.n	8003ca2 <HAL_DMA_IRQHandler+0x112>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003c2c:	6823      	ldr	r3, [r4, #0]
 8003c2e:	6818      	ldr	r0, [r3, #0]
 8003c30:	06c6      	lsls	r6, r0, #27
 8003c32:	d536      	bpl.n	8003ca2 <HAL_DMA_IRQHandler+0x112>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003c34:	60aa      	str	r2, [r5, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003c36:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 8003c3a:	2a05      	cmp	r2, #5
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c3c:	681a      	ldr	r2, [r3, #0]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003c3e:	d127      	bne.n	8003c90 <HAL_DMA_IRQHandler+0x100>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c40:	f022 0216 	bic.w	r2, r2, #22
 8003c44:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003c46:	695a      	ldr	r2, [r3, #20]
 8003c48:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003c4c:	615a      	str	r2, [r3, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003c4e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003c50:	b90a      	cbnz	r2, 8003c56 <HAL_DMA_IRQHandler+0xc6>
 8003c52:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003c54:	b11a      	cbz	r2, 8003c5e <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c56:	681a      	ldr	r2, [r3, #0]
 8003c58:	f022 0208 	bic.w	r2, r2, #8
 8003c5c:	601a      	str	r2, [r3, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c5e:	233f      	movs	r3, #63	; 0x3f
 8003c60:	408b      	lsls	r3, r1
 8003c62:	60ab      	str	r3, [r5, #8]
        __HAL_UNLOCK(hdma);
 8003c64:	2300      	movs	r3, #0
 8003c66:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_READY;
 8003c6a:	2301      	movs	r3, #1
 8003c6c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferAbortCallback != NULL)
 8003c70:	6d23      	ldr	r3, [r4, #80]	; 0x50
    if(hdma->XferErrorCallback != NULL)
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d045      	beq.n	8003d02 <HAL_DMA_IRQHandler+0x172>
      hdma->XferErrorCallback(hdma);
 8003c76:	4620      	mov	r0, r4
}
 8003c78:	b003      	add	sp, #12
 8003c7a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 8003c7e:	4718      	bx	r3
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003c80:	681a      	ldr	r2, [r3, #0]
 8003c82:	05d2      	lsls	r2, r2, #23
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c84:	bf5e      	ittt	pl
 8003c86:	681a      	ldrpl	r2, [r3, #0]
 8003c88:	f022 0208 	bicpl.w	r2, r2, #8
 8003c8c:	601a      	strpl	r2, [r3, #0]
 8003c8e:	e7c2      	b.n	8003c16 <HAL_DMA_IRQHandler+0x86>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003c90:	0350      	lsls	r0, r2, #13
 8003c92:	d527      	bpl.n	8003ce4 <HAL_DMA_IRQHandler+0x154>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	0319      	lsls	r1, r3, #12
 8003c98:	d431      	bmi.n	8003cfe <HAL_DMA_IRQHandler+0x16e>
          if(hdma->XferM1CpltCallback != NULL)
 8003c9a:	6c63      	ldr	r3, [r4, #68]	; 0x44
        if(hdma->XferCpltCallback != NULL)
 8003c9c:	b10b      	cbz	r3, 8003ca2 <HAL_DMA_IRQHandler+0x112>
          hdma->XferCpltCallback(hdma);
 8003c9e:	4620      	mov	r0, r4
 8003ca0:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003ca2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8003ca4:	b36b      	cbz	r3, 8003d02 <HAL_DMA_IRQHandler+0x172>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003ca6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8003ca8:	07da      	lsls	r2, r3, #31
 8003caa:	d519      	bpl.n	8003ce0 <HAL_DMA_IRQHandler+0x150>
      hdma->State = HAL_DMA_STATE_ABORT;
 8003cac:	2305      	movs	r3, #5
      __HAL_DMA_DISABLE(hdma);
 8003cae:	6822      	ldr	r2, [r4, #0]
      hdma->State = HAL_DMA_STATE_ABORT;
 8003cb0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8003cb4:	6813      	ldr	r3, [r2, #0]
 8003cb6:	f023 0301 	bic.w	r3, r3, #1
 8003cba:	6013      	str	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003cbc:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003cc0:	fbb7 f7f3 	udiv	r7, r7, r3
        if (++count > timeout)
 8003cc4:	9b01      	ldr	r3, [sp, #4]
 8003cc6:	3301      	adds	r3, #1
 8003cc8:	42bb      	cmp	r3, r7
 8003cca:	9301      	str	r3, [sp, #4]
 8003ccc:	d802      	bhi.n	8003cd4 <HAL_DMA_IRQHandler+0x144>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003cce:	6813      	ldr	r3, [r2, #0]
 8003cd0:	07db      	lsls	r3, r3, #31
 8003cd2:	d4f7      	bmi.n	8003cc4 <HAL_DMA_IRQHandler+0x134>
      __HAL_UNLOCK(hdma);
 8003cd4:	2300      	movs	r3, #0
 8003cd6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
      hdma->State = HAL_DMA_STATE_READY;
 8003cda:	2301      	movs	r3, #1
 8003cdc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    if(hdma->XferErrorCallback != NULL)
 8003ce0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8003ce2:	e7c6      	b.n	8003c72 <HAL_DMA_IRQHandler+0xe2>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003ce4:	681a      	ldr	r2, [r3, #0]
 8003ce6:	f412 7280 	ands.w	r2, r2, #256	; 0x100
 8003cea:	d108      	bne.n	8003cfe <HAL_DMA_IRQHandler+0x16e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003cec:	6819      	ldr	r1, [r3, #0]
 8003cee:	f021 0110 	bic.w	r1, r1, #16
 8003cf2:	6019      	str	r1, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 8003cf4:	2301      	movs	r3, #1
          __HAL_UNLOCK(hdma);
 8003cf6:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
          hdma->State = HAL_DMA_STATE_READY;
 8003cfa:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        if(hdma->XferCpltCallback != NULL)
 8003cfe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d00:	e7cc      	b.n	8003c9c <HAL_DMA_IRQHandler+0x10c>
}
 8003d02:	b003      	add	sp, #12
 8003d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d06:	bf00      	nop
 8003d08:	20000074 	.word	0x20000074

08003d0c <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003d0c:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003d0e:	6804      	ldr	r4, [r0, #0]
 8003d10:	9d04      	ldr	r5, [sp, #16]
 8003d12:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8003d14:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8003d18:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8003d1c:	4333      	orrs	r3, r6
 8003d1e:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003d20:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003d22:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003d24:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003d28:	d130      	bne.n	8003d8c <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003d2a:	6886      	ldr	r6, [r0, #8]
 8003d2c:	b11e      	cbz	r6, 8003d36 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003d2e:	2e01      	cmp	r6, #1
 8003d30:	d103      	bne.n	8003d3a <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003d32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003d36:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003d38:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003d3a:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003d3c:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003d40:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003d44:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003d46:	d107      	bne.n	8003d58 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8003d48:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 8003d4a:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003d4c:	02c9      	lsls	r1, r1, #11
 8003d4e:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8003d52:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 8003d56:	e7ee      	b.n	8003d36 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003d58:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003d5a:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003d5e:	d10a      	bne.n	8003d76 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8003d60:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 8003d62:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003d64:	029b      	lsls	r3, r3, #10
 8003d66:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 8003d6a:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8003d6e:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003d70:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 8003d74:	e7df      	b.n	8003d36 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8003d76:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8003d78:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003d7a:	0209      	lsls	r1, r1, #8
 8003d7c:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8003d80:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8003d84:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003d86:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8003d8a:	e7d4      	b.n	8003d36 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003d8c:	60e1      	str	r1, [r4, #12]
}
 8003d8e:	e7d3      	b.n	8003d38 <DMA2D_SetConfig+0x2c>

08003d90 <HAL_DMA2D_Init>:
{
 8003d90:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8003d92:	4604      	mov	r4, r0
 8003d94:	b330      	cbz	r0, 8003de4 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003d96:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003d9a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003d9e:	b91b      	cbnz	r3, 8003da8 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8003da0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8003da4:	f7fd fe30 	bl	8001a08 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003da8:	6822      	ldr	r2, [r4, #0]
 8003daa:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003dac:	2302      	movs	r3, #2
 8003dae:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003db2:	6813      	ldr	r3, [r2, #0]
 8003db4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003db8:	430b      	orrs	r3, r1
 8003dba:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003dbc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003dbe:	68a1      	ldr	r1, [r4, #8]
 8003dc0:	f023 0307 	bic.w	r3, r3, #7
 8003dc4:	430b      	orrs	r3, r1
 8003dc6:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003dc8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003dca:	68e1      	ldr	r1, [r4, #12]
 8003dcc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003dd0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003dd4:	430b      	orrs	r3, r1
 8003dd6:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003dd8:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003dda:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003ddc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003dde:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 8003de2:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8003de4:	2001      	movs	r0, #1
 8003de6:	e7fc      	b.n	8003de2 <HAL_DMA2D_Init+0x52>

08003de8 <HAL_DMA2D_Start_IT>:
{
 8003de8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8003dea:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8003dee:	2c01      	cmp	r4, #1
{
 8003df0:	4605      	mov	r5, r0
 8003df2:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 8003df6:	d013      	beq.n	8003e20 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003df8:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003dfc:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003dfe:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8003e00:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003e04:	9400      	str	r4, [sp, #0]
 8003e06:	f7ff ff81 	bl	8003d0c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003e0a:	682b      	ldr	r3, [r5, #0]
 8003e0c:	681a      	ldr	r2, [r3, #0]
 8003e0e:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003e12:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8003e14:	681a      	ldr	r2, [r3, #0]
 8003e16:	4332      	orrs	r2, r6
 8003e18:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8003e1a:	2000      	movs	r0, #0
}
 8003e1c:	b002      	add	sp, #8
 8003e1e:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8003e20:	4620      	mov	r0, r4
 8003e22:	e7fb      	b.n	8003e1c <HAL_DMA2D_Start_IT+0x34>

08003e24 <HAL_DMA2D_BlendingStart_IT>:
{
 8003e24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003e26:	4615      	mov	r5, r2
 8003e28:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 8003e2a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003e2e:	2b01      	cmp	r3, #1
{
 8003e30:	4604      	mov	r4, r0
 8003e32:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 8003e36:	d016      	beq.n	8003e66 <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003e38:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003e3c:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 8003e3e:	2601      	movs	r6, #1
 8003e40:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003e44:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8003e46:	9b07      	ldr	r3, [sp, #28]
 8003e48:	9300      	str	r3, [sp, #0]
 8003e4a:	9b06      	ldr	r3, [sp, #24]
 8003e4c:	f7ff ff5e 	bl	8003d0c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003e50:	6823      	ldr	r3, [r4, #0]
 8003e52:	681a      	ldr	r2, [r3, #0]
 8003e54:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003e58:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8003e5a:	681a      	ldr	r2, [r3, #0]
 8003e5c:	4332      	orrs	r2, r6
 8003e5e:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8003e60:	2000      	movs	r0, #0
}
 8003e62:	b002      	add	sp, #8
 8003e64:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8003e66:	4618      	mov	r0, r3
 8003e68:	e7fb      	b.n	8003e62 <HAL_DMA2D_BlendingStart_IT+0x3e>

08003e6a <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8003e6a:	6802      	ldr	r2, [r0, #0]
{
 8003e6c:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8003e6e:	6813      	ldr	r3, [r2, #0]
 8003e70:	f023 0305 	bic.w	r3, r3, #5
 8003e74:	f043 0304 	orr.w	r3, r3, #4
 8003e78:	6013      	str	r3, [r2, #0]
{
 8003e7a:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8003e7c:	f7ff fc1e 	bl	80036bc <HAL_GetTick>
 8003e80:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8003e82:	6823      	ldr	r3, [r4, #0]
 8003e84:	6818      	ldr	r0, [r3, #0]
 8003e86:	f010 0001 	ands.w	r0, r0, #1
 8003e8a:	d109      	bne.n	8003ea0 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003e8c:	681a      	ldr	r2, [r3, #0]
 8003e8e:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8003e92:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003e94:	2301      	movs	r3, #1
 8003e96:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8003e9a:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8003e9e:	e00f      	b.n	8003ec0 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003ea0:	f7ff fc0c 	bl	80036bc <HAL_GetTick>
 8003ea4:	1b40      	subs	r0, r0, r5
 8003ea6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003eaa:	d9ea      	bls.n	8003e82 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003eac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003eae:	f043 0320 	orr.w	r3, r3, #32
 8003eb2:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003eb4:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8003eb6:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003eb8:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003ebc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8003ec0:	bd38      	pop	{r3, r4, r5, pc}

08003ec2 <HAL_DMA2D_CLUTLoading_Abort>:
{
 8003ec2:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8003ec4:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8003ec6:	682a      	ldr	r2, [r5, #0]
 8003ec8:	f042 0204 	orr.w	r2, r2, #4
 8003ecc:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8003ece:	2901      	cmp	r1, #1
{
 8003ed0:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8003ed2:	bf14      	ite	ne
 8003ed4:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 8003ed6:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8003ed8:	f7ff fbf0 	bl	80036bc <HAL_GetTick>
 8003edc:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003ede:	6828      	ldr	r0, [r5, #0]
 8003ee0:	f010 0020 	ands.w	r0, r0, #32
 8003ee4:	d10a      	bne.n	8003efc <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8003ee6:	6822      	ldr	r2, [r4, #0]
 8003ee8:	6813      	ldr	r3, [r2, #0]
 8003eea:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 8003eee:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ef0:	2301      	movs	r3, #1
 8003ef2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8003ef6:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 8003efa:	e00f      	b.n	8003f1c <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003efc:	f7ff fbde 	bl	80036bc <HAL_GetTick>
 8003f00:	1b80      	subs	r0, r0, r6
 8003f02:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003f06:	d9ea      	bls.n	8003ede <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003f08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003f0a:	f043 0320 	orr.w	r3, r3, #32
 8003f0e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003f10:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8003f12:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003f14:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003f18:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8003f1c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003f20 <HAL_DMA2D_DeInit>:
{
 8003f20:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8003f22:	4605      	mov	r5, r0
 8003f24:	b908      	cbnz	r0, 8003f2a <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8003f26:	2001      	movs	r0, #1
}
 8003f28:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8003f2a:	4b16      	ldr	r3, [pc, #88]	; (8003f84 <HAL_DMA2D_DeInit+0x64>)
 8003f2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f2e:	0219      	lsls	r1, r3, #8
 8003f30:	d413      	bmi.n	8003f5a <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8003f32:	682b      	ldr	r3, [r5, #0]
 8003f34:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 8003f36:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 8003f38:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 8003f3a:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 8003f3c:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8003f3e:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8003f40:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8003f42:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8003f44:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8003f46:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 8003f48:	f7fd fd80 	bl	8001a4c <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003f4c:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 8003f4e:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8003f52:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 8003f56:	4620      	mov	r0, r4
 8003f58:	e7e6      	b.n	8003f28 <HAL_DMA2D_DeInit+0x8>
 8003f5a:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8003f5c:	6819      	ldr	r1, [r3, #0]
 8003f5e:	f011 0101 	ands.w	r1, r1, #1
 8003f62:	d004      	beq.n	8003f6e <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8003f64:	f7ff ff81 	bl	8003e6a <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003f68:	2800      	cmp	r0, #0
 8003f6a:	d0e2      	beq.n	8003f32 <HAL_DMA2D_DeInit+0x12>
 8003f6c:	e7db      	b.n	8003f26 <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8003f6e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003f70:	0692      	lsls	r2, r2, #26
 8003f72:	d502      	bpl.n	8003f7a <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003f74:	f7ff ffa5 	bl	8003ec2 <HAL_DMA2D_CLUTLoading_Abort>
 8003f78:	e7f6      	b.n	8003f68 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8003f7a:	69db      	ldr	r3, [r3, #28]
 8003f7c:	069b      	lsls	r3, r3, #26
 8003f7e:	d5d8      	bpl.n	8003f32 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003f80:	2101      	movs	r1, #1
 8003f82:	e7f7      	b.n	8003f74 <HAL_DMA2D_DeInit+0x54>
 8003f84:	40023800 	.word	0x40023800

08003f88 <HAL_DMA2D_LineEventCallback>:
 8003f88:	4770      	bx	lr

08003f8a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003f8a:	4770      	bx	lr

08003f8c <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003f8c:	6803      	ldr	r3, [r0, #0]
{
 8003f8e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003f90:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003f92:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003f94:	07f2      	lsls	r2, r6, #31
{
 8003f96:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003f98:	d514      	bpl.n	8003fc4 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003f9a:	05e9      	lsls	r1, r5, #23
 8003f9c:	d512      	bpl.n	8003fc4 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003f9e:	681a      	ldr	r2, [r3, #0]
 8003fa0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003fa4:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003fa6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003fa8:	f042 0201 	orr.w	r2, r2, #1
 8003fac:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003fae:	2201      	movs	r2, #1
 8003fb0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003fb2:	2304      	movs	r3, #4
 8003fb4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003fb8:	2300      	movs	r3, #0
 8003fba:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003fbe:	6943      	ldr	r3, [r0, #20]
 8003fc0:	b103      	cbz	r3, 8003fc4 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8003fc2:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003fc4:	06b2      	lsls	r2, r6, #26
 8003fc6:	d516      	bpl.n	8003ff6 <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003fc8:	04ab      	lsls	r3, r5, #18
 8003fca:	d514      	bpl.n	8003ff6 <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003fcc:	6823      	ldr	r3, [r4, #0]
 8003fce:	681a      	ldr	r2, [r3, #0]
 8003fd0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003fd4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003fd6:	2220      	movs	r2, #32
 8003fd8:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003fda:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003fdc:	f043 0302 	orr.w	r3, r3, #2
 8003fe0:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003fe2:	2304      	movs	r3, #4
 8003fe4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8003fe8:	2300      	movs	r3, #0
 8003fea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8003fee:	6963      	ldr	r3, [r4, #20]
 8003ff0:	b10b      	cbz	r3, 8003ff6 <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8003ff2:	4620      	mov	r0, r4
 8003ff4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003ff6:	0730      	lsls	r0, r6, #28
 8003ff8:	d516      	bpl.n	8004028 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003ffa:	0529      	lsls	r1, r5, #20
 8003ffc:	d514      	bpl.n	8004028 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003ffe:	6823      	ldr	r3, [r4, #0]
 8004000:	681a      	ldr	r2, [r3, #0]
 8004002:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004006:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004008:	2208      	movs	r2, #8
 800400a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800400c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800400e:	f043 0304 	orr.w	r3, r3, #4
 8004012:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004014:	2304      	movs	r3, #4
 8004016:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800401a:	2300      	movs	r3, #0
 800401c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004020:	6963      	ldr	r3, [r4, #20]
 8004022:	b10b      	cbz	r3, 8004028 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004024:	4620      	mov	r0, r4
 8004026:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004028:	0772      	lsls	r2, r6, #29
 800402a:	d50b      	bpl.n	8004044 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800402c:	056b      	lsls	r3, r5, #21
 800402e:	d509      	bpl.n	8004044 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004030:	6823      	ldr	r3, [r4, #0]
 8004032:	681a      	ldr	r2, [r3, #0]
 8004034:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004038:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800403a:	2204      	movs	r2, #4
 800403c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800403e:	4620      	mov	r0, r4
 8004040:	f7ff ffa2 	bl	8003f88 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004044:	07b0      	lsls	r0, r6, #30
 8004046:	d514      	bpl.n	8004072 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004048:	05a9      	lsls	r1, r5, #22
 800404a:	d512      	bpl.n	8004072 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800404c:	6823      	ldr	r3, [r4, #0]
 800404e:	681a      	ldr	r2, [r3, #0]
 8004050:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004054:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004056:	2202      	movs	r2, #2
 8004058:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800405a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800405c:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800405e:	2301      	movs	r3, #1
 8004060:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004064:	2300      	movs	r3, #0
 8004066:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 800406a:	6923      	ldr	r3, [r4, #16]
 800406c:	b10b      	cbz	r3, 8004072 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800406e:	4620      	mov	r0, r4
 8004070:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004072:	06f2      	lsls	r2, r6, #27
 8004074:	d513      	bpl.n	800409e <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004076:	04eb      	lsls	r3, r5, #19
 8004078:	d511      	bpl.n	800409e <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800407a:	6823      	ldr	r3, [r4, #0]
 800407c:	681a      	ldr	r2, [r3, #0]
 800407e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004082:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004084:	2210      	movs	r2, #16
 8004086:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004088:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800408a:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800408c:	2301      	movs	r3, #1
 800408e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004092:	2300      	movs	r3, #0
 8004094:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004098:	4620      	mov	r0, r4
 800409a:	f7ff ff76 	bl	8003f8a <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800409e:	bd70      	pop	{r4, r5, r6, pc}

080040a0 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 80040a0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80040a4:	2b01      	cmp	r3, #1
{
 80040a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040a8:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80040ac:	d036      	beq.n	800411c <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80040ae:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 80040b0:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80040b2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80040b6:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 80040b8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80040bc:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 80040c0:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80040c4:	3d09      	subs	r5, #9
 80040c6:	2d01      	cmp	r5, #1
 80040c8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80040ca:	4f19      	ldr	r7, [pc, #100]	; (8004130 <HAL_DMA2D_ConfigLayer+0x90>)
 80040cc:	6803      	ldr	r3, [r0, #0]
 80040ce:	d80f      	bhi.n	80040f0 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80040d0:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 80040d4:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80040d8:	b969      	cbnz	r1, 80040f6 <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80040da:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80040dc:	4039      	ands	r1, r7
 80040de:	430a      	orrs	r2, r1
 80040e0:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80040e2:	6982      	ldr	r2, [r0, #24]
 80040e4:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80040e6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80040e8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80040ec:	629a      	str	r2, [r3, #40]	; 0x28
 80040ee:	e00f      	b.n	8004110 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80040f0:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80040f4:	b1a1      	cbz	r1, 8004120 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80040f6:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80040f8:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80040fa:	4039      	ands	r1, r7
 80040fc:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80040fe:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004100:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004102:	bf98      	it	ls
 8004104:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004108:	69b2      	ldr	r2, [r6, #24]
 800410a:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800410c:	bf98      	it	ls
 800410e:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004110:	2301      	movs	r3, #1
 8004112:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004116:	2300      	movs	r3, #0
 8004118:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800411c:	4618      	mov	r0, r3
}
 800411e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004120:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004122:	4039      	ands	r1, r7
 8004124:	430a      	orrs	r2, r1
 8004126:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004128:	6982      	ldr	r2, [r0, #24]
 800412a:	619a      	str	r2, [r3, #24]
 800412c:	e7f0      	b.n	8004110 <HAL_DMA2D_ConfigLayer+0x70>
 800412e:	bf00      	nop
 8004130:	00fcfff0 	.word	0x00fcfff0

08004134 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004138:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800413a:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800413c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8004304 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004140:	4a6e      	ldr	r2, [pc, #440]	; (80042fc <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004142:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8004308 <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004146:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004148:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 800414a:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800414c:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 800414e:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004150:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8004152:	42ac      	cmp	r4, r5
 8004154:	f040 80b8 	bne.w	80042c8 <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004158:	684c      	ldr	r4, [r1, #4]
 800415a:	f024 0c10 	bic.w	ip, r4, #16
 800415e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8004162:	2603      	movs	r6, #3
 8004164:	f10c 37ff 	add.w	r7, ip, #4294967295
 8004168:	fa06 f60e 	lsl.w	r6, r6, lr
 800416c:	2f01      	cmp	r7, #1
 800416e:	ea6f 0606 	mvn.w	r6, r6
 8004172:	d811      	bhi.n	8004198 <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 8004174:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004176:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800417a:	68cf      	ldr	r7, [r1, #12]
 800417c:	fa07 f70e 	lsl.w	r7, r7, lr
 8004180:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004184:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004186:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004188:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800418c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004190:	409f      	lsls	r7, r3
 8004192:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8004196:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004198:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800419a:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800419e:	688f      	ldr	r7, [r1, #8]
 80041a0:	fa07 f70e 	lsl.w	r7, r7, lr
 80041a4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80041a8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80041ac:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80041ae:	d116      	bne.n	80041de <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 80041b0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80041b4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80041b8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80041bc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80041c0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80041c4:	f04f 0c0f 	mov.w	ip, #15
 80041c8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80041cc:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80041d0:	690f      	ldr	r7, [r1, #16]
 80041d2:	fa07 f70b 	lsl.w	r7, r7, fp
 80041d6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80041da:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80041de:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80041e0:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80041e2:	f004 0703 	and.w	r7, r4, #3
 80041e6:	fa07 fe0e 	lsl.w	lr, r7, lr
 80041ea:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 80041ee:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80041f0:	00e6      	lsls	r6, r4, #3
 80041f2:	d569      	bpl.n	80042c8 <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80041f4:	f04f 0b00 	mov.w	fp, #0
 80041f8:	f8cd b00c 	str.w	fp, [sp, #12]
 80041fc:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004200:	4e3f      	ldr	r6, [pc, #252]	; (8004300 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004202:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004206:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800420a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800420e:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004212:	9703      	str	r7, [sp, #12]
 8004214:	9f03      	ldr	r7, [sp, #12]
 8004216:	f023 0703 	bic.w	r7, r3, #3
 800421a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800421e:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004222:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004226:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800422a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800422e:	f04f 0c0f 	mov.w	ip, #15
 8004232:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004236:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004238:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800423c:	d04b      	beq.n	80042d6 <HAL_GPIO_Init+0x1a2>
 800423e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004242:	42b0      	cmp	r0, r6
 8004244:	d049      	beq.n	80042da <HAL_GPIO_Init+0x1a6>
 8004246:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800424a:	42b0      	cmp	r0, r6
 800424c:	d047      	beq.n	80042de <HAL_GPIO_Init+0x1aa>
 800424e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004252:	42b0      	cmp	r0, r6
 8004254:	d045      	beq.n	80042e2 <HAL_GPIO_Init+0x1ae>
 8004256:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800425a:	42b0      	cmp	r0, r6
 800425c:	d043      	beq.n	80042e6 <HAL_GPIO_Init+0x1b2>
 800425e:	4548      	cmp	r0, r9
 8004260:	d043      	beq.n	80042ea <HAL_GPIO_Init+0x1b6>
 8004262:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 8004266:	42b0      	cmp	r0, r6
 8004268:	d041      	beq.n	80042ee <HAL_GPIO_Init+0x1ba>
 800426a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800426e:	42b0      	cmp	r0, r6
 8004270:	d03f      	beq.n	80042f2 <HAL_GPIO_Init+0x1be>
 8004272:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004276:	42b0      	cmp	r0, r6
 8004278:	d03d      	beq.n	80042f6 <HAL_GPIO_Init+0x1c2>
 800427a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800427e:	42b0      	cmp	r0, r6
 8004280:	bf14      	ite	ne
 8004282:	260a      	movne	r6, #10
 8004284:	2609      	moveq	r6, #9
 8004286:	fa06 f60e 	lsl.w	r6, r6, lr
 800428a:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 800428e:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 8004290:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004292:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004294:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8004298:	bf0c      	ite	eq
 800429a:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 800429c:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 800429e:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 80042a0:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80042a2:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80042a6:	bf0c      	ite	eq
 80042a8:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80042aa:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 80042ac:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80042ae:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80042b0:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80042b4:	bf0c      	ite	eq
 80042b6:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80042b8:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 80042ba:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 80042bc:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80042be:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80042c0:	bf54      	ite	pl
 80042c2:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80042c4:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 80042c6:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80042c8:	3301      	adds	r3, #1
 80042ca:	2b10      	cmp	r3, #16
 80042cc:	f47f af3d 	bne.w	800414a <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 80042d0:	b005      	add	sp, #20
 80042d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80042d6:	465e      	mov	r6, fp
 80042d8:	e7d5      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042da:	2601      	movs	r6, #1
 80042dc:	e7d3      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042de:	2602      	movs	r6, #2
 80042e0:	e7d1      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042e2:	2603      	movs	r6, #3
 80042e4:	e7cf      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042e6:	2604      	movs	r6, #4
 80042e8:	e7cd      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042ea:	2605      	movs	r6, #5
 80042ec:	e7cb      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042ee:	2606      	movs	r6, #6
 80042f0:	e7c9      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042f2:	2607      	movs	r6, #7
 80042f4:	e7c7      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042f6:	2608      	movs	r6, #8
 80042f8:	e7c5      	b.n	8004286 <HAL_GPIO_Init+0x152>
 80042fa:	bf00      	nop
 80042fc:	40013c00 	.word	0x40013c00
 8004300:	40020000 	.word	0x40020000
 8004304:	40023800 	.word	0x40023800
 8004308:	40021400 	.word	0x40021400

0800430c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800430c:	b10a      	cbz	r2, 8004312 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800430e:	6181      	str	r1, [r0, #24]
  }
}
 8004310:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004312:	0409      	lsls	r1, r1, #16
 8004314:	e7fb      	b.n	800430e <HAL_GPIO_WritePin+0x2>

08004316 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004316:	6801      	ldr	r1, [r0, #0]
 8004318:	694b      	ldr	r3, [r1, #20]
 800431a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800431e:	f04f 0200 	mov.w	r2, #0
 8004322:	d010      	beq.n	8004346 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004324:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004328:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800432a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800432c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800432e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004332:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004336:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004338:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800433c:	f043 0304 	orr.w	r3, r3, #4
 8004340:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004342:	2001      	movs	r0, #1
 8004344:	4770      	bx	lr
  }
  return HAL_OK;
 8004346:	4618      	mov	r0, r3
}
 8004348:	4770      	bx	lr

0800434a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800434a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800434e:	4604      	mov	r4, r0
 8004350:	4616      	mov	r6, r2
 8004352:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004354:	b28f      	uxth	r7, r1
 8004356:	6825      	ldr	r5, [r4, #0]
 8004358:	6968      	ldr	r0, [r5, #20]
 800435a:	ea37 0000 	bics.w	r0, r7, r0
 800435e:	d017      	beq.n	8004390 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004360:	696b      	ldr	r3, [r5, #20]
 8004362:	055a      	lsls	r2, r3, #21
 8004364:	d516      	bpl.n	8004394 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004366:	682b      	ldr	r3, [r5, #0]
 8004368:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800436c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800436e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004372:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004374:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004376:	2300      	movs	r3, #0
 8004378:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800437a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800437e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004382:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004384:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004388:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800438a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800438e:	2001      	movs	r0, #1
}
 8004390:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004394:	1c73      	adds	r3, r6, #1
 8004396:	d0df      	beq.n	8004358 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004398:	f7ff f990 	bl	80036bc <HAL_GetTick>
 800439c:	eba0 0008 	sub.w	r0, r0, r8
 80043a0:	42b0      	cmp	r0, r6
 80043a2:	d801      	bhi.n	80043a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 80043a4:	2e00      	cmp	r6, #0
 80043a6:	d1d6      	bne.n	8004356 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80043a8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80043aa:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80043ac:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80043ae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80043b2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80043b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80043b8:	f042 0220 	orr.w	r2, r2, #32
 80043bc:	e7e4      	b.n	8004388 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

080043be <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80043be:	b570      	push	{r4, r5, r6, lr}
 80043c0:	4604      	mov	r4, r0
 80043c2:	460d      	mov	r5, r1
 80043c4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80043c6:	6823      	ldr	r3, [r4, #0]
 80043c8:	695b      	ldr	r3, [r3, #20]
 80043ca:	075b      	lsls	r3, r3, #29
 80043cc:	d501      	bpl.n	80043d2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80043ce:	2000      	movs	r0, #0
}
 80043d0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80043d2:	4620      	mov	r0, r4
 80043d4:	f7ff ff9f 	bl	8004316 <I2C_IsAcknowledgeFailed>
 80043d8:	b9a8      	cbnz	r0, 8004406 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80043da:	1c6a      	adds	r2, r5, #1
 80043dc:	d0f3      	beq.n	80043c6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80043de:	f7ff f96d 	bl	80036bc <HAL_GetTick>
 80043e2:	1b80      	subs	r0, r0, r6
 80043e4:	42a8      	cmp	r0, r5
 80043e6:	d801      	bhi.n	80043ec <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80043e8:	2d00      	cmp	r5, #0
 80043ea:	d1ec      	bne.n	80043c6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80043ec:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80043ee:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80043f0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80043f2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80043f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80043fa:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80043fc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004400:	f042 0220 	orr.w	r2, r2, #32
 8004404:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004406:	2001      	movs	r0, #1
 8004408:	e7e2      	b.n	80043d0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800440a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800440a:	b570      	push	{r4, r5, r6, lr}
 800440c:	4604      	mov	r4, r0
 800440e:	460d      	mov	r5, r1
 8004410:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004412:	6820      	ldr	r0, [r4, #0]
 8004414:	6943      	ldr	r3, [r0, #20]
 8004416:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800441a:	d001      	beq.n	8004420 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800441c:	2000      	movs	r0, #0
 800441e:	e010      	b.n	8004442 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004420:	6942      	ldr	r2, [r0, #20]
 8004422:	06d2      	lsls	r2, r2, #27
 8004424:	d50e      	bpl.n	8004444 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004426:	f06f 0210 	mvn.w	r2, #16
 800442a:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800442c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800442e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004430:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004434:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004438:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800443a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800443c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004440:	2001      	movs	r0, #1
}
 8004442:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004444:	f7ff f93a 	bl	80036bc <HAL_GetTick>
 8004448:	1b80      	subs	r0, r0, r6
 800444a:	42a8      	cmp	r0, r5
 800444c:	d801      	bhi.n	8004452 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800444e:	2d00      	cmp	r5, #0
 8004450:	d1df      	bne.n	8004412 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004452:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004454:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004456:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004458:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800445c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004460:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004462:	f042 0220 	orr.w	r2, r2, #32
 8004466:	e7e8      	b.n	800443a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004468 <I2C_WaitOnFlagUntilTimeout>:
{
 8004468:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800446c:	9e08      	ldr	r6, [sp, #32]
 800446e:	4604      	mov	r4, r0
 8004470:	4690      	mov	r8, r2
 8004472:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004474:	ea4f 4911 	mov.w	r9, r1, lsr #16
 8004478:	b28d      	uxth	r5, r1
 800447a:	6821      	ldr	r1, [r4, #0]
 800447c:	f1b9 0f01 	cmp.w	r9, #1
 8004480:	bf0c      	ite	eq
 8004482:	694b      	ldreq	r3, [r1, #20]
 8004484:	698b      	ldrne	r3, [r1, #24]
 8004486:	ea35 0303 	bics.w	r3, r5, r3
 800448a:	bf0c      	ite	eq
 800448c:	2301      	moveq	r3, #1
 800448e:	2300      	movne	r3, #0
 8004490:	4598      	cmp	r8, r3
 8004492:	d001      	beq.n	8004498 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004494:	2000      	movs	r0, #0
 8004496:	e016      	b.n	80044c6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 8004498:	1c7b      	adds	r3, r7, #1
 800449a:	d0ef      	beq.n	800447c <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800449c:	f7ff f90e 	bl	80036bc <HAL_GetTick>
 80044a0:	1b80      	subs	r0, r0, r6
 80044a2:	42b8      	cmp	r0, r7
 80044a4:	d801      	bhi.n	80044aa <I2C_WaitOnFlagUntilTimeout+0x42>
 80044a6:	2f00      	cmp	r7, #0
 80044a8:	d1e7      	bne.n	800447a <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80044aa:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80044ac:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80044ae:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80044b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80044b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80044b8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80044ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80044be:	f042 0220 	orr.w	r2, r2, #32
 80044c2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80044c4:	2001      	movs	r0, #1
}
 80044c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080044ca <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80044ca:	b570      	push	{r4, r5, r6, lr}
 80044cc:	4604      	mov	r4, r0
 80044ce:	460d      	mov	r5, r1
 80044d0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80044d2:	6823      	ldr	r3, [r4, #0]
 80044d4:	695b      	ldr	r3, [r3, #20]
 80044d6:	061b      	lsls	r3, r3, #24
 80044d8:	d501      	bpl.n	80044de <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80044da:	2000      	movs	r0, #0
}
 80044dc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80044de:	4620      	mov	r0, r4
 80044e0:	f7ff ff19 	bl	8004316 <I2C_IsAcknowledgeFailed>
 80044e4:	b9a8      	cbnz	r0, 8004512 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80044e6:	1c6a      	adds	r2, r5, #1
 80044e8:	d0f3      	beq.n	80044d2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80044ea:	f7ff f8e7 	bl	80036bc <HAL_GetTick>
 80044ee:	1b80      	subs	r0, r0, r6
 80044f0:	42a8      	cmp	r0, r5
 80044f2:	d801      	bhi.n	80044f8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80044f4:	2d00      	cmp	r5, #0
 80044f6:	d1ec      	bne.n	80044d2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80044f8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80044fa:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80044fc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80044fe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004502:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004506:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004508:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800450c:	f042 0220 	orr.w	r2, r2, #32
 8004510:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004512:	2001      	movs	r0, #1
 8004514:	e7e2      	b.n	80044dc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08004518 <I2C_RequestMemoryWrite>:
{
 8004518:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800451c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800451e:	6802      	ldr	r2, [r0, #0]
{
 8004520:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004522:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004524:	6813      	ldr	r3, [r2, #0]
 8004526:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800452a:	6013      	str	r3, [r2, #0]
{
 800452c:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800452e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004530:	9600      	str	r6, [sp, #0]
 8004532:	2200      	movs	r2, #0
 8004534:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004538:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800453a:	f7ff ff95 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 800453e:	6823      	ldr	r3, [r4, #0]
 8004540:	b138      	cbz	r0, 8004552 <I2C_RequestMemoryWrite+0x3a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	05db      	lsls	r3, r3, #23
 8004546:	d502      	bpl.n	800454e <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004548:	f44f 7300 	mov.w	r3, #512	; 0x200
 800454c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800454e:	2003      	movs	r0, #3
 8004550:	e00a      	b.n	8004568 <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004552:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 8004556:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004558:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800455a:	4919      	ldr	r1, [pc, #100]	; (80045c0 <I2C_RequestMemoryWrite+0xa8>)
 800455c:	4633      	mov	r3, r6
 800455e:	4620      	mov	r0, r4
 8004560:	f7ff fef3 	bl	800434a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004564:	b118      	cbz	r0, 800456e <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 8004566:	2001      	movs	r0, #1
}
 8004568:	b004      	add	sp, #16
 800456a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800456e:	6823      	ldr	r3, [r4, #0]
 8004570:	9003      	str	r0, [sp, #12]
 8004572:	695a      	ldr	r2, [r3, #20]
 8004574:	9203      	str	r2, [sp, #12]
 8004576:	699b      	ldr	r3, [r3, #24]
 8004578:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800457a:	4632      	mov	r2, r6
 800457c:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800457e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004580:	4620      	mov	r0, r4
 8004582:	f7ff ffa2 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 8004586:	b140      	cbz	r0, 800459a <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004588:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800458a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800458c:	bf01      	itttt	eq
 800458e:	6822      	ldreq	r2, [r4, #0]
 8004590:	6813      	ldreq	r3, [r2, #0]
 8004592:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004596:	6013      	streq	r3, [r2, #0]
 8004598:	e7e5      	b.n	8004566 <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800459a:	f1b8 0f01 	cmp.w	r8, #1
 800459e:	6823      	ldr	r3, [r4, #0]
 80045a0:	d102      	bne.n	80045a8 <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80045a2:	b2ed      	uxtb	r5, r5
 80045a4:	611d      	str	r5, [r3, #16]
 80045a6:	e7df      	b.n	8004568 <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80045a8:	0a2a      	lsrs	r2, r5, #8
 80045aa:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80045ac:	990a      	ldr	r1, [sp, #40]	; 0x28
 80045ae:	4632      	mov	r2, r6
 80045b0:	4620      	mov	r0, r4
 80045b2:	f7ff ff8a 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 80045b6:	2800      	cmp	r0, #0
 80045b8:	d1e6      	bne.n	8004588 <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80045ba:	6823      	ldr	r3, [r4, #0]
 80045bc:	e7f1      	b.n	80045a2 <I2C_RequestMemoryWrite+0x8a>
 80045be:	bf00      	nop
 80045c0:	00010002 	.word	0x00010002

080045c4 <I2C_RequestMemoryRead>:
{
 80045c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80045c8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80045ca:	6803      	ldr	r3, [r0, #0]
{
 80045cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80045ce:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80045d0:	681a      	ldr	r2, [r3, #0]
 80045d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80045d6:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80045d8:	681a      	ldr	r2, [r3, #0]
 80045da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80045de:	601a      	str	r2, [r3, #0]
{
 80045e0:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80045e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80045e4:	9500      	str	r5, [sp, #0]
 80045e6:	2200      	movs	r2, #0
 80045e8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80045ec:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80045ee:	f7ff ff3b 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 80045f2:	6823      	ldr	r3, [r4, #0]
 80045f4:	b148      	cbz	r0, 800460a <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	05db      	lsls	r3, r3, #23
 80045fa:	d502      	bpl.n	8004602 <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80045fc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004600:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004602:	2003      	movs	r0, #3
}
 8004604:	b004      	add	sp, #16
 8004606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800460a:	b2ff      	uxtb	r7, r7
 800460c:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8004610:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004612:	492a      	ldr	r1, [pc, #168]	; (80046bc <I2C_RequestMemoryRead+0xf8>)
 8004614:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004616:	462b      	mov	r3, r5
 8004618:	4620      	mov	r0, r4
 800461a:	f7ff fe96 	bl	800434a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800461e:	b108      	cbz	r0, 8004624 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8004620:	2001      	movs	r0, #1
 8004622:	e7ef      	b.n	8004604 <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004624:	6823      	ldr	r3, [r4, #0]
 8004626:	9003      	str	r0, [sp, #12]
 8004628:	695a      	ldr	r2, [r3, #20]
 800462a:	9203      	str	r2, [sp, #12]
 800462c:	699b      	ldr	r3, [r3, #24]
 800462e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004630:	462a      	mov	r2, r5
 8004632:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004634:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004636:	4620      	mov	r0, r4
 8004638:	f7ff ff47 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 800463c:	b140      	cbz	r0, 8004650 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800463e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004640:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004642:	bf01      	itttt	eq
 8004644:	6822      	ldreq	r2, [r4, #0]
 8004646:	6813      	ldreq	r3, [r2, #0]
 8004648:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800464c:	6013      	streq	r3, [r2, #0]
 800464e:	e7e7      	b.n	8004620 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004650:	f1b8 0f01 	cmp.w	r8, #1
 8004654:	6823      	ldr	r3, [r4, #0]
 8004656:	d125      	bne.n	80046a4 <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004658:	b2f6      	uxtb	r6, r6
 800465a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800465c:	462a      	mov	r2, r5
 800465e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004660:	4620      	mov	r0, r4
 8004662:	f7ff ff32 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 8004666:	4602      	mov	r2, r0
 8004668:	2800      	cmp	r0, #0
 800466a:	d1e8      	bne.n	800463e <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800466c:	6821      	ldr	r1, [r4, #0]
 800466e:	680b      	ldr	r3, [r1, #0]
 8004670:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004674:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004676:	4620      	mov	r0, r4
 8004678:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800467a:	9500      	str	r5, [sp, #0]
 800467c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004680:	f7ff fef2 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 8004684:	6823      	ldr	r3, [r4, #0]
 8004686:	2800      	cmp	r0, #0
 8004688:	d1b5      	bne.n	80045f6 <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800468a:	f047 0701 	orr.w	r7, r7, #1
 800468e:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004690:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004692:	490a      	ldr	r1, [pc, #40]	; (80046bc <I2C_RequestMemoryRead+0xf8>)
 8004694:	462b      	mov	r3, r5
 8004696:	4620      	mov	r0, r4
 8004698:	f7ff fe57 	bl	800434a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800469c:	3000      	adds	r0, #0
 800469e:	bf18      	it	ne
 80046a0:	2001      	movne	r0, #1
 80046a2:	e7af      	b.n	8004604 <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80046a4:	0a32      	lsrs	r2, r6, #8
 80046a6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80046a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80046aa:	462a      	mov	r2, r5
 80046ac:	4620      	mov	r0, r4
 80046ae:	f7ff ff0c 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 80046b2:	2800      	cmp	r0, #0
 80046b4:	d1c3      	bne.n	800463e <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80046b6:	6823      	ldr	r3, [r4, #0]
 80046b8:	e7ce      	b.n	8004658 <I2C_RequestMemoryRead+0x94>
 80046ba:	bf00      	nop
 80046bc:	00010002 	.word	0x00010002

080046c0 <HAL_I2C_Init>:
{
 80046c0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80046c2:	4604      	mov	r4, r0
 80046c4:	b908      	cbnz	r0, 80046ca <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80046c6:	2001      	movs	r0, #1
}
 80046c8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80046ca:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80046ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80046d2:	b91b      	cbnz	r3, 80046dc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80046d4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80046d8:	f7fd f9ca 	bl	8001a70 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80046dc:	2324      	movs	r3, #36	; 0x24
 80046de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80046e2:	6823      	ldr	r3, [r4, #0]
 80046e4:	681a      	ldr	r2, [r3, #0]
 80046e6:	f022 0201 	bic.w	r2, r2, #1
 80046ea:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80046ec:	681a      	ldr	r2, [r3, #0]
 80046ee:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80046f2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80046f4:	681a      	ldr	r2, [r3, #0]
 80046f6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80046fa:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80046fc:	f000 fe6c 	bl	80053d8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004700:	6863      	ldr	r3, [r4, #4]
 8004702:	4a41      	ldr	r2, [pc, #260]	; (8004808 <HAL_I2C_Init+0x148>)
 8004704:	4293      	cmp	r3, r2
 8004706:	d84d      	bhi.n	80047a4 <HAL_I2C_Init+0xe4>
 8004708:	4a40      	ldr	r2, [pc, #256]	; (800480c <HAL_I2C_Init+0x14c>)
 800470a:	4290      	cmp	r0, r2
 800470c:	d9db      	bls.n	80046c6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800470e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004710:	493f      	ldr	r1, [pc, #252]	; (8004810 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004712:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004714:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004718:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800471c:	430d      	orrs	r5, r1
 800471e:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004720:	6a15      	ldr	r5, [r2, #32]
 8004722:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004726:	3101      	adds	r1, #1
 8004728:	4329      	orrs	r1, r5
 800472a:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800472c:	69d1      	ldr	r1, [r2, #28]
 800472e:	4d36      	ldr	r5, [pc, #216]	; (8004808 <HAL_I2C_Init+0x148>)
 8004730:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8004734:	42ab      	cmp	r3, r5
 8004736:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800473a:	f100 30ff 	add.w	r0, r0, #4294967295
 800473e:	d848      	bhi.n	80047d2 <HAL_I2C_Init+0x112>
 8004740:	005b      	lsls	r3, r3, #1
 8004742:	fbb0 f0f3 	udiv	r0, r0, r3
 8004746:	1c43      	adds	r3, r0, #1
 8004748:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800474c:	2b04      	cmp	r3, #4
 800474e:	bf38      	it	cc
 8004750:	2304      	movcc	r3, #4
 8004752:	430b      	orrs	r3, r1
 8004754:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004756:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800475a:	6811      	ldr	r1, [r2, #0]
 800475c:	4303      	orrs	r3, r0
 800475e:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004762:	430b      	orrs	r3, r1
 8004764:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004766:	6891      	ldr	r1, [r2, #8]
 8004768:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800476c:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004770:	4303      	orrs	r3, r0
 8004772:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004776:	430b      	orrs	r3, r1
 8004778:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800477a:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800477e:	68d1      	ldr	r1, [r2, #12]
 8004780:	4303      	orrs	r3, r0
 8004782:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004786:	430b      	orrs	r3, r1
 8004788:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800478a:	6813      	ldr	r3, [r2, #0]
 800478c:	f043 0301 	orr.w	r3, r3, #1
 8004790:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004792:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004794:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004796:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004798:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800479c:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800479e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80047a2:	e791      	b.n	80046c8 <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80047a4:	4a1b      	ldr	r2, [pc, #108]	; (8004814 <HAL_I2C_Init+0x154>)
 80047a6:	4290      	cmp	r0, r2
 80047a8:	d98d      	bls.n	80046c6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80047aa:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80047ac:	4e18      	ldr	r6, [pc, #96]	; (8004810 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80047ae:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80047b0:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80047b4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80047b8:	4335      	orrs	r5, r6
 80047ba:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80047bc:	6a15      	ldr	r5, [r2, #32]
 80047be:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80047c2:	4371      	muls	r1, r6
 80047c4:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80047c8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80047cc:	fbb1 f1f6 	udiv	r1, r1, r6
 80047d0:	e7a9      	b.n	8004726 <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80047d2:	68a5      	ldr	r5, [r4, #8]
 80047d4:	b955      	cbnz	r5, 80047ec <HAL_I2C_Init+0x12c>
 80047d6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80047da:	fbb0 f0f3 	udiv	r0, r0, r3
 80047de:	1c43      	adds	r3, r0, #1
 80047e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80047e4:	b16b      	cbz	r3, 8004802 <HAL_I2C_Init+0x142>
 80047e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80047ea:	e7b2      	b.n	8004752 <HAL_I2C_Init+0x92>
 80047ec:	2519      	movs	r5, #25
 80047ee:	436b      	muls	r3, r5
 80047f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80047f4:	1c43      	adds	r3, r0, #1
 80047f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80047fa:	b113      	cbz	r3, 8004802 <HAL_I2C_Init+0x142>
 80047fc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004800:	e7a7      	b.n	8004752 <HAL_I2C_Init+0x92>
 8004802:	2301      	movs	r3, #1
 8004804:	e7a5      	b.n	8004752 <HAL_I2C_Init+0x92>
 8004806:	bf00      	nop
 8004808:	000186a0 	.word	0x000186a0
 800480c:	001e847f 	.word	0x001e847f
 8004810:	000f4240 	.word	0x000f4240
 8004814:	003d08ff 	.word	0x003d08ff

08004818 <HAL_I2C_Mem_Write>:
{
 8004818:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800481c:	4604      	mov	r4, r0
 800481e:	4699      	mov	r9, r3
 8004820:	460f      	mov	r7, r1
 8004822:	4690      	mov	r8, r2
 8004824:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8004826:	f7fe ff49 	bl	80036bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800482a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800482e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004830:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004832:	d003      	beq.n	800483c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004834:	2002      	movs	r0, #2
}
 8004836:	b003      	add	sp, #12
 8004838:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800483c:	9000      	str	r0, [sp, #0]
 800483e:	2319      	movs	r3, #25
 8004840:	2201      	movs	r2, #1
 8004842:	493b      	ldr	r1, [pc, #236]	; (8004930 <HAL_I2C_Mem_Write+0x118>)
 8004844:	4620      	mov	r0, r4
 8004846:	f7ff fe0f 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 800484a:	2800      	cmp	r0, #0
 800484c:	d1f2      	bne.n	8004834 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800484e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004852:	2b01      	cmp	r3, #1
 8004854:	d0ee      	beq.n	8004834 <HAL_I2C_Mem_Write+0x1c>
 8004856:	2301      	movs	r3, #1
 8004858:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800485c:	6823      	ldr	r3, [r4, #0]
 800485e:	681a      	ldr	r2, [r3, #0]
 8004860:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004862:	bf5e      	ittt	pl
 8004864:	681a      	ldrpl	r2, [r3, #0]
 8004866:	f042 0201 	orrpl.w	r2, r2, #1
 800486a:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004872:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004874:	2321      	movs	r3, #33	; 0x21
 8004876:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800487a:	2340      	movs	r3, #64	; 0x40
 800487c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004880:	2300      	movs	r3, #0
 8004882:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004884:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004886:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004888:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800488c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800488e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004890:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004892:	4b28      	ldr	r3, [pc, #160]	; (8004934 <HAL_I2C_Mem_Write+0x11c>)
 8004894:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004896:	e9cd 6500 	strd	r6, r5, [sp]
 800489a:	464b      	mov	r3, r9
 800489c:	4642      	mov	r2, r8
 800489e:	4639      	mov	r1, r7
 80048a0:	4620      	mov	r0, r4
 80048a2:	f7ff fe39 	bl	8004518 <I2C_RequestMemoryWrite>
 80048a6:	2800      	cmp	r0, #0
 80048a8:	d02a      	beq.n	8004900 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80048aa:	2001      	movs	r0, #1
 80048ac:	e7c3      	b.n	8004836 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80048ae:	f7ff fe0c 	bl	80044ca <I2C_WaitOnTXEFlagUntilTimeout>
 80048b2:	b140      	cbz	r0, 80048c6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80048b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80048b6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048b8:	bf01      	itttt	eq
 80048ba:	6822      	ldreq	r2, [r4, #0]
 80048bc:	6813      	ldreq	r3, [r2, #0]
 80048be:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80048c2:	6013      	streq	r3, [r2, #0]
 80048c4:	e7f1      	b.n	80048aa <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80048c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80048c8:	6827      	ldr	r7, [r4, #0]
 80048ca:	461a      	mov	r2, r3
 80048cc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80048d0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80048d2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80048d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80048d6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80048d8:	3a01      	subs	r2, #1
 80048da:	b292      	uxth	r2, r2
 80048dc:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80048de:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80048e0:	1e48      	subs	r0, r1, #1
 80048e2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80048e4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80048e6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80048e8:	d50a      	bpl.n	8004900 <HAL_I2C_Mem_Write+0xe8>
 80048ea:	b148      	cbz	r0, 8004900 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80048ec:	785a      	ldrb	r2, [r3, #1]
 80048ee:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80048f0:	3302      	adds	r3, #2
 80048f2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80048f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80048f6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80048f8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80048fa:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80048fc:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80048fe:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004900:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004902:	462a      	mov	r2, r5
 8004904:	4631      	mov	r1, r6
 8004906:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004908:	2b00      	cmp	r3, #0
 800490a:	d1d0      	bne.n	80048ae <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800490c:	f7ff fd57 	bl	80043be <I2C_WaitOnBTFFlagUntilTimeout>
 8004910:	2800      	cmp	r0, #0
 8004912:	d1cf      	bne.n	80048b4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004914:	6822      	ldr	r2, [r4, #0]
 8004916:	6813      	ldr	r3, [r2, #0]
 8004918:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800491c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800491e:	2320      	movs	r3, #32
 8004920:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004924:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004928:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800492c:	e783      	b.n	8004836 <HAL_I2C_Mem_Write+0x1e>
 800492e:	bf00      	nop
 8004930:	00100002 	.word	0x00100002
 8004934:	ffff0000 	.word	0xffff0000

08004938 <HAL_I2C_Mem_Read>:
{
 8004938:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800493c:	4604      	mov	r4, r0
 800493e:	b087      	sub	sp, #28
 8004940:	4699      	mov	r9, r3
 8004942:	460d      	mov	r5, r1
 8004944:	4690      	mov	r8, r2
 8004946:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8004948:	f7fe feb8 	bl	80036bc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800494c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004950:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004952:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004954:	d004      	beq.n	8004960 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004956:	2502      	movs	r5, #2
}
 8004958:	4628      	mov	r0, r5
 800495a:	b007      	add	sp, #28
 800495c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004960:	9000      	str	r0, [sp, #0]
 8004962:	2319      	movs	r3, #25
 8004964:	2201      	movs	r2, #1
 8004966:	4977      	ldr	r1, [pc, #476]	; (8004b44 <HAL_I2C_Mem_Read+0x20c>)
 8004968:	4620      	mov	r0, r4
 800496a:	f7ff fd7d 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 800496e:	2800      	cmp	r0, #0
 8004970:	d1f1      	bne.n	8004956 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004972:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004976:	2b01      	cmp	r3, #1
 8004978:	d0ed      	beq.n	8004956 <HAL_I2C_Mem_Read+0x1e>
 800497a:	2301      	movs	r3, #1
 800497c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004980:	6823      	ldr	r3, [r4, #0]
 8004982:	681a      	ldr	r2, [r3, #0]
 8004984:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004986:	bf5e      	ittt	pl
 8004988:	681a      	ldrpl	r2, [r3, #0]
 800498a:	f042 0201 	orrpl.w	r2, r2, #1
 800498e:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004990:	681a      	ldr	r2, [r3, #0]
 8004992:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004996:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004998:	2322      	movs	r3, #34	; 0x22
 800499a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800499e:	2340      	movs	r3, #64	; 0x40
 80049a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80049a4:	2300      	movs	r3, #0
 80049a6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80049a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80049aa:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80049ac:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80049b0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80049b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80049b4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80049b6:	4b64      	ldr	r3, [pc, #400]	; (8004b48 <HAL_I2C_Mem_Read+0x210>)
 80049b8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80049ba:	4629      	mov	r1, r5
 80049bc:	e9cd 7600 	strd	r7, r6, [sp]
 80049c0:	464b      	mov	r3, r9
 80049c2:	4642      	mov	r2, r8
 80049c4:	4620      	mov	r0, r4
 80049c6:	f7ff fdfd 	bl	80045c4 <I2C_RequestMemoryRead>
 80049ca:	4605      	mov	r5, r0
 80049cc:	b108      	cbz	r0, 80049d2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80049ce:	2501      	movs	r5, #1
 80049d0:	e7c2      	b.n	8004958 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80049d2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 80049d4:	6823      	ldr	r3, [r4, #0]
 80049d6:	b992      	cbnz	r2, 80049fe <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80049d8:	9002      	str	r0, [sp, #8]
 80049da:	695a      	ldr	r2, [r3, #20]
 80049dc:	9202      	str	r2, [sp, #8]
 80049de:	699a      	ldr	r2, [r3, #24]
 80049e0:	9202      	str	r2, [sp, #8]
 80049e2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80049e4:	681a      	ldr	r2, [r3, #0]
 80049e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80049ea:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80049ec:	2320      	movs	r3, #32
 80049ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80049f2:	2300      	movs	r3, #0
 80049f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 80049f8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 80049fc:	e7ac      	b.n	8004958 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80049fe:	2a01      	cmp	r2, #1
 8004a00:	d12c      	bne.n	8004a5c <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004a02:	681a      	ldr	r2, [r3, #0]
 8004a04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004a08:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a0a:	9003      	str	r0, [sp, #12]
 8004a0c:	695a      	ldr	r2, [r3, #20]
 8004a0e:	9203      	str	r2, [sp, #12]
 8004a10:	699a      	ldr	r2, [r3, #24]
 8004a12:	9203      	str	r2, [sp, #12]
 8004a14:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a16:	681a      	ldr	r2, [r3, #0]
 8004a18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004a1c:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a1e:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8004b4c <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8004a22:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004a24:	2b00      	cmp	r3, #0
 8004a26:	d0e1      	beq.n	80049ec <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004a28:	2b03      	cmp	r3, #3
 8004a2a:	d86e      	bhi.n	8004b0a <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8004a2c:	2b01      	cmp	r3, #1
 8004a2e:	d12d      	bne.n	8004a8c <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004a30:	4632      	mov	r2, r6
 8004a32:	4639      	mov	r1, r7
 8004a34:	4620      	mov	r0, r4
 8004a36:	f7ff fce8 	bl	800440a <I2C_WaitOnRXNEFlagUntilTimeout>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	d1c7      	bne.n	80049ce <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a3e:	6823      	ldr	r3, [r4, #0]
 8004a40:	691a      	ldr	r2, [r3, #16]
 8004a42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004a44:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004a46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004a48:	3301      	adds	r3, #1
 8004a4a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004a4c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004a4e:	3b01      	subs	r3, #1
 8004a50:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004a52:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004a54:	3b01      	subs	r3, #1
 8004a56:	b29b      	uxth	r3, r3
 8004a58:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004a5a:	e7e2      	b.n	8004a22 <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8004a5c:	2a02      	cmp	r2, #2
 8004a5e:	d10e      	bne.n	8004a7e <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004a60:	681a      	ldr	r2, [r3, #0]
 8004a62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004a66:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004a68:	681a      	ldr	r2, [r3, #0]
 8004a6a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004a6e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a70:	9004      	str	r0, [sp, #16]
 8004a72:	695a      	ldr	r2, [r3, #20]
 8004a74:	9204      	str	r2, [sp, #16]
 8004a76:	699b      	ldr	r3, [r3, #24]
 8004a78:	9304      	str	r3, [sp, #16]
 8004a7a:	9b04      	ldr	r3, [sp, #16]
 8004a7c:	e7cf      	b.n	8004a1e <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a7e:	9005      	str	r0, [sp, #20]
 8004a80:	695a      	ldr	r2, [r3, #20]
 8004a82:	9205      	str	r2, [sp, #20]
 8004a84:	699b      	ldr	r3, [r3, #24]
 8004a86:	9305      	str	r3, [sp, #20]
 8004a88:	9b05      	ldr	r3, [sp, #20]
 8004a8a:	e7c8      	b.n	8004a1e <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8004a8c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a8e:	9600      	str	r6, [sp, #0]
 8004a90:	463b      	mov	r3, r7
 8004a92:	f04f 0200 	mov.w	r2, #0
 8004a96:	4641      	mov	r1, r8
 8004a98:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004a9a:	d119      	bne.n	8004ad0 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a9c:	f7ff fce4 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 8004aa0:	2800      	cmp	r0, #0
 8004aa2:	d194      	bne.n	80049ce <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004aa4:	6823      	ldr	r3, [r4, #0]
 8004aa6:	681a      	ldr	r2, [r3, #0]
 8004aa8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004aac:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004aae:	691a      	ldr	r2, [r3, #16]
 8004ab0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ab2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004ab4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004ab6:	1c53      	adds	r3, r2, #1
 8004ab8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004aba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004abc:	3b01      	subs	r3, #1
 8004abe:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004ac0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ac2:	3b01      	subs	r3, #1
 8004ac4:	b29b      	uxth	r3, r3
 8004ac6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ac8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004aca:	691b      	ldr	r3, [r3, #16]
 8004acc:	7053      	strb	r3, [r2, #1]
 8004ace:	e7ba      	b.n	8004a46 <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ad0:	f7ff fcca 	bl	8004468 <I2C_WaitOnFlagUntilTimeout>
 8004ad4:	4602      	mov	r2, r0
 8004ad6:	2800      	cmp	r0, #0
 8004ad8:	f47f af79 	bne.w	80049ce <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004adc:	6823      	ldr	r3, [r4, #0]
 8004ade:	6819      	ldr	r1, [r3, #0]
 8004ae0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8004ae4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ae6:	6919      	ldr	r1, [r3, #16]
 8004ae8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004aea:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004aec:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004aee:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004af0:	3301      	adds	r3, #1
 8004af2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004af4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004af6:	3b01      	subs	r3, #1
 8004af8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004afa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004afc:	3b01      	subs	r3, #1
 8004afe:	b29b      	uxth	r3, r3
 8004b00:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004b02:	4641      	mov	r1, r8
 8004b04:	463b      	mov	r3, r7
 8004b06:	4620      	mov	r0, r4
 8004b08:	e7c8      	b.n	8004a9c <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b0a:	4632      	mov	r2, r6
 8004b0c:	4639      	mov	r1, r7
 8004b0e:	4620      	mov	r0, r4
 8004b10:	f7ff fc7b 	bl	800440a <I2C_WaitOnRXNEFlagUntilTimeout>
 8004b14:	2800      	cmp	r0, #0
 8004b16:	f47f af5a 	bne.w	80049ce <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b1a:	6823      	ldr	r3, [r4, #0]
 8004b1c:	691a      	ldr	r2, [r3, #16]
 8004b1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004b20:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004b22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004b24:	1c53      	adds	r3, r2, #1
 8004b26:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004b28:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004b2a:	3b01      	subs	r3, #1
 8004b2c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004b2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004b30:	3b01      	subs	r3, #1
 8004b32:	b29b      	uxth	r3, r3
 8004b34:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004b36:	6823      	ldr	r3, [r4, #0]
 8004b38:	6959      	ldr	r1, [r3, #20]
 8004b3a:	0749      	lsls	r1, r1, #29
 8004b3c:	f57f af71 	bpl.w	8004a22 <HAL_I2C_Mem_Read+0xea>
 8004b40:	e7c3      	b.n	8004aca <HAL_I2C_Mem_Read+0x192>
 8004b42:	bf00      	nop
 8004b44:	00100002 	.word	0x00100002
 8004b48:	ffff0000 	.word	0xffff0000
 8004b4c:	00010004 	.word	0x00010004

08004b50 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004b50:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8004b54:	b2d2      	uxtb	r2, r2
 8004b56:	2a20      	cmp	r2, #32
{
 8004b58:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004b5a:	d116      	bne.n	8004b8a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004b5c:	2324      	movs	r3, #36	; 0x24
 8004b5e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004b62:	6803      	ldr	r3, [r0, #0]
 8004b64:	681c      	ldr	r4, [r3, #0]
 8004b66:	f024 0401 	bic.w	r4, r4, #1
 8004b6a:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004b6c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004b6e:	f024 0410 	bic.w	r4, r4, #16
 8004b72:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004b74:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004b76:	4321      	orrs	r1, r4
 8004b78:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004b7a:	6819      	ldr	r1, [r3, #0]
 8004b7c:	f041 0101 	orr.w	r1, r1, #1
 8004b80:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004b82:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8004b86:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004b88:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004b8a:	2002      	movs	r0, #2
 8004b8c:	e7fc      	b.n	8004b88 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004b8e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004b8e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004b90:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8004b94:	b2e4      	uxtb	r4, r4
 8004b96:	2c20      	cmp	r4, #32
 8004b98:	d116      	bne.n	8004bc8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004b9a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004b9c:	2324      	movs	r3, #36	; 0x24
 8004b9e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004ba2:	6815      	ldr	r5, [r2, #0]
 8004ba4:	f025 0501 	bic.w	r5, r5, #1
 8004ba8:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004baa:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004bac:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004bb0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004bb2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004bb4:	b29b      	uxth	r3, r3
 8004bb6:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004bb8:	6813      	ldr	r3, [r2, #0]
 8004bba:	f043 0301 	orr.w	r3, r3, #1
 8004bbe:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004bc0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8004bc4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004bc6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004bc8:	2002      	movs	r0, #2
 8004bca:	e7fc      	b.n	8004bc6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08004bcc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004bcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004bd0:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004bd2:	6804      	ldr	r4, [r0, #0]
 8004bd4:	684f      	ldr	r7, [r1, #4]
 8004bd6:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004bd8:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004bdc:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004be0:	3284      	adds	r2, #132	; 0x84
 8004be2:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004be4:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004be8:	6858      	ldr	r0, [r3, #4]
 8004bea:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004bee:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004bf0:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004bf2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004bf6:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8004bfa:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004bfc:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004bfe:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004c02:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004c04:	68e0      	ldr	r0, [r4, #12]
 8004c06:	68cd      	ldr	r5, [r1, #12]
 8004c08:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8004c0c:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004c0e:	6898      	ldr	r0, [r3, #8]
 8004c10:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8004c14:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004c16:	68e6      	ldr	r6, [r4, #12]
 8004c18:	6888      	ldr	r0, [r1, #8]
 8004c1a:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8004c1e:	3001      	adds	r0, #1
 8004c20:	4430      	add	r0, r6
 8004c22:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004c26:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004c28:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004c2a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004c2c:	f020 0007 	bic.w	r0, r0, #7
 8004c30:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004c32:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004c36:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004c38:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004c3a:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004c3e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004c42:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004c46:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8004c4a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8004c4e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004c52:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8004c56:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004c58:	6958      	ldr	r0, [r3, #20]
 8004c5a:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8004c5e:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004c60:	6948      	ldr	r0, [r1, #20]
 8004c62:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004c64:	69d8      	ldr	r0, [r3, #28]
 8004c66:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8004c6a:	f020 0007 	bic.w	r0, r0, #7
 8004c6e:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004c70:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 8004c74:	4305      	orrs	r5, r0
 8004c76:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004c78:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004c7a:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004c7c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004c80:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004c82:	b31e      	cbz	r6, 8004ccc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004c84:	2e01      	cmp	r6, #1
 8004c86:	d023      	beq.n	8004cd0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004c88:	1eb0      	subs	r0, r6, #2
 8004c8a:	2802      	cmp	r0, #2
 8004c8c:	d922      	bls.n	8004cd4 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004c8e:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8004c90:	bf0c      	ite	eq
 8004c92:	2002      	moveq	r0, #2
 8004c94:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004c96:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8004c98:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 8004c9c:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004c9e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004ca0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004ca2:	eba7 070c 	sub.w	r7, r7, ip
 8004ca6:	4345      	muls	r5, r0
 8004ca8:	4378      	muls	r0, r7
 8004caa:	3003      	adds	r0, #3
 8004cac:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8004cb0:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004cb2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004cb4:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8004cb8:	f020 0007 	bic.w	r0, r0, #7
 8004cbc:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004cbe:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004cc0:	58a3      	ldr	r3, [r4, r2]
 8004cc2:	f043 0301 	orr.w	r3, r3, #1
 8004cc6:	50a3      	str	r3, [r4, r2]
}
 8004cc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8004ccc:	2004      	movs	r0, #4
 8004cce:	e7e2      	b.n	8004c96 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8004cd0:	2003      	movs	r0, #3
 8004cd2:	e7e0      	b.n	8004c96 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8004cd4:	2002      	movs	r0, #2
 8004cd6:	e7de      	b.n	8004c96 <LTDC_SetConfig+0xca>

08004cd8 <HAL_LTDC_Init>:
{
 8004cd8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004cda:	4604      	mov	r4, r0
 8004cdc:	2800      	cmp	r0, #0
 8004cde:	d063      	beq.n	8004da8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004ce0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8004ce4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004ce8:	b91b      	cbnz	r3, 8004cf2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004cea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8004cee:	f7fc ff1b 	bl	8001b28 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004cf2:	2302      	movs	r3, #2
 8004cf4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004cf8:	6823      	ldr	r3, [r4, #0]
 8004cfa:	699a      	ldr	r2, [r3, #24]
 8004cfc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8004d00:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004d02:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004d06:	4302      	orrs	r2, r0
 8004d08:	68e0      	ldr	r0, [r4, #12]
 8004d0a:	6999      	ldr	r1, [r3, #24]
 8004d0c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004d0e:	6920      	ldr	r0, [r4, #16]
 8004d10:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004d12:	430a      	orrs	r2, r1
 8004d14:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004d16:	689a      	ldr	r2, [r3, #8]
 8004d18:	4924      	ldr	r1, [pc, #144]	; (8004dac <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004d1a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004d1c:	400a      	ands	r2, r1
 8004d1e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004d20:	689a      	ldr	r2, [r3, #8]
 8004d22:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004d26:	69a0      	ldr	r0, [r4, #24]
 8004d28:	4302      	orrs	r2, r0
 8004d2a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004d2c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004d2e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004d30:	400a      	ands	r2, r1
 8004d32:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004d34:	68da      	ldr	r2, [r3, #12]
 8004d36:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004d3a:	6a20      	ldr	r0, [r4, #32]
 8004d3c:	4302      	orrs	r2, r0
 8004d3e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004d40:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004d42:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004d44:	400a      	ands	r2, r1
 8004d46:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004d48:	691a      	ldr	r2, [r3, #16]
 8004d4a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004d4e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8004d50:	4302      	orrs	r2, r0
 8004d52:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004d54:	695a      	ldr	r2, [r3, #20]
 8004d56:	4011      	ands	r1, r2
 8004d58:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004d5a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004d5c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004d5e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004d62:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004d64:	430a      	orrs	r2, r1
 8004d66:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004d68:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004d6a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004d6e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004d72:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8004d76:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004d78:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004d7a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8004d7e:	430a      	orrs	r2, r1
 8004d80:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8004d84:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004d88:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004d8a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004d8c:	f042 0206 	orr.w	r2, r2, #6
 8004d90:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004d92:	699a      	ldr	r2, [r3, #24]
 8004d94:	f042 0201 	orr.w	r2, r2, #1
 8004d98:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004d9a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004d9c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004d9e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004da2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8004da6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004da8:	2001      	movs	r0, #1
 8004daa:	e7fc      	b.n	8004da6 <HAL_LTDC_Init+0xce>
 8004dac:	f000f800 	.word	0xf000f800

08004db0 <HAL_LTDC_ErrorCallback>:
 8004db0:	4770      	bx	lr

08004db2 <HAL_LTDC_ReloadEventCallback>:
 8004db2:	4770      	bx	lr

08004db4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004db4:	6803      	ldr	r3, [r0, #0]
{
 8004db6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004db8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004dba:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004dbc:	0772      	lsls	r2, r6, #29
{
 8004dbe:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004dc0:	d514      	bpl.n	8004dec <HAL_LTDC_IRQHandler+0x38>
 8004dc2:	0769      	lsls	r1, r5, #29
 8004dc4:	d512      	bpl.n	8004dec <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004dc6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004dc8:	f022 0204 	bic.w	r2, r2, #4
 8004dcc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004dce:	2204      	movs	r2, #4
 8004dd0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004dd2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8004dd6:	f043 0301 	orr.w	r3, r3, #1
 8004dda:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8004dde:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004de0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004de4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004de8:	f7ff ffe2 	bl	8004db0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004dec:	07b2      	lsls	r2, r6, #30
 8004dee:	d516      	bpl.n	8004e1e <HAL_LTDC_IRQHandler+0x6a>
 8004df0:	07ab      	lsls	r3, r5, #30
 8004df2:	d514      	bpl.n	8004e1e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004df4:	6823      	ldr	r3, [r4, #0]
 8004df6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004df8:	f022 0202 	bic.w	r2, r2, #2
 8004dfc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004dfe:	2202      	movs	r2, #2
 8004e00:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004e02:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8004e06:	4313      	orrs	r3, r2
 8004e08:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004e0c:	2304      	movs	r3, #4
 8004e0e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004e12:	2300      	movs	r3, #0
 8004e14:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004e18:	4620      	mov	r0, r4
 8004e1a:	f7ff ffc9 	bl	8004db0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004e1e:	07f0      	lsls	r0, r6, #31
 8004e20:	d510      	bpl.n	8004e44 <HAL_LTDC_IRQHandler+0x90>
 8004e22:	07e9      	lsls	r1, r5, #31
 8004e24:	d50e      	bpl.n	8004e44 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004e26:	6823      	ldr	r3, [r4, #0]
 8004e28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004e2a:	f022 0201 	bic.w	r2, r2, #1
 8004e2e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004e30:	2201      	movs	r2, #1
 8004e32:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8004e34:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8004e36:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004e3a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004e3e:	4620      	mov	r0, r4
 8004e40:	f7fc f982 	bl	8001148 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004e44:	0732      	lsls	r2, r6, #28
 8004e46:	d511      	bpl.n	8004e6c <HAL_LTDC_IRQHandler+0xb8>
 8004e48:	072b      	lsls	r3, r5, #28
 8004e4a:	d50f      	bpl.n	8004e6c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004e4c:	6823      	ldr	r3, [r4, #0]
 8004e4e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004e50:	f022 0208 	bic.w	r2, r2, #8
 8004e54:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004e56:	2208      	movs	r2, #8
 8004e58:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004e5a:	2301      	movs	r3, #1
 8004e5c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004e60:	2300      	movs	r3, #0
 8004e62:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004e66:	4620      	mov	r0, r4
 8004e68:	f7ff ffa3 	bl	8004db2 <HAL_LTDC_ReloadEventCallback>
}
 8004e6c:	bd70      	pop	{r4, r5, r6, pc}

08004e6e <HAL_LTDC_ConfigLayer>:
{
 8004e6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 8004e70:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8004e74:	2b01      	cmp	r3, #1
{
 8004e76:	4606      	mov	r6, r0
 8004e78:	468c      	mov	ip, r1
 8004e7a:	4696      	mov	lr, r2
 8004e7c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004e80:	d01d      	beq.n	8004ebe <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004e82:	2434      	movs	r4, #52	; 0x34
 8004e84:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004e86:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004e8a:	fb04 6402 	mla	r4, r4, r2, r6
 8004e8e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 8004e90:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004e92:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 8004e94:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004e98:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004e9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004e9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004e9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ea0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004ea2:	682b      	ldr	r3, [r5, #0]
 8004ea4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004ea6:	4630      	mov	r0, r6
 8004ea8:	4672      	mov	r2, lr
 8004eaa:	4661      	mov	r1, ip
 8004eac:	f7ff fe8e 	bl	8004bcc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004eb0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004eb2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004eb4:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004eb6:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004eba:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8004ebe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004ec0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004ec0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8004ec4:	2b01      	cmp	r3, #1
 8004ec6:	f04f 0302 	mov.w	r3, #2
 8004eca:	d012      	beq.n	8004ef2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004ecc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004ed0:	6803      	ldr	r3, [r0, #0]
 8004ed2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004ed4:	f022 0201 	bic.w	r2, r2, #1
 8004ed8:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004eda:	4a07      	ldr	r2, [pc, #28]	; (8004ef8 <HAL_LTDC_ProgramLineEvent+0x38>)
 8004edc:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004ede:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004ee0:	f042 0201 	orr.w	r2, r2, #1
 8004ee4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8004ee6:	2301      	movs	r3, #1
 8004ee8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004eec:	2300      	movs	r3, #0
 8004eee:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8004ef2:	4618      	mov	r0, r3
}
 8004ef4:	4770      	bx	lr
 8004ef6:	bf00      	nop
 8004ef8:	40016800 	.word	0x40016800

08004efc <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004efc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004f00:	4604      	mov	r4, r0
 8004f02:	b908      	cbnz	r0, 8004f08 <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 8004f04:	2001      	movs	r0, #1
 8004f06:	e03f      	b.n	8004f88 <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004f08:	6803      	ldr	r3, [r0, #0]
 8004f0a:	07dd      	lsls	r5, r3, #31
 8004f0c:	d410      	bmi.n	8004f30 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004f0e:	6823      	ldr	r3, [r4, #0]
 8004f10:	0798      	lsls	r0, r3, #30
 8004f12:	d45a      	bmi.n	8004fca <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004f14:	6823      	ldr	r3, [r4, #0]
 8004f16:	071a      	lsls	r2, r3, #28
 8004f18:	f100 809c 	bmi.w	8005054 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004f1c:	6823      	ldr	r3, [r4, #0]
 8004f1e:	075b      	lsls	r3, r3, #29
 8004f20:	f100 80ba 	bmi.w	8005098 <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004f24:	69a0      	ldr	r0, [r4, #24]
 8004f26:	2800      	cmp	r0, #0
 8004f28:	f040 811b 	bne.w	8005162 <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8004f2c:	2000      	movs	r0, #0
 8004f2e:	e02b      	b.n	8004f88 <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004f30:	4ba7      	ldr	r3, [pc, #668]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8004f32:	689a      	ldr	r2, [r3, #8]
 8004f34:	f002 020c 	and.w	r2, r2, #12
 8004f38:	2a04      	cmp	r2, #4
 8004f3a:	d007      	beq.n	8004f4c <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004f3c:	689a      	ldr	r2, [r3, #8]
 8004f3e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004f42:	2a08      	cmp	r2, #8
 8004f44:	d10a      	bne.n	8004f5c <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004f46:	685b      	ldr	r3, [r3, #4]
 8004f48:	0259      	lsls	r1, r3, #9
 8004f4a:	d507      	bpl.n	8004f5c <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004f4c:	4ba0      	ldr	r3, [pc, #640]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	039a      	lsls	r2, r3, #14
 8004f52:	d5dc      	bpl.n	8004f0e <HAL_RCC_OscConfig+0x12>
 8004f54:	6863      	ldr	r3, [r4, #4]
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d1d9      	bne.n	8004f0e <HAL_RCC_OscConfig+0x12>
 8004f5a:	e7d3      	b.n	8004f04 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004f5c:	6863      	ldr	r3, [r4, #4]
 8004f5e:	4d9c      	ldr	r5, [pc, #624]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8004f60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004f64:	d113      	bne.n	8004f8e <HAL_RCC_OscConfig+0x92>
 8004f66:	682b      	ldr	r3, [r5, #0]
 8004f68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f6c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8004f6e:	f7fe fba5 	bl	80036bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004f72:	4d97      	ldr	r5, [pc, #604]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8004f74:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004f76:	682b      	ldr	r3, [r5, #0]
 8004f78:	039b      	lsls	r3, r3, #14
 8004f7a:	d4c8      	bmi.n	8004f0e <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004f7c:	f7fe fb9e 	bl	80036bc <HAL_GetTick>
 8004f80:	1b80      	subs	r0, r0, r6
 8004f82:	2864      	cmp	r0, #100	; 0x64
 8004f84:	d9f7      	bls.n	8004f76 <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 8004f86:	2003      	movs	r0, #3
}
 8004f88:	b002      	add	sp, #8
 8004f8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004f8e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004f92:	d104      	bne.n	8004f9e <HAL_RCC_OscConfig+0xa2>
 8004f94:	682b      	ldr	r3, [r5, #0]
 8004f96:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004f9a:	602b      	str	r3, [r5, #0]
 8004f9c:	e7e3      	b.n	8004f66 <HAL_RCC_OscConfig+0x6a>
 8004f9e:	682a      	ldr	r2, [r5, #0]
 8004fa0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004fa4:	602a      	str	r2, [r5, #0]
 8004fa6:	682a      	ldr	r2, [r5, #0]
 8004fa8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004fac:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d1dd      	bne.n	8004f6e <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 8004fb2:	f7fe fb83 	bl	80036bc <HAL_GetTick>
 8004fb6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004fb8:	682b      	ldr	r3, [r5, #0]
 8004fba:	039f      	lsls	r7, r3, #14
 8004fbc:	d5a7      	bpl.n	8004f0e <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004fbe:	f7fe fb7d 	bl	80036bc <HAL_GetTick>
 8004fc2:	1b80      	subs	r0, r0, r6
 8004fc4:	2864      	cmp	r0, #100	; 0x64
 8004fc6:	d9f7      	bls.n	8004fb8 <HAL_RCC_OscConfig+0xbc>
 8004fc8:	e7dd      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004fca:	4b81      	ldr	r3, [pc, #516]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8004fcc:	689a      	ldr	r2, [r3, #8]
 8004fce:	f012 0f0c 	tst.w	r2, #12
 8004fd2:	d007      	beq.n	8004fe4 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004fd4:	689a      	ldr	r2, [r3, #8]
 8004fd6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004fda:	2a08      	cmp	r2, #8
 8004fdc:	d111      	bne.n	8005002 <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004fde:	685b      	ldr	r3, [r3, #4]
 8004fe0:	025e      	lsls	r6, r3, #9
 8004fe2:	d40e      	bmi.n	8005002 <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004fe4:	4b7a      	ldr	r3, [pc, #488]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8004fe6:	681a      	ldr	r2, [r3, #0]
 8004fe8:	0795      	lsls	r5, r2, #30
 8004fea:	d502      	bpl.n	8004ff2 <HAL_RCC_OscConfig+0xf6>
 8004fec:	68e2      	ldr	r2, [r4, #12]
 8004fee:	2a01      	cmp	r2, #1
 8004ff0:	d188      	bne.n	8004f04 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004ff2:	681a      	ldr	r2, [r3, #0]
 8004ff4:	6921      	ldr	r1, [r4, #16]
 8004ff6:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8004ffa:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8004ffe:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005000:	e788      	b.n	8004f14 <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005002:	68e2      	ldr	r2, [r4, #12]
 8005004:	4b73      	ldr	r3, [pc, #460]	; (80051d4 <HAL_RCC_OscConfig+0x2d8>)
 8005006:	b1b2      	cbz	r2, 8005036 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 8005008:	2201      	movs	r2, #1
 800500a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800500c:	f7fe fb56 	bl	80036bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005010:	4d6f      	ldr	r5, [pc, #444]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8005012:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005014:	682b      	ldr	r3, [r5, #0]
 8005016:	0798      	lsls	r0, r3, #30
 8005018:	d507      	bpl.n	800502a <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800501a:	682b      	ldr	r3, [r5, #0]
 800501c:	6922      	ldr	r2, [r4, #16]
 800501e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8005022:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005026:	602b      	str	r3, [r5, #0]
 8005028:	e774      	b.n	8004f14 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800502a:	f7fe fb47 	bl	80036bc <HAL_GetTick>
 800502e:	1b80      	subs	r0, r0, r6
 8005030:	2802      	cmp	r0, #2
 8005032:	d9ef      	bls.n	8005014 <HAL_RCC_OscConfig+0x118>
 8005034:	e7a7      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 8005036:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005038:	f7fe fb40 	bl	80036bc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800503c:	4d64      	ldr	r5, [pc, #400]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 800503e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005040:	682b      	ldr	r3, [r5, #0]
 8005042:	0799      	lsls	r1, r3, #30
 8005044:	f57f af66 	bpl.w	8004f14 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005048:	f7fe fb38 	bl	80036bc <HAL_GetTick>
 800504c:	1b80      	subs	r0, r0, r6
 800504e:	2802      	cmp	r0, #2
 8005050:	d9f6      	bls.n	8005040 <HAL_RCC_OscConfig+0x144>
 8005052:	e798      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005054:	6962      	ldr	r2, [r4, #20]
 8005056:	4b60      	ldr	r3, [pc, #384]	; (80051d8 <HAL_RCC_OscConfig+0x2dc>)
 8005058:	b17a      	cbz	r2, 800507a <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800505a:	2201      	movs	r2, #1
 800505c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800505e:	f7fe fb2d 	bl	80036bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005062:	4d5b      	ldr	r5, [pc, #364]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8005064:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005066:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005068:	079f      	lsls	r7, r3, #30
 800506a:	f53f af57 	bmi.w	8004f1c <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800506e:	f7fe fb25 	bl	80036bc <HAL_GetTick>
 8005072:	1b80      	subs	r0, r0, r6
 8005074:	2802      	cmp	r0, #2
 8005076:	d9f6      	bls.n	8005066 <HAL_RCC_OscConfig+0x16a>
 8005078:	e785      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 800507a:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800507c:	f7fe fb1e 	bl	80036bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005080:	4d53      	ldr	r5, [pc, #332]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8005082:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005084:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8005086:	0798      	lsls	r0, r3, #30
 8005088:	f57f af48 	bpl.w	8004f1c <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800508c:	f7fe fb16 	bl	80036bc <HAL_GetTick>
 8005090:	1b80      	subs	r0, r0, r6
 8005092:	2802      	cmp	r0, #2
 8005094:	d9f6      	bls.n	8005084 <HAL_RCC_OscConfig+0x188>
 8005096:	e776      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005098:	4b4d      	ldr	r3, [pc, #308]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 800509a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800509c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80050a0:	d128      	bne.n	80050f4 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 80050a2:	9201      	str	r2, [sp, #4]
 80050a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80050a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80050aa:	641a      	str	r2, [r3, #64]	; 0x40
 80050ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80050b2:	9301      	str	r3, [sp, #4]
 80050b4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80050b6:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80050b8:	4d48      	ldr	r5, [pc, #288]	; (80051dc <HAL_RCC_OscConfig+0x2e0>)
 80050ba:	682b      	ldr	r3, [r5, #0]
 80050bc:	05d9      	lsls	r1, r3, #23
 80050be:	d51b      	bpl.n	80050f8 <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80050c0:	68a3      	ldr	r3, [r4, #8]
 80050c2:	4d43      	ldr	r5, [pc, #268]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 80050c4:	2b01      	cmp	r3, #1
 80050c6:	d127      	bne.n	8005118 <HAL_RCC_OscConfig+0x21c>
 80050c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80050ca:	f043 0301 	orr.w	r3, r3, #1
 80050ce:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80050d0:	f7fe faf4 	bl	80036bc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80050d4:	4d3e      	ldr	r5, [pc, #248]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80050d6:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80050d8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80050dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80050de:	079b      	lsls	r3, r3, #30
 80050e0:	d539      	bpl.n	8005156 <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 80050e2:	2e00      	cmp	r6, #0
 80050e4:	f43f af1e 	beq.w	8004f24 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 80050e8:	4a39      	ldr	r2, [pc, #228]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 80050ea:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80050ec:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80050f0:	6413      	str	r3, [r2, #64]	; 0x40
 80050f2:	e717      	b.n	8004f24 <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 80050f4:	2600      	movs	r6, #0
 80050f6:	e7df      	b.n	80050b8 <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80050f8:	682b      	ldr	r3, [r5, #0]
 80050fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80050fe:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005100:	f7fe fadc 	bl	80036bc <HAL_GetTick>
 8005104:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005106:	682b      	ldr	r3, [r5, #0]
 8005108:	05da      	lsls	r2, r3, #23
 800510a:	d4d9      	bmi.n	80050c0 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800510c:	f7fe fad6 	bl	80036bc <HAL_GetTick>
 8005110:	1bc0      	subs	r0, r0, r7
 8005112:	2802      	cmp	r0, #2
 8005114:	d9f7      	bls.n	8005106 <HAL_RCC_OscConfig+0x20a>
 8005116:	e736      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005118:	2b05      	cmp	r3, #5
 800511a:	d104      	bne.n	8005126 <HAL_RCC_OscConfig+0x22a>
 800511c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800511e:	f043 0304 	orr.w	r3, r3, #4
 8005122:	672b      	str	r3, [r5, #112]	; 0x70
 8005124:	e7d0      	b.n	80050c8 <HAL_RCC_OscConfig+0x1cc>
 8005126:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005128:	f022 0201 	bic.w	r2, r2, #1
 800512c:	672a      	str	r2, [r5, #112]	; 0x70
 800512e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005130:	f022 0204 	bic.w	r2, r2, #4
 8005134:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005136:	2b00      	cmp	r3, #0
 8005138:	d1ca      	bne.n	80050d0 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 800513a:	f7fe fabf 	bl	80036bc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800513e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8005142:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005144:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005146:	0798      	lsls	r0, r3, #30
 8005148:	d5cb      	bpl.n	80050e2 <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800514a:	f7fe fab7 	bl	80036bc <HAL_GetTick>
 800514e:	1bc0      	subs	r0, r0, r7
 8005150:	4540      	cmp	r0, r8
 8005152:	d9f7      	bls.n	8005144 <HAL_RCC_OscConfig+0x248>
 8005154:	e717      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005156:	f7fe fab1 	bl	80036bc <HAL_GetTick>
 800515a:	1bc0      	subs	r0, r0, r7
 800515c:	4540      	cmp	r0, r8
 800515e:	d9bd      	bls.n	80050dc <HAL_RCC_OscConfig+0x1e0>
 8005160:	e711      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005162:	4d1b      	ldr	r5, [pc, #108]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
 8005164:	68ab      	ldr	r3, [r5, #8]
 8005166:	f003 030c 	and.w	r3, r3, #12
 800516a:	2b08      	cmp	r3, #8
 800516c:	d047      	beq.n	80051fe <HAL_RCC_OscConfig+0x302>
 800516e:	4e1c      	ldr	r6, [pc, #112]	; (80051e0 <HAL_RCC_OscConfig+0x2e4>)
 8005170:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005172:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8005174:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005176:	d135      	bne.n	80051e4 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 8005178:	f7fe faa0 	bl	80036bc <HAL_GetTick>
 800517c:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800517e:	682b      	ldr	r3, [r5, #0]
 8005180:	0199      	lsls	r1, r3, #6
 8005182:	d41e      	bmi.n	80051c2 <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005184:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005188:	4313      	orrs	r3, r2
 800518a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800518c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005190:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005192:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005196:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005198:	4c0d      	ldr	r4, [pc, #52]	; (80051d0 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800519a:	0852      	lsrs	r2, r2, #1
 800519c:	3a01      	subs	r2, #1
 800519e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80051a2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80051a4:	2301      	movs	r3, #1
 80051a6:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 80051a8:	f7fe fa88 	bl	80036bc <HAL_GetTick>
 80051ac:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80051ae:	6823      	ldr	r3, [r4, #0]
 80051b0:	019a      	lsls	r2, r3, #6
 80051b2:	f53f aebb 	bmi.w	8004f2c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80051b6:	f7fe fa81 	bl	80036bc <HAL_GetTick>
 80051ba:	1b40      	subs	r0, r0, r5
 80051bc:	2802      	cmp	r0, #2
 80051be:	d9f6      	bls.n	80051ae <HAL_RCC_OscConfig+0x2b2>
 80051c0:	e6e1      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80051c2:	f7fe fa7b 	bl	80036bc <HAL_GetTick>
 80051c6:	1bc0      	subs	r0, r0, r7
 80051c8:	2802      	cmp	r0, #2
 80051ca:	d9d8      	bls.n	800517e <HAL_RCC_OscConfig+0x282>
 80051cc:	e6db      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
 80051ce:	bf00      	nop
 80051d0:	40023800 	.word	0x40023800
 80051d4:	42470000 	.word	0x42470000
 80051d8:	42470e80 	.word	0x42470e80
 80051dc:	40007000 	.word	0x40007000
 80051e0:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 80051e4:	f7fe fa6a 	bl	80036bc <HAL_GetTick>
 80051e8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80051ea:	682b      	ldr	r3, [r5, #0]
 80051ec:	019b      	lsls	r3, r3, #6
 80051ee:	f57f ae9d 	bpl.w	8004f2c <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80051f2:	f7fe fa63 	bl	80036bc <HAL_GetTick>
 80051f6:	1b00      	subs	r0, r0, r4
 80051f8:	2802      	cmp	r0, #2
 80051fa:	d9f6      	bls.n	80051ea <HAL_RCC_OscConfig+0x2ee>
 80051fc:	e6c3      	b.n	8004f86 <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80051fe:	2801      	cmp	r0, #1
 8005200:	f43f aec2 	beq.w	8004f88 <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 8005204:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005206:	69e3      	ldr	r3, [r4, #28]
 8005208:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 800520c:	429a      	cmp	r2, r3
 800520e:	f47f ae79 	bne.w	8004f04 <HAL_RCC_OscConfig+0x8>
 8005212:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005214:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005218:	4293      	cmp	r3, r2
 800521a:	f47f ae73 	bne.w	8004f04 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800521e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005220:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005224:	4003      	ands	r3, r0
 8005226:	4293      	cmp	r3, r2
 8005228:	f47f ae6c 	bne.w	8004f04 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800522c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800522e:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005232:	4293      	cmp	r3, r2
 8005234:	f47f ae66 	bne.w	8004f04 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005238:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800523a:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 800523e:	1ac0      	subs	r0, r0, r3
 8005240:	bf18      	it	ne
 8005242:	2001      	movne	r0, #1
 8005244:	e6a0      	b.n	8004f88 <HAL_RCC_OscConfig+0x8c>
 8005246:	bf00      	nop

08005248 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005248:	4913      	ldr	r1, [pc, #76]	; (8005298 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800524a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800524c:	688b      	ldr	r3, [r1, #8]
 800524e:	f003 030c 	and.w	r3, r3, #12
 8005252:	2b04      	cmp	r3, #4
 8005254:	d003      	beq.n	800525e <HAL_RCC_GetSysClockFreq+0x16>
 8005256:	2b08      	cmp	r3, #8
 8005258:	d003      	beq.n	8005262 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800525a:	4810      	ldr	r0, [pc, #64]	; (800529c <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 800525c:	e000      	b.n	8005260 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 800525e:	4810      	ldr	r0, [pc, #64]	; (80052a0 <HAL_RCC_GetSysClockFreq+0x58>)
}
 8005260:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005262:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005264:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005266:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005268:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800526c:	bf14      	ite	ne
 800526e:	480c      	ldrne	r0, [pc, #48]	; (80052a0 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005270:	480a      	ldreq	r0, [pc, #40]	; (800529c <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005272:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005276:	bf18      	it	ne
 8005278:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800527a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800527e:	fba1 0100 	umull	r0, r1, r1, r0
 8005282:	f7fb f805 	bl	8000290 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005286:	4b04      	ldr	r3, [pc, #16]	; (8005298 <HAL_RCC_GetSysClockFreq+0x50>)
 8005288:	685b      	ldr	r3, [r3, #4]
 800528a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800528e:	3301      	adds	r3, #1
 8005290:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 8005292:	fbb0 f0f3 	udiv	r0, r0, r3
 8005296:	e7e3      	b.n	8005260 <HAL_RCC_GetSysClockFreq+0x18>
 8005298:	40023800 	.word	0x40023800
 800529c:	00f42400 	.word	0x00f42400
 80052a0:	007a1200 	.word	0x007a1200

080052a4 <HAL_RCC_ClockConfig>:
{
 80052a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80052a8:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80052aa:	4604      	mov	r4, r0
 80052ac:	b910      	cbnz	r0, 80052b4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80052ae:	2001      	movs	r0, #1
}
 80052b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80052b4:	4b43      	ldr	r3, [pc, #268]	; (80053c4 <HAL_RCC_ClockConfig+0x120>)
 80052b6:	681a      	ldr	r2, [r3, #0]
 80052b8:	f002 020f 	and.w	r2, r2, #15
 80052bc:	428a      	cmp	r2, r1
 80052be:	d328      	bcc.n	8005312 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80052c0:	6821      	ldr	r1, [r4, #0]
 80052c2:	078f      	lsls	r7, r1, #30
 80052c4:	d42d      	bmi.n	8005322 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80052c6:	07c8      	lsls	r0, r1, #31
 80052c8:	d440      	bmi.n	800534c <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80052ca:	4b3e      	ldr	r3, [pc, #248]	; (80053c4 <HAL_RCC_ClockConfig+0x120>)
 80052cc:	681a      	ldr	r2, [r3, #0]
 80052ce:	f002 020f 	and.w	r2, r2, #15
 80052d2:	42aa      	cmp	r2, r5
 80052d4:	d865      	bhi.n	80053a2 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80052d6:	6822      	ldr	r2, [r4, #0]
 80052d8:	0751      	lsls	r1, r2, #29
 80052da:	d46b      	bmi.n	80053b4 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80052dc:	0713      	lsls	r3, r2, #28
 80052de:	d507      	bpl.n	80052f0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80052e0:	4a39      	ldr	r2, [pc, #228]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
 80052e2:	6921      	ldr	r1, [r4, #16]
 80052e4:	6893      	ldr	r3, [r2, #8]
 80052e6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80052ea:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80052ee:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80052f0:	f7ff ffaa 	bl	8005248 <HAL_RCC_GetSysClockFreq>
 80052f4:	4b34      	ldr	r3, [pc, #208]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
 80052f6:	4a35      	ldr	r2, [pc, #212]	; (80053cc <HAL_RCC_ClockConfig+0x128>)
 80052f8:	689b      	ldr	r3, [r3, #8]
 80052fa:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80052fe:	5cd3      	ldrb	r3, [r2, r3]
 8005300:	40d8      	lsrs	r0, r3
 8005302:	4b33      	ldr	r3, [pc, #204]	; (80053d0 <HAL_RCC_ClockConfig+0x12c>)
 8005304:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005306:	4b33      	ldr	r3, [pc, #204]	; (80053d4 <HAL_RCC_ClockConfig+0x130>)
 8005308:	6818      	ldr	r0, [r3, #0]
 800530a:	f7fc fdd1 	bl	8001eb0 <HAL_InitTick>
  return HAL_OK;
 800530e:	2000      	movs	r0, #0
 8005310:	e7ce      	b.n	80052b0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005312:	b2ca      	uxtb	r2, r1
 8005314:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	f003 030f 	and.w	r3, r3, #15
 800531c:	428b      	cmp	r3, r1
 800531e:	d1c6      	bne.n	80052ae <HAL_RCC_ClockConfig+0xa>
 8005320:	e7ce      	b.n	80052c0 <HAL_RCC_ClockConfig+0x1c>
 8005322:	4b29      	ldr	r3, [pc, #164]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005324:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005328:	bf1e      	ittt	ne
 800532a:	689a      	ldrne	r2, [r3, #8]
 800532c:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8005330:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005332:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005334:	bf42      	ittt	mi
 8005336:	689a      	ldrmi	r2, [r3, #8]
 8005338:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 800533c:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800533e:	689a      	ldr	r2, [r3, #8]
 8005340:	68a0      	ldr	r0, [r4, #8]
 8005342:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005346:	4302      	orrs	r2, r0
 8005348:	609a      	str	r2, [r3, #8]
 800534a:	e7bc      	b.n	80052c6 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800534c:	6862      	ldr	r2, [r4, #4]
 800534e:	4b1e      	ldr	r3, [pc, #120]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
 8005350:	2a01      	cmp	r2, #1
 8005352:	d11c      	bne.n	800538e <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800535a:	d0a8      	beq.n	80052ae <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800535c:	4e1a      	ldr	r6, [pc, #104]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
 800535e:	68b3      	ldr	r3, [r6, #8]
 8005360:	f023 0303 	bic.w	r3, r3, #3
 8005364:	4313      	orrs	r3, r2
 8005366:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005368:	f7fe f9a8 	bl	80036bc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800536c:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005370:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005372:	68b3      	ldr	r3, [r6, #8]
 8005374:	6862      	ldr	r2, [r4, #4]
 8005376:	f003 030c 	and.w	r3, r3, #12
 800537a:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800537e:	d0a4      	beq.n	80052ca <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005380:	f7fe f99c 	bl	80036bc <HAL_GetTick>
 8005384:	1bc0      	subs	r0, r0, r7
 8005386:	4540      	cmp	r0, r8
 8005388:	d9f3      	bls.n	8005372 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800538a:	2003      	movs	r0, #3
 800538c:	e790      	b.n	80052b0 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800538e:	1e91      	subs	r1, r2, #2
 8005390:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005392:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005394:	d802      	bhi.n	800539c <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005396:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800539a:	e7de      	b.n	800535a <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800539c:	f013 0f02 	tst.w	r3, #2
 80053a0:	e7db      	b.n	800535a <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80053a2:	b2ea      	uxtb	r2, r5
 80053a4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	f003 030f 	and.w	r3, r3, #15
 80053ac:	42ab      	cmp	r3, r5
 80053ae:	f47f af7e 	bne.w	80052ae <HAL_RCC_ClockConfig+0xa>
 80053b2:	e790      	b.n	80052d6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80053b4:	4904      	ldr	r1, [pc, #16]	; (80053c8 <HAL_RCC_ClockConfig+0x124>)
 80053b6:	68e0      	ldr	r0, [r4, #12]
 80053b8:	688b      	ldr	r3, [r1, #8]
 80053ba:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80053be:	4303      	orrs	r3, r0
 80053c0:	608b      	str	r3, [r1, #8]
 80053c2:	e78b      	b.n	80052dc <HAL_RCC_ClockConfig+0x38>
 80053c4:	40023c00 	.word	0x40023c00
 80053c8:	40023800 	.word	0x40023800
 80053cc:	0801c420 	.word	0x0801c420
 80053d0:	20000074 	.word	0x20000074
 80053d4:	2000007c 	.word	0x2000007c

080053d8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80053d8:	4b04      	ldr	r3, [pc, #16]	; (80053ec <HAL_RCC_GetPCLK1Freq+0x14>)
 80053da:	4a05      	ldr	r2, [pc, #20]	; (80053f0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80053dc:	689b      	ldr	r3, [r3, #8]
 80053de:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80053e2:	5cd3      	ldrb	r3, [r2, r3]
 80053e4:	4a03      	ldr	r2, [pc, #12]	; (80053f4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80053e6:	6810      	ldr	r0, [r2, #0]
}
 80053e8:	40d8      	lsrs	r0, r3
 80053ea:	4770      	bx	lr
 80053ec:	40023800 	.word	0x40023800
 80053f0:	0801c430 	.word	0x0801c430
 80053f4:	20000074 	.word	0x20000074

080053f8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80053f8:	230f      	movs	r3, #15
 80053fa:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80053fc:	4b0b      	ldr	r3, [pc, #44]	; (800542c <HAL_RCC_GetClockConfig+0x34>)
 80053fe:	689a      	ldr	r2, [r3, #8]
 8005400:	f002 0203 	and.w	r2, r2, #3
 8005404:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005406:	689a      	ldr	r2, [r3, #8]
 8005408:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800540c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800540e:	689a      	ldr	r2, [r3, #8]
 8005410:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005414:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005416:	689b      	ldr	r3, [r3, #8]
 8005418:	08db      	lsrs	r3, r3, #3
 800541a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800541e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005420:	4b03      	ldr	r3, [pc, #12]	; (8005430 <HAL_RCC_GetClockConfig+0x38>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	f003 030f 	and.w	r3, r3, #15
 8005428:	600b      	str	r3, [r1, #0]
}
 800542a:	4770      	bx	lr
 800542c:	40023800 	.word	0x40023800
 8005430:	40023c00 	.word	0x40023c00

08005434 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005434:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005436:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800543a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800543c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800543e:	f040 808a 	bne.w	8005556 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005442:	6823      	ldr	r3, [r4, #0]
 8005444:	f013 0f0c 	tst.w	r3, #12
 8005448:	d044      	beq.n	80054d4 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800544a:	4d89      	ldr	r5, [pc, #548]	; (8005670 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800544c:	4e89      	ldr	r6, [pc, #548]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 800544e:	2300      	movs	r3, #0
 8005450:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005452:	f7fe f933 	bl	80036bc <HAL_GetTick>
 8005456:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005458:	6833      	ldr	r3, [r6, #0]
 800545a:	009b      	lsls	r3, r3, #2
 800545c:	f100 80cc 	bmi.w	80055f8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005460:	6821      	ldr	r1, [r4, #0]
 8005462:	074f      	lsls	r7, r1, #29
 8005464:	d515      	bpl.n	8005492 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005466:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800546a:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800546e:	061b      	lsls	r3, r3, #24
 8005470:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005474:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005478:	4313      	orrs	r3, r2
 800547a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800547e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8005482:	6a22      	ldr	r2, [r4, #32]
 8005484:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005488:	3a01      	subs	r2, #1
 800548a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800548e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005492:	070e      	lsls	r6, r1, #28
 8005494:	d514      	bpl.n	80054c0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005496:	4a77      	ldr	r2, [pc, #476]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005498:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800549a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800549e:	6920      	ldr	r0, [r4, #16]
 80054a0:	071b      	lsls	r3, r3, #28
 80054a2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80054a6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80054aa:	430b      	orrs	r3, r1
 80054ac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80054b0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80054b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80054b6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80054ba:	430b      	orrs	r3, r1
 80054bc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80054c0:	2301      	movs	r3, #1
 80054c2:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80054c4:	f7fe f8fa 	bl	80036bc <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80054c8:	4d6a      	ldr	r5, [pc, #424]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80054ca:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80054cc:	682b      	ldr	r3, [r5, #0]
 80054ce:	0098      	lsls	r0, r3, #2
 80054d0:	f140 8099 	bpl.w	8005606 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80054d4:	6823      	ldr	r3, [r4, #0]
 80054d6:	069a      	lsls	r2, r3, #26
 80054d8:	d533      	bpl.n	8005542 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80054da:	2300      	movs	r3, #0
 80054dc:	9301      	str	r3, [sp, #4]
 80054de:	4b65      	ldr	r3, [pc, #404]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80054e0:	4d65      	ldr	r5, [pc, #404]	; (8005678 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80054e2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054e4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80054e8:	641a      	str	r2, [r3, #64]	; 0x40
 80054ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80054f0:	9301      	str	r3, [sp, #4]
 80054f2:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80054f4:	682b      	ldr	r3, [r5, #0]
 80054f6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80054fa:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80054fc:	f7fe f8de 	bl	80036bc <HAL_GetTick>
 8005500:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005502:	682b      	ldr	r3, [r5, #0]
 8005504:	05d9      	lsls	r1, r3, #23
 8005506:	f140 8085 	bpl.w	8005614 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800550a:	4d5a      	ldr	r5, [pc, #360]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800550c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800550e:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005512:	f040 8086 	bne.w	8005622 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005516:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8005518:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800551c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005520:	4a54      	ldr	r2, [pc, #336]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005522:	f040 80a0 	bne.w	8005666 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8005526:	6891      	ldr	r1, [r2, #8]
 8005528:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800552c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005530:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005534:	4301      	orrs	r1, r0
 8005536:	6091      	str	r1, [r2, #8]
 8005538:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800553a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800553e:	430b      	orrs	r3, r1
 8005540:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005542:	6820      	ldr	r0, [r4, #0]
 8005544:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005548:	bf1f      	itttt	ne
 800554a:	4b4c      	ldrne	r3, [pc, #304]	; (800567c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800554c:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8005550:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8005552:	2000      	movne	r0, #0
 8005554:	e04e      	b.n	80055f4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8005556:	4d4a      	ldr	r5, [pc, #296]	; (8005680 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005558:	4e46      	ldr	r6, [pc, #280]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 800555a:	2300      	movs	r3, #0
 800555c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800555e:	f7fe f8ad 	bl	80036bc <HAL_GetTick>
 8005562:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005564:	6833      	ldr	r3, [r6, #0]
 8005566:	011b      	lsls	r3, r3, #4
 8005568:	d43e      	bmi.n	80055e8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800556a:	6821      	ldr	r1, [r4, #0]
 800556c:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800556e:	bf41      	itttt	mi
 8005570:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005574:	071b      	lslmi	r3, r3, #28
 8005576:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800557a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800557e:	078e      	lsls	r6, r1, #30
 8005580:	d515      	bpl.n	80055ae <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005582:	4a3c      	ldr	r2, [pc, #240]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005584:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005586:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800558a:	6866      	ldr	r6, [r4, #4]
 800558c:	061b      	lsls	r3, r3, #24
 800558e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8005592:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8005596:	4303      	orrs	r3, r0
 8005598:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800559c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80055a0:	69e3      	ldr	r3, [r4, #28]
 80055a2:	f020 001f 	bic.w	r0, r0, #31
 80055a6:	3b01      	subs	r3, #1
 80055a8:	4303      	orrs	r3, r0
 80055aa:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80055ae:	0648      	lsls	r0, r1, #25
 80055b0:	d50a      	bpl.n	80055c8 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80055b2:	68e3      	ldr	r3, [r4, #12]
 80055b4:	6862      	ldr	r2, [r4, #4]
 80055b6:	061b      	lsls	r3, r3, #24
 80055b8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80055bc:	68a2      	ldr	r2, [r4, #8]
 80055be:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80055c2:	4a2c      	ldr	r2, [pc, #176]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80055c4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80055c8:	2301      	movs	r3, #1
 80055ca:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80055cc:	f7fe f876 	bl	80036bc <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80055d0:	4d28      	ldr	r5, [pc, #160]	; (8005674 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80055d2:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80055d4:	682b      	ldr	r3, [r5, #0]
 80055d6:	0119      	lsls	r1, r3, #4
 80055d8:	f53f af33 	bmi.w	8005442 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80055dc:	f7fe f86e 	bl	80036bc <HAL_GetTick>
 80055e0:	1b80      	subs	r0, r0, r6
 80055e2:	2802      	cmp	r0, #2
 80055e4:	d9f6      	bls.n	80055d4 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 80055e6:	e004      	b.n	80055f2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80055e8:	f7fe f868 	bl	80036bc <HAL_GetTick>
 80055ec:	1bc0      	subs	r0, r0, r7
 80055ee:	2802      	cmp	r0, #2
 80055f0:	d9b8      	bls.n	8005564 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 80055f2:	2003      	movs	r0, #3
}
 80055f4:	b003      	add	sp, #12
 80055f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80055f8:	f7fe f860 	bl	80036bc <HAL_GetTick>
 80055fc:	1bc0      	subs	r0, r0, r7
 80055fe:	2802      	cmp	r0, #2
 8005600:	f67f af2a 	bls.w	8005458 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005604:	e7f5      	b.n	80055f2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005606:	f7fe f859 	bl	80036bc <HAL_GetTick>
 800560a:	1b80      	subs	r0, r0, r6
 800560c:	2802      	cmp	r0, #2
 800560e:	f67f af5d 	bls.w	80054cc <HAL_RCCEx_PeriphCLKConfig+0x98>
 8005612:	e7ee      	b.n	80055f2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005614:	f7fe f852 	bl	80036bc <HAL_GetTick>
 8005618:	1b80      	subs	r0, r0, r6
 800561a:	2802      	cmp	r0, #2
 800561c:	f67f af71 	bls.w	8005502 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8005620:	e7e7      	b.n	80055f2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005622:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005624:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005628:	4293      	cmp	r3, r2
 800562a:	f43f af74 	beq.w	8005516 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800562e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005630:	4a14      	ldr	r2, [pc, #80]	; (8005684 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8005632:	2101      	movs	r1, #1
 8005634:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005636:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800563a:	2100      	movs	r1, #0
 800563c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800563e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005640:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005642:	07da      	lsls	r2, r3, #31
 8005644:	f57f af67 	bpl.w	8005516 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8005648:	f7fe f838 	bl	80036bc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800564c:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8005650:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005652:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005654:	079b      	lsls	r3, r3, #30
 8005656:	f53f af5e 	bmi.w	8005516 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800565a:	f7fe f82f 	bl	80036bc <HAL_GetTick>
 800565e:	1b80      	subs	r0, r0, r6
 8005660:	42b8      	cmp	r0, r7
 8005662:	d9f6      	bls.n	8005652 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005664:	e7c5      	b.n	80055f2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005666:	6891      	ldr	r1, [r2, #8]
 8005668:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800566c:	e763      	b.n	8005536 <HAL_RCCEx_PeriphCLKConfig+0x102>
 800566e:	bf00      	nop
 8005670:	42470070 	.word	0x42470070
 8005674:	40023800 	.word	0x40023800
 8005678:	40007000 	.word	0x40007000
 800567c:	424711e0 	.word	0x424711e0
 8005680:	42470068 	.word	0x42470068
 8005684:	42470e40 	.word	0x42470e40

08005688 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005688:	b538      	push	{r3, r4, r5, lr}
 800568a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800568c:	4604      	mov	r4, r0
 800568e:	b1c8      	cbz	r0, 80056c4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005690:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005694:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005698:	b91b      	cbnz	r3, 80056a2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800569a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800569e:	f7fc fb97 	bl	8001dd0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80056a2:	2302      	movs	r3, #2
 80056a4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80056a8:	1d21      	adds	r1, r4, #4
 80056aa:	6820      	ldr	r0, [r4, #0]
 80056ac:	f000 fe36 	bl	800631c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80056b0:	6862      	ldr	r2, [r4, #4]
 80056b2:	6820      	ldr	r0, [r4, #0]
 80056b4:	4629      	mov	r1, r5
 80056b6:	f000 fe67 	bl	8006388 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80056ba:	2301      	movs	r3, #1
 80056bc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80056c0:	2000      	movs	r0, #0
}
 80056c2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80056c4:	2001      	movs	r0, #1
 80056c6:	e7fc      	b.n	80056c2 <HAL_SDRAM_Init+0x3a>

080056c8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80056c8:	b538      	push	{r3, r4, r5, lr}
 80056ca:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80056cc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80056d0:	b2c0      	uxtb	r0, r0
 80056d2:	2802      	cmp	r0, #2
{
 80056d4:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80056d6:	d00d      	beq.n	80056f4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80056d8:	2302      	movs	r3, #2
 80056da:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80056de:	6820      	ldr	r0, [r4, #0]
 80056e0:	f000 fe8f 	bl	8006402 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80056e4:	682b      	ldr	r3, [r5, #0]
 80056e6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80056e8:	bf0c      	ite	eq
 80056ea:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80056ec:	2301      	movne	r3, #1
 80056ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80056f2:	2000      	movs	r0, #0
}
 80056f4:	bd38      	pop	{r3, r4, r5, pc}

080056f6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80056f6:	b510      	push	{r4, lr}
 80056f8:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80056fa:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80056fe:	b2c0      	uxtb	r0, r0
 8005700:	2802      	cmp	r0, #2
 8005702:	d009      	beq.n	8005718 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005704:	2302      	movs	r3, #2
 8005706:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800570a:	6820      	ldr	r0, [r4, #0]
 800570c:	f000 fe9e 	bl	800644c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005710:	2301      	movs	r3, #1
 8005712:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8005716:	2000      	movs	r0, #0
}
 8005718:	bd10      	pop	{r4, pc}

0800571a <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800571a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800571c:	4604      	mov	r4, r0
 800571e:	460e      	mov	r6, r1
 8005720:	4615      	mov	r5, r2
 8005722:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005724:	6821      	ldr	r1, [r4, #0]
 8005726:	688a      	ldr	r2, [r1, #8]
 8005728:	ea36 0302 	bics.w	r3, r6, r2
 800572c:	d001      	beq.n	8005732 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800572e:	2000      	movs	r0, #0
 8005730:	e02d      	b.n	800578e <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8005732:	1c6b      	adds	r3, r5, #1
 8005734:	d0f7      	beq.n	8005726 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8005736:	f7fd ffc1 	bl	80036bc <HAL_GetTick>
 800573a:	1bc0      	subs	r0, r0, r7
 800573c:	4285      	cmp	r5, r0
 800573e:	d8f1      	bhi.n	8005724 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005740:	6823      	ldr	r3, [r4, #0]
 8005742:	685a      	ldr	r2, [r3, #4]
 8005744:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005748:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800574a:	6862      	ldr	r2, [r4, #4]
 800574c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8005750:	d10a      	bne.n	8005768 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8005752:	68a2      	ldr	r2, [r4, #8]
 8005754:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005758:	d002      	beq.n	8005760 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800575a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800575e:	d103      	bne.n	8005768 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8005760:	681a      	ldr	r2, [r3, #0]
 8005762:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005766:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005768:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800576a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800576e:	d107      	bne.n	8005780 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8005770:	681a      	ldr	r2, [r3, #0]
 8005772:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005776:	601a      	str	r2, [r3, #0]
 8005778:	681a      	ldr	r2, [r3, #0]
 800577a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800577e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005780:	2301      	movs	r3, #1
 8005782:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8005786:	2300      	movs	r3, #0
 8005788:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800578c:	2003      	movs	r0, #3
}
 800578e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005790 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005790:	b538      	push	{r3, r4, r5, lr}
 8005792:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005794:	6842      	ldr	r2, [r0, #4]
 8005796:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800579a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800579c:	d11f      	bne.n	80057de <SPI_EndRxTransaction+0x4e>
 800579e:	6882      	ldr	r2, [r0, #8]
 80057a0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80057a4:	d002      	beq.n	80057ac <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80057a6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80057aa:	d107      	bne.n	80057bc <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80057ac:	6825      	ldr	r5, [r4, #0]
 80057ae:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80057b0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80057b4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80057b8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80057ba:	d007      	beq.n	80057cc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80057bc:	460a      	mov	r2, r1
 80057be:	2180      	movs	r1, #128	; 0x80
 80057c0:	4620      	mov	r0, r4
 80057c2:	f7ff ffaa 	bl	800571a <SPI_WaitFlagStateUntilTimeout.constprop.7>
 80057c6:	b920      	cbnz	r0, 80057d2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80057c8:	2000      	movs	r0, #0
}
 80057ca:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80057cc:	460a      	mov	r2, r1
 80057ce:	2101      	movs	r1, #1
 80057d0:	e7f6      	b.n	80057c0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80057d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80057d4:	f043 0320 	orr.w	r3, r3, #32
 80057d8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80057da:	2003      	movs	r0, #3
 80057dc:	e7f5      	b.n	80057ca <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80057de:	460a      	mov	r2, r1
 80057e0:	2101      	movs	r1, #1
 80057e2:	e7ee      	b.n	80057c2 <SPI_EndRxTransaction+0x32>

080057e4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80057e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80057e6:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80057e8:	4a12      	ldr	r2, [pc, #72]	; (8005834 <SPI_EndRxTxTransaction+0x50>)
 80057ea:	4e13      	ldr	r6, [pc, #76]	; (8005838 <SPI_EndRxTxTransaction+0x54>)
 80057ec:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80057ee:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80057f0:	fbb5 f6f6 	udiv	r6, r5, r6
 80057f4:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 80057f8:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80057fa:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80057fe:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005800:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005802:	d10b      	bne.n	800581c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005804:	460a      	mov	r2, r1
 8005806:	2180      	movs	r1, #128	; 0x80
 8005808:	f7ff ff87 	bl	800571a <SPI_WaitFlagStateUntilTimeout.constprop.7>
 800580c:	b178      	cbz	r0, 800582e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800580e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005810:	f043 0320 	orr.w	r3, r3, #32
 8005814:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005816:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005818:	b002      	add	sp, #8
 800581a:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 800581c:	9b01      	ldr	r3, [sp, #4]
 800581e:	b133      	cbz	r3, 800582e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8005820:	9b01      	ldr	r3, [sp, #4]
 8005822:	3b01      	subs	r3, #1
 8005824:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005826:	6823      	ldr	r3, [r4, #0]
 8005828:	689b      	ldr	r3, [r3, #8]
 800582a:	061b      	lsls	r3, r3, #24
 800582c:	d4f6      	bmi.n	800581c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800582e:	2000      	movs	r0, #0
 8005830:	e7f2      	b.n	8005818 <SPI_EndRxTxTransaction+0x34>
 8005832:	bf00      	nop
 8005834:	20000074 	.word	0x20000074
 8005838:	016e3600 	.word	0x016e3600

0800583c <HAL_SPI_Init>:
{
 800583c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800583e:	4604      	mov	r4, r0
 8005840:	2800      	cmp	r0, #0
 8005842:	d036      	beq.n	80058b2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005844:	2300      	movs	r3, #0
 8005846:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005848:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 800584c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005850:	b91b      	cbnz	r3, 800585a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8005852:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8005856:	f7fc fa2d 	bl	8001cb4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800585a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800585c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800585e:	2302      	movs	r3, #2
 8005860:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8005864:	680b      	ldr	r3, [r1, #0]
 8005866:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800586a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 800586c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8005870:	4303      	orrs	r3, r0
 8005872:	68e0      	ldr	r0, [r4, #12]
 8005874:	4303      	orrs	r3, r0
 8005876:	6920      	ldr	r0, [r4, #16]
 8005878:	4303      	orrs	r3, r0
 800587a:	6960      	ldr	r0, [r4, #20]
 800587c:	4303      	orrs	r3, r0
 800587e:	69e0      	ldr	r0, [r4, #28]
 8005880:	4303      	orrs	r3, r0
 8005882:	6a20      	ldr	r0, [r4, #32]
 8005884:	4303      	orrs	r3, r0
 8005886:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005888:	4303      	orrs	r3, r0
 800588a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800588e:	4303      	orrs	r3, r0
 8005890:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8005892:	0c12      	lsrs	r2, r2, #16
 8005894:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005896:	f002 0204 	and.w	r2, r2, #4
 800589a:	431a      	orrs	r2, r3
 800589c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800589e:	69cb      	ldr	r3, [r1, #28]
 80058a0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80058a4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80058a6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80058a8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80058aa:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80058ac:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80058b0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80058b2:	2001      	movs	r0, #1
 80058b4:	e7fc      	b.n	80058b0 <HAL_SPI_Init+0x74>

080058b6 <HAL_SPI_Transmit>:
{
 80058b6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80058ba:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80058bc:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80058c0:	2b01      	cmp	r3, #1
{
 80058c2:	4604      	mov	r4, r0
 80058c4:	460d      	mov	r5, r1
 80058c6:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 80058c8:	f000 809b 	beq.w	8005a02 <HAL_SPI_Transmit+0x14c>
 80058cc:	2301      	movs	r3, #1
 80058ce:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80058d2:	f7fd fef3 	bl	80036bc <HAL_GetTick>
 80058d6:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80058d8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 80058dc:	b2c0      	uxtb	r0, r0
 80058de:	2801      	cmp	r0, #1
 80058e0:	f040 808d 	bne.w	80059fe <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 80058e4:	2d00      	cmp	r5, #0
 80058e6:	d05d      	beq.n	80059a4 <HAL_SPI_Transmit+0xee>
 80058e8:	f1b8 0f00 	cmp.w	r8, #0
 80058ec:	d05a      	beq.n	80059a4 <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80058ee:	2303      	movs	r3, #3
 80058f0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80058f4:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80058f6:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80058f8:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80058fa:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 80058fc:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8005900:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005902:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8005904:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8005908:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800590a:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800590c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8005910:	bf08      	it	eq
 8005912:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8005914:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8005918:	bf04      	itt	eq
 800591a:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 800591e:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005920:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005922:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005924:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005926:	bf5e      	ittt	pl
 8005928:	6803      	ldrpl	r3, [r0, #0]
 800592a:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 800592e:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005930:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005934:	6863      	ldr	r3, [r4, #4]
 8005936:	d13e      	bne.n	80059b6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005938:	b113      	cbz	r3, 8005940 <HAL_SPI_Transmit+0x8a>
 800593a:	f1b8 0f01 	cmp.w	r8, #1
 800593e:	d107      	bne.n	8005950 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005940:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005944:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005946:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005948:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800594a:	3b01      	subs	r3, #1
 800594c:	b29b      	uxth	r3, r3
 800594e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005950:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005952:	b29b      	uxth	r3, r3
 8005954:	b9a3      	cbnz	r3, 8005980 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005956:	463a      	mov	r2, r7
 8005958:	4631      	mov	r1, r6
 800595a:	4620      	mov	r0, r4
 800595c:	f7ff ff42 	bl	80057e4 <SPI_EndRxTxTransaction>
 8005960:	2800      	cmp	r0, #0
 8005962:	d149      	bne.n	80059f8 <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005964:	68a3      	ldr	r3, [r4, #8]
 8005966:	b933      	cbnz	r3, 8005976 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005968:	9301      	str	r3, [sp, #4]
 800596a:	6823      	ldr	r3, [r4, #0]
 800596c:	68da      	ldr	r2, [r3, #12]
 800596e:	9201      	str	r2, [sp, #4]
 8005970:	689b      	ldr	r3, [r3, #8]
 8005972:	9301      	str	r3, [sp, #4]
 8005974:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005976:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005978:	3000      	adds	r0, #0
 800597a:	bf18      	it	ne
 800597c:	2001      	movne	r0, #1
error:
 800597e:	e011      	b.n	80059a4 <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005980:	6822      	ldr	r2, [r4, #0]
 8005982:	6893      	ldr	r3, [r2, #8]
 8005984:	0798      	lsls	r0, r3, #30
 8005986:	d505      	bpl.n	8005994 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005988:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800598a:	f833 1b02 	ldrh.w	r1, [r3], #2
 800598e:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005990:	6323      	str	r3, [r4, #48]	; 0x30
 8005992:	e7d9      	b.n	8005948 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005994:	f7fd fe92 	bl	80036bc <HAL_GetTick>
 8005998:	1bc0      	subs	r0, r0, r7
 800599a:	42b0      	cmp	r0, r6
 800599c:	d3d8      	bcc.n	8005950 <HAL_SPI_Transmit+0x9a>
 800599e:	1c71      	adds	r1, r6, #1
 80059a0:	d0d6      	beq.n	8005950 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 80059a2:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80059a4:	2301      	movs	r3, #1
 80059a6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80059aa:	2300      	movs	r3, #0
 80059ac:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80059b0:	b002      	add	sp, #8
 80059b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80059b6:	b113      	cbz	r3, 80059be <HAL_SPI_Transmit+0x108>
 80059b8:	f1b8 0f01 	cmp.w	r8, #1
 80059bc:	d108      	bne.n	80059d0 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80059be:	782b      	ldrb	r3, [r5, #0]
 80059c0:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80059c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80059c4:	3301      	adds	r3, #1
 80059c6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80059c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80059ca:	3b01      	subs	r3, #1
 80059cc:	b29b      	uxth	r3, r3
 80059ce:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80059d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80059d2:	b29b      	uxth	r3, r3
 80059d4:	2b00      	cmp	r3, #0
 80059d6:	d0be      	beq.n	8005956 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80059d8:	6823      	ldr	r3, [r4, #0]
 80059da:	689a      	ldr	r2, [r3, #8]
 80059dc:	0792      	lsls	r2, r2, #30
 80059de:	d503      	bpl.n	80059e8 <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80059e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80059e2:	7812      	ldrb	r2, [r2, #0]
 80059e4:	731a      	strb	r2, [r3, #12]
 80059e6:	e7ec      	b.n	80059c2 <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80059e8:	f7fd fe68 	bl	80036bc <HAL_GetTick>
 80059ec:	1bc0      	subs	r0, r0, r7
 80059ee:	42b0      	cmp	r0, r6
 80059f0:	d3ee      	bcc.n	80059d0 <HAL_SPI_Transmit+0x11a>
 80059f2:	1c73      	adds	r3, r6, #1
 80059f4:	d0ec      	beq.n	80059d0 <HAL_SPI_Transmit+0x11a>
 80059f6:	e7d4      	b.n	80059a2 <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80059f8:	2320      	movs	r3, #32
 80059fa:	6563      	str	r3, [r4, #84]	; 0x54
 80059fc:	e7b2      	b.n	8005964 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 80059fe:	2002      	movs	r0, #2
 8005a00:	e7d0      	b.n	80059a4 <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8005a02:	2002      	movs	r0, #2
 8005a04:	e7d4      	b.n	80059b0 <HAL_SPI_Transmit+0xfa>

08005a06 <HAL_SPI_TransmitReceive>:
{
 8005a06:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005a0a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005a0c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005a10:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8005a12:	2b01      	cmp	r3, #1
{
 8005a14:	4604      	mov	r4, r0
 8005a16:	460d      	mov	r5, r1
 8005a18:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005a1a:	f000 80e2 	beq.w	8005be2 <HAL_SPI_TransmitReceive+0x1dc>
 8005a1e:	2301      	movs	r3, #1
 8005a20:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005a24:	f7fd fe4a 	bl	80036bc <HAL_GetTick>
  tmp_state           = hspi->State;
 8005a28:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8005a2c:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8005a2e:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005a30:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005a32:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005a34:	d00a      	beq.n	8005a4c <HAL_SPI_TransmitReceive+0x46>
 8005a36:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8005a3a:	f040 80d0 	bne.w	8005bde <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005a3e:	68a0      	ldr	r0, [r4, #8]
 8005a40:	2800      	cmp	r0, #0
 8005a42:	f040 80cc 	bne.w	8005bde <HAL_SPI_TransmitReceive+0x1d8>
 8005a46:	2b04      	cmp	r3, #4
 8005a48:	f040 80c9 	bne.w	8005bde <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005a4c:	2d00      	cmp	r5, #0
 8005a4e:	f000 80c4 	beq.w	8005bda <HAL_SPI_TransmitReceive+0x1d4>
 8005a52:	f1b9 0f00 	cmp.w	r9, #0
 8005a56:	f000 80c0 	beq.w	8005bda <HAL_SPI_TransmitReceive+0x1d4>
 8005a5a:	2e00      	cmp	r6, #0
 8005a5c:	f000 80bd 	beq.w	8005bda <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005a60:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005a64:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005a68:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005a6a:	bf1c      	itt	ne
 8005a6c:	2305      	movne	r3, #5
 8005a6e:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005a72:	2300      	movs	r3, #0
 8005a74:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8005a76:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005a7a:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005a7c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8005a7e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005a80:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8005a82:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005a84:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005a86:	bf58      	it	pl
 8005a88:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005a8a:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8005a8c:	bf58      	it	pl
 8005a8e:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8005a92:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8005a94:	bf58      	it	pl
 8005a96:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005a98:	68e2      	ldr	r2, [r4, #12]
 8005a9a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005a9e:	d158      	bne.n	8005b52 <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005aa0:	b109      	cbz	r1, 8005aa6 <HAL_SPI_TransmitReceive+0xa0>
 8005aa2:	2e01      	cmp	r6, #1
 8005aa4:	d107      	bne.n	8005ab6 <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005aa6:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005aaa:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005aac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005aae:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005ab0:	3b01      	subs	r3, #1
 8005ab2:	b29b      	uxth	r3, r3
 8005ab4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005ab6:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005ab8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005aba:	b29b      	uxth	r3, r3
 8005abc:	b9ab      	cbnz	r3, 8005aea <HAL_SPI_TransmitReceive+0xe4>
 8005abe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005ac0:	b29b      	uxth	r3, r3
 8005ac2:	b993      	cbnz	r3, 8005aea <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005ac4:	4642      	mov	r2, r8
 8005ac6:	4639      	mov	r1, r7
 8005ac8:	4620      	mov	r0, r4
 8005aca:	f7ff fe8b 	bl	80057e4 <SPI_EndRxTxTransaction>
 8005ace:	2800      	cmp	r0, #0
 8005ad0:	f040 8081 	bne.w	8005bd6 <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005ad4:	68a3      	ldr	r3, [r4, #8]
 8005ad6:	2b00      	cmp	r3, #0
 8005ad8:	d132      	bne.n	8005b40 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005ada:	6823      	ldr	r3, [r4, #0]
 8005adc:	9001      	str	r0, [sp, #4]
 8005ade:	68da      	ldr	r2, [r3, #12]
 8005ae0:	9201      	str	r2, [sp, #4]
 8005ae2:	689b      	ldr	r3, [r3, #8]
 8005ae4:	9301      	str	r3, [sp, #4]
 8005ae6:	9b01      	ldr	r3, [sp, #4]
 8005ae8:	e02a      	b.n	8005b40 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005aea:	6822      	ldr	r2, [r4, #0]
 8005aec:	6893      	ldr	r3, [r2, #8]
 8005aee:	0799      	lsls	r1, r3, #30
 8005af0:	d50d      	bpl.n	8005b0e <HAL_SPI_TransmitReceive+0x108>
 8005af2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005af4:	b29b      	uxth	r3, r3
 8005af6:	b153      	cbz	r3, 8005b0e <HAL_SPI_TransmitReceive+0x108>
 8005af8:	b14d      	cbz	r5, 8005b0e <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005afa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005afc:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005b00:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005b02:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005b04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005b06:	3b01      	subs	r3, #1
 8005b08:	b29b      	uxth	r3, r3
 8005b0a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005b0c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005b0e:	6893      	ldr	r3, [r2, #8]
 8005b10:	07db      	lsls	r3, r3, #31
 8005b12:	d50c      	bpl.n	8005b2e <HAL_SPI_TransmitReceive+0x128>
 8005b14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005b16:	b29b      	uxth	r3, r3
 8005b18:	b14b      	cbz	r3, 8005b2e <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005b1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005b1c:	68d2      	ldr	r2, [r2, #12]
 8005b1e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005b22:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005b24:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005b26:	3b01      	subs	r3, #1
 8005b28:	b29b      	uxth	r3, r3
 8005b2a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005b2c:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005b2e:	f7fd fdc5 	bl	80036bc <HAL_GetTick>
 8005b32:	eba0 0008 	sub.w	r0, r0, r8
 8005b36:	4287      	cmp	r7, r0
 8005b38:	d8be      	bhi.n	8005ab8 <HAL_SPI_TransmitReceive+0xb2>
 8005b3a:	1c7e      	adds	r6, r7, #1
 8005b3c:	d0bc      	beq.n	8005ab8 <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8005b3e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005b40:	2301      	movs	r3, #1
 8005b42:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005b46:	2300      	movs	r3, #0
 8005b48:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005b4c:	b003      	add	sp, #12
 8005b4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005b52:	b109      	cbz	r1, 8005b58 <HAL_SPI_TransmitReceive+0x152>
 8005b54:	2e01      	cmp	r6, #1
 8005b56:	d108      	bne.n	8005b6a <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005b58:	782a      	ldrb	r2, [r5, #0]
 8005b5a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005b5c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005b5e:	3301      	adds	r3, #1
 8005b60:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005b62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005b64:	3b01      	subs	r3, #1
 8005b66:	b29b      	uxth	r3, r3
 8005b68:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005b6a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005b6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005b6e:	b29b      	uxth	r3, r3
 8005b70:	b91b      	cbnz	r3, 8005b7a <HAL_SPI_TransmitReceive+0x174>
 8005b72:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005b74:	b29b      	uxth	r3, r3
 8005b76:	2b00      	cmp	r3, #0
 8005b78:	d0a4      	beq.n	8005ac4 <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005b7a:	6822      	ldr	r2, [r4, #0]
 8005b7c:	6893      	ldr	r3, [r2, #8]
 8005b7e:	0798      	lsls	r0, r3, #30
 8005b80:	d50e      	bpl.n	8005ba0 <HAL_SPI_TransmitReceive+0x19a>
 8005b82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005b84:	b29b      	uxth	r3, r3
 8005b86:	b15b      	cbz	r3, 8005ba0 <HAL_SPI_TransmitReceive+0x19a>
 8005b88:	b155      	cbz	r5, 8005ba0 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005b8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005b8c:	781b      	ldrb	r3, [r3, #0]
 8005b8e:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005b90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005b92:	3301      	adds	r3, #1
 8005b94:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005b96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005b98:	3b01      	subs	r3, #1
 8005b9a:	b29b      	uxth	r3, r3
 8005b9c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005b9e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005ba0:	6822      	ldr	r2, [r4, #0]
 8005ba2:	6893      	ldr	r3, [r2, #8]
 8005ba4:	07d9      	lsls	r1, r3, #31
 8005ba6:	d50d      	bpl.n	8005bc4 <HAL_SPI_TransmitReceive+0x1be>
 8005ba8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005baa:	b29b      	uxth	r3, r3
 8005bac:	b153      	cbz	r3, 8005bc4 <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005bae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005bb0:	68d2      	ldr	r2, [r2, #12]
 8005bb2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005bb4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005bb6:	3301      	adds	r3, #1
 8005bb8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005bba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005bbc:	3b01      	subs	r3, #1
 8005bbe:	b29b      	uxth	r3, r3
 8005bc0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005bc2:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005bc4:	f7fd fd7a 	bl	80036bc <HAL_GetTick>
 8005bc8:	eba0 0008 	sub.w	r0, r0, r8
 8005bcc:	4287      	cmp	r7, r0
 8005bce:	d8cd      	bhi.n	8005b6c <HAL_SPI_TransmitReceive+0x166>
 8005bd0:	1c7b      	adds	r3, r7, #1
 8005bd2:	d0cb      	beq.n	8005b6c <HAL_SPI_TransmitReceive+0x166>
 8005bd4:	e7b3      	b.n	8005b3e <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005bd6:	2320      	movs	r3, #32
 8005bd8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8005bda:	2001      	movs	r0, #1
 8005bdc:	e7b0      	b.n	8005b40 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8005bde:	2002      	movs	r0, #2
 8005be0:	e7ae      	b.n	8005b40 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8005be2:	2002      	movs	r0, #2
 8005be4:	e7b2      	b.n	8005b4c <HAL_SPI_TransmitReceive+0x146>

08005be6 <HAL_SPI_Receive>:
{
 8005be6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005bea:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005bec:	6843      	ldr	r3, [r0, #4]
 8005bee:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8005bf2:	4604      	mov	r4, r0
 8005bf4:	4688      	mov	r8, r1
 8005bf6:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005bf8:	d10c      	bne.n	8005c14 <HAL_SPI_Receive+0x2e>
 8005bfa:	6883      	ldr	r3, [r0, #8]
 8005bfc:	b953      	cbnz	r3, 8005c14 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005bfe:	2304      	movs	r3, #4
 8005c00:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005c04:	4613      	mov	r3, r2
 8005c06:	9500      	str	r5, [sp, #0]
 8005c08:	460a      	mov	r2, r1
 8005c0a:	f7ff fefc 	bl	8005a06 <HAL_SPI_TransmitReceive>
}
 8005c0e:	b002      	add	sp, #8
 8005c10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8005c14:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8005c18:	2b01      	cmp	r3, #1
 8005c1a:	d079      	beq.n	8005d10 <HAL_SPI_Receive+0x12a>
 8005c1c:	2301      	movs	r3, #1
 8005c1e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005c22:	f7fd fd4b 	bl	80036bc <HAL_GetTick>
 8005c26:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005c28:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005c2c:	b2c0      	uxtb	r0, r0
 8005c2e:	2801      	cmp	r0, #1
 8005c30:	d16c      	bne.n	8005d0c <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8005c32:	f1b8 0f00 	cmp.w	r8, #0
 8005c36:	d057      	beq.n	8005ce8 <HAL_SPI_Receive+0x102>
 8005c38:	2f00      	cmp	r7, #0
 8005c3a:	d055      	beq.n	8005ce8 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005c3c:	2304      	movs	r3, #4
 8005c3e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005c42:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8005c44:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005c46:	2300      	movs	r3, #0
 8005c48:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005c4a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 8005c4c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 8005c4e:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8005c50:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 8005c52:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 8005c56:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005c58:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005c5c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 8005c60:	bf02      	ittt	eq
 8005c62:	681a      	ldreq	r2, [r3, #0]
 8005c64:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8005c68:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005c6a:	681a      	ldr	r2, [r3, #0]
 8005c6c:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005c6e:	bf5e      	ittt	pl
 8005c70:	681a      	ldrpl	r2, [r3, #0]
 8005c72:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8005c76:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005c78:	68e3      	ldr	r3, [r4, #12]
 8005c7a:	b1f3      	cbz	r3, 8005cba <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 8005c7c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005c7e:	b29b      	uxth	r3, r3
 8005c80:	b1fb      	cbz	r3, 8005cc2 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005c82:	6823      	ldr	r3, [r4, #0]
 8005c84:	689a      	ldr	r2, [r3, #8]
 8005c86:	07d2      	lsls	r2, r2, #31
 8005c88:	d535      	bpl.n	8005cf6 <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005c8a:	68da      	ldr	r2, [r3, #12]
 8005c8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005c8e:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005c92:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005c94:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005c96:	3b01      	subs	r3, #1
 8005c98:	b29b      	uxth	r3, r3
 8005c9a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8005c9c:	e7ee      	b.n	8005c7c <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005c9e:	6823      	ldr	r3, [r4, #0]
 8005ca0:	689a      	ldr	r2, [r3, #8]
 8005ca2:	07d0      	lsls	r0, r2, #31
 8005ca4:	d518      	bpl.n	8005cd8 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005ca6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005ca8:	7b1b      	ldrb	r3, [r3, #12]
 8005caa:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005cac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005cae:	3301      	adds	r3, #1
 8005cb0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005cb2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005cb4:	3b01      	subs	r3, #1
 8005cb6:	b29b      	uxth	r3, r3
 8005cb8:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8005cba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005cbc:	b29b      	uxth	r3, r3
 8005cbe:	2b00      	cmp	r3, #0
 8005cc0:	d1ed      	bne.n	8005c9e <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005cc2:	4632      	mov	r2, r6
 8005cc4:	4629      	mov	r1, r5
 8005cc6:	4620      	mov	r0, r4
 8005cc8:	f7ff fd62 	bl	8005790 <SPI_EndRxTransaction>
 8005ccc:	b9d8      	cbnz	r0, 8005d06 <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005cce:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005cd0:	3000      	adds	r0, #0
 8005cd2:	bf18      	it	ne
 8005cd4:	2001      	movne	r0, #1
error :
 8005cd6:	e007      	b.n	8005ce8 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005cd8:	f7fd fcf0 	bl	80036bc <HAL_GetTick>
 8005cdc:	1b80      	subs	r0, r0, r6
 8005cde:	42a8      	cmp	r0, r5
 8005ce0:	d3eb      	bcc.n	8005cba <HAL_SPI_Receive+0xd4>
 8005ce2:	1c69      	adds	r1, r5, #1
 8005ce4:	d0e9      	beq.n	8005cba <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 8005ce6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005ce8:	2301      	movs	r3, #1
 8005cea:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005cee:	2300      	movs	r3, #0
 8005cf0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8005cf4:	e78b      	b.n	8005c0e <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005cf6:	f7fd fce1 	bl	80036bc <HAL_GetTick>
 8005cfa:	1b80      	subs	r0, r0, r6
 8005cfc:	42a8      	cmp	r0, r5
 8005cfe:	d3bd      	bcc.n	8005c7c <HAL_SPI_Receive+0x96>
 8005d00:	1c6b      	adds	r3, r5, #1
 8005d02:	d0bb      	beq.n	8005c7c <HAL_SPI_Receive+0x96>
 8005d04:	e7ef      	b.n	8005ce6 <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005d06:	2320      	movs	r3, #32
 8005d08:	6563      	str	r3, [r4, #84]	; 0x54
 8005d0a:	e7e0      	b.n	8005cce <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8005d0c:	2002      	movs	r0, #2
 8005d0e:	e7eb      	b.n	8005ce8 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8005d10:	2002      	movs	r0, #2
 8005d12:	e77c      	b.n	8005c0e <HAL_SPI_Receive+0x28>

08005d14 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005d14:	6a03      	ldr	r3, [r0, #32]
 8005d16:	f023 0301 	bic.w	r3, r3, #1
 8005d1a:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005d1c:	6a03      	ldr	r3, [r0, #32]
{
 8005d1e:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005d20:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005d22:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005d24:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8005d26:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8005d2a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8005d2c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8005d2e:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8005d32:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8005d34:	4d0e      	ldr	r5, [pc, #56]	; (8005d70 <TIM_OC1_SetConfig+0x5c>)
 8005d36:	42a8      	cmp	r0, r5
 8005d38:	d002      	beq.n	8005d40 <TIM_OC1_SetConfig+0x2c>
 8005d3a:	4e0e      	ldr	r6, [pc, #56]	; (8005d74 <TIM_OC1_SetConfig+0x60>)
 8005d3c:	42b0      	cmp	r0, r6
 8005d3e:	d110      	bne.n	8005d62 <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8005d40:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8005d42:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8005d46:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005d48:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 8005d4a:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005d4e:	d002      	beq.n	8005d56 <TIM_OC1_SetConfig+0x42>
 8005d50:	4d08      	ldr	r5, [pc, #32]	; (8005d74 <TIM_OC1_SetConfig+0x60>)
 8005d52:	42a8      	cmp	r0, r5
 8005d54:	d105      	bne.n	8005d62 <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8005d56:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8005d5a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8005d5e:	4335      	orrs	r5, r6
 8005d60:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005d62:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005d64:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8005d66:	684a      	ldr	r2, [r1, #4]
 8005d68:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005d6a:	6203      	str	r3, [r0, #32]
}
 8005d6c:	bd70      	pop	{r4, r5, r6, pc}
 8005d6e:	bf00      	nop
 8005d70:	40010000 	.word	0x40010000
 8005d74:	40010400 	.word	0x40010400

08005d78 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8005d78:	6a03      	ldr	r3, [r0, #32]
 8005d7a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005d7e:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005d80:	6a03      	ldr	r3, [r0, #32]
{
 8005d82:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005d84:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005d86:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005d88:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8005d8a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8005d8e:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8005d90:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8005d92:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8005d96:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8005d9a:	4d11      	ldr	r5, [pc, #68]	; (8005de0 <TIM_OC3_SetConfig+0x68>)
 8005d9c:	42a8      	cmp	r0, r5
 8005d9e:	d003      	beq.n	8005da8 <TIM_OC3_SetConfig+0x30>
 8005da0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005da4:	42a8      	cmp	r0, r5
 8005da6:	d114      	bne.n	8005dd2 <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005da8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8005daa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005dae:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005db2:	4d0b      	ldr	r5, [pc, #44]	; (8005de0 <TIM_OC3_SetConfig+0x68>)
 8005db4:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 8005db6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005dba:	d003      	beq.n	8005dc4 <TIM_OC3_SetConfig+0x4c>
 8005dbc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005dc0:	42a8      	cmp	r0, r5
 8005dc2:	d106      	bne.n	8005dd2 <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8005dc4:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8005dc8:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8005dcc:	4335      	orrs	r5, r6
 8005dce:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005dd2:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005dd4:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8005dd6:	684a      	ldr	r2, [r1, #4]
 8005dd8:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005dda:	6203      	str	r3, [r0, #32]
}
 8005ddc:	bd70      	pop	{r4, r5, r6, pc}
 8005dde:	bf00      	nop
 8005de0:	40010000 	.word	0x40010000

08005de4 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8005de4:	6a03      	ldr	r3, [r0, #32]
 8005de6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005dea:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005dec:	6a03      	ldr	r3, [r0, #32]
{
 8005dee:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005df0:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005df2:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005df4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8005df6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005dfa:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005dfe:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8005e00:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005e04:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005e08:	4d08      	ldr	r5, [pc, #32]	; (8005e2c <TIM_OC4_SetConfig+0x48>)
 8005e0a:	42a8      	cmp	r0, r5
 8005e0c:	d003      	beq.n	8005e16 <TIM_OC4_SetConfig+0x32>
 8005e0e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005e12:	42a8      	cmp	r0, r5
 8005e14:	d104      	bne.n	8005e20 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8005e16:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8005e18:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8005e1c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005e20:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005e22:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8005e24:	684a      	ldr	r2, [r1, #4]
 8005e26:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005e28:	6203      	str	r3, [r0, #32]
}
 8005e2a:	bd30      	pop	{r4, r5, pc}
 8005e2c:	40010000 	.word	0x40010000

08005e30 <HAL_TIM_Base_Start_IT>:
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8005e30:	6803      	ldr	r3, [r0, #0]
 8005e32:	68da      	ldr	r2, [r3, #12]
 8005e34:	f042 0201 	orr.w	r2, r2, #1
 8005e38:	60da      	str	r2, [r3, #12]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005e3a:	689a      	ldr	r2, [r3, #8]
 8005e3c:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005e40:	2a06      	cmp	r2, #6
    __HAL_TIM_ENABLE(htim);
 8005e42:	bf1e      	ittt	ne
 8005e44:	681a      	ldrne	r2, [r3, #0]
 8005e46:	f042 0201 	orrne.w	r2, r2, #1
 8005e4a:	601a      	strne	r2, [r3, #0]
}
 8005e4c:	2000      	movs	r0, #0
 8005e4e:	4770      	bx	lr

08005e50 <HAL_TIM_PWM_MspInit>:
 8005e50:	4770      	bx	lr

08005e52 <HAL_TIM_OC_DelayElapsedCallback>:
 8005e52:	4770      	bx	lr

08005e54 <HAL_TIM_IC_CaptureCallback>:
 8005e54:	4770      	bx	lr

08005e56 <HAL_TIM_PWM_PulseFinishedCallback>:
 8005e56:	4770      	bx	lr

08005e58 <HAL_TIM_TriggerCallback>:
 8005e58:	4770      	bx	lr

08005e5a <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005e5a:	6803      	ldr	r3, [r0, #0]
 8005e5c:	691a      	ldr	r2, [r3, #16]
 8005e5e:	0791      	lsls	r1, r2, #30
{
 8005e60:	b510      	push	{r4, lr}
 8005e62:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005e64:	d50e      	bpl.n	8005e84 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005e66:	68da      	ldr	r2, [r3, #12]
 8005e68:	0792      	lsls	r2, r2, #30
 8005e6a:	d50b      	bpl.n	8005e84 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8005e6c:	f06f 0202 	mvn.w	r2, #2
 8005e70:	611a      	str	r2, [r3, #16]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005e72:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005e74:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005e76:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005e78:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005e7a:	d077      	beq.n	8005f6c <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 8005e7c:	f7ff ffea 	bl	8005e54 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005e80:	2300      	movs	r3, #0
 8005e82:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005e84:	6823      	ldr	r3, [r4, #0]
 8005e86:	691a      	ldr	r2, [r3, #16]
 8005e88:	0750      	lsls	r0, r2, #29
 8005e8a:	d510      	bpl.n	8005eae <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8005e8c:	68da      	ldr	r2, [r3, #12]
 8005e8e:	0751      	lsls	r1, r2, #29
 8005e90:	d50d      	bpl.n	8005eae <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005e92:	f06f 0204 	mvn.w	r2, #4
 8005e96:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005e98:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005e9a:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005e9c:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005ea0:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8005ea2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005ea4:	d068      	beq.n	8005f78 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8005ea6:	f7ff ffd5 	bl	8005e54 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005eaa:	2300      	movs	r3, #0
 8005eac:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005eae:	6823      	ldr	r3, [r4, #0]
 8005eb0:	691a      	ldr	r2, [r3, #16]
 8005eb2:	0712      	lsls	r2, r2, #28
 8005eb4:	d50f      	bpl.n	8005ed6 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8005eb6:	68da      	ldr	r2, [r3, #12]
 8005eb8:	0710      	lsls	r0, r2, #28
 8005eba:	d50c      	bpl.n	8005ed6 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8005ebc:	f06f 0208 	mvn.w	r2, #8
 8005ec0:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005ec2:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005ec4:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005ec6:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005ec8:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8005eca:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005ecc:	d05a      	beq.n	8005f84 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8005ece:	f7ff ffc1 	bl	8005e54 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005ed2:	2300      	movs	r3, #0
 8005ed4:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8005ed6:	6823      	ldr	r3, [r4, #0]
 8005ed8:	691a      	ldr	r2, [r3, #16]
 8005eda:	06d2      	lsls	r2, r2, #27
 8005edc:	d510      	bpl.n	8005f00 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8005ede:	68da      	ldr	r2, [r3, #12]
 8005ee0:	06d0      	lsls	r0, r2, #27
 8005ee2:	d50d      	bpl.n	8005f00 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8005ee4:	f06f 0210 	mvn.w	r2, #16
 8005ee8:	611a      	str	r2, [r3, #16]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005eea:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005eec:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005eee:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005ef2:	7722      	strb	r2, [r4, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 8005ef4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005ef6:	d04b      	beq.n	8005f90 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8005ef8:	f7ff ffac 	bl	8005e54 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005efc:	2300      	movs	r3, #0
 8005efe:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8005f00:	6823      	ldr	r3, [r4, #0]
 8005f02:	691a      	ldr	r2, [r3, #16]
 8005f04:	07d1      	lsls	r1, r2, #31
 8005f06:	d508      	bpl.n	8005f1a <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8005f08:	68da      	ldr	r2, [r3, #12]
 8005f0a:	07d2      	lsls	r2, r2, #31
 8005f0c:	d505      	bpl.n	8005f1a <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8005f0e:	f06f 0201 	mvn.w	r2, #1
 8005f12:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8005f14:	4620      	mov	r0, r4
 8005f16:	f7fb fce1 	bl	80018dc <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8005f1a:	6823      	ldr	r3, [r4, #0]
 8005f1c:	691a      	ldr	r2, [r3, #16]
 8005f1e:	0610      	lsls	r0, r2, #24
 8005f20:	d508      	bpl.n	8005f34 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8005f22:	68da      	ldr	r2, [r3, #12]
 8005f24:	0611      	lsls	r1, r2, #24
 8005f26:	d505      	bpl.n	8005f34 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8005f28:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005f2c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8005f2e:	4620      	mov	r0, r4
 8005f30:	f000 f9f3 	bl	800631a <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8005f34:	6823      	ldr	r3, [r4, #0]
 8005f36:	691a      	ldr	r2, [r3, #16]
 8005f38:	0652      	lsls	r2, r2, #25
 8005f3a:	d508      	bpl.n	8005f4e <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8005f3c:	68da      	ldr	r2, [r3, #12]
 8005f3e:	0650      	lsls	r0, r2, #25
 8005f40:	d505      	bpl.n	8005f4e <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8005f42:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005f46:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8005f48:	4620      	mov	r0, r4
 8005f4a:	f7ff ff85 	bl	8005e58 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8005f4e:	6823      	ldr	r3, [r4, #0]
 8005f50:	691a      	ldr	r2, [r3, #16]
 8005f52:	0691      	lsls	r1, r2, #26
 8005f54:	d522      	bpl.n	8005f9c <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8005f56:	68da      	ldr	r2, [r3, #12]
 8005f58:	0692      	lsls	r2, r2, #26
 8005f5a:	d51f      	bpl.n	8005f9c <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005f5c:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 8005f60:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005f62:	611a      	str	r2, [r3, #16]
}
 8005f64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8005f68:	f000 b9d6 	b.w	8006318 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005f6c:	f7ff ff71 	bl	8005e52 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005f70:	4620      	mov	r0, r4
 8005f72:	f7ff ff70 	bl	8005e56 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f76:	e783      	b.n	8005e80 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005f78:	f7ff ff6b 	bl	8005e52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005f7c:	4620      	mov	r0, r4
 8005f7e:	f7ff ff6a 	bl	8005e56 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f82:	e792      	b.n	8005eaa <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005f84:	f7ff ff65 	bl	8005e52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005f88:	4620      	mov	r0, r4
 8005f8a:	f7ff ff64 	bl	8005e56 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f8e:	e7a0      	b.n	8005ed2 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005f90:	f7ff ff5f 	bl	8005e52 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005f94:	4620      	mov	r0, r4
 8005f96:	f7ff ff5e 	bl	8005e56 <HAL_TIM_PWM_PulseFinishedCallback>
 8005f9a:	e7af      	b.n	8005efc <HAL_TIM_IRQHandler+0xa2>
}
 8005f9c:	bd10      	pop	{r4, pc}
	...

08005fa0 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005fa0:	4a30      	ldr	r2, [pc, #192]	; (8006064 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8005fa2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005fa4:	4290      	cmp	r0, r2
 8005fa6:	d012      	beq.n	8005fce <TIM_Base_SetConfig+0x2e>
 8005fa8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005fac:	d00f      	beq.n	8005fce <TIM_Base_SetConfig+0x2e>
 8005fae:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005fb2:	4290      	cmp	r0, r2
 8005fb4:	d00b      	beq.n	8005fce <TIM_Base_SetConfig+0x2e>
 8005fb6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005fba:	4290      	cmp	r0, r2
 8005fbc:	d007      	beq.n	8005fce <TIM_Base_SetConfig+0x2e>
 8005fbe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005fc2:	4290      	cmp	r0, r2
 8005fc4:	d003      	beq.n	8005fce <TIM_Base_SetConfig+0x2e>
 8005fc6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8005fca:	4290      	cmp	r0, r2
 8005fcc:	d119      	bne.n	8006002 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 8005fce:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005fd0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8005fd4:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8005fd6:	4a23      	ldr	r2, [pc, #140]	; (8006064 <TIM_Base_SetConfig+0xc4>)
 8005fd8:	4290      	cmp	r0, r2
 8005fda:	d029      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8005fdc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005fe0:	d026      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8005fe2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005fe6:	4290      	cmp	r0, r2
 8005fe8:	d022      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8005fea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005fee:	4290      	cmp	r0, r2
 8005ff0:	d01e      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8005ff2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005ff6:	4290      	cmp	r0, r2
 8005ff8:	d01a      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8005ffa:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8005ffe:	4290      	cmp	r0, r2
 8006000:	d016      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006002:	4a19      	ldr	r2, [pc, #100]	; (8006068 <TIM_Base_SetConfig+0xc8>)
 8006004:	4290      	cmp	r0, r2
 8006006:	d013      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006008:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800600c:	4290      	cmp	r0, r2
 800600e:	d00f      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006010:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006014:	4290      	cmp	r0, r2
 8006016:	d00b      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006018:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800601c:	4290      	cmp	r0, r2
 800601e:	d007      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006020:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006024:	4290      	cmp	r0, r2
 8006026:	d003      	beq.n	8006030 <TIM_Base_SetConfig+0x90>
 8006028:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800602c:	4290      	cmp	r0, r2
 800602e:	d103      	bne.n	8006038 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006030:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006032:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006036:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006038:	694a      	ldr	r2, [r1, #20]
 800603a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800603e:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8006040:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006042:	688b      	ldr	r3, [r1, #8]
 8006044:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8006046:	680b      	ldr	r3, [r1, #0]
 8006048:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800604a:	4b06      	ldr	r3, [pc, #24]	; (8006064 <TIM_Base_SetConfig+0xc4>)
 800604c:	4298      	cmp	r0, r3
 800604e:	d003      	beq.n	8006058 <TIM_Base_SetConfig+0xb8>
 8006050:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006054:	4298      	cmp	r0, r3
 8006056:	d101      	bne.n	800605c <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 8006058:	690b      	ldr	r3, [r1, #16]
 800605a:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800605c:	2301      	movs	r3, #1
 800605e:	6143      	str	r3, [r0, #20]
}
 8006060:	4770      	bx	lr
 8006062:	bf00      	nop
 8006064:	40010000 	.word	0x40010000
 8006068:	40014000 	.word	0x40014000

0800606c <HAL_TIM_Base_Init>:
{
 800606c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800606e:	4604      	mov	r4, r0
 8006070:	b1a0      	cbz	r0, 800609c <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006072:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006076:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800607a:	b91b      	cbnz	r3, 8006084 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800607c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006080:	f7fb fe64 	bl	8001d4c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006084:	2302      	movs	r3, #2
 8006086:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800608a:	6820      	ldr	r0, [r4, #0]
 800608c:	1d21      	adds	r1, r4, #4
 800608e:	f7ff ff87 	bl	8005fa0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8006092:	2301      	movs	r3, #1
 8006094:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006098:	2000      	movs	r0, #0
}
 800609a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800609c:	2001      	movs	r0, #1
 800609e:	e7fc      	b.n	800609a <HAL_TIM_Base_Init+0x2e>

080060a0 <HAL_TIM_OC_Init>:
{
 80060a0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80060a2:	4604      	mov	r4, r0
 80060a4:	b1a0      	cbz	r0, 80060d0 <HAL_TIM_OC_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80060a6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80060aa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80060ae:	b91b      	cbnz	r3, 80060b8 <HAL_TIM_OC_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80060b0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_OC_MspInit(htim);
 80060b4:	f7fb fe34 	bl	8001d20 <HAL_TIM_OC_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80060b8:	2302      	movs	r3, #2
 80060ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 80060be:	6820      	ldr	r0, [r4, #0]
 80060c0:	1d21      	adds	r1, r4, #4
 80060c2:	f7ff ff6d 	bl	8005fa0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80060c6:	2301      	movs	r3, #1
 80060c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80060cc:	2000      	movs	r0, #0
}
 80060ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80060d0:	2001      	movs	r0, #1
 80060d2:	e7fc      	b.n	80060ce <HAL_TIM_OC_Init+0x2e>

080060d4 <HAL_TIM_PWM_Init>:
{
 80060d4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80060d6:	4604      	mov	r4, r0
 80060d8:	b1a0      	cbz	r0, 8006104 <HAL_TIM_PWM_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80060da:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80060de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80060e2:	b91b      	cbnz	r3, 80060ec <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80060e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 80060e8:	f7ff feb2 	bl	8005e50 <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80060ec:	2302      	movs	r3, #2
 80060ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80060f2:	6820      	ldr	r0, [r4, #0]
 80060f4:	1d21      	adds	r1, r4, #4
 80060f6:	f7ff ff53 	bl	8005fa0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80060fa:	2301      	movs	r3, #1
 80060fc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006100:	2000      	movs	r0, #0
}
 8006102:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006104:	2001      	movs	r0, #1
 8006106:	e7fc      	b.n	8006102 <HAL_TIM_PWM_Init+0x2e>

08006108 <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006108:	6a03      	ldr	r3, [r0, #32]
 800610a:	f023 0310 	bic.w	r3, r3, #16
 800610e:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8006110:	6a03      	ldr	r3, [r0, #32]
{
 8006112:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8006114:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 8006116:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006118:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800611a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800611e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006122:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8006124:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006128:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800612c:	4d10      	ldr	r5, [pc, #64]	; (8006170 <TIM_OC2_SetConfig+0x68>)
 800612e:	42a8      	cmp	r0, r5
 8006130:	d003      	beq.n	800613a <TIM_OC2_SetConfig+0x32>
 8006132:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006136:	42a8      	cmp	r0, r5
 8006138:	d114      	bne.n	8006164 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800613a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800613c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8006140:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006144:	4d0a      	ldr	r5, [pc, #40]	; (8006170 <TIM_OC2_SetConfig+0x68>)
 8006146:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 8006148:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800614c:	d003      	beq.n	8006156 <TIM_OC2_SetConfig+0x4e>
 800614e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006152:	42a8      	cmp	r0, r5
 8006154:	d106      	bne.n	8006164 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8006156:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800615a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800615e:	4335      	orrs	r5, r6
 8006160:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 8006164:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 8006166:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 8006168:	684a      	ldr	r2, [r1, #4]
 800616a:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800616c:	6203      	str	r3, [r0, #32]
}
 800616e:	bd70      	pop	{r4, r5, r6, pc}
 8006170:	40010000 	.word	0x40010000

08006174 <HAL_TIM_OC_ConfigChannel>:
{
 8006174:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 8006176:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800617a:	2b01      	cmp	r3, #1
{
 800617c:	4604      	mov	r4, r0
 800617e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 8006182:	d018      	beq.n	80061b6 <HAL_TIM_OC_ConfigChannel+0x42>
 8006184:	2301      	movs	r3, #1
 8006186:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 800618a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
 800618e:	461d      	mov	r5, r3
  switch (Channel)
 8006190:	2a0c      	cmp	r2, #12
 8006192:	d80b      	bhi.n	80061ac <HAL_TIM_OC_ConfigChannel+0x38>
 8006194:	e8df f002 	tbb	[pc, r2]
 8006198:	0a0a0a07 	.word	0x0a0a0a07
 800619c:	0a0a0a10 	.word	0x0a0a0a10
 80061a0:	0a0a0a14 	.word	0x0a0a0a14
 80061a4:	18          	.byte	0x18
 80061a5:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80061a6:	6820      	ldr	r0, [r4, #0]
 80061a8:	f7ff fdb4 	bl	8005d14 <TIM_OC1_SetConfig>
  __HAL_UNLOCK(htim);
 80061ac:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80061ae:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 80061b2:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 80061b6:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80061b8:	6820      	ldr	r0, [r4, #0]
 80061ba:	f7ff ffa5 	bl	8006108 <TIM_OC2_SetConfig>
      break;
 80061be:	e7f5      	b.n	80061ac <HAL_TIM_OC_ConfigChannel+0x38>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80061c0:	6820      	ldr	r0, [r4, #0]
 80061c2:	f7ff fdd9 	bl	8005d78 <TIM_OC3_SetConfig>
      break;
 80061c6:	e7f1      	b.n	80061ac <HAL_TIM_OC_ConfigChannel+0x38>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80061c8:	6820      	ldr	r0, [r4, #0]
 80061ca:	f7ff fe0b 	bl	8005de4 <TIM_OC4_SetConfig>
      break;
 80061ce:	e7ed      	b.n	80061ac <HAL_TIM_OC_ConfigChannel+0x38>

080061d0 <HAL_TIM_PWM_ConfigChannel>:
{
 80061d0:	b538      	push	{r3, r4, r5, lr}
  __HAL_LOCK(htim);
 80061d2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80061d6:	2b01      	cmp	r3, #1
{
 80061d8:	4604      	mov	r4, r0
 80061da:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(htim);
 80061de:	d025      	beq.n	800622c <HAL_TIM_PWM_ConfigChannel+0x5c>
 80061e0:	2301      	movs	r3, #1
 80061e2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  htim->State = HAL_TIM_STATE_BUSY;
 80061e6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  switch (Channel)
 80061ea:	2a0c      	cmp	r2, #12
 80061ec:	d818      	bhi.n	8006220 <HAL_TIM_PWM_ConfigChannel+0x50>
 80061ee:	e8df f002 	tbb	[pc, r2]
 80061f2:	1707      	.short	0x1707
 80061f4:	171e1717 	.word	0x171e1717
 80061f8:	172f1717 	.word	0x172f1717
 80061fc:	1717      	.short	0x1717
 80061fe:	40          	.byte	0x40
 80061ff:	00          	.byte	0x00
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8006200:	6820      	ldr	r0, [r4, #0]
 8006202:	f7ff fd87 	bl	8005d14 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006206:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006208:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800620a:	699a      	ldr	r2, [r3, #24]
 800620c:	f042 0208 	orr.w	r2, r2, #8
 8006210:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8006212:	699a      	ldr	r2, [r3, #24]
 8006214:	f022 0204 	bic.w	r2, r2, #4
 8006218:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800621a:	699a      	ldr	r2, [r3, #24]
 800621c:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800621e:	619a      	str	r2, [r3, #24]
  htim->State = HAL_TIM_STATE_READY;
 8006220:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8006222:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8006224:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8006228:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
}
 800622c:	bd38      	pop	{r3, r4, r5, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800622e:	6820      	ldr	r0, [r4, #0]
 8006230:	f7ff ff6a 	bl	8006108 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006234:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006236:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006238:	699a      	ldr	r2, [r3, #24]
 800623a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800623e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006240:	699a      	ldr	r2, [r3, #24]
 8006242:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006246:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006248:	699a      	ldr	r2, [r3, #24]
 800624a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800624e:	e7e6      	b.n	800621e <HAL_TIM_PWM_ConfigChannel+0x4e>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8006250:	6820      	ldr	r0, [r4, #0]
 8006252:	f7ff fd91 	bl	8005d78 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006256:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006258:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800625a:	69da      	ldr	r2, [r3, #28]
 800625c:	f042 0208 	orr.w	r2, r2, #8
 8006260:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8006262:	69da      	ldr	r2, [r3, #28]
 8006264:	f022 0204 	bic.w	r2, r2, #4
 8006268:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800626a:	69da      	ldr	r2, [r3, #28]
 800626c:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800626e:	61da      	str	r2, [r3, #28]
      break;
 8006270:	e7d6      	b.n	8006220 <HAL_TIM_PWM_ConfigChannel+0x50>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8006272:	6820      	ldr	r0, [r4, #0]
 8006274:	f7ff fdb6 	bl	8005de4 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8006278:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800627a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800627c:	69da      	ldr	r2, [r3, #28]
 800627e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006282:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8006284:	69da      	ldr	r2, [r3, #28]
 8006286:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800628a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800628c:	69da      	ldr	r2, [r3, #28]
 800628e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006292:	e7ec      	b.n	800626e <HAL_TIM_PWM_ConfigChannel+0x9e>

08006294 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006294:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006298:	2b01      	cmp	r3, #1
{
 800629a:	b530      	push	{r4, r5, lr}
 800629c:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 80062a0:	d035      	beq.n	800630e <HAL_TIMEx_MasterConfigSynchronization+0x7a>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80062a2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80062a6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80062a8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80062aa:	685c      	ldr	r4, [r3, #4]
  tmpcr2 &= ~TIM_CR2_MMS;
 80062ac:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  __HAL_LOCK(htim);
 80062b0:	2201      	movs	r2, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80062b2:	432c      	orrs	r4, r5
  __HAL_LOCK(htim);
 80062b4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 80062b8:	689a      	ldr	r2, [r3, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80062ba:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80062bc:	4c15      	ldr	r4, [pc, #84]	; (8006314 <HAL_TIMEx_MasterConfigSynchronization+0x80>)
 80062be:	42a3      	cmp	r3, r4
 80062c0:	d01a      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80062c6:	d017      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062c8:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80062cc:	42a3      	cmp	r3, r4
 80062ce:	d013      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062d0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80062d4:	42a3      	cmp	r3, r4
 80062d6:	d00f      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062d8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80062dc:	42a3      	cmp	r3, r4
 80062de:	d00b      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062e0:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80062e4:	42a3      	cmp	r3, r4
 80062e6:	d007      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062e8:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 80062ec:	42a3      	cmp	r3, r4
 80062ee:	d003      	beq.n	80062f8 <HAL_TIMEx_MasterConfigSynchronization+0x64>
 80062f0:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 80062f4:	42a3      	cmp	r3, r4
 80062f6:	d104      	bne.n	8006302 <HAL_TIMEx_MasterConfigSynchronization+0x6e>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80062f8:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80062fa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80062fe:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006300:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006302:	2301      	movs	r3, #1
 8006304:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006308:	2300      	movs	r3, #0
 800630a:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 800630e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006310:	bd30      	pop	{r4, r5, pc}
 8006312:	bf00      	nop
 8006314:	40010000 	.word	0x40010000

08006318 <HAL_TIMEx_CommutCallback>:
 8006318:	4770      	bx	lr

0800631a <HAL_TIMEx_BreakCallback>:
 800631a:	4770      	bx	lr

0800631c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800631c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006320:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006322:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006326:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800632a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800632e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006332:	6809      	ldr	r1, [r1, #0]
 8006334:	2901      	cmp	r1, #1
 8006336:	ea43 0304 	orr.w	r3, r3, r4
 800633a:	4912      	ldr	r1, [pc, #72]	; (8006384 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800633c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800633e:	d00f      	beq.n	8006360 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006340:	431a      	orrs	r2, r3
 8006342:	432a      	orrs	r2, r5
 8006344:	ea42 0308 	orr.w	r3, r2, r8
 8006348:	ea43 030e 	orr.w	r3, r3, lr
 800634c:	ea43 030c 	orr.w	r3, r3, ip
 8006350:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006352:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006354:	4333      	orrs	r3, r6
 8006356:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006358:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800635a:	2000      	movs	r0, #0
 800635c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006360:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006362:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006364:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006366:	ea45 0208 	orr.w	r2, r5, r8
 800636a:	ea42 020e 	orr.w	r2, r2, lr
 800636e:	ea42 020c 	orr.w	r2, r2, ip
 8006372:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006374:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006378:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800637a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800637c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800637e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006380:	6042      	str	r2, [r0, #4]
 8006382:	e7ea      	b.n	800635a <FMC_SDRAM_Init+0x3e>
 8006384:	ffff8000 	.word	0xffff8000

08006388 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8006388:	68cb      	ldr	r3, [r1, #12]
 800638a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800638c:	680c      	ldr	r4, [r1, #0]
 800638e:	688e      	ldr	r6, [r1, #8]
 8006390:	690d      	ldr	r5, [r1, #16]
 8006392:	1e5f      	subs	r7, r3, #1
 8006394:	694b      	ldr	r3, [r1, #20]
 8006396:	f104 3cff 	add.w	ip, r4, #4294967295
 800639a:	684c      	ldr	r4, [r1, #4]
 800639c:	6989      	ldr	r1, [r1, #24]
 800639e:	3b01      	subs	r3, #1
 80063a0:	051b      	lsls	r3, r3, #20
 80063a2:	3c01      	subs	r4, #1
 80063a4:	3e01      	subs	r6, #1
 80063a6:	3d01      	subs	r5, #1
 80063a8:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80063aa:	2a01      	cmp	r2, #1
 80063ac:	ea4f 1404 	mov.w	r4, r4, lsl #4
 80063b0:	ea4f 2606 	mov.w	r6, r6, lsl #8
 80063b4:	ea4f 4505 	mov.w	r5, r5, lsl #16
 80063b8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80063bc:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 80063c0:	d00c      	beq.n	80063dc <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80063c2:	ea43 030c 	orr.w	r3, r3, ip
 80063c6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80063c8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80063ca:	4333      	orrs	r3, r6
 80063cc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80063ce:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80063d2:	430b      	orrs	r3, r1
 80063d4:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80063d6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80063d8:	2000      	movs	r0, #0
 80063da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80063dc:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80063de:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80063e2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80063e6:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80063ea:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80063ec:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80063f0:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80063f2:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80063f4:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80063f6:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80063fa:	430a      	orrs	r2, r1
 80063fc:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80063fe:	60c2      	str	r2, [r0, #12]
 8006400:	e7ea      	b.n	80063d8 <FMC_SDRAM_Timing_Init+0x50>

08006402 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006402:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006404:	2300      	movs	r3, #0
 8006406:	9301      	str	r3, [sp, #4]
{
 8006408:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800640a:	e9d1 3200 	ldrd	r3, r2, [r1]
 800640e:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006410:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006412:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006416:	688a      	ldr	r2, [r1, #8]
 8006418:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800641a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800641e:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006420:	9b01      	ldr	r3, [sp, #4]
 8006422:	6103      	str	r3, [r0, #16]
{
 8006424:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006426:	f7fd f949 	bl	80036bc <HAL_GetTick>
 800642a:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800642c:	69a0      	ldr	r0, [r4, #24]
 800642e:	f010 0020 	ands.w	r0, r0, #32
 8006432:	d003      	beq.n	800643c <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8006434:	1c6b      	adds	r3, r5, #1
 8006436:	d0f9      	beq.n	800642c <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006438:	b915      	cbnz	r5, 8006440 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 800643a:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 800643c:	b002      	add	sp, #8
 800643e:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006440:	f7fd f93c 	bl	80036bc <HAL_GetTick>
 8006444:	1b80      	subs	r0, r0, r6
 8006446:	42a8      	cmp	r0, r5
 8006448:	d9f0      	bls.n	800642c <FMC_SDRAM_SendCommand+0x2a>
 800644a:	e7f6      	b.n	800643a <FMC_SDRAM_SendCommand+0x38>

0800644c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800644c:	6943      	ldr	r3, [r0, #20]
 800644e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006452:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006454:	2000      	movs	r0, #0
 8006456:	4770      	bx	lr

08006458 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006458:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800645c:	b113      	cbz	r3, 8006464 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800645e:	f06f 0005 	mvn.w	r0, #5
 8006462:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006464:	f3ef 8210 	mrs	r2, PRIMASK
 8006468:	4b07      	ldr	r3, [pc, #28]	; (8006488 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800646a:	b912      	cbnz	r2, 8006472 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800646c:	f3ef 8211 	mrs	r2, BASEPRI
 8006470:	b112      	cbz	r2, 8006478 <osKernelInitialize+0x20>
 8006472:	681a      	ldr	r2, [r3, #0]
 8006474:	2a02      	cmp	r2, #2
 8006476:	d0f2      	beq.n	800645e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006478:	6818      	ldr	r0, [r3, #0]
 800647a:	b910      	cbnz	r0, 8006482 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800647c:	2201      	movs	r2, #1
 800647e:	601a      	str	r2, [r3, #0]
 8006480:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8006482:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006486:	4770      	bx	lr
 8006488:	200015f4 	.word	0x200015f4

0800648c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800648c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800648e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006492:	b113      	cbz	r3, 800649a <osKernelStart+0xe>
    stat = osErrorISR;
 8006494:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006498:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800649a:	f3ef 8210 	mrs	r2, PRIMASK
 800649e:	4b0a      	ldr	r3, [pc, #40]	; (80064c8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80064a0:	b912      	cbnz	r2, 80064a8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80064a2:	f3ef 8211 	mrs	r2, BASEPRI
 80064a6:	b112      	cbz	r2, 80064ae <osKernelStart+0x22>
 80064a8:	681a      	ldr	r2, [r3, #0]
 80064aa:	2a02      	cmp	r2, #2
 80064ac:	d0f2      	beq.n	8006494 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80064ae:	681a      	ldr	r2, [r3, #0]
 80064b0:	2a01      	cmp	r2, #1
 80064b2:	d105      	bne.n	80064c0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80064b4:	2202      	movs	r2, #2
 80064b6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80064b8:	f001 fbca 	bl	8007c50 <vTaskStartScheduler>
      stat = osOK;
 80064bc:	2000      	movs	r0, #0
 80064be:	e7eb      	b.n	8006498 <osKernelStart+0xc>
      stat = osError;
 80064c0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80064c4:	e7e8      	b.n	8006498 <osKernelStart+0xc>
 80064c6:	bf00      	nop
 80064c8:	200015f4 	.word	0x200015f4

080064cc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80064cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064ce:	b087      	sub	sp, #28
 80064d0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80064d2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80064d4:	460b      	mov	r3, r1
  hTask = NULL;
 80064d6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80064d8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80064dc:	bb32      	cbnz	r2, 800652c <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80064de:	f3ef 8210 	mrs	r2, PRIMASK
 80064e2:	b912      	cbnz	r2, 80064ea <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80064e4:	f3ef 8211 	mrs	r2, BASEPRI
 80064e8:	b11a      	cbz	r2, 80064f2 <osThreadNew+0x26>
 80064ea:	4a22      	ldr	r2, [pc, #136]	; (8006574 <osThreadNew+0xa8>)
 80064ec:	6812      	ldr	r2, [r2, #0]
 80064ee:	2a02      	cmp	r2, #2
 80064f0:	d01c      	beq.n	800652c <osThreadNew+0x60>
 80064f2:	b1d8      	cbz	r0, 800652c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80064f4:	2c00      	cmp	r4, #0
 80064f6:	d036      	beq.n	8006566 <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80064f8:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 80064fa:	6821      	ldr	r1, [r4, #0]
 80064fc:	2d00      	cmp	r5, #0
 80064fe:	bf08      	it	eq
 8006500:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006502:	1e6a      	subs	r2, r5, #1
 8006504:	2a37      	cmp	r2, #55	; 0x37
 8006506:	462f      	mov	r7, r5
 8006508:	d831      	bhi.n	800656e <osThreadNew+0xa2>
 800650a:	6862      	ldr	r2, [r4, #4]
 800650c:	07d2      	lsls	r2, r2, #31
 800650e:	d42e      	bmi.n	800656e <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006510:	6966      	ldr	r6, [r4, #20]
 8006512:	b176      	cbz	r6, 8006532 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006514:	08b2      	lsrs	r2, r6, #2
 8006516:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800651a:	f1bc 0f00 	cmp.w	ip, #0
 800651e:	d00a      	beq.n	8006536 <osThreadNew+0x6a>
 8006520:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006524:	d902      	bls.n	800652c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006526:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006528:	b104      	cbz	r4, 800652c <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800652a:	b9ae      	cbnz	r6, 8006558 <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800652c:	9805      	ldr	r0, [sp, #20]
}
 800652e:	b007      	add	sp, #28
 8006530:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006532:	2280      	movs	r2, #128	; 0x80
 8006534:	e7ef      	b.n	8006516 <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006536:	f1be 0f00 	cmp.w	lr, #0
 800653a:	d1f7      	bne.n	800652c <osThreadNew+0x60>
      if (mem == 0) {
 800653c:	6924      	ldr	r4, [r4, #16]
 800653e:	2c00      	cmp	r4, #0
 8006540:	d1f4      	bne.n	800652c <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006542:	ac05      	add	r4, sp, #20
 8006544:	e9cd 7400 	strd	r7, r4, [sp]
 8006548:	b292      	uxth	r2, r2
 800654a:	f001 fb53 	bl	8007bf4 <xTaskCreate>
 800654e:	2801      	cmp	r0, #1
          hTask = NULL;
 8006550:	bf1c      	itt	ne
 8006552:	2300      	movne	r3, #0
 8006554:	9305      	strne	r3, [sp, #20]
 8006556:	e7e9      	b.n	800652c <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006558:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 800655c:	9500      	str	r5, [sp, #0]
 800655e:	f001 fb11 	bl	8007b84 <xTaskCreateStatic>
 8006562:	9005      	str	r0, [sp, #20]
 8006564:	e7e2      	b.n	800652c <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8006566:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8006568:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 800656a:	4621      	mov	r1, r4
 800656c:	e7e9      	b.n	8006542 <osThreadNew+0x76>
        return (NULL);
 800656e:	2000      	movs	r0, #0
 8006570:	e7dd      	b.n	800652e <osThreadNew+0x62>
 8006572:	bf00      	nop
 8006574:	200015f4 	.word	0x200015f4

08006578 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8006578:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800657a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800657e:	b113      	cbz	r3, 8006586 <osDelay+0xe>
    stat = osErrorISR;
 8006580:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8006584:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006586:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800658a:	b913      	cbnz	r3, 8006592 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800658c:	f3ef 8311 	mrs	r3, BASEPRI
 8006590:	b11b      	cbz	r3, 800659a <osDelay+0x22>
 8006592:	4b05      	ldr	r3, [pc, #20]	; (80065a8 <osDelay+0x30>)
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	2b02      	cmp	r3, #2
 8006598:	d0f2      	beq.n	8006580 <osDelay+0x8>
    if (ticks != 0U) {
 800659a:	2800      	cmp	r0, #0
 800659c:	d0f2      	beq.n	8006584 <osDelay+0xc>
      vTaskDelay(ticks);
 800659e:	f001 fcad 	bl	8007efc <vTaskDelay>
    stat = osOK;
 80065a2:	2000      	movs	r0, #0
 80065a4:	e7ee      	b.n	8006584 <osDelay+0xc>
 80065a6:	bf00      	nop
 80065a8:	200015f4 	.word	0x200015f4

080065ac <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80065ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80065ae:	460e      	mov	r6, r1
 80065b0:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80065b2:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80065b6:	b11b      	cbz	r3, 80065c0 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80065b8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80065ba:	4620      	mov	r0, r4
 80065bc:	b002      	add	sp, #8
 80065be:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80065c0:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80065c4:	b913      	cbnz	r3, 80065cc <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80065c6:	f3ef 8311 	mrs	r3, BASEPRI
 80065ca:	b11b      	cbz	r3, 80065d4 <osSemaphoreNew+0x28>
 80065cc:	4b21      	ldr	r3, [pc, #132]	; (8006654 <osSemaphoreNew+0xa8>)
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	2b02      	cmp	r3, #2
 80065d2:	d0f1      	beq.n	80065b8 <osSemaphoreNew+0xc>
 80065d4:	2800      	cmp	r0, #0
 80065d6:	d0ef      	beq.n	80065b8 <osSemaphoreNew+0xc>
 80065d8:	42b0      	cmp	r0, r6
 80065da:	d3ed      	bcc.n	80065b8 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80065dc:	b1ed      	cbz	r5, 800661a <osSemaphoreNew+0x6e>
 80065de:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80065e2:	b1c3      	cbz	r3, 8006616 <osSemaphoreNew+0x6a>
 80065e4:	2a4f      	cmp	r2, #79	; 0x4f
 80065e6:	d9e7      	bls.n	80065b8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80065e8:	2801      	cmp	r0, #1
 80065ea:	d126      	bne.n	800663a <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80065ec:	2203      	movs	r2, #3
 80065ee:	9200      	str	r2, [sp, #0]
 80065f0:	2200      	movs	r2, #0
 80065f2:	4611      	mov	r1, r2
 80065f4:	f000 fd2e 	bl	8007054 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80065f8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80065fa:	2800      	cmp	r0, #0
 80065fc:	d0dc      	beq.n	80065b8 <osSemaphoreNew+0xc>
 80065fe:	b1ce      	cbz	r6, 8006634 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006600:	2300      	movs	r3, #0
 8006602:	461a      	mov	r2, r3
 8006604:	4619      	mov	r1, r3
 8006606:	f000 fddb 	bl	80071c0 <xQueueGenericSend>
 800660a:	2801      	cmp	r0, #1
 800660c:	d012      	beq.n	8006634 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800660e:	4620      	mov	r0, r4
 8006610:	f001 f916 	bl	8007840 <vQueueDelete>
 8006614:	e7d0      	b.n	80065b8 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006616:	2a00      	cmp	r2, #0
 8006618:	d1ce      	bne.n	80065b8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800661a:	2801      	cmp	r0, #1
 800661c:	d104      	bne.n	8006628 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800661e:	2203      	movs	r2, #3
 8006620:	2100      	movs	r1, #0
 8006622:	f000 fd65 	bl	80070f0 <xQueueGenericCreate>
 8006626:	e7e7      	b.n	80065f8 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006628:	4631      	mov	r1, r6
 800662a:	f000 fdaa 	bl	8007182 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800662e:	4604      	mov	r4, r0
 8006630:	2800      	cmp	r0, #0
 8006632:	d0c1      	beq.n	80065b8 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8006634:	b945      	cbnz	r5, 8006648 <osSemaphoreNew+0x9c>
          name = NULL;
 8006636:	4629      	mov	r1, r5
 8006638:	e007      	b.n	800664a <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800663a:	461a      	mov	r2, r3
 800663c:	4631      	mov	r1, r6
 800663e:	f000 fd7e 	bl	800713e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006642:	4604      	mov	r4, r0
 8006644:	2800      	cmp	r0, #0
 8006646:	d0b7      	beq.n	80065b8 <osSemaphoreNew+0xc>
          name = attr->name;
 8006648:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 800664a:	4620      	mov	r0, r4
 800664c:	f001 f8d2 	bl	80077f4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006650:	e7b3      	b.n	80065ba <osSemaphoreNew+0xe>
 8006652:	bf00      	nop
 8006654:	200015f4 	.word	0x200015f4

08006658 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006658:	b513      	push	{r0, r1, r4, lr}
 800665a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800665c:	b918      	cbnz	r0, 8006666 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800665e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006662:	b002      	add	sp, #8
 8006664:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006666:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800666a:	b16b      	cbz	r3, 8006688 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 800666c:	2c00      	cmp	r4, #0
 800666e:	d1f6      	bne.n	800665e <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8006670:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006672:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006674:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006678:	f001 f86c 	bl	8007754 <xQueueReceiveFromISR>
 800667c:	2801      	cmp	r0, #1
 800667e:	d113      	bne.n	80066a8 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8006680:	9b01      	ldr	r3, [sp, #4]
 8006682:	b9a3      	cbnz	r3, 80066ae <osSemaphoreAcquire+0x56>
  stat = osOK;
 8006684:	2000      	movs	r0, #0
 8006686:	e7ec      	b.n	8006662 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006688:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800668c:	b913      	cbnz	r3, 8006694 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800668e:	f3ef 8311 	mrs	r3, BASEPRI
 8006692:	b11b      	cbz	r3, 800669c <osSemaphoreAcquire+0x44>
 8006694:	4b0c      	ldr	r3, [pc, #48]	; (80066c8 <osSemaphoreAcquire+0x70>)
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	2b02      	cmp	r3, #2
 800669a:	d0e7      	beq.n	800666c <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800669c:	4621      	mov	r1, r4
 800669e:	f000 ff97 	bl	80075d0 <xQueueSemaphoreTake>
 80066a2:	2801      	cmp	r0, #1
 80066a4:	d0ee      	beq.n	8006684 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 80066a6:	b95c      	cbnz	r4, 80066c0 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 80066a8:	f06f 0002 	mvn.w	r0, #2
 80066ac:	e7d9      	b.n	8006662 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80066ae:	4b07      	ldr	r3, [pc, #28]	; (80066cc <osSemaphoreAcquire+0x74>)
 80066b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80066b4:	601a      	str	r2, [r3, #0]
 80066b6:	f3bf 8f4f 	dsb	sy
 80066ba:	f3bf 8f6f 	isb	sy
 80066be:	e7e1      	b.n	8006684 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 80066c0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80066c4:	e7cd      	b.n	8006662 <osSemaphoreAcquire+0xa>
 80066c6:	bf00      	nop
 80066c8:	200015f4 	.word	0x200015f4
 80066cc:	e000ed04 	.word	0xe000ed04

080066d0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80066d0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80066d2:	b368      	cbz	r0, 8006730 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80066d4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80066d8:	b153      	cbz	r3, 80066f0 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 80066da:	a902      	add	r1, sp, #8
 80066dc:	2400      	movs	r4, #0
 80066de:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80066e2:	f000 fe80 	bl	80073e6 <xQueueGiveFromISR>
 80066e6:	2801      	cmp	r0, #1
 80066e8:	d014      	beq.n	8006714 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80066ea:	f06f 0002 	mvn.w	r0, #2
 80066ee:	e014      	b.n	800671a <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80066f0:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80066f4:	b913      	cbnz	r3, 80066fc <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80066f6:	f3ef 8311 	mrs	r3, BASEPRI
 80066fa:	b11b      	cbz	r3, 8006704 <osSemaphoreRelease+0x34>
 80066fc:	4b0e      	ldr	r3, [pc, #56]	; (8006738 <osSemaphoreRelease+0x68>)
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	2b02      	cmp	r3, #2
 8006702:	d0ea      	beq.n	80066da <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006704:	2300      	movs	r3, #0
 8006706:	461a      	mov	r2, r3
 8006708:	4619      	mov	r1, r3
 800670a:	f000 fd59 	bl	80071c0 <xQueueGenericSend>
 800670e:	2801      	cmp	r0, #1
 8006710:	d002      	beq.n	8006718 <osSemaphoreRelease+0x48>
 8006712:	e7ea      	b.n	80066ea <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 8006714:	9b01      	ldr	r3, [sp, #4]
 8006716:	b913      	cbnz	r3, 800671e <osSemaphoreRelease+0x4e>
  stat = osOK;
 8006718:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800671a:	b002      	add	sp, #8
 800671c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800671e:	4b07      	ldr	r3, [pc, #28]	; (800673c <osSemaphoreRelease+0x6c>)
 8006720:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006724:	601a      	str	r2, [r3, #0]
 8006726:	f3bf 8f4f 	dsb	sy
 800672a:	f3bf 8f6f 	isb	sy
 800672e:	e7f3      	b.n	8006718 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8006730:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006734:	e7f1      	b.n	800671a <osSemaphoreRelease+0x4a>
 8006736:	bf00      	nop
 8006738:	200015f4 	.word	0x200015f4
 800673c:	e000ed04 	.word	0xe000ed04

08006740 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006740:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006742:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006744:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006748:	b11b      	cbz	r3, 8006752 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800674a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800674c:	4628      	mov	r0, r5
 800674e:	b002      	add	sp, #8
 8006750:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006752:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006756:	b913      	cbnz	r3, 800675e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006758:	f3ef 8311 	mrs	r3, BASEPRI
 800675c:	b11b      	cbz	r3, 8006766 <osMessageQueueNew+0x26>
 800675e:	4b1a      	ldr	r3, [pc, #104]	; (80067c8 <osMessageQueueNew+0x88>)
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	2b02      	cmp	r3, #2
 8006764:	d0f1      	beq.n	800674a <osMessageQueueNew+0xa>
 8006766:	2800      	cmp	r0, #0
 8006768:	d0ef      	beq.n	800674a <osMessageQueueNew+0xa>
 800676a:	2900      	cmp	r1, #0
 800676c:	d0ed      	beq.n	800674a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800676e:	b304      	cbz	r4, 80067b2 <osMessageQueueNew+0x72>
 8006770:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006774:	b1ab      	cbz	r3, 80067a2 <osMessageQueueNew+0x62>
 8006776:	2a4f      	cmp	r2, #79	; 0x4f
 8006778:	d9e7      	bls.n	800674a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800677a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800677c:	2a00      	cmp	r2, #0
 800677e:	d0e4      	beq.n	800674a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006780:	6966      	ldr	r6, [r4, #20]
 8006782:	fb01 f500 	mul.w	r5, r1, r0
 8006786:	42ae      	cmp	r6, r5
 8006788:	d3df      	bcc.n	800674a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800678a:	2500      	movs	r5, #0
 800678c:	9500      	str	r5, [sp, #0]
 800678e:	f000 fc61 	bl	8007054 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006792:	4605      	mov	r5, r0
 8006794:	2800      	cmp	r0, #0
 8006796:	d0d8      	beq.n	800674a <osMessageQueueNew+0xa>
        name = attr->name;
 8006798:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 800679a:	4628      	mov	r0, r5
 800679c:	f001 f82a 	bl	80077f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80067a0:	e7d4      	b.n	800674c <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80067a2:	2a00      	cmp	r2, #0
 80067a4:	d1d1      	bne.n	800674a <osMessageQueueNew+0xa>
 80067a6:	6923      	ldr	r3, [r4, #16]
 80067a8:	2b00      	cmp	r3, #0
 80067aa:	d1ce      	bne.n	800674a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80067ac:	6963      	ldr	r3, [r4, #20]
 80067ae:	2b00      	cmp	r3, #0
 80067b0:	d1cb      	bne.n	800674a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80067b2:	2200      	movs	r2, #0
 80067b4:	f000 fc9c 	bl	80070f0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80067b8:	4605      	mov	r5, r0
 80067ba:	2800      	cmp	r0, #0
 80067bc:	d0c5      	beq.n	800674a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80067be:	2c00      	cmp	r4, #0
 80067c0:	d1ea      	bne.n	8006798 <osMessageQueueNew+0x58>
        name = NULL;
 80067c2:	4621      	mov	r1, r4
 80067c4:	e7e9      	b.n	800679a <osMessageQueueNew+0x5a>
 80067c6:	bf00      	nop
 80067c8:	200015f4 	.word	0x200015f4

080067cc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80067cc:	b513      	push	{r0, r1, r4, lr}
 80067ce:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80067d0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80067d4:	b123      	cbz	r3, 80067e0 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80067d6:	b9d8      	cbnz	r0, 8006810 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80067d8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80067dc:	b002      	add	sp, #8
 80067de:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80067e0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80067e4:	b913      	cbnz	r3, 80067ec <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80067e6:	f3ef 8311 	mrs	r3, BASEPRI
 80067ea:	b11b      	cbz	r3, 80067f4 <osMessageQueuePut+0x28>
 80067ec:	4b16      	ldr	r3, [pc, #88]	; (8006848 <osMessageQueuePut+0x7c>)
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	2b02      	cmp	r3, #2
 80067f2:	d0f0      	beq.n	80067d6 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80067f4:	2800      	cmp	r0, #0
 80067f6:	d0ef      	beq.n	80067d8 <osMessageQueuePut+0xc>
 80067f8:	2900      	cmp	r1, #0
 80067fa:	d0ed      	beq.n	80067d8 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80067fc:	2300      	movs	r3, #0
 80067fe:	4622      	mov	r2, r4
 8006800:	f000 fcde 	bl	80071c0 <xQueueGenericSend>
 8006804:	2801      	cmp	r0, #1
 8006806:	d011      	beq.n	800682c <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8006808:	b9dc      	cbnz	r4, 8006842 <osMessageQueuePut+0x76>
          stat = osErrorResource;
 800680a:	f06f 0002 	mvn.w	r0, #2
 800680e:	e7e5      	b.n	80067dc <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006810:	2900      	cmp	r1, #0
 8006812:	d0e1      	beq.n	80067d8 <osMessageQueuePut+0xc>
 8006814:	2c00      	cmp	r4, #0
 8006816:	d1df      	bne.n	80067d8 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8006818:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800681a:	4623      	mov	r3, r4
      yield = pdFALSE;
 800681c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006820:	f000 fd80 	bl	8007324 <xQueueGenericSendFromISR>
 8006824:	2801      	cmp	r0, #1
 8006826:	d1f0      	bne.n	800680a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8006828:	9b01      	ldr	r3, [sp, #4]
 800682a:	b90b      	cbnz	r3, 8006830 <osMessageQueuePut+0x64>
  stat = osOK;
 800682c:	2000      	movs	r0, #0
 800682e:	e7d5      	b.n	80067dc <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8006830:	4b06      	ldr	r3, [pc, #24]	; (800684c <osMessageQueuePut+0x80>)
 8006832:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006836:	601a      	str	r2, [r3, #0]
 8006838:	f3bf 8f4f 	dsb	sy
 800683c:	f3bf 8f6f 	isb	sy
 8006840:	e7f4      	b.n	800682c <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 8006842:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006846:	e7c9      	b.n	80067dc <osMessageQueuePut+0x10>
 8006848:	200015f4 	.word	0x200015f4
 800684c:	e000ed04 	.word	0xe000ed04

08006850 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006850:	b513      	push	{r0, r1, r4, lr}
 8006852:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006854:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006858:	b123      	cbz	r3, 8006864 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800685a:	b9d0      	cbnz	r0, 8006892 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800685c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006860:	b002      	add	sp, #8
 8006862:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006864:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006868:	b913      	cbnz	r3, 8006870 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800686a:	f3ef 8311 	mrs	r3, BASEPRI
 800686e:	b11b      	cbz	r3, 8006878 <osMessageQueueGet+0x28>
 8006870:	4b15      	ldr	r3, [pc, #84]	; (80068c8 <osMessageQueueGet+0x78>)
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	2b02      	cmp	r3, #2
 8006876:	d0f0      	beq.n	800685a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006878:	2800      	cmp	r0, #0
 800687a:	d0ef      	beq.n	800685c <osMessageQueueGet+0xc>
 800687c:	2900      	cmp	r1, #0
 800687e:	d0ed      	beq.n	800685c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006880:	4622      	mov	r2, r4
 8006882:	f000 fe05 	bl	8007490 <xQueueReceive>
 8006886:	2801      	cmp	r0, #1
 8006888:	d010      	beq.n	80068ac <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 800688a:	b9d4      	cbnz	r4, 80068c2 <osMessageQueueGet+0x72>
          stat = osErrorResource;
 800688c:	f06f 0002 	mvn.w	r0, #2
 8006890:	e7e6      	b.n	8006860 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006892:	2900      	cmp	r1, #0
 8006894:	d0e2      	beq.n	800685c <osMessageQueueGet+0xc>
 8006896:	2c00      	cmp	r4, #0
 8006898:	d1e0      	bne.n	800685c <osMessageQueueGet+0xc>
      yield = pdFALSE;
 800689a:	aa02      	add	r2, sp, #8
 800689c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80068a0:	f000 ff58 	bl	8007754 <xQueueReceiveFromISR>
 80068a4:	2801      	cmp	r0, #1
 80068a6:	d1f1      	bne.n	800688c <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80068a8:	9b01      	ldr	r3, [sp, #4]
 80068aa:	b90b      	cbnz	r3, 80068b0 <osMessageQueueGet+0x60>
  stat = osOK;
 80068ac:	2000      	movs	r0, #0
 80068ae:	e7d7      	b.n	8006860 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80068b0:	4b06      	ldr	r3, [pc, #24]	; (80068cc <osMessageQueueGet+0x7c>)
 80068b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80068b6:	601a      	str	r2, [r3, #0]
 80068b8:	f3bf 8f4f 	dsb	sy
 80068bc:	f3bf 8f6f 	isb	sy
 80068c0:	e7f4      	b.n	80068ac <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 80068c2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80068c6:	e7cb      	b.n	8006860 <osMessageQueueGet+0x10>
 80068c8:	200015f4 	.word	0x200015f4
 80068cc:	e000ed04 	.word	0xe000ed04

080068d0 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80068d0:	4b03      	ldr	r3, [pc, #12]	; (80068e0 <vApplicationGetIdleTaskMemory+0x10>)
 80068d2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80068d4:	4b03      	ldr	r3, [pc, #12]	; (80068e4 <vApplicationGetIdleTaskMemory+0x14>)
 80068d6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80068d8:	2380      	movs	r3, #128	; 0x80
 80068da:	6013      	str	r3, [r2, #0]
}
 80068dc:	4770      	bx	lr
 80068de:	bf00      	nop
 80068e0:	20001594 	.word	0x20001594
 80068e4:	20001394 	.word	0x20001394

080068e8 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80068e8:	4b03      	ldr	r3, [pc, #12]	; (80068f8 <vApplicationGetTimerTaskMemory+0x10>)
 80068ea:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80068ec:	4b03      	ldr	r3, [pc, #12]	; (80068fc <vApplicationGetTimerTaskMemory+0x14>)
 80068ee:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80068f0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80068f4:	6013      	str	r3, [r2, #0]
}
 80068f6:	4770      	bx	lr
 80068f8:	200019f8 	.word	0x200019f8
 80068fc:	200015f8 	.word	0x200015f8

08006900 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006900:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006902:	4b0f      	ldr	r3, [pc, #60]	; (8006940 <prvInsertBlockIntoFreeList+0x40>)
 8006904:	681a      	ldr	r2, [r3, #0]
 8006906:	4282      	cmp	r2, r0
 8006908:	d318      	bcc.n	800693c <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800690a:	685c      	ldr	r4, [r3, #4]
 800690c:	1919      	adds	r1, r3, r4
 800690e:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006910:	bf01      	itttt	eq
 8006912:	6841      	ldreq	r1, [r0, #4]
 8006914:	4618      	moveq	r0, r3
 8006916:	1909      	addeq	r1, r1, r4
 8006918:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800691a:	6844      	ldr	r4, [r0, #4]
 800691c:	1901      	adds	r1, r0, r4
 800691e:	428a      	cmp	r2, r1
 8006920:	d107      	bne.n	8006932 <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006922:	4908      	ldr	r1, [pc, #32]	; (8006944 <prvInsertBlockIntoFreeList+0x44>)
 8006924:	6809      	ldr	r1, [r1, #0]
 8006926:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006928:	bf1f      	itttt	ne
 800692a:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800692c:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800692e:	1909      	addne	r1, r1, r4
 8006930:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006932:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006934:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006936:	bf18      	it	ne
 8006938:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800693a:	bd10      	pop	{r4, pc}
 800693c:	4613      	mov	r3, r2
 800693e:	e7e1      	b.n	8006904 <prvInsertBlockIntoFreeList+0x4>
 8006940:	20011a68 	.word	0x20011a68
 8006944:	20001a58 	.word	0x20001a58

08006948 <pvPortMalloc>:
{
 8006948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800694c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800694e:	f001 f9c3 	bl	8007cd8 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006952:	493d      	ldr	r1, [pc, #244]	; (8006a48 <pvPortMalloc+0x100>)
 8006954:	4d3d      	ldr	r5, [pc, #244]	; (8006a4c <pvPortMalloc+0x104>)
 8006956:	680b      	ldr	r3, [r1, #0]
 8006958:	b9fb      	cbnz	r3, 800699a <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 800695a:	4a3d      	ldr	r2, [pc, #244]	; (8006a50 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800695c:	0756      	lsls	r6, r2, #29
 800695e:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006962:	bf1d      	ittte	ne
 8006964:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006966:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800696a:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800696c:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006970:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006972:	4e38      	ldr	r6, [pc, #224]	; (8006a54 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8006974:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006976:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800697a:	2000      	movs	r0, #0
 800697c:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800697e:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006980:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006984:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8006986:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006988:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800698c:	4b32      	ldr	r3, [pc, #200]	; (8006a58 <pvPortMalloc+0x110>)
 800698e:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006990:	4b32      	ldr	r3, [pc, #200]	; (8006a5c <pvPortMalloc+0x114>)
 8006992:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006994:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006998:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800699a:	682f      	ldr	r7, [r5, #0]
 800699c:	4227      	tst	r7, r4
 800699e:	d14e      	bne.n	8006a3e <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 80069a0:	2c00      	cmp	r4, #0
 80069a2:	d03f      	beq.n	8006a24 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 80069a4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80069a8:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80069aa:	bf1c      	itt	ne
 80069ac:	f023 0307 	bicne.w	r3, r3, #7
 80069b0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80069b2:	2b00      	cmp	r3, #0
 80069b4:	d043      	beq.n	8006a3e <pvPortMalloc+0xf6>
 80069b6:	4a29      	ldr	r2, [pc, #164]	; (8006a5c <pvPortMalloc+0x114>)
 80069b8:	6816      	ldr	r6, [r2, #0]
 80069ba:	429e      	cmp	r6, r3
 80069bc:	4690      	mov	r8, r2
 80069be:	d33e      	bcc.n	8006a3e <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 80069c0:	4a24      	ldr	r2, [pc, #144]	; (8006a54 <pvPortMalloc+0x10c>)
 80069c2:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80069c4:	6868      	ldr	r0, [r5, #4]
 80069c6:	4298      	cmp	r0, r3
 80069c8:	d201      	bcs.n	80069ce <pvPortMalloc+0x86>
 80069ca:	682c      	ldr	r4, [r5, #0]
 80069cc:	b9a4      	cbnz	r4, 80069f8 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 80069ce:	6809      	ldr	r1, [r1, #0]
 80069d0:	42a9      	cmp	r1, r5
 80069d2:	d034      	beq.n	8006a3e <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80069d4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80069d6:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80069d8:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80069da:	1ac2      	subs	r2, r0, r3
 80069dc:	2a10      	cmp	r2, #16
 80069de:	d912      	bls.n	8006a06 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80069e0:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80069e2:	0741      	lsls	r1, r0, #29
 80069e4:	d00b      	beq.n	80069fe <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80069e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069ea:	f383 8811 	msr	BASEPRI, r3
 80069ee:	f3bf 8f6f 	isb	sy
 80069f2:	f3bf 8f4f 	dsb	sy
 80069f6:	e7fe      	b.n	80069f6 <pvPortMalloc+0xae>
 80069f8:	462a      	mov	r2, r5
 80069fa:	4625      	mov	r5, r4
 80069fc:	e7e2      	b.n	80069c4 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80069fe:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006a00:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006a02:	f7ff ff7d 	bl	8006900 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006a06:	4914      	ldr	r1, [pc, #80]	; (8006a58 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006a08:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006a0a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006a0c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006a0e:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006a10:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8006a12:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006a16:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006a1a:	bf38      	it	cc
 8006a1c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006a1e:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006a20:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8006a22:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8006a24:	f001 f9f6 	bl	8007e14 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006a28:	0763      	lsls	r3, r4, #29
 8006a2a:	d00a      	beq.n	8006a42 <pvPortMalloc+0xfa>
 8006a2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a30:	f383 8811 	msr	BASEPRI, r3
 8006a34:	f3bf 8f6f 	isb	sy
 8006a38:	f3bf 8f4f 	dsb	sy
 8006a3c:	e7fe      	b.n	8006a3c <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 8006a3e:	2400      	movs	r4, #0
 8006a40:	e7f0      	b.n	8006a24 <pvPortMalloc+0xdc>
}
 8006a42:	4620      	mov	r0, r4
 8006a44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006a48:	20001a58 	.word	0x20001a58
 8006a4c:	20011a5c 	.word	0x20011a5c
 8006a50:	20001a5c 	.word	0x20001a5c
 8006a54:	20011a68 	.word	0x20011a68
 8006a58:	20011a64 	.word	0x20011a64
 8006a5c:	20011a60 	.word	0x20011a60

08006a60 <vPortFree>:
{
 8006a60:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006a62:	4604      	mov	r4, r0
 8006a64:	b370      	cbz	r0, 8006ac4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006a66:	4a18      	ldr	r2, [pc, #96]	; (8006ac8 <vPortFree+0x68>)
 8006a68:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006a6c:	6812      	ldr	r2, [r2, #0]
 8006a6e:	4213      	tst	r3, r2
 8006a70:	d108      	bne.n	8006a84 <vPortFree+0x24>
 8006a72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a76:	f383 8811 	msr	BASEPRI, r3
 8006a7a:	f3bf 8f6f 	isb	sy
 8006a7e:	f3bf 8f4f 	dsb	sy
 8006a82:	e7fe      	b.n	8006a82 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006a84:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006a88:	b141      	cbz	r1, 8006a9c <vPortFree+0x3c>
 8006a8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a8e:	f383 8811 	msr	BASEPRI, r3
 8006a92:	f3bf 8f6f 	isb	sy
 8006a96:	f3bf 8f4f 	dsb	sy
 8006a9a:	e7fe      	b.n	8006a9a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006a9c:	ea23 0302 	bic.w	r3, r3, r2
 8006aa0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006aa4:	f001 f918 	bl	8007cd8 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006aa8:	4a08      	ldr	r2, [pc, #32]	; (8006acc <vPortFree+0x6c>)
 8006aaa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006aae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006ab0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006ab4:	440b      	add	r3, r1
 8006ab6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006ab8:	f7ff ff22 	bl	8006900 <prvInsertBlockIntoFreeList>
}
 8006abc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8006ac0:	f001 b9a8 	b.w	8007e14 <xTaskResumeAll>
}
 8006ac4:	bd10      	pop	{r4, pc}
 8006ac6:	bf00      	nop
 8006ac8:	20011a5c 	.word	0x20011a5c
 8006acc:	20011a60 	.word	0x20011a60

08006ad0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ad0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006ad4:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ad8:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ada:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006ade:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006ae4:	4770      	bx	lr

08006ae6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006ae6:	2300      	movs	r3, #0
 8006ae8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006aea:	4770      	bx	lr

08006aec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006aec:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006aee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006af0:	689a      	ldr	r2, [r3, #8]
 8006af2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006af4:	689a      	ldr	r2, [r3, #8]
 8006af6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006af8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006afa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006afc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006afe:	3301      	adds	r3, #1
 8006b00:	6003      	str	r3, [r0, #0]
}
 8006b02:	4770      	bx	lr

08006b04 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006b04:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006b06:	1c53      	adds	r3, r2, #1
{
 8006b08:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 8006b0a:	d10a      	bne.n	8006b22 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006b0c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006b0e:	685a      	ldr	r2, [r3, #4]
 8006b10:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006b12:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006b14:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006b16:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006b18:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006b1a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006b1c:	3301      	adds	r3, #1
 8006b1e:	6003      	str	r3, [r0, #0]
}
 8006b20:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006b22:	f100 0308 	add.w	r3, r0, #8
 8006b26:	685c      	ldr	r4, [r3, #4]
 8006b28:	6825      	ldr	r5, [r4, #0]
 8006b2a:	4295      	cmp	r5, r2
 8006b2c:	d8ef      	bhi.n	8006b0e <vListInsert+0xa>
 8006b2e:	4623      	mov	r3, r4
 8006b30:	e7f9      	b.n	8006b26 <vListInsert+0x22>

08006b32 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006b32:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8006b36:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006b38:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8006b3a:	6882      	ldr	r2, [r0, #8]
 8006b3c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8006b3e:	6859      	ldr	r1, [r3, #4]
 8006b40:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8006b42:	bf08      	it	eq
 8006b44:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8006b46:	2200      	movs	r2, #0
 8006b48:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8006b4a:	681a      	ldr	r2, [r3, #0]
 8006b4c:	3a01      	subs	r2, #1
 8006b4e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8006b50:	6818      	ldr	r0, [r3, #0]
}
 8006b52:	4770      	bx	lr

08006b54 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8006b54:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006b56:	2300      	movs	r3, #0
 8006b58:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 8006b5a:	4b0d      	ldr	r3, [pc, #52]	; (8006b90 <prvTaskExitError+0x3c>)
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	3301      	adds	r3, #1
 8006b60:	d008      	beq.n	8006b74 <prvTaskExitError+0x20>
 8006b62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b66:	f383 8811 	msr	BASEPRI, r3
 8006b6a:	f3bf 8f6f 	isb	sy
 8006b6e:	f3bf 8f4f 	dsb	sy
 8006b72:	e7fe      	b.n	8006b72 <prvTaskExitError+0x1e>
 8006b74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b78:	f383 8811 	msr	BASEPRI, r3
 8006b7c:	f3bf 8f6f 	isb	sy
 8006b80:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 8006b84:	9b01      	ldr	r3, [sp, #4]
 8006b86:	2b00      	cmp	r3, #0
 8006b88:	d0fc      	beq.n	8006b84 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 8006b8a:	b002      	add	sp, #8
 8006b8c:	4770      	bx	lr
 8006b8e:	bf00      	nop
 8006b90:	20000080 	.word	0x20000080

08006b94 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006b94:	4808      	ldr	r0, [pc, #32]	; (8006bb8 <prvPortStartFirstTask+0x24>)
 8006b96:	6800      	ldr	r0, [r0, #0]
 8006b98:	6800      	ldr	r0, [r0, #0]
 8006b9a:	f380 8808 	msr	MSP, r0
 8006b9e:	f04f 0000 	mov.w	r0, #0
 8006ba2:	f380 8814 	msr	CONTROL, r0
 8006ba6:	b662      	cpsie	i
 8006ba8:	b661      	cpsie	f
 8006baa:	f3bf 8f4f 	dsb	sy
 8006bae:	f3bf 8f6f 	isb	sy
 8006bb2:	df00      	svc	0
 8006bb4:	bf00      	nop
 8006bb6:	0000      	.short	0x0000
 8006bb8:	e000ed08 	.word	0xe000ed08

08006bbc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006bbc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006bcc <vPortEnableVFP+0x10>
 8006bc0:	6801      	ldr	r1, [r0, #0]
 8006bc2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006bc6:	6001      	str	r1, [r0, #0]
 8006bc8:	4770      	bx	lr
 8006bca:	0000      	.short	0x0000
 8006bcc:	e000ed88 	.word	0xe000ed88

08006bd0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8006bd0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006bd4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006bd8:	4b07      	ldr	r3, [pc, #28]	; (8006bf8 <pxPortInitialiseStack+0x28>)
 8006bda:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006bde:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006be2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006be6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006bea:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006bee:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8006bf2:	3844      	subs	r0, #68	; 0x44
 8006bf4:	4770      	bx	lr
 8006bf6:	bf00      	nop
 8006bf8:	08006b55 	.word	0x08006b55
 8006bfc:	00000000 	.word	0x00000000

08006c00 <SVC_Handler>:
	__asm volatile (
 8006c00:	4b07      	ldr	r3, [pc, #28]	; (8006c20 <pxCurrentTCBConst2>)
 8006c02:	6819      	ldr	r1, [r3, #0]
 8006c04:	6808      	ldr	r0, [r1, #0]
 8006c06:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c0a:	f380 8809 	msr	PSP, r0
 8006c0e:	f3bf 8f6f 	isb	sy
 8006c12:	f04f 0000 	mov.w	r0, #0
 8006c16:	f380 8811 	msr	BASEPRI, r0
 8006c1a:	4770      	bx	lr
 8006c1c:	f3af 8000 	nop.w

08006c20 <pxCurrentTCBConst2>:
 8006c20:	20011a78 	.word	0x20011a78

08006c24 <vPortEnterCritical>:
 8006c24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c28:	f383 8811 	msr	BASEPRI, r3
 8006c2c:	f3bf 8f6f 	isb	sy
 8006c30:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8006c34:	4a0a      	ldr	r2, [pc, #40]	; (8006c60 <vPortEnterCritical+0x3c>)
 8006c36:	6813      	ldr	r3, [r2, #0]
 8006c38:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8006c3a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8006c3c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8006c3e:	d10d      	bne.n	8006c5c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8006c40:	4b08      	ldr	r3, [pc, #32]	; (8006c64 <vPortEnterCritical+0x40>)
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006c48:	d008      	beq.n	8006c5c <vPortEnterCritical+0x38>
 8006c4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c4e:	f383 8811 	msr	BASEPRI, r3
 8006c52:	f3bf 8f6f 	isb	sy
 8006c56:	f3bf 8f4f 	dsb	sy
 8006c5a:	e7fe      	b.n	8006c5a <vPortEnterCritical+0x36>
}
 8006c5c:	4770      	bx	lr
 8006c5e:	bf00      	nop
 8006c60:	20000080 	.word	0x20000080
 8006c64:	e000ed04 	.word	0xe000ed04

08006c68 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8006c68:	4a08      	ldr	r2, [pc, #32]	; (8006c8c <vPortExitCritical+0x24>)
 8006c6a:	6813      	ldr	r3, [r2, #0]
 8006c6c:	b943      	cbnz	r3, 8006c80 <vPortExitCritical+0x18>
 8006c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c72:	f383 8811 	msr	BASEPRI, r3
 8006c76:	f3bf 8f6f 	isb	sy
 8006c7a:	f3bf 8f4f 	dsb	sy
 8006c7e:	e7fe      	b.n	8006c7e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8006c80:	3b01      	subs	r3, #1
 8006c82:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8006c84:	b90b      	cbnz	r3, 8006c8a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8006c86:	f383 8811 	msr	BASEPRI, r3
}
 8006c8a:	4770      	bx	lr
 8006c8c:	20000080 	.word	0x20000080

08006c90 <PendSV_Handler>:
	__asm volatile
 8006c90:	f3ef 8009 	mrs	r0, PSP
 8006c94:	f3bf 8f6f 	isb	sy
 8006c98:	4b15      	ldr	r3, [pc, #84]	; (8006cf0 <pxCurrentTCBConst>)
 8006c9a:	681a      	ldr	r2, [r3, #0]
 8006c9c:	f01e 0f10 	tst.w	lr, #16
 8006ca0:	bf08      	it	eq
 8006ca2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006ca6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006caa:	6010      	str	r0, [r2, #0]
 8006cac:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006cb0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006cb4:	f380 8811 	msr	BASEPRI, r0
 8006cb8:	f3bf 8f4f 	dsb	sy
 8006cbc:	f3bf 8f6f 	isb	sy
 8006cc0:	f001 f940 	bl	8007f44 <vTaskSwitchContext>
 8006cc4:	f04f 0000 	mov.w	r0, #0
 8006cc8:	f380 8811 	msr	BASEPRI, r0
 8006ccc:	bc09      	pop	{r0, r3}
 8006cce:	6819      	ldr	r1, [r3, #0]
 8006cd0:	6808      	ldr	r0, [r1, #0]
 8006cd2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cd6:	f01e 0f10 	tst.w	lr, #16
 8006cda:	bf08      	it	eq
 8006cdc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006ce0:	f380 8809 	msr	PSP, r0
 8006ce4:	f3bf 8f6f 	isb	sy
 8006ce8:	4770      	bx	lr
 8006cea:	bf00      	nop
 8006cec:	f3af 8000 	nop.w

08006cf0 <pxCurrentTCBConst>:
 8006cf0:	20011a78 	.word	0x20011a78

08006cf4 <SysTick_Handler>:
{
 8006cf4:	b508      	push	{r3, lr}
	__asm volatile
 8006cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cfa:	f383 8811 	msr	BASEPRI, r3
 8006cfe:	f3bf 8f6f 	isb	sy
 8006d02:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8006d06:	f000 fff5 	bl	8007cf4 <xTaskIncrementTick>
 8006d0a:	b118      	cbz	r0, 8006d14 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8006d0c:	4b03      	ldr	r3, [pc, #12]	; (8006d1c <SysTick_Handler+0x28>)
 8006d0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d12:	601a      	str	r2, [r3, #0]
	__asm volatile
 8006d14:	2300      	movs	r3, #0
 8006d16:	f383 8811 	msr	BASEPRI, r3
}
 8006d1a:	bd08      	pop	{r3, pc}
 8006d1c:	e000ed04 	.word	0xe000ed04

08006d20 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8006d20:	4a08      	ldr	r2, [pc, #32]	; (8006d44 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8006d22:	4909      	ldr	r1, [pc, #36]	; (8006d48 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8006d24:	2300      	movs	r3, #0
 8006d26:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8006d28:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8006d2a:	4b08      	ldr	r3, [pc, #32]	; (8006d4c <vPortSetupTimerInterrupt+0x2c>)
 8006d2c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	fbb3 f3f1 	udiv	r3, r3, r1
 8006d36:	4906      	ldr	r1, [pc, #24]	; (8006d50 <vPortSetupTimerInterrupt+0x30>)
 8006d38:	3b01      	subs	r3, #1
 8006d3a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8006d3c:	2307      	movs	r3, #7
 8006d3e:	6013      	str	r3, [r2, #0]
}
 8006d40:	4770      	bx	lr
 8006d42:	bf00      	nop
 8006d44:	e000e010 	.word	0xe000e010
 8006d48:	e000e018 	.word	0xe000e018
 8006d4c:	20000074 	.word	0x20000074
 8006d50:	e000e014 	.word	0xe000e014

08006d54 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006d54:	4b39      	ldr	r3, [pc, #228]	; (8006e3c <xPortStartScheduler+0xe8>)
 8006d56:	4a3a      	ldr	r2, [pc, #232]	; (8006e40 <xPortStartScheduler+0xec>)
{
 8006d58:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006d5a:	6819      	ldr	r1, [r3, #0]
 8006d5c:	4291      	cmp	r1, r2
 8006d5e:	d108      	bne.n	8006d72 <xPortStartScheduler+0x1e>
	__asm volatile
 8006d60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d64:	f383 8811 	msr	BASEPRI, r3
 8006d68:	f3bf 8f6f 	isb	sy
 8006d6c:	f3bf 8f4f 	dsb	sy
 8006d70:	e7fe      	b.n	8006d70 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8006d72:	681a      	ldr	r2, [r3, #0]
 8006d74:	4b33      	ldr	r3, [pc, #204]	; (8006e44 <xPortStartScheduler+0xf0>)
 8006d76:	429a      	cmp	r2, r3
 8006d78:	d108      	bne.n	8006d8c <xPortStartScheduler+0x38>
 8006d7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d7e:	f383 8811 	msr	BASEPRI, r3
 8006d82:	f3bf 8f6f 	isb	sy
 8006d86:	f3bf 8f4f 	dsb	sy
 8006d8a:	e7fe      	b.n	8006d8a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8006d8c:	4b2e      	ldr	r3, [pc, #184]	; (8006e48 <xPortStartScheduler+0xf4>)
 8006d8e:	781a      	ldrb	r2, [r3, #0]
 8006d90:	b2d2      	uxtb	r2, r2
 8006d92:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8006d94:	22ff      	movs	r2, #255	; 0xff
 8006d96:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006d98:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006d9a:	4a2c      	ldr	r2, [pc, #176]	; (8006e4c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006d9c:	b2db      	uxtb	r3, r3
 8006d9e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006da2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8006da6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006daa:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8006dac:	4b28      	ldr	r3, [pc, #160]	; (8006e50 <xPortStartScheduler+0xfc>)
 8006dae:	2207      	movs	r2, #7
 8006db0:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8006db2:	2100      	movs	r1, #0
 8006db4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8006db8:	0600      	lsls	r0, r0, #24
 8006dba:	f102 34ff 	add.w	r4, r2, #4294967295
 8006dbe:	d40d      	bmi.n	8006ddc <xPortStartScheduler+0x88>
 8006dc0:	b101      	cbz	r1, 8006dc4 <xPortStartScheduler+0x70>
 8006dc2:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8006dc4:	681a      	ldr	r2, [r3, #0]
 8006dc6:	2a03      	cmp	r2, #3
 8006dc8:	d011      	beq.n	8006dee <xPortStartScheduler+0x9a>
 8006dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dce:	f383 8811 	msr	BASEPRI, r3
 8006dd2:	f3bf 8f6f 	isb	sy
 8006dd6:	f3bf 8f4f 	dsb	sy
 8006dda:	e7fe      	b.n	8006dda <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8006ddc:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8006de0:	0052      	lsls	r2, r2, #1
 8006de2:	b2d2      	uxtb	r2, r2
 8006de4:	f88d 2003 	strb.w	r2, [sp, #3]
 8006de8:	2101      	movs	r1, #1
 8006dea:	4622      	mov	r2, r4
 8006dec:	e7e2      	b.n	8006db4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 8006dee:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8006df0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8006df4:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8006df6:	9b01      	ldr	r3, [sp, #4]
 8006df8:	4a13      	ldr	r2, [pc, #76]	; (8006e48 <xPortStartScheduler+0xf4>)
 8006dfa:	b2db      	uxtb	r3, r3
 8006dfc:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8006dfe:	4b15      	ldr	r3, [pc, #84]	; (8006e54 <xPortStartScheduler+0x100>)
 8006e00:	681a      	ldr	r2, [r3, #0]
 8006e02:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006e06:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8006e08:	681a      	ldr	r2, [r3, #0]
 8006e0a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8006e0e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8006e10:	f7ff ff86 	bl	8006d20 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8006e14:	4b10      	ldr	r3, [pc, #64]	; (8006e58 <xPortStartScheduler+0x104>)
 8006e16:	2400      	movs	r4, #0
 8006e18:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8006e1a:	f7ff fecf 	bl	8006bbc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8006e1e:	4a0f      	ldr	r2, [pc, #60]	; (8006e5c <xPortStartScheduler+0x108>)
 8006e20:	6813      	ldr	r3, [r2, #0]
 8006e22:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8006e26:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8006e28:	f7ff feb4 	bl	8006b94 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8006e2c:	f001 f88a 	bl	8007f44 <vTaskSwitchContext>
	prvTaskExitError();
 8006e30:	f7ff fe90 	bl	8006b54 <prvTaskExitError>
}
 8006e34:	4620      	mov	r0, r4
 8006e36:	b002      	add	sp, #8
 8006e38:	bd10      	pop	{r4, pc}
 8006e3a:	bf00      	nop
 8006e3c:	e000ed00 	.word	0xe000ed00
 8006e40:	410fc271 	.word	0x410fc271
 8006e44:	410fc270 	.word	0x410fc270
 8006e48:	e000e400 	.word	0xe000e400
 8006e4c:	20011a70 	.word	0x20011a70
 8006e50:	20011a74 	.word	0x20011a74
 8006e54:	e000ed20 	.word	0xe000ed20
 8006e58:	20000080 	.word	0x20000080
 8006e5c:	e000ef34 	.word	0xe000ef34

08006e60 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8006e60:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8006e64:	2b0f      	cmp	r3, #15
 8006e66:	d90e      	bls.n	8006e86 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8006e68:	4a10      	ldr	r2, [pc, #64]	; (8006eac <vPortValidateInterruptPriority+0x4c>)
 8006e6a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8006e6c:	4a10      	ldr	r2, [pc, #64]	; (8006eb0 <vPortValidateInterruptPriority+0x50>)
 8006e6e:	7812      	ldrb	r2, [r2, #0]
 8006e70:	429a      	cmp	r2, r3
 8006e72:	d908      	bls.n	8006e86 <vPortValidateInterruptPriority+0x26>
 8006e74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e78:	f383 8811 	msr	BASEPRI, r3
 8006e7c:	f3bf 8f6f 	isb	sy
 8006e80:	f3bf 8f4f 	dsb	sy
 8006e84:	e7fe      	b.n	8006e84 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8006e86:	4b0b      	ldr	r3, [pc, #44]	; (8006eb4 <vPortValidateInterruptPriority+0x54>)
 8006e88:	4a0b      	ldr	r2, [pc, #44]	; (8006eb8 <vPortValidateInterruptPriority+0x58>)
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	6812      	ldr	r2, [r2, #0]
 8006e8e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006e92:	4293      	cmp	r3, r2
 8006e94:	d908      	bls.n	8006ea8 <vPortValidateInterruptPriority+0x48>
 8006e96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e9a:	f383 8811 	msr	BASEPRI, r3
 8006e9e:	f3bf 8f6f 	isb	sy
 8006ea2:	f3bf 8f4f 	dsb	sy
 8006ea6:	e7fe      	b.n	8006ea6 <vPortValidateInterruptPriority+0x46>
	}
 8006ea8:	4770      	bx	lr
 8006eaa:	bf00      	nop
 8006eac:	e000e3f0 	.word	0xe000e3f0
 8006eb0:	20011a70 	.word	0x20011a70
 8006eb4:	e000ed0c 	.word	0xe000ed0c
 8006eb8:	20011a74 	.word	0x20011a74

08006ebc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8006ebc:	b510      	push	{r4, lr}
 8006ebe:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8006ec0:	f7ff feb0 	bl	8006c24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8006ec4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8006ec6:	f7ff fecf 	bl	8006c68 <vPortExitCritical>

	return xReturn;
}
 8006eca:	fab4 f084 	clz	r0, r4
 8006ece:	0940      	lsrs	r0, r0, #5
 8006ed0:	bd10      	pop	{r4, pc}

08006ed2 <prvCopyDataToQueue>:
{
 8006ed2:	b570      	push	{r4, r5, r6, lr}
 8006ed4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006ed6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8006ed8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8006eda:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006edc:	b942      	cbnz	r2, 8006ef0 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8006ede:	6805      	ldr	r5, [r0, #0]
 8006ee0:	b99d      	cbnz	r5, 8006f0a <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8006ee2:	6880      	ldr	r0, [r0, #8]
 8006ee4:	f001 f980 	bl	80081e8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8006ee8:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8006eea:	3601      	adds	r6, #1
 8006eec:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8006eee:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8006ef0:	b96d      	cbnz	r5, 8006f0e <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006ef2:	6840      	ldr	r0, [r0, #4]
 8006ef4:	f013 fabc 	bl	801a470 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006ef8:	6863      	ldr	r3, [r4, #4]
 8006efa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006efc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006efe:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006f00:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006f02:	4293      	cmp	r3, r2
 8006f04:	d301      	bcc.n	8006f0a <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8006f06:	6823      	ldr	r3, [r4, #0]
 8006f08:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8006f0a:	2000      	movs	r0, #0
 8006f0c:	e7ed      	b.n	8006eea <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8006f0e:	68c0      	ldr	r0, [r0, #12]
 8006f10:	f013 faae 	bl	801a470 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006f14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006f16:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006f18:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006f1a:	425b      	negs	r3, r3
 8006f1c:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006f1e:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8006f20:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8006f22:	bf3e      	ittt	cc
 8006f24:	68a2      	ldrcc	r2, [r4, #8]
 8006f26:	189b      	addcc	r3, r3, r2
 8006f28:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8006f2a:	2d02      	cmp	r5, #2
 8006f2c:	d1ed      	bne.n	8006f0a <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8006f2e:	b10e      	cbz	r6, 8006f34 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8006f30:	3e01      	subs	r6, #1
 8006f32:	e7ea      	b.n	8006f0a <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8006f34:	4630      	mov	r0, r6
 8006f36:	e7d8      	b.n	8006eea <prvCopyDataToQueue+0x18>

08006f38 <prvCopyDataFromQueue>:
{
 8006f38:	4603      	mov	r3, r0
 8006f3a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8006f3c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8006f3e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8006f40:	b162      	cbz	r2, 8006f5c <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006f42:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8006f44:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006f46:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8006f48:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006f4a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8006f4c:	bf24      	itt	cs
 8006f4e:	6819      	ldrcs	r1, [r3, #0]
 8006f50:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006f52:	68d9      	ldr	r1, [r3, #12]
}
 8006f54:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006f58:	f013 ba8a 	b.w	801a470 <memcpy>
}
 8006f5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006f60:	4770      	bx	lr

08006f62 <prvUnlockQueue>:
{
 8006f62:	b570      	push	{r4, r5, r6, lr}
 8006f64:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8006f66:	f7ff fe5d 	bl	8006c24 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8006f6a:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006f6e:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8006f72:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8006f74:	2d00      	cmp	r5, #0
 8006f76:	dc14      	bgt.n	8006fa2 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8006f78:	23ff      	movs	r3, #255	; 0xff
 8006f7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8006f7e:	f7ff fe73 	bl	8006c68 <vPortExitCritical>
	taskENTER_CRITICAL();
 8006f82:	f7ff fe4f 	bl	8006c24 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8006f86:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006f8a:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8006f8e:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8006f90:	2d00      	cmp	r5, #0
 8006f92:	dc12      	bgt.n	8006fba <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8006f94:	23ff      	movs	r3, #255	; 0xff
 8006f96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8006f9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8006f9e:	f7ff be63 	b.w	8006c68 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8006fa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	d0e7      	beq.n	8006f78 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8006fa8:	4630      	mov	r0, r6
 8006faa:	f001 f83f 	bl	800802c <xTaskRemoveFromEventList>
 8006fae:	b108      	cbz	r0, 8006fb4 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8006fb0:	f001 f8c4 	bl	800813c <vTaskMissedYield>
 8006fb4:	3d01      	subs	r5, #1
 8006fb6:	b26d      	sxtb	r5, r5
 8006fb8:	e7dc      	b.n	8006f74 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8006fba:	6923      	ldr	r3, [r4, #16]
 8006fbc:	2b00      	cmp	r3, #0
 8006fbe:	d0e9      	beq.n	8006f94 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8006fc0:	4630      	mov	r0, r6
 8006fc2:	f001 f833 	bl	800802c <xTaskRemoveFromEventList>
 8006fc6:	b108      	cbz	r0, 8006fcc <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8006fc8:	f001 f8b8 	bl	800813c <vTaskMissedYield>
 8006fcc:	3d01      	subs	r5, #1
 8006fce:	b26d      	sxtb	r5, r5
 8006fd0:	e7de      	b.n	8006f90 <prvUnlockQueue+0x2e>
	...

08006fd4 <xQueueGenericReset>:
{
 8006fd4:	b538      	push	{r3, r4, r5, lr}
 8006fd6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8006fd8:	4604      	mov	r4, r0
 8006fda:	b940      	cbnz	r0, 8006fee <xQueueGenericReset+0x1a>
 8006fdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fe0:	f383 8811 	msr	BASEPRI, r3
 8006fe4:	f3bf 8f6f 	isb	sy
 8006fe8:	f3bf 8f4f 	dsb	sy
 8006fec:	e7fe      	b.n	8006fec <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8006fee:	f7ff fe19 	bl	8006c24 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006ff2:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8006ff6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8006ff8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006ffa:	4343      	muls	r3, r0
 8006ffc:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8006ffe:	1a1b      	subs	r3, r3, r0
 8007000:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007002:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007004:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007006:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007008:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800700a:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800700c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007010:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007014:	b995      	cbnz	r5, 800703c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007016:	6923      	ldr	r3, [r4, #16]
 8007018:	b163      	cbz	r3, 8007034 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800701a:	f104 0010 	add.w	r0, r4, #16
 800701e:	f001 f805 	bl	800802c <xTaskRemoveFromEventList>
 8007022:	b138      	cbz	r0, 8007034 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007024:	4b0a      	ldr	r3, [pc, #40]	; (8007050 <xQueueGenericReset+0x7c>)
 8007026:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800702a:	601a      	str	r2, [r3, #0]
 800702c:	f3bf 8f4f 	dsb	sy
 8007030:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007034:	f7ff fe18 	bl	8006c68 <vPortExitCritical>
}
 8007038:	2001      	movs	r0, #1
 800703a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800703c:	f104 0010 	add.w	r0, r4, #16
 8007040:	f7ff fd46 	bl	8006ad0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007044:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007048:	f7ff fd42 	bl	8006ad0 <vListInitialise>
 800704c:	e7f2      	b.n	8007034 <xQueueGenericReset+0x60>
 800704e:	bf00      	nop
 8007050:	e000ed04 	.word	0xe000ed04

08007054 <xQueueGenericCreateStatic>:
	{
 8007054:	b513      	push	{r0, r1, r4, lr}
 8007056:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007058:	b940      	cbnz	r0, 800706c <xQueueGenericCreateStatic+0x18>
 800705a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800705e:	f383 8811 	msr	BASEPRI, r3
 8007062:	f3bf 8f6f 	isb	sy
 8007066:	f3bf 8f4f 	dsb	sy
 800706a:	e7fe      	b.n	800706a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800706c:	b943      	cbnz	r3, 8007080 <xQueueGenericCreateStatic+0x2c>
 800706e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007072:	f383 8811 	msr	BASEPRI, r3
 8007076:	f3bf 8f6f 	isb	sy
 800707a:	f3bf 8f4f 	dsb	sy
 800707e:	e7fe      	b.n	800707e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007080:	b14a      	cbz	r2, 8007096 <xQueueGenericCreateStatic+0x42>
 8007082:	b991      	cbnz	r1, 80070aa <xQueueGenericCreateStatic+0x56>
 8007084:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007088:	f383 8811 	msr	BASEPRI, r3
 800708c:	f3bf 8f6f 	isb	sy
 8007090:	f3bf 8f4f 	dsb	sy
 8007094:	e7fe      	b.n	8007094 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007096:	b141      	cbz	r1, 80070aa <xQueueGenericCreateStatic+0x56>
 8007098:	f04f 0350 	mov.w	r3, #80	; 0x50
 800709c:	f383 8811 	msr	BASEPRI, r3
 80070a0:	f3bf 8f6f 	isb	sy
 80070a4:	f3bf 8f4f 	dsb	sy
 80070a8:	e7fe      	b.n	80070a8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80070aa:	2350      	movs	r3, #80	; 0x50
 80070ac:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80070ae:	9b01      	ldr	r3, [sp, #4]
 80070b0:	2b50      	cmp	r3, #80	; 0x50
 80070b2:	d008      	beq.n	80070c6 <xQueueGenericCreateStatic+0x72>
 80070b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b8:	f383 8811 	msr	BASEPRI, r3
 80070bc:	f3bf 8f6f 	isb	sy
 80070c0:	f3bf 8f4f 	dsb	sy
 80070c4:	e7fe      	b.n	80070c4 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80070c6:	2900      	cmp	r1, #0
 80070c8:	bf08      	it	eq
 80070ca:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80070cc:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80070ce:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80070d0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80070d2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80070d6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80070da:	4619      	mov	r1, r3
 80070dc:	4620      	mov	r0, r4
 80070de:	f7ff ff79 	bl	8006fd4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80070e2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80070e6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80070ea:	4620      	mov	r0, r4
 80070ec:	b002      	add	sp, #8
 80070ee:	bd10      	pop	{r4, pc}

080070f0 <xQueueGenericCreate>:
	{
 80070f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80070f2:	460d      	mov	r5, r1
 80070f4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80070f6:	4606      	mov	r6, r0
 80070f8:	b940      	cbnz	r0, 800710c <xQueueGenericCreate+0x1c>
 80070fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070fe:	f383 8811 	msr	BASEPRI, r3
 8007102:	f3bf 8f6f 	isb	sy
 8007106:	f3bf 8f4f 	dsb	sy
 800710a:	e7fe      	b.n	800710a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800710c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800710e:	3050      	adds	r0, #80	; 0x50
 8007110:	f7ff fc1a 	bl	8006948 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007114:	4604      	mov	r4, r0
 8007116:	b160      	cbz	r0, 8007132 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007118:	2300      	movs	r3, #0
 800711a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800711e:	b955      	cbnz	r5, 8007136 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007120:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8007122:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007126:	2101      	movs	r1, #1
 8007128:	4620      	mov	r0, r4
 800712a:	f7ff ff53 	bl	8006fd4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800712e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007132:	4620      	mov	r0, r4
 8007134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007136:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800713a:	6003      	str	r3, [r0, #0]
 800713c:	e7f1      	b.n	8007122 <xQueueGenericCreate+0x32>

0800713e <xQueueCreateCountingSemaphoreStatic>:
	{
 800713e:	b513      	push	{r0, r1, r4, lr}
 8007140:	4613      	mov	r3, r2
 8007142:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007144:	b940      	cbnz	r0, 8007158 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007146:	f04f 0350 	mov.w	r3, #80	; 0x50
 800714a:	f383 8811 	msr	BASEPRI, r3
 800714e:	f3bf 8f6f 	isb	sy
 8007152:	f3bf 8f4f 	dsb	sy
 8007156:	e7fe      	b.n	8007156 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007158:	4288      	cmp	r0, r1
 800715a:	d208      	bcs.n	800716e <xQueueCreateCountingSemaphoreStatic+0x30>
 800715c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007160:	f383 8811 	msr	BASEPRI, r3
 8007164:	f3bf 8f6f 	isb	sy
 8007168:	f3bf 8f4f 	dsb	sy
 800716c:	e7fe      	b.n	800716c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800716e:	2202      	movs	r2, #2
 8007170:	9200      	str	r2, [sp, #0]
 8007172:	2200      	movs	r2, #0
 8007174:	4611      	mov	r1, r2
 8007176:	f7ff ff6d 	bl	8007054 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800717a:	b100      	cbz	r0, 800717e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800717c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800717e:	b002      	add	sp, #8
 8007180:	bd10      	pop	{r4, pc}

08007182 <xQueueCreateCountingSemaphore>:
	{
 8007182:	b510      	push	{r4, lr}
 8007184:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007186:	b940      	cbnz	r0, 800719a <xQueueCreateCountingSemaphore+0x18>
 8007188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800718c:	f383 8811 	msr	BASEPRI, r3
 8007190:	f3bf 8f6f 	isb	sy
 8007194:	f3bf 8f4f 	dsb	sy
 8007198:	e7fe      	b.n	8007198 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800719a:	4288      	cmp	r0, r1
 800719c:	d208      	bcs.n	80071b0 <xQueueCreateCountingSemaphore+0x2e>
 800719e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071a2:	f383 8811 	msr	BASEPRI, r3
 80071a6:	f3bf 8f6f 	isb	sy
 80071aa:	f3bf 8f4f 	dsb	sy
 80071ae:	e7fe      	b.n	80071ae <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80071b0:	2202      	movs	r2, #2
 80071b2:	2100      	movs	r1, #0
 80071b4:	f7ff ff9c 	bl	80070f0 <xQueueGenericCreate>
		if( xHandle != NULL )
 80071b8:	b100      	cbz	r0, 80071bc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80071ba:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80071bc:	bd10      	pop	{r4, pc}
	...

080071c0 <xQueueGenericSend>:
{
 80071c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80071c4:	4688      	mov	r8, r1
 80071c6:	9201      	str	r2, [sp, #4]
 80071c8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80071ca:	4604      	mov	r4, r0
 80071cc:	b940      	cbnz	r0, 80071e0 <xQueueGenericSend+0x20>
 80071ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071d2:	f383 8811 	msr	BASEPRI, r3
 80071d6:	f3bf 8f6f 	isb	sy
 80071da:	f3bf 8f4f 	dsb	sy
 80071de:	e7fe      	b.n	80071de <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80071e0:	b951      	cbnz	r1, 80071f8 <xQueueGenericSend+0x38>
 80071e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80071e4:	b143      	cbz	r3, 80071f8 <xQueueGenericSend+0x38>
 80071e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071ea:	f383 8811 	msr	BASEPRI, r3
 80071ee:	f3bf 8f6f 	isb	sy
 80071f2:	f3bf 8f4f 	dsb	sy
 80071f6:	e7fe      	b.n	80071f6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80071f8:	2f02      	cmp	r7, #2
 80071fa:	d10b      	bne.n	8007214 <xQueueGenericSend+0x54>
 80071fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80071fe:	2b01      	cmp	r3, #1
 8007200:	d008      	beq.n	8007214 <xQueueGenericSend+0x54>
 8007202:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007206:	f383 8811 	msr	BASEPRI, r3
 800720a:	f3bf 8f6f 	isb	sy
 800720e:	f3bf 8f4f 	dsb	sy
 8007212:	e7fe      	b.n	8007212 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007214:	f000 ff98 	bl	8008148 <xTaskGetSchedulerState>
 8007218:	b950      	cbnz	r0, 8007230 <xQueueGenericSend+0x70>
 800721a:	9e01      	ldr	r6, [sp, #4]
 800721c:	b14e      	cbz	r6, 8007232 <xQueueGenericSend+0x72>
 800721e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007222:	f383 8811 	msr	BASEPRI, r3
 8007226:	f3bf 8f6f 	isb	sy
 800722a:	f3bf 8f4f 	dsb	sy
 800722e:	e7fe      	b.n	800722e <xQueueGenericSend+0x6e>
 8007230:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007232:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8007236:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007320 <xQueueGenericSend+0x160>
 800723a:	e037      	b.n	80072ac <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800723c:	9d01      	ldr	r5, [sp, #4]
 800723e:	b91d      	cbnz	r5, 8007248 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007240:	f7ff fd12 	bl	8006c68 <vPortExitCritical>
			return errQUEUE_FULL;
 8007244:	2000      	movs	r0, #0
 8007246:	e050      	b.n	80072ea <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8007248:	b916      	cbnz	r6, 8007250 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800724a:	a802      	add	r0, sp, #8
 800724c:	f000 ff2e 	bl	80080ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007250:	f7ff fd0a 	bl	8006c68 <vPortExitCritical>
		vTaskSuspendAll();
 8007254:	f000 fd40 	bl	8007cd8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007258:	f7ff fce4 	bl	8006c24 <vPortEnterCritical>
 800725c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007260:	2bff      	cmp	r3, #255	; 0xff
 8007262:	bf08      	it	eq
 8007264:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007268:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800726c:	2bff      	cmp	r3, #255	; 0xff
 800726e:	bf08      	it	eq
 8007270:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007274:	f7ff fcf8 	bl	8006c68 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007278:	a901      	add	r1, sp, #4
 800727a:	a802      	add	r0, sp, #8
 800727c:	f000 ff22 	bl	80080c4 <xTaskCheckForTimeOut>
 8007280:	2800      	cmp	r0, #0
 8007282:	d146      	bne.n	8007312 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007284:	f7ff fcce 	bl	8006c24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007288:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800728a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800728c:	429a      	cmp	r2, r3
 800728e:	d12f      	bne.n	80072f0 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007290:	f7ff fcea 	bl	8006c68 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007294:	9901      	ldr	r1, [sp, #4]
 8007296:	f104 0010 	add.w	r0, r4, #16
 800729a:	f000 fe8f 	bl	8007fbc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800729e:	4620      	mov	r0, r4
 80072a0:	f7ff fe5f 	bl	8006f62 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80072a4:	f000 fdb6 	bl	8007e14 <xTaskResumeAll>
 80072a8:	b350      	cbz	r0, 8007300 <xQueueGenericSend+0x140>
 80072aa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80072ac:	f7ff fcba 	bl	8006c24 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80072b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80072b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80072b4:	429a      	cmp	r2, r3
 80072b6:	d301      	bcc.n	80072bc <xQueueGenericSend+0xfc>
 80072b8:	2f02      	cmp	r7, #2
 80072ba:	d1bf      	bne.n	800723c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80072bc:	463a      	mov	r2, r7
 80072be:	4641      	mov	r1, r8
 80072c0:	4620      	mov	r0, r4
 80072c2:	f7ff fe06 	bl	8006ed2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80072c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072c8:	b11b      	cbz	r3, 80072d2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80072ca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80072ce:	f000 fead 	bl	800802c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80072d2:	b138      	cbz	r0, 80072e4 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 80072d4:	4b12      	ldr	r3, [pc, #72]	; (8007320 <xQueueGenericSend+0x160>)
 80072d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80072da:	601a      	str	r2, [r3, #0]
 80072dc:	f3bf 8f4f 	dsb	sy
 80072e0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80072e4:	f7ff fcc0 	bl	8006c68 <vPortExitCritical>
				return pdPASS;
 80072e8:	2001      	movs	r0, #1
}
 80072ea:	b004      	add	sp, #16
 80072ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 80072f0:	f7ff fcba 	bl	8006c68 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80072f4:	4620      	mov	r0, r4
 80072f6:	f7ff fe34 	bl	8006f62 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80072fa:	f000 fd8b 	bl	8007e14 <xTaskResumeAll>
 80072fe:	e7d4      	b.n	80072aa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007300:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007304:	f8ca 3000 	str.w	r3, [sl]
 8007308:	f3bf 8f4f 	dsb	sy
 800730c:	f3bf 8f6f 	isb	sy
 8007310:	e7cb      	b.n	80072aa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007312:	4620      	mov	r0, r4
 8007314:	f7ff fe25 	bl	8006f62 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007318:	f000 fd7c 	bl	8007e14 <xTaskResumeAll>
 800731c:	e792      	b.n	8007244 <xQueueGenericSend+0x84>
 800731e:	bf00      	nop
 8007320:	e000ed04 	.word	0xe000ed04

08007324 <xQueueGenericSendFromISR>:
{
 8007324:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007328:	4689      	mov	r9, r1
 800732a:	4690      	mov	r8, r2
 800732c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800732e:	4604      	mov	r4, r0
 8007330:	b940      	cbnz	r0, 8007344 <xQueueGenericSendFromISR+0x20>
 8007332:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007336:	f383 8811 	msr	BASEPRI, r3
 800733a:	f3bf 8f6f 	isb	sy
 800733e:	f3bf 8f4f 	dsb	sy
 8007342:	e7fe      	b.n	8007342 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007344:	b951      	cbnz	r1, 800735c <xQueueGenericSendFromISR+0x38>
 8007346:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007348:	b143      	cbz	r3, 800735c <xQueueGenericSendFromISR+0x38>
 800734a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800734e:	f383 8811 	msr	BASEPRI, r3
 8007352:	f3bf 8f6f 	isb	sy
 8007356:	f3bf 8f4f 	dsb	sy
 800735a:	e7fe      	b.n	800735a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800735c:	2f02      	cmp	r7, #2
 800735e:	d10b      	bne.n	8007378 <xQueueGenericSendFromISR+0x54>
 8007360:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007362:	2b01      	cmp	r3, #1
 8007364:	d008      	beq.n	8007378 <xQueueGenericSendFromISR+0x54>
 8007366:	f04f 0350 	mov.w	r3, #80	; 0x50
 800736a:	f383 8811 	msr	BASEPRI, r3
 800736e:	f3bf 8f6f 	isb	sy
 8007372:	f3bf 8f4f 	dsb	sy
 8007376:	e7fe      	b.n	8007376 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007378:	f7ff fd72 	bl	8006e60 <vPortValidateInterruptPriority>
	__asm volatile
 800737c:	f3ef 8611 	mrs	r6, BASEPRI
 8007380:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007384:	f383 8811 	msr	BASEPRI, r3
 8007388:	f3bf 8f6f 	isb	sy
 800738c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007390:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007392:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007394:	429a      	cmp	r2, r3
 8007396:	d301      	bcc.n	800739c <xQueueGenericSendFromISR+0x78>
 8007398:	2f02      	cmp	r7, #2
 800739a:	d122      	bne.n	80073e2 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800739c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80073a0:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80073a2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80073a4:	4649      	mov	r1, r9
 80073a6:	4620      	mov	r0, r4
 80073a8:	f7ff fd93 	bl	8006ed2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80073ac:	1c6b      	adds	r3, r5, #1
 80073ae:	d113      	bne.n	80073d8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80073b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073b2:	b90b      	cbnz	r3, 80073b8 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80073b4:	2001      	movs	r0, #1
 80073b6:	e00b      	b.n	80073d0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80073b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80073bc:	f000 fe36 	bl	800802c <xTaskRemoveFromEventList>
 80073c0:	2800      	cmp	r0, #0
 80073c2:	d0f7      	beq.n	80073b4 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80073c4:	f1b8 0f00 	cmp.w	r8, #0
 80073c8:	d0f4      	beq.n	80073b4 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80073ca:	2001      	movs	r0, #1
 80073cc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80073d0:	f386 8811 	msr	BASEPRI, r6
}
 80073d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80073d8:	3501      	adds	r5, #1
 80073da:	b26d      	sxtb	r5, r5
 80073dc:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80073e0:	e7e8      	b.n	80073b4 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80073e2:	2000      	movs	r0, #0
 80073e4:	e7f4      	b.n	80073d0 <xQueueGenericSendFromISR+0xac>

080073e6 <xQueueGiveFromISR>:
{
 80073e6:	b570      	push	{r4, r5, r6, lr}
 80073e8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80073ea:	4604      	mov	r4, r0
 80073ec:	b940      	cbnz	r0, 8007400 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80073ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073f2:	f383 8811 	msr	BASEPRI, r3
 80073f6:	f3bf 8f6f 	isb	sy
 80073fa:	f3bf 8f4f 	dsb	sy
 80073fe:	e7fe      	b.n	80073fe <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007400:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007402:	b143      	cbz	r3, 8007416 <xQueueGiveFromISR+0x30>
 8007404:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007408:	f383 8811 	msr	BASEPRI, r3
 800740c:	f3bf 8f6f 	isb	sy
 8007410:	f3bf 8f4f 	dsb	sy
 8007414:	e7fe      	b.n	8007414 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007416:	6803      	ldr	r3, [r0, #0]
 8007418:	b953      	cbnz	r3, 8007430 <xQueueGiveFromISR+0x4a>
 800741a:	6883      	ldr	r3, [r0, #8]
 800741c:	b143      	cbz	r3, 8007430 <xQueueGiveFromISR+0x4a>
 800741e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007422:	f383 8811 	msr	BASEPRI, r3
 8007426:	f3bf 8f6f 	isb	sy
 800742a:	f3bf 8f4f 	dsb	sy
 800742e:	e7fe      	b.n	800742e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007430:	f7ff fd16 	bl	8006e60 <vPortValidateInterruptPriority>
	__asm volatile
 8007434:	f3ef 8611 	mrs	r6, BASEPRI
 8007438:	f04f 0350 	mov.w	r3, #80	; 0x50
 800743c:	f383 8811 	msr	BASEPRI, r3
 8007440:	f3bf 8f6f 	isb	sy
 8007444:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007448:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800744a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800744c:	4293      	cmp	r3, r2
 800744e:	d91c      	bls.n	800748a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007450:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007454:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 8007456:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007458:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800745a:	1c5a      	adds	r2, r3, #1
 800745c:	d110      	bne.n	8007480 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800745e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007460:	b90b      	cbnz	r3, 8007466 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007462:	2001      	movs	r0, #1
 8007464:	e009      	b.n	800747a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007466:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800746a:	f000 fddf 	bl	800802c <xTaskRemoveFromEventList>
 800746e:	2800      	cmp	r0, #0
 8007470:	d0f7      	beq.n	8007462 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007472:	2d00      	cmp	r5, #0
 8007474:	d0f5      	beq.n	8007462 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007476:	2001      	movs	r0, #1
 8007478:	6028      	str	r0, [r5, #0]
	__asm volatile
 800747a:	f386 8811 	msr	BASEPRI, r6
}
 800747e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007480:	3301      	adds	r3, #1
 8007482:	b25b      	sxtb	r3, r3
 8007484:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007488:	e7eb      	b.n	8007462 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800748a:	2000      	movs	r0, #0
 800748c:	e7f5      	b.n	800747a <xQueueGiveFromISR+0x94>
	...

08007490 <xQueueReceive>:
{
 8007490:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007494:	b085      	sub	sp, #20
 8007496:	460f      	mov	r7, r1
 8007498:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800749a:	4604      	mov	r4, r0
 800749c:	b940      	cbnz	r0, 80074b0 <xQueueReceive+0x20>
	__asm volatile
 800749e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074a2:	f383 8811 	msr	BASEPRI, r3
 80074a6:	f3bf 8f6f 	isb	sy
 80074aa:	f3bf 8f4f 	dsb	sy
 80074ae:	e7fe      	b.n	80074ae <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80074b0:	b951      	cbnz	r1, 80074c8 <xQueueReceive+0x38>
 80074b2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80074b4:	b143      	cbz	r3, 80074c8 <xQueueReceive+0x38>
 80074b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074ba:	f383 8811 	msr	BASEPRI, r3
 80074be:	f3bf 8f6f 	isb	sy
 80074c2:	f3bf 8f4f 	dsb	sy
 80074c6:	e7fe      	b.n	80074c6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80074c8:	f000 fe3e 	bl	8008148 <xTaskGetSchedulerState>
 80074cc:	b950      	cbnz	r0, 80074e4 <xQueueReceive+0x54>
 80074ce:	9e01      	ldr	r6, [sp, #4]
 80074d0:	b14e      	cbz	r6, 80074e6 <xQueueReceive+0x56>
 80074d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074d6:	f383 8811 	msr	BASEPRI, r3
 80074da:	f3bf 8f6f 	isb	sy
 80074de:	f3bf 8f4f 	dsb	sy
 80074e2:	e7fe      	b.n	80074e2 <xQueueReceive+0x52>
 80074e4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80074e6:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 80074ea:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80075cc <xQueueReceive+0x13c>
 80074ee:	e03b      	b.n	8007568 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80074f0:	9d01      	ldr	r5, [sp, #4]
 80074f2:	b91d      	cbnz	r5, 80074fc <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 80074f4:	f7ff fbb8 	bl	8006c68 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80074f8:	2000      	movs	r0, #0
 80074fa:	e052      	b.n	80075a2 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 80074fc:	b916      	cbnz	r6, 8007504 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80074fe:	a802      	add	r0, sp, #8
 8007500:	f000 fdd4 	bl	80080ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007504:	f7ff fbb0 	bl	8006c68 <vPortExitCritical>
		vTaskSuspendAll();
 8007508:	f000 fbe6 	bl	8007cd8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800750c:	f7ff fb8a 	bl	8006c24 <vPortEnterCritical>
 8007510:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007514:	2bff      	cmp	r3, #255	; 0xff
 8007516:	bf08      	it	eq
 8007518:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800751c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007520:	2bff      	cmp	r3, #255	; 0xff
 8007522:	bf08      	it	eq
 8007524:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007528:	f7ff fb9e 	bl	8006c68 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800752c:	a901      	add	r1, sp, #4
 800752e:	a802      	add	r0, sp, #8
 8007530:	f000 fdc8 	bl	80080c4 <xTaskCheckForTimeOut>
 8007534:	2800      	cmp	r0, #0
 8007536:	d13d      	bne.n	80075b4 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007538:	4620      	mov	r0, r4
 800753a:	f7ff fcbf 	bl	8006ebc <prvIsQueueEmpty>
 800753e:	b398      	cbz	r0, 80075a8 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007540:	9901      	ldr	r1, [sp, #4]
 8007542:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007546:	f000 fd39 	bl	8007fbc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800754a:	4620      	mov	r0, r4
 800754c:	f7ff fd09 	bl	8006f62 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007550:	f000 fc60 	bl	8007e14 <xTaskResumeAll>
 8007554:	b938      	cbnz	r0, 8007566 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007556:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800755a:	f8c9 3000 	str.w	r3, [r9]
 800755e:	f3bf 8f4f 	dsb	sy
 8007562:	f3bf 8f6f 	isb	sy
 8007566:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007568:	f7ff fb5c 	bl	8006c24 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800756c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800756e:	2d00      	cmp	r5, #0
 8007570:	d0be      	beq.n	80074f0 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007572:	4639      	mov	r1, r7
 8007574:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007576:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007578:	f7ff fcde 	bl	8006f38 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800757c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800757e:	6923      	ldr	r3, [r4, #16]
 8007580:	b163      	cbz	r3, 800759c <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007582:	f104 0010 	add.w	r0, r4, #16
 8007586:	f000 fd51 	bl	800802c <xTaskRemoveFromEventList>
 800758a:	b138      	cbz	r0, 800759c <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 800758c:	4b0f      	ldr	r3, [pc, #60]	; (80075cc <xQueueReceive+0x13c>)
 800758e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007592:	601a      	str	r2, [r3, #0]
 8007594:	f3bf 8f4f 	dsb	sy
 8007598:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800759c:	f7ff fb64 	bl	8006c68 <vPortExitCritical>
				return pdPASS;
 80075a0:	2001      	movs	r0, #1
}
 80075a2:	b005      	add	sp, #20
 80075a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 80075a8:	4620      	mov	r0, r4
 80075aa:	f7ff fcda 	bl	8006f62 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80075ae:	f000 fc31 	bl	8007e14 <xTaskResumeAll>
 80075b2:	e7d8      	b.n	8007566 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80075b4:	4620      	mov	r0, r4
 80075b6:	f7ff fcd4 	bl	8006f62 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80075ba:	f000 fc2b 	bl	8007e14 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80075be:	4620      	mov	r0, r4
 80075c0:	f7ff fc7c 	bl	8006ebc <prvIsQueueEmpty>
 80075c4:	2800      	cmp	r0, #0
 80075c6:	d0ce      	beq.n	8007566 <xQueueReceive+0xd6>
 80075c8:	e796      	b.n	80074f8 <xQueueReceive+0x68>
 80075ca:	bf00      	nop
 80075cc:	e000ed04 	.word	0xe000ed04

080075d0 <xQueueSemaphoreTake>:
{
 80075d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80075d4:	4604      	mov	r4, r0
{
 80075d6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80075d8:	b940      	cbnz	r0, 80075ec <xQueueSemaphoreTake+0x1c>
 80075da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075de:	f383 8811 	msr	BASEPRI, r3
 80075e2:	f3bf 8f6f 	isb	sy
 80075e6:	f3bf 8f4f 	dsb	sy
 80075ea:	e7fe      	b.n	80075ea <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80075ec:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80075ee:	b145      	cbz	r5, 8007602 <xQueueSemaphoreTake+0x32>
 80075f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075f4:	f383 8811 	msr	BASEPRI, r3
 80075f8:	f3bf 8f6f 	isb	sy
 80075fc:	f3bf 8f4f 	dsb	sy
 8007600:	e7fe      	b.n	8007600 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007602:	f000 fda1 	bl	8008148 <xTaskGetSchedulerState>
 8007606:	b950      	cbnz	r0, 800761e <xQueueSemaphoreTake+0x4e>
 8007608:	9d01      	ldr	r5, [sp, #4]
 800760a:	b145      	cbz	r5, 800761e <xQueueSemaphoreTake+0x4e>
 800760c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007610:	f383 8811 	msr	BASEPRI, r3
 8007614:	f3bf 8f6f 	isb	sy
 8007618:	f3bf 8f4f 	dsb	sy
 800761c:	e7fe      	b.n	800761c <xQueueSemaphoreTake+0x4c>
 800761e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007620:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8007622:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8007750 <xQueueSemaphoreTake+0x180>
 8007626:	e04f      	b.n	80076c8 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007628:	9b01      	ldr	r3, [sp, #4]
 800762a:	b963      	cbnz	r3, 8007646 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800762c:	b145      	cbz	r5, 8007640 <xQueueSemaphoreTake+0x70>
 800762e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007632:	f383 8811 	msr	BASEPRI, r3
 8007636:	f3bf 8f6f 	isb	sy
 800763a:	f3bf 8f4f 	dsb	sy
 800763e:	e7fe      	b.n	800763e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8007640:	f7ff fb12 	bl	8006c68 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007644:	e05e      	b.n	8007704 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8007646:	b916      	cbnz	r6, 800764e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007648:	a802      	add	r0, sp, #8
 800764a:	f000 fd2f 	bl	80080ac <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800764e:	f7ff fb0b 	bl	8006c68 <vPortExitCritical>
		vTaskSuspendAll();
 8007652:	f000 fb41 	bl	8007cd8 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007656:	f7ff fae5 	bl	8006c24 <vPortEnterCritical>
 800765a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800765e:	2bff      	cmp	r3, #255	; 0xff
 8007660:	bf08      	it	eq
 8007662:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007666:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800766a:	2bff      	cmp	r3, #255	; 0xff
 800766c:	bf08      	it	eq
 800766e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007672:	f7ff faf9 	bl	8006c68 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007676:	a901      	add	r1, sp, #4
 8007678:	a802      	add	r0, sp, #8
 800767a:	f000 fd23 	bl	80080c4 <xTaskCheckForTimeOut>
 800767e:	2800      	cmp	r0, #0
 8007680:	d14a      	bne.n	8007718 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007682:	4620      	mov	r0, r4
 8007684:	f7ff fc1a 	bl	8006ebc <prvIsQueueEmpty>
 8007688:	2800      	cmp	r0, #0
 800768a:	d03f      	beq.n	800770c <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800768c:	6823      	ldr	r3, [r4, #0]
 800768e:	b93b      	cbnz	r3, 80076a0 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8007690:	f7ff fac8 	bl	8006c24 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007694:	68a0      	ldr	r0, [r4, #8]
 8007696:	f000 fd67 	bl	8008168 <xTaskPriorityInherit>
 800769a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800769c:	f7ff fae4 	bl	8006c68 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80076a0:	9901      	ldr	r1, [sp, #4]
 80076a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80076a6:	f000 fc89 	bl	8007fbc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80076aa:	4620      	mov	r0, r4
 80076ac:	f7ff fc59 	bl	8006f62 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80076b0:	f000 fbb0 	bl	8007e14 <xTaskResumeAll>
 80076b4:	b938      	cbnz	r0, 80076c6 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 80076b6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80076ba:	f8c8 3000 	str.w	r3, [r8]
 80076be:	f3bf 8f4f 	dsb	sy
 80076c2:	f3bf 8f6f 	isb	sy
 80076c6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80076c8:	f7ff faac 	bl	8006c24 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80076cc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80076ce:	2b00      	cmp	r3, #0
 80076d0:	d0aa      	beq.n	8007628 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80076d2:	3b01      	subs	r3, #1
 80076d4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80076d6:	6823      	ldr	r3, [r4, #0]
 80076d8:	b913      	cbnz	r3, 80076e0 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80076da:	f000 fe15 	bl	8008308 <pvTaskIncrementMutexHeldCount>
 80076de:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80076e0:	6923      	ldr	r3, [r4, #16]
 80076e2:	b163      	cbz	r3, 80076fe <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80076e4:	f104 0010 	add.w	r0, r4, #16
 80076e8:	f000 fca0 	bl	800802c <xTaskRemoveFromEventList>
 80076ec:	b138      	cbz	r0, 80076fe <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 80076ee:	4b18      	ldr	r3, [pc, #96]	; (8007750 <xQueueSemaphoreTake+0x180>)
 80076f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80076f4:	601a      	str	r2, [r3, #0]
 80076f6:	f3bf 8f4f 	dsb	sy
 80076fa:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80076fe:	f7ff fab3 	bl	8006c68 <vPortExitCritical>
				return pdPASS;
 8007702:	2501      	movs	r5, #1
}
 8007704:	4628      	mov	r0, r5
 8007706:	b004      	add	sp, #16
 8007708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800770c:	4620      	mov	r0, r4
 800770e:	f7ff fc28 	bl	8006f62 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007712:	f000 fb7f 	bl	8007e14 <xTaskResumeAll>
 8007716:	e7d6      	b.n	80076c6 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8007718:	4620      	mov	r0, r4
 800771a:	f7ff fc22 	bl	8006f62 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800771e:	f000 fb79 	bl	8007e14 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007722:	4620      	mov	r0, r4
 8007724:	f7ff fbca 	bl	8006ebc <prvIsQueueEmpty>
 8007728:	2800      	cmp	r0, #0
 800772a:	d0cc      	beq.n	80076c6 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 800772c:	2d00      	cmp	r5, #0
 800772e:	d0e9      	beq.n	8007704 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8007730:	f7ff fa78 	bl	8006c24 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007734:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007736:	b119      	cbz	r1, 8007740 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007738:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800773a:	6819      	ldr	r1, [r3, #0]
 800773c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007740:	68a0      	ldr	r0, [r4, #8]
 8007742:	f000 fd93 	bl	800826c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007746:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007748:	f7ff fa8e 	bl	8006c68 <vPortExitCritical>
 800774c:	e7da      	b.n	8007704 <xQueueSemaphoreTake+0x134>
 800774e:	bf00      	nop
 8007750:	e000ed04 	.word	0xe000ed04

08007754 <xQueueReceiveFromISR>:
{
 8007754:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007758:	4689      	mov	r9, r1
 800775a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800775c:	4605      	mov	r5, r0
 800775e:	b940      	cbnz	r0, 8007772 <xQueueReceiveFromISR+0x1e>
 8007760:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007764:	f383 8811 	msr	BASEPRI, r3
 8007768:	f3bf 8f6f 	isb	sy
 800776c:	f3bf 8f4f 	dsb	sy
 8007770:	e7fe      	b.n	8007770 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007772:	b951      	cbnz	r1, 800778a <xQueueReceiveFromISR+0x36>
 8007774:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007776:	b143      	cbz	r3, 800778a <xQueueReceiveFromISR+0x36>
 8007778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800777c:	f383 8811 	msr	BASEPRI, r3
 8007780:	f3bf 8f6f 	isb	sy
 8007784:	f3bf 8f4f 	dsb	sy
 8007788:	e7fe      	b.n	8007788 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800778a:	f7ff fb69 	bl	8006e60 <vPortValidateInterruptPriority>
	__asm volatile
 800778e:	f3ef 8711 	mrs	r7, BASEPRI
 8007792:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007796:	f383 8811 	msr	BASEPRI, r3
 800779a:	f3bf 8f6f 	isb	sy
 800779e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80077a2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80077a4:	b31c      	cbz	r4, 80077ee <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80077a6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80077aa:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80077ac:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80077ae:	4628      	mov	r0, r5
 80077b0:	f7ff fbc2 	bl	8006f38 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80077b4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80077b6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80077b8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80077ba:	d113      	bne.n	80077e4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80077bc:	692b      	ldr	r3, [r5, #16]
 80077be:	b90b      	cbnz	r3, 80077c4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80077c0:	2001      	movs	r0, #1
 80077c2:	e00b      	b.n	80077dc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077c4:	f105 0010 	add.w	r0, r5, #16
 80077c8:	f000 fc30 	bl	800802c <xTaskRemoveFromEventList>
 80077cc:	2800      	cmp	r0, #0
 80077ce:	d0f7      	beq.n	80077c0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80077d0:	f1b8 0f00 	cmp.w	r8, #0
 80077d4:	d0f4      	beq.n	80077c0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80077d6:	2001      	movs	r0, #1
 80077d8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80077dc:	f387 8811 	msr	BASEPRI, r7
}
 80077e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80077e4:	3601      	adds	r6, #1
 80077e6:	b276      	sxtb	r6, r6
 80077e8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80077ec:	e7e8      	b.n	80077c0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80077ee:	4620      	mov	r0, r4
 80077f0:	e7f4      	b.n	80077dc <xQueueReceiveFromISR+0x88>
	...

080077f4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80077f4:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80077f6:	4a07      	ldr	r2, [pc, #28]	; (8007814 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80077f8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80077fa:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80077fe:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007802:	b91d      	cbnz	r5, 800780c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007804:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007808:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800780a:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800780c:	3301      	adds	r3, #1
 800780e:	2b08      	cmp	r3, #8
 8007810:	d1f3      	bne.n	80077fa <vQueueAddToRegistry+0x6>
 8007812:	e7fa      	b.n	800780a <vQueueAddToRegistry+0x16>
 8007814:	200126b0 	.word	0x200126b0

08007818 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007818:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800781a:	4a08      	ldr	r2, [pc, #32]	; (800783c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800781c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800781e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007822:	684c      	ldr	r4, [r1, #4]
 8007824:	4284      	cmp	r4, r0
 8007826:	d104      	bne.n	8007832 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007828:	2000      	movs	r0, #0
 800782a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800782e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007830:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007832:	3301      	adds	r3, #1
 8007834:	2b08      	cmp	r3, #8
 8007836:	d1f2      	bne.n	800781e <vQueueUnregisterQueue+0x6>
 8007838:	e7fa      	b.n	8007830 <vQueueUnregisterQueue+0x18>
 800783a:	bf00      	nop
 800783c:	200126b0 	.word	0x200126b0

08007840 <vQueueDelete>:
{
 8007840:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007842:	4604      	mov	r4, r0
 8007844:	b940      	cbnz	r0, 8007858 <vQueueDelete+0x18>
	__asm volatile
 8007846:	f04f 0350 	mov.w	r3, #80	; 0x50
 800784a:	f383 8811 	msr	BASEPRI, r3
 800784e:	f3bf 8f6f 	isb	sy
 8007852:	f3bf 8f4f 	dsb	sy
 8007856:	e7fe      	b.n	8007856 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007858:	f7ff ffde 	bl	8007818 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800785c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007860:	b923      	cbnz	r3, 800786c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007862:	4620      	mov	r0, r4
}
 8007864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007868:	f7ff b8fa 	b.w	8006a60 <vPortFree>
}
 800786c:	bd10      	pop	{r4, pc}

0800786e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800786e:	b570      	push	{r4, r5, r6, lr}
 8007870:	4604      	mov	r4, r0
 8007872:	460d      	mov	r5, r1
 8007874:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007876:	f7ff f9d5 	bl	8006c24 <vPortEnterCritical>
 800787a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800787e:	2bff      	cmp	r3, #255	; 0xff
 8007880:	bf04      	itt	eq
 8007882:	2300      	moveq	r3, #0
 8007884:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007888:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800788c:	2bff      	cmp	r3, #255	; 0xff
 800788e:	bf04      	itt	eq
 8007890:	2300      	moveq	r3, #0
 8007892:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007896:	f7ff f9e7 	bl	8006c68 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800789a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800789c:	b92b      	cbnz	r3, 80078aa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800789e:	4632      	mov	r2, r6
 80078a0:	4629      	mov	r1, r5
 80078a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80078a6:	f000 fba3 	bl	8007ff0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80078aa:	4620      	mov	r0, r4
	}
 80078ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80078b0:	f7ff bb57 	b.w	8006f62 <prvUnlockQueue>

080078b4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80078b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078b8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80078ba:	f7ff f9b3 	bl	8006c24 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80078be:	4b2f      	ldr	r3, [pc, #188]	; (800797c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80078c0:	4d2f      	ldr	r5, [pc, #188]	; (8007980 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80078c2:	681a      	ldr	r2, [r3, #0]
 80078c4:	4f2f      	ldr	r7, [pc, #188]	; (8007984 <prvAddNewTaskToReadyList+0xd0>)
 80078c6:	3201      	adds	r2, #1
 80078c8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80078ca:	682e      	ldr	r6, [r5, #0]
 80078cc:	2e00      	cmp	r6, #0
 80078ce:	d149      	bne.n	8007964 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80078d0:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	2b01      	cmp	r3, #1
 80078d6:	d11f      	bne.n	8007918 <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80078d8:	f04f 0814 	mov.w	r8, #20
 80078dc:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80078e0:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80078e2:	f7ff f8f5 	bl	8006ad0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80078e6:	2e38      	cmp	r6, #56	; 0x38
 80078e8:	d1f8      	bne.n	80078dc <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 80078ea:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80079b0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80078ee:	4e26      	ldr	r6, [pc, #152]	; (8007988 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80078f0:	4640      	mov	r0, r8
 80078f2:	f7ff f8ed 	bl	8006ad0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80078f6:	4630      	mov	r0, r6
 80078f8:	f7ff f8ea 	bl	8006ad0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80078fc:	4823      	ldr	r0, [pc, #140]	; (800798c <prvAddNewTaskToReadyList+0xd8>)
 80078fe:	f7ff f8e7 	bl	8006ad0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007902:	4823      	ldr	r0, [pc, #140]	; (8007990 <prvAddNewTaskToReadyList+0xdc>)
 8007904:	f7ff f8e4 	bl	8006ad0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007908:	4822      	ldr	r0, [pc, #136]	; (8007994 <prvAddNewTaskToReadyList+0xe0>)
 800790a:	f7ff f8e1 	bl	8006ad0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800790e:	4b22      	ldr	r3, [pc, #136]	; (8007998 <prvAddNewTaskToReadyList+0xe4>)
 8007910:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007914:	4b21      	ldr	r3, [pc, #132]	; (800799c <prvAddNewTaskToReadyList+0xe8>)
 8007916:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007918:	4a21      	ldr	r2, [pc, #132]	; (80079a0 <prvAddNewTaskToReadyList+0xec>)
 800791a:	6813      	ldr	r3, [r2, #0]
 800791c:	3301      	adds	r3, #1
 800791e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007920:	4a20      	ldr	r2, [pc, #128]	; (80079a4 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007922:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007924:	6811      	ldr	r1, [r2, #0]
 8007926:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007928:	2014      	movs	r0, #20
 800792a:	428b      	cmp	r3, r1
 800792c:	fb00 7003 	mla	r0, r0, r3, r7
 8007930:	f104 0104 	add.w	r1, r4, #4
 8007934:	bf88      	it	hi
 8007936:	6013      	strhi	r3, [r2, #0]
 8007938:	f7ff f8d8 	bl	8006aec <vListInsertEnd>
	taskEXIT_CRITICAL();
 800793c:	f7ff f994 	bl	8006c68 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007940:	4b19      	ldr	r3, [pc, #100]	; (80079a8 <prvAddNewTaskToReadyList+0xf4>)
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	b163      	cbz	r3, 8007960 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007946:	682b      	ldr	r3, [r5, #0]
 8007948:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800794a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800794c:	429a      	cmp	r2, r3
 800794e:	d207      	bcs.n	8007960 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007950:	4b16      	ldr	r3, [pc, #88]	; (80079ac <prvAddNewTaskToReadyList+0xf8>)
 8007952:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007956:	601a      	str	r2, [r3, #0]
 8007958:	f3bf 8f4f 	dsb	sy
 800795c:	f3bf 8f6f 	isb	sy
}
 8007960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007964:	4b10      	ldr	r3, [pc, #64]	; (80079a8 <prvAddNewTaskToReadyList+0xf4>)
 8007966:	681b      	ldr	r3, [r3, #0]
 8007968:	2b00      	cmp	r3, #0
 800796a:	d1d5      	bne.n	8007918 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800796c:	682b      	ldr	r3, [r5, #0]
 800796e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007970:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007972:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007974:	bf98      	it	ls
 8007976:	602c      	strls	r4, [r5, #0]
 8007978:	e7ce      	b.n	8007918 <prvAddNewTaskToReadyList+0x64>
 800797a:	bf00      	nop
 800797c:	20011ee4 	.word	0x20011ee4
 8007980:	20011a78 	.word	0x20011a78
 8007984:	20011a84 	.word	0x20011a84
 8007988:	20011f10 	.word	0x20011f10
 800798c:	20011f2c 	.word	0x20011f2c
 8007990:	20011f58 	.word	0x20011f58
 8007994:	20011f44 	.word	0x20011f44
 8007998:	20011a7c 	.word	0x20011a7c
 800799c:	20011a80 	.word	0x20011a80
 80079a0:	20011ef4 	.word	0x20011ef4
 80079a4:	20011ef8 	.word	0x20011ef8
 80079a8:	20011f40 	.word	0x20011f40
 80079ac:	e000ed04 	.word	0xe000ed04
 80079b0:	20011efc 	.word	0x20011efc

080079b4 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 80079b4:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80079b6:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80079ba:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80079bc:	b93b      	cbnz	r3, 80079ce <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 80079be:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80079c0:	f7ff f84e 	bl	8006a60 <vPortFree>
				vPortFree( pxTCB );
 80079c4:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 80079c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80079ca:	f7ff b849 	b.w	8006a60 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80079ce:	2b01      	cmp	r3, #1
 80079d0:	d0f9      	beq.n	80079c6 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80079d2:	2b02      	cmp	r3, #2
 80079d4:	d008      	beq.n	80079e8 <prvDeleteTCB+0x34>
 80079d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079da:	f383 8811 	msr	BASEPRI, r3
 80079de:	f3bf 8f6f 	isb	sy
 80079e2:	f3bf 8f4f 	dsb	sy
 80079e6:	e7fe      	b.n	80079e6 <prvDeleteTCB+0x32>
	}
 80079e8:	bd10      	pop	{r4, pc}
	...

080079ec <prvIdleTask>:
{
 80079ec:	b580      	push	{r7, lr}
				taskYIELD();
 80079ee:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8007a4c <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80079f2:	4f12      	ldr	r7, [pc, #72]	; (8007a3c <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80079f4:	4c12      	ldr	r4, [pc, #72]	; (8007a40 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80079f6:	4d13      	ldr	r5, [pc, #76]	; (8007a44 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80079f8:	6823      	ldr	r3, [r4, #0]
 80079fa:	b963      	cbnz	r3, 8007a16 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80079fc:	4b12      	ldr	r3, [pc, #72]	; (8007a48 <prvIdleTask+0x5c>)
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	2b01      	cmp	r3, #1
 8007a02:	d9f8      	bls.n	80079f6 <prvIdleTask+0xa>
				taskYIELD();
 8007a04:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007a08:	f8c8 3000 	str.w	r3, [r8]
 8007a0c:	f3bf 8f4f 	dsb	sy
 8007a10:	f3bf 8f6f 	isb	sy
 8007a14:	e7ee      	b.n	80079f4 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8007a16:	f7ff f905 	bl	8006c24 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007a1e:	1d30      	adds	r0, r6, #4
 8007a20:	f7ff f887 	bl	8006b32 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007a24:	682b      	ldr	r3, [r5, #0]
 8007a26:	3b01      	subs	r3, #1
 8007a28:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007a2a:	6823      	ldr	r3, [r4, #0]
 8007a2c:	3b01      	subs	r3, #1
 8007a2e:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007a30:	f7ff f91a 	bl	8006c68 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007a34:	4630      	mov	r0, r6
 8007a36:	f7ff ffbd 	bl	80079b4 <prvDeleteTCB>
 8007a3a:	e7dd      	b.n	80079f8 <prvIdleTask+0xc>
 8007a3c:	20011f58 	.word	0x20011f58
 8007a40:	20011ee8 	.word	0x20011ee8
 8007a44:	20011ee4 	.word	0x20011ee4
 8007a48:	20011a84 	.word	0x20011a84
 8007a4c:	e000ed04 	.word	0xe000ed04

08007a50 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007a50:	4a06      	ldr	r2, [pc, #24]	; (8007a6c <prvResetNextTaskUnblockTime+0x1c>)
 8007a52:	6813      	ldr	r3, [r2, #0]
 8007a54:	6819      	ldr	r1, [r3, #0]
 8007a56:	4b06      	ldr	r3, [pc, #24]	; (8007a70 <prvResetNextTaskUnblockTime+0x20>)
 8007a58:	b919      	cbnz	r1, 8007a62 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007a5a:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007a5e:	601a      	str	r2, [r3, #0]
	}
}
 8007a60:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007a62:	6812      	ldr	r2, [r2, #0]
 8007a64:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007a66:	68d2      	ldr	r2, [r2, #12]
 8007a68:	6852      	ldr	r2, [r2, #4]
 8007a6a:	e7f8      	b.n	8007a5e <prvResetNextTaskUnblockTime+0xe>
 8007a6c:	20011a7c 	.word	0x20011a7c
 8007a70:	20011f24 	.word	0x20011f24

08007a74 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007a74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007a78:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007a7c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007a80:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007a82:	4607      	mov	r7, r0
 8007a84:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007a86:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007a88:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007a8a:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007a8c:	f012 fcfb 	bl	801a486 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007a90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007a92:	f1a9 0904 	sub.w	r9, r9, #4
 8007a96:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007a98:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007a9c:	b3a5      	cbz	r5, 8007b08 <prvInitialiseNewTask.isra.2+0x94>
 8007a9e:	1e6b      	subs	r3, r5, #1
 8007aa0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007aa4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007aa6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007aaa:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007aae:	7819      	ldrb	r1, [r3, #0]
 8007ab0:	b109      	cbz	r1, 8007ab6 <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007ab2:	42ab      	cmp	r3, r5
 8007ab4:	d1f7      	bne.n	8007aa6 <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007ab6:	2300      	movs	r3, #0
 8007ab8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007abc:	9d08      	ldr	r5, [sp, #32]
 8007abe:	2d37      	cmp	r5, #55	; 0x37
 8007ac0:	bf28      	it	cs
 8007ac2:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007ac4:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007ac8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007aca:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007acc:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007ace:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007ad2:	f7ff f808 	bl	8006ae6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007ad6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007ada:	f104 0018 	add.w	r0, r4, #24
 8007ade:	f7ff f802 	bl	8006ae6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007ae2:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007ae6:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007ae8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007aea:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007aec:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007af0:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007af4:	4642      	mov	r2, r8
 8007af6:	4639      	mov	r1, r7
 8007af8:	4648      	mov	r0, r9
 8007afa:	f7ff f869 	bl	8006bd0 <pxPortInitialiseStack>
 8007afe:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007b00:	b106      	cbz	r6, 8007b04 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007b02:	6034      	str	r4, [r6, #0]
}
 8007b04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007b08:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007b0c:	e7d6      	b.n	8007abc <prvInitialiseNewTask.isra.2+0x48>
	...

08007b10 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007b12:	4b16      	ldr	r3, [pc, #88]	; (8007b6c <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007b14:	4e16      	ldr	r6, [pc, #88]	; (8007b70 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8007b16:	681c      	ldr	r4, [r3, #0]
{
 8007b18:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007b1a:	6830      	ldr	r0, [r6, #0]
 8007b1c:	3004      	adds	r0, #4
{
 8007b1e:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007b20:	f7ff f807 	bl	8006b32 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007b24:	1c6b      	adds	r3, r5, #1
 8007b26:	4633      	mov	r3, r6
 8007b28:	d107      	bne.n	8007b3a <prvAddCurrentTaskToDelayedList+0x2a>
 8007b2a:	b137      	cbz	r7, 8007b3a <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007b2c:	6831      	ldr	r1, [r6, #0]
 8007b2e:	4811      	ldr	r0, [pc, #68]	; (8007b74 <prvAddCurrentTaskToDelayedList+0x64>)
 8007b30:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007b32:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007b36:	f7fe bfd9 	b.w	8006aec <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007b3a:	681a      	ldr	r2, [r3, #0]
 8007b3c:	1964      	adds	r4, r4, r5
 8007b3e:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8007b40:	d307      	bcc.n	8007b52 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007b42:	4a0d      	ldr	r2, [pc, #52]	; (8007b78 <prvAddCurrentTaskToDelayedList+0x68>)
 8007b44:	6810      	ldr	r0, [r2, #0]
 8007b46:	6819      	ldr	r1, [r3, #0]
}
 8007b48:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007b4c:	3104      	adds	r1, #4
 8007b4e:	f7fe bfd9 	b.w	8006b04 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007b52:	4a0a      	ldr	r2, [pc, #40]	; (8007b7c <prvAddCurrentTaskToDelayedList+0x6c>)
 8007b54:	6810      	ldr	r0, [r2, #0]
 8007b56:	6819      	ldr	r1, [r3, #0]
 8007b58:	3104      	adds	r1, #4
 8007b5a:	f7fe ffd3 	bl	8006b04 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007b5e:	4b08      	ldr	r3, [pc, #32]	; (8007b80 <prvAddCurrentTaskToDelayedList+0x70>)
 8007b60:	681a      	ldr	r2, [r3, #0]
 8007b62:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007b64:	bf88      	it	hi
 8007b66:	601c      	strhi	r4, [r3, #0]
}
 8007b68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b6a:	bf00      	nop
 8007b6c:	20011f6c 	.word	0x20011f6c
 8007b70:	20011a78 	.word	0x20011a78
 8007b74:	20011f44 	.word	0x20011f44
 8007b78:	20011a80 	.word	0x20011a80
 8007b7c:	20011a7c 	.word	0x20011a7c
 8007b80:	20011f24 	.word	0x20011f24

08007b84 <xTaskCreateStatic>:
	{
 8007b84:	b570      	push	{r4, r5, r6, lr}
 8007b86:	b086      	sub	sp, #24
 8007b88:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8007b8c:	b945      	cbnz	r5, 8007ba0 <xTaskCreateStatic+0x1c>
 8007b8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b92:	f383 8811 	msr	BASEPRI, r3
 8007b96:	f3bf 8f6f 	isb	sy
 8007b9a:	f3bf 8f4f 	dsb	sy
 8007b9e:	e7fe      	b.n	8007b9e <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007ba0:	b944      	cbnz	r4, 8007bb4 <xTaskCreateStatic+0x30>
 8007ba2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ba6:	f383 8811 	msr	BASEPRI, r3
 8007baa:	f3bf 8f6f 	isb	sy
 8007bae:	f3bf 8f4f 	dsb	sy
 8007bb2:	e7fe      	b.n	8007bb2 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007bb4:	2660      	movs	r6, #96	; 0x60
 8007bb6:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007bb8:	9e05      	ldr	r6, [sp, #20]
 8007bba:	2e60      	cmp	r6, #96	; 0x60
 8007bbc:	d008      	beq.n	8007bd0 <xTaskCreateStatic+0x4c>
 8007bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bc2:	f383 8811 	msr	BASEPRI, r3
 8007bc6:	f3bf 8f6f 	isb	sy
 8007bca:	f3bf 8f4f 	dsb	sy
 8007bce:	e7fe      	b.n	8007bce <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007bd0:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007bd2:	2502      	movs	r5, #2
 8007bd4:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007bd8:	ad04      	add	r5, sp, #16
 8007bda:	9501      	str	r5, [sp, #4]
 8007bdc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007bde:	9402      	str	r4, [sp, #8]
 8007be0:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8007be2:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007be4:	f7ff ff46 	bl	8007a74 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007be8:	4620      	mov	r0, r4
 8007bea:	f7ff fe63 	bl	80078b4 <prvAddNewTaskToReadyList>
	}
 8007bee:	9804      	ldr	r0, [sp, #16]
 8007bf0:	b006      	add	sp, #24
 8007bf2:	bd70      	pop	{r4, r5, r6, pc}

08007bf4 <xTaskCreate>:
	{
 8007bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007bf8:	4607      	mov	r7, r0
 8007bfa:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007bfc:	0090      	lsls	r0, r2, #2
	{
 8007bfe:	4688      	mov	r8, r1
 8007c00:	4616      	mov	r6, r2
 8007c02:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007c04:	f7fe fea0 	bl	8006948 <pvPortMalloc>
			if( pxStack != NULL )
 8007c08:	4605      	mov	r5, r0
 8007c0a:	b1e8      	cbz	r0, 8007c48 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8007c0c:	2060      	movs	r0, #96	; 0x60
 8007c0e:	f7fe fe9b 	bl	8006948 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8007c12:	4604      	mov	r4, r0
 8007c14:	b1a8      	cbz	r0, 8007c42 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8007c16:	2300      	movs	r3, #0
 8007c18:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007c1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8007c1e:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007c20:	9301      	str	r3, [sp, #4]
 8007c22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007c24:	9002      	str	r0, [sp, #8]
 8007c26:	9300      	str	r3, [sp, #0]
 8007c28:	4632      	mov	r2, r6
 8007c2a:	464b      	mov	r3, r9
 8007c2c:	4641      	mov	r1, r8
 8007c2e:	4638      	mov	r0, r7
 8007c30:	f7ff ff20 	bl	8007a74 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007c34:	4620      	mov	r0, r4
 8007c36:	f7ff fe3d 	bl	80078b4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8007c3a:	2001      	movs	r0, #1
	}
 8007c3c:	b005      	add	sp, #20
 8007c3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8007c42:	4628      	mov	r0, r5
 8007c44:	f7fe ff0c 	bl	8006a60 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8007c48:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8007c4c:	e7f6      	b.n	8007c3c <xTaskCreate+0x48>
	...

08007c50 <vTaskStartScheduler>:
{
 8007c50:	b510      	push	{r4, lr}
 8007c52:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8007c54:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8007c56:	aa07      	add	r2, sp, #28
 8007c58:	a906      	add	r1, sp, #24
 8007c5a:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8007c5c:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8007c60:	f7fe fe36 	bl	80068d0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8007c64:	9b05      	ldr	r3, [sp, #20]
 8007c66:	9302      	str	r3, [sp, #8]
 8007c68:	9b06      	ldr	r3, [sp, #24]
 8007c6a:	9a07      	ldr	r2, [sp, #28]
 8007c6c:	4915      	ldr	r1, [pc, #84]	; (8007cc4 <vTaskStartScheduler+0x74>)
 8007c6e:	4816      	ldr	r0, [pc, #88]	; (8007cc8 <vTaskStartScheduler+0x78>)
 8007c70:	e9cd 4300 	strd	r4, r3, [sp]
 8007c74:	4623      	mov	r3, r4
 8007c76:	f7ff ff85 	bl	8007b84 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8007c7a:	b1a8      	cbz	r0, 8007ca8 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 8007c7c:	f000 fba2 	bl	80083c4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8007c80:	2801      	cmp	r0, #1
 8007c82:	d113      	bne.n	8007cac <vTaskStartScheduler+0x5c>
 8007c84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c88:	f383 8811 	msr	BASEPRI, r3
 8007c8c:	f3bf 8f6f 	isb	sy
 8007c90:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8007c94:	4b0d      	ldr	r3, [pc, #52]	; (8007ccc <vTaskStartScheduler+0x7c>)
 8007c96:	f04f 32ff 	mov.w	r2, #4294967295
 8007c9a:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8007c9c:	4b0c      	ldr	r3, [pc, #48]	; (8007cd0 <vTaskStartScheduler+0x80>)
 8007c9e:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8007ca0:	4b0c      	ldr	r3, [pc, #48]	; (8007cd4 <vTaskStartScheduler+0x84>)
 8007ca2:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8007ca4:	f7ff f856 	bl	8006d54 <xPortStartScheduler>
}
 8007ca8:	b008      	add	sp, #32
 8007caa:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8007cac:	3001      	adds	r0, #1
 8007cae:	d1fb      	bne.n	8007ca8 <vTaskStartScheduler+0x58>
 8007cb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cb4:	f383 8811 	msr	BASEPRI, r3
 8007cb8:	f3bf 8f6f 	isb	sy
 8007cbc:	f3bf 8f4f 	dsb	sy
 8007cc0:	e7fe      	b.n	8007cc0 <vTaskStartScheduler+0x70>
 8007cc2:	bf00      	nop
 8007cc4:	0801c440 	.word	0x0801c440
 8007cc8:	080079ed 	.word	0x080079ed
 8007ccc:	20011f24 	.word	0x20011f24
 8007cd0:	20011f40 	.word	0x20011f40
 8007cd4:	20011f6c 	.word	0x20011f6c

08007cd8 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8007cd8:	4a02      	ldr	r2, [pc, #8]	; (8007ce4 <vTaskSuspendAll+0xc>)
 8007cda:	6813      	ldr	r3, [r2, #0]
 8007cdc:	3301      	adds	r3, #1
 8007cde:	6013      	str	r3, [r2, #0]
}
 8007ce0:	4770      	bx	lr
 8007ce2:	bf00      	nop
 8007ce4:	20011ef0 	.word	0x20011ef0

08007ce8 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8007ce8:	4b01      	ldr	r3, [pc, #4]	; (8007cf0 <xTaskGetTickCount+0x8>)
 8007cea:	6818      	ldr	r0, [r3, #0]
}
 8007cec:	4770      	bx	lr
 8007cee:	bf00      	nop
 8007cf0:	20011f6c 	.word	0x20011f6c

08007cf4 <xTaskIncrementTick>:
{
 8007cf4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007cf8:	4b3b      	ldr	r3, [pc, #236]	; (8007de8 <xTaskIncrementTick+0xf4>)
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	2b00      	cmp	r3, #0
 8007cfe:	d16c      	bne.n	8007dda <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8007d00:	4b3a      	ldr	r3, [pc, #232]	; (8007dec <xTaskIncrementTick+0xf8>)
 8007d02:	681c      	ldr	r4, [r3, #0]
 8007d04:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8007d06:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8007d08:	b9bc      	cbnz	r4, 8007d3a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8007d0a:	4b39      	ldr	r3, [pc, #228]	; (8007df0 <xTaskIncrementTick+0xfc>)
 8007d0c:	681a      	ldr	r2, [r3, #0]
 8007d0e:	6812      	ldr	r2, [r2, #0]
 8007d10:	b142      	cbz	r2, 8007d24 <xTaskIncrementTick+0x30>
 8007d12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d16:	f383 8811 	msr	BASEPRI, r3
 8007d1a:	f3bf 8f6f 	isb	sy
 8007d1e:	f3bf 8f4f 	dsb	sy
 8007d22:	e7fe      	b.n	8007d22 <xTaskIncrementTick+0x2e>
 8007d24:	4a33      	ldr	r2, [pc, #204]	; (8007df4 <xTaskIncrementTick+0x100>)
 8007d26:	6819      	ldr	r1, [r3, #0]
 8007d28:	6810      	ldr	r0, [r2, #0]
 8007d2a:	6018      	str	r0, [r3, #0]
 8007d2c:	6011      	str	r1, [r2, #0]
 8007d2e:	4a32      	ldr	r2, [pc, #200]	; (8007df8 <xTaskIncrementTick+0x104>)
 8007d30:	6813      	ldr	r3, [r2, #0]
 8007d32:	3301      	adds	r3, #1
 8007d34:	6013      	str	r3, [r2, #0]
 8007d36:	f7ff fe8b 	bl	8007a50 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8007d3a:	4d30      	ldr	r5, [pc, #192]	; (8007dfc <xTaskIncrementTick+0x108>)
 8007d3c:	4f30      	ldr	r7, [pc, #192]	; (8007e00 <xTaskIncrementTick+0x10c>)
 8007d3e:	682b      	ldr	r3, [r5, #0]
 8007d40:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 8007d42:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8007d46:	d911      	bls.n	8007d6c <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8007d48:	683a      	ldr	r2, [r7, #0]
 8007d4a:	4b2e      	ldr	r3, [pc, #184]	; (8007e04 <xTaskIncrementTick+0x110>)
 8007d4c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8007d4e:	2214      	movs	r2, #20
 8007d50:	434a      	muls	r2, r1
 8007d52:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 8007d54:	2a02      	cmp	r2, #2
 8007d56:	bf28      	it	cs
 8007d58:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 8007d5c:	4a2a      	ldr	r2, [pc, #168]	; (8007e08 <xTaskIncrementTick+0x114>)
 8007d5e:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 8007d60:	2a00      	cmp	r2, #0
}
 8007d62:	bf0c      	ite	eq
 8007d64:	4658      	moveq	r0, fp
 8007d66:	2001      	movne	r0, #1
 8007d68:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007d6c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8007df0 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 8007d70:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8007e10 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007d74:	f8d9 2000 	ldr.w	r2, [r9]
 8007d78:	6812      	ldr	r2, [r2, #0]
 8007d7a:	b91a      	cbnz	r2, 8007d84 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007d7c:	f04f 32ff 	mov.w	r2, #4294967295
 8007d80:	602a      	str	r2, [r5, #0]
					break;
 8007d82:	e7e1      	b.n	8007d48 <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007d84:	f8d9 2000 	ldr.w	r2, [r9]
 8007d88:	68d2      	ldr	r2, [r2, #12]
 8007d8a:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8007d8c:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 8007d8e:	428c      	cmp	r4, r1
 8007d90:	d201      	bcs.n	8007d96 <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8007d92:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8007d94:	e7d8      	b.n	8007d48 <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007d96:	f106 0804 	add.w	r8, r6, #4
 8007d9a:	4640      	mov	r0, r8
 8007d9c:	f7fe fec9 	bl	8006b32 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8007da0:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8007da2:	b119      	cbz	r1, 8007dac <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007da4:	f106 0018 	add.w	r0, r6, #24
 8007da8:	f7fe fec3 	bl	8006b32 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8007dac:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8007dae:	f8da 1000 	ldr.w	r1, [sl]
 8007db2:	4b14      	ldr	r3, [pc, #80]	; (8007e04 <xTaskIncrementTick+0x110>)
 8007db4:	4288      	cmp	r0, r1
 8007db6:	f04f 0214 	mov.w	r2, #20
 8007dba:	bf88      	it	hi
 8007dbc:	f8ca 0000 	strhi.w	r0, [sl]
 8007dc0:	4641      	mov	r1, r8
 8007dc2:	fb02 3000 	mla	r0, r2, r0, r3
 8007dc6:	f7fe fe91 	bl	8006aec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007dca:	6838      	ldr	r0, [r7, #0]
 8007dcc:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 8007dce:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8007dd0:	4291      	cmp	r1, r2
 8007dd2:	bf28      	it	cs
 8007dd4:	f04f 0b01 	movcs.w	fp, #1
 8007dd8:	e7cc      	b.n	8007d74 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 8007dda:	4a0c      	ldr	r2, [pc, #48]	; (8007e0c <xTaskIncrementTick+0x118>)
 8007ddc:	6813      	ldr	r3, [r2, #0]
 8007dde:	3301      	adds	r3, #1
 8007de0:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8007de2:	f04f 0b00 	mov.w	fp, #0
 8007de6:	e7b9      	b.n	8007d5c <xTaskIncrementTick+0x68>
 8007de8:	20011ef0 	.word	0x20011ef0
 8007dec:	20011f6c 	.word	0x20011f6c
 8007df0:	20011a7c 	.word	0x20011a7c
 8007df4:	20011a80 	.word	0x20011a80
 8007df8:	20011f28 	.word	0x20011f28
 8007dfc:	20011f24 	.word	0x20011f24
 8007e00:	20011a78 	.word	0x20011a78
 8007e04:	20011a84 	.word	0x20011a84
 8007e08:	20011f70 	.word	0x20011f70
 8007e0c:	20011eec 	.word	0x20011eec
 8007e10:	20011ef8 	.word	0x20011ef8

08007e14 <xTaskResumeAll>:
{
 8007e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8007e18:	4c2f      	ldr	r4, [pc, #188]	; (8007ed8 <xTaskResumeAll+0xc4>)
 8007e1a:	6823      	ldr	r3, [r4, #0]
 8007e1c:	b943      	cbnz	r3, 8007e30 <xTaskResumeAll+0x1c>
 8007e1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e22:	f383 8811 	msr	BASEPRI, r3
 8007e26:	f3bf 8f6f 	isb	sy
 8007e2a:	f3bf 8f4f 	dsb	sy
 8007e2e:	e7fe      	b.n	8007e2e <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8007e30:	f7fe fef8 	bl	8006c24 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8007e34:	6823      	ldr	r3, [r4, #0]
 8007e36:	3b01      	subs	r3, #1
 8007e38:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007e3a:	6824      	ldr	r4, [r4, #0]
 8007e3c:	b12c      	cbz	r4, 8007e4a <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8007e3e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8007e40:	f7fe ff12 	bl	8006c68 <vPortExitCritical>
}
 8007e44:	4620      	mov	r0, r4
 8007e46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8007e4a:	4b24      	ldr	r3, [pc, #144]	; (8007edc <xTaskResumeAll+0xc8>)
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	2b00      	cmp	r3, #0
 8007e50:	d0f5      	beq.n	8007e3e <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007e52:	4d23      	ldr	r5, [pc, #140]	; (8007ee0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8007e54:	4e23      	ldr	r6, [pc, #140]	; (8007ee4 <xTaskResumeAll+0xd0>)
 8007e56:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8007ef8 <xTaskResumeAll+0xe4>
 8007e5a:	e01d      	b.n	8007e98 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007e5c:	68eb      	ldr	r3, [r5, #12]
 8007e5e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007e60:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007e62:	f104 0018 	add.w	r0, r4, #24
 8007e66:	f7fe fe64 	bl	8006b32 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007e6a:	4638      	mov	r0, r7
 8007e6c:	f7fe fe61 	bl	8006b32 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8007e70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e72:	6832      	ldr	r2, [r6, #0]
 8007e74:	2014      	movs	r0, #20
 8007e76:	4293      	cmp	r3, r2
 8007e78:	fb00 8003 	mla	r0, r0, r3, r8
 8007e7c:	4639      	mov	r1, r7
 8007e7e:	bf88      	it	hi
 8007e80:	6033      	strhi	r3, [r6, #0]
 8007e82:	f7fe fe33 	bl	8006aec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007e86:	4b18      	ldr	r3, [pc, #96]	; (8007ee8 <xTaskResumeAll+0xd4>)
 8007e88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007e8a:	681b      	ldr	r3, [r3, #0]
 8007e8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e8e:	429a      	cmp	r2, r3
 8007e90:	d302      	bcc.n	8007e98 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8007e92:	4b16      	ldr	r3, [pc, #88]	; (8007eec <xTaskResumeAll+0xd8>)
 8007e94:	2201      	movs	r2, #1
 8007e96:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007e98:	682b      	ldr	r3, [r5, #0]
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d1de      	bne.n	8007e5c <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8007e9e:	b10c      	cbz	r4, 8007ea4 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8007ea0:	f7ff fdd6 	bl	8007a50 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8007ea4:	4d12      	ldr	r5, [pc, #72]	; (8007ef0 <xTaskResumeAll+0xdc>)
 8007ea6:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8007ea8:	b144      	cbz	r4, 8007ebc <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8007eaa:	4e10      	ldr	r6, [pc, #64]	; (8007eec <xTaskResumeAll+0xd8>)
 8007eac:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8007eae:	f7ff ff21 	bl	8007cf4 <xTaskIncrementTick>
 8007eb2:	b100      	cbz	r0, 8007eb6 <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8007eb4:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8007eb6:	3c01      	subs	r4, #1
 8007eb8:	d1f9      	bne.n	8007eae <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 8007eba:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8007ebc:	4b0b      	ldr	r3, [pc, #44]	; (8007eec <xTaskResumeAll+0xd8>)
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	2b00      	cmp	r3, #0
 8007ec2:	d0bc      	beq.n	8007e3e <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8007ec4:	4b0b      	ldr	r3, [pc, #44]	; (8007ef4 <xTaskResumeAll+0xe0>)
 8007ec6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007eca:	601a      	str	r2, [r3, #0]
 8007ecc:	f3bf 8f4f 	dsb	sy
 8007ed0:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8007ed4:	2401      	movs	r4, #1
 8007ed6:	e7b3      	b.n	8007e40 <xTaskResumeAll+0x2c>
 8007ed8:	20011ef0 	.word	0x20011ef0
 8007edc:	20011ee4 	.word	0x20011ee4
 8007ee0:	20011f2c 	.word	0x20011f2c
 8007ee4:	20011ef8 	.word	0x20011ef8
 8007ee8:	20011a78 	.word	0x20011a78
 8007eec:	20011f70 	.word	0x20011f70
 8007ef0:	20011eec 	.word	0x20011eec
 8007ef4:	e000ed04 	.word	0xe000ed04
 8007ef8:	20011a84 	.word	0x20011a84

08007efc <vTaskDelay>:
	{
 8007efc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8007efe:	b940      	cbnz	r0, 8007f12 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8007f00:	4b0e      	ldr	r3, [pc, #56]	; (8007f3c <vTaskDelay+0x40>)
 8007f02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f06:	601a      	str	r2, [r3, #0]
 8007f08:	f3bf 8f4f 	dsb	sy
 8007f0c:	f3bf 8f6f 	isb	sy
	}
 8007f10:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8007f12:	4b0b      	ldr	r3, [pc, #44]	; (8007f40 <vTaskDelay+0x44>)
 8007f14:	6819      	ldr	r1, [r3, #0]
 8007f16:	b141      	cbz	r1, 8007f2a <vTaskDelay+0x2e>
 8007f18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f1c:	f383 8811 	msr	BASEPRI, r3
 8007f20:	f3bf 8f6f 	isb	sy
 8007f24:	f3bf 8f4f 	dsb	sy
 8007f28:	e7fe      	b.n	8007f28 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8007f2a:	f7ff fed5 	bl	8007cd8 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8007f2e:	f7ff fdef 	bl	8007b10 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8007f32:	f7ff ff6f 	bl	8007e14 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8007f36:	2800      	cmp	r0, #0
 8007f38:	d0e2      	beq.n	8007f00 <vTaskDelay+0x4>
 8007f3a:	e7e9      	b.n	8007f10 <vTaskDelay+0x14>
 8007f3c:	e000ed04 	.word	0xe000ed04
 8007f40:	20011ef0 	.word	0x20011ef0

08007f44 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8007f44:	4b18      	ldr	r3, [pc, #96]	; (8007fa8 <vTaskSwitchContext+0x64>)
 8007f46:	681a      	ldr	r2, [r3, #0]
 8007f48:	4b18      	ldr	r3, [pc, #96]	; (8007fac <vTaskSwitchContext+0x68>)
{
 8007f4a:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8007f4c:	b112      	cbz	r2, 8007f54 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8007f4e:	2201      	movs	r2, #1
 8007f50:	601a      	str	r2, [r3, #0]
}
 8007f52:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f54:	4d16      	ldr	r5, [pc, #88]	; (8007fb0 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8007f56:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f58:	4a16      	ldr	r2, [pc, #88]	; (8007fb4 <vTaskSwitchContext+0x70>)
 8007f5a:	682b      	ldr	r3, [r5, #0]
 8007f5c:	2714      	movs	r7, #20
 8007f5e:	4616      	mov	r6, r2
 8007f60:	fb07 f103 	mul.w	r1, r7, r3
 8007f64:	1850      	adds	r0, r2, r1
 8007f66:	5854      	ldr	r4, [r2, r1]
 8007f68:	b18c      	cbz	r4, 8007f8e <vTaskSwitchContext+0x4a>
 8007f6a:	6844      	ldr	r4, [r0, #4]
 8007f6c:	3108      	adds	r1, #8
 8007f6e:	6864      	ldr	r4, [r4, #4]
 8007f70:	6044      	str	r4, [r0, #4]
 8007f72:	440a      	add	r2, r1
 8007f74:	4294      	cmp	r4, r2
 8007f76:	bf04      	itt	eq
 8007f78:	6862      	ldreq	r2, [r4, #4]
 8007f7a:	6042      	streq	r2, [r0, #4]
 8007f7c:	2214      	movs	r2, #20
 8007f7e:	fb02 6203 	mla	r2, r2, r3, r6
 8007f82:	6852      	ldr	r2, [r2, #4]
 8007f84:	68d1      	ldr	r1, [r2, #12]
 8007f86:	4a0c      	ldr	r2, [pc, #48]	; (8007fb8 <vTaskSwitchContext+0x74>)
 8007f88:	6011      	str	r1, [r2, #0]
 8007f8a:	602b      	str	r3, [r5, #0]
}
 8007f8c:	e7e1      	b.n	8007f52 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f8e:	b943      	cbnz	r3, 8007fa2 <vTaskSwitchContext+0x5e>
 8007f90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f94:	f383 8811 	msr	BASEPRI, r3
 8007f98:	f3bf 8f6f 	isb	sy
 8007f9c:	f3bf 8f4f 	dsb	sy
 8007fa0:	e7fe      	b.n	8007fa0 <vTaskSwitchContext+0x5c>
 8007fa2:	3b01      	subs	r3, #1
 8007fa4:	e7dc      	b.n	8007f60 <vTaskSwitchContext+0x1c>
 8007fa6:	bf00      	nop
 8007fa8:	20011ef0 	.word	0x20011ef0
 8007fac:	20011f70 	.word	0x20011f70
 8007fb0:	20011ef8 	.word	0x20011ef8
 8007fb4:	20011a84 	.word	0x20011a84
 8007fb8:	20011a78 	.word	0x20011a78

08007fbc <vTaskPlaceOnEventList>:
{
 8007fbc:	b510      	push	{r4, lr}
 8007fbe:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8007fc0:	b940      	cbnz	r0, 8007fd4 <vTaskPlaceOnEventList+0x18>
 8007fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fc6:	f383 8811 	msr	BASEPRI, r3
 8007fca:	f3bf 8f6f 	isb	sy
 8007fce:	f3bf 8f4f 	dsb	sy
 8007fd2:	e7fe      	b.n	8007fd2 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8007fd4:	4b05      	ldr	r3, [pc, #20]	; (8007fec <vTaskPlaceOnEventList+0x30>)
 8007fd6:	6819      	ldr	r1, [r3, #0]
 8007fd8:	3118      	adds	r1, #24
 8007fda:	f7fe fd93 	bl	8006b04 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8007fde:	4620      	mov	r0, r4
 8007fe0:	2101      	movs	r1, #1
}
 8007fe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8007fe6:	f7ff bd93 	b.w	8007b10 <prvAddCurrentTaskToDelayedList>
 8007fea:	bf00      	nop
 8007fec:	20011a78 	.word	0x20011a78

08007ff0 <vTaskPlaceOnEventListRestricted>:
	{
 8007ff0:	b538      	push	{r3, r4, r5, lr}
 8007ff2:	460d      	mov	r5, r1
 8007ff4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8007ff6:	b940      	cbnz	r0, 800800a <vTaskPlaceOnEventListRestricted+0x1a>
 8007ff8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ffc:	f383 8811 	msr	BASEPRI, r3
 8008000:	f3bf 8f6f 	isb	sy
 8008004:	f3bf 8f4f 	dsb	sy
 8008008:	e7fe      	b.n	8008008 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800800a:	4b07      	ldr	r3, [pc, #28]	; (8008028 <vTaskPlaceOnEventListRestricted+0x38>)
 800800c:	6819      	ldr	r1, [r3, #0]
 800800e:	3118      	adds	r1, #24
 8008010:	f7fe fd6c 	bl	8006aec <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008014:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008016:	4621      	mov	r1, r4
 8008018:	bf0c      	ite	eq
 800801a:	4628      	moveq	r0, r5
 800801c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008024:	f7ff bd74 	b.w	8007b10 <prvAddCurrentTaskToDelayedList>
 8008028:	20011a78 	.word	0x20011a78

0800802c <xTaskRemoveFromEventList>:
{
 800802c:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800802e:	68c3      	ldr	r3, [r0, #12]
 8008030:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008032:	b944      	cbnz	r4, 8008046 <xTaskRemoveFromEventList+0x1a>
 8008034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008038:	f383 8811 	msr	BASEPRI, r3
 800803c:	f3bf 8f6f 	isb	sy
 8008040:	f3bf 8f4f 	dsb	sy
 8008044:	e7fe      	b.n	8008044 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008046:	f104 0518 	add.w	r5, r4, #24
 800804a:	4628      	mov	r0, r5
 800804c:	f7fe fd71 	bl	8006b32 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008050:	4b10      	ldr	r3, [pc, #64]	; (8008094 <xTaskRemoveFromEventList+0x68>)
 8008052:	681b      	ldr	r3, [r3, #0]
 8008054:	b9db      	cbnz	r3, 800808e <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008056:	1d25      	adds	r5, r4, #4
 8008058:	4628      	mov	r0, r5
 800805a:	f7fe fd6a 	bl	8006b32 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800805e:	4a0e      	ldr	r2, [pc, #56]	; (8008098 <xTaskRemoveFromEventList+0x6c>)
 8008060:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008062:	6811      	ldr	r1, [r2, #0]
 8008064:	428b      	cmp	r3, r1
 8008066:	bf88      	it	hi
 8008068:	6013      	strhi	r3, [r2, #0]
 800806a:	4a0c      	ldr	r2, [pc, #48]	; (800809c <xTaskRemoveFromEventList+0x70>)
 800806c:	2014      	movs	r0, #20
 800806e:	4629      	mov	r1, r5
 8008070:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008074:	f7fe fd3a 	bl	8006aec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008078:	4b09      	ldr	r3, [pc, #36]	; (80080a0 <xTaskRemoveFromEventList+0x74>)
 800807a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800807c:	681b      	ldr	r3, [r3, #0]
 800807e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008080:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008082:	bf83      	ittte	hi
 8008084:	4b07      	ldrhi	r3, [pc, #28]	; (80080a4 <xTaskRemoveFromEventList+0x78>)
 8008086:	2001      	movhi	r0, #1
 8008088:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800808a:	2000      	movls	r0, #0
}
 800808c:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800808e:	4629      	mov	r1, r5
 8008090:	4805      	ldr	r0, [pc, #20]	; (80080a8 <xTaskRemoveFromEventList+0x7c>)
 8008092:	e7ef      	b.n	8008074 <xTaskRemoveFromEventList+0x48>
 8008094:	20011ef0 	.word	0x20011ef0
 8008098:	20011ef8 	.word	0x20011ef8
 800809c:	20011a84 	.word	0x20011a84
 80080a0:	20011a78 	.word	0x20011a78
 80080a4:	20011f70 	.word	0x20011f70
 80080a8:	20011f2c 	.word	0x20011f2c

080080ac <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80080ac:	4b03      	ldr	r3, [pc, #12]	; (80080bc <vTaskInternalSetTimeOutState+0x10>)
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80080b2:	4b03      	ldr	r3, [pc, #12]	; (80080c0 <vTaskInternalSetTimeOutState+0x14>)
 80080b4:	681b      	ldr	r3, [r3, #0]
 80080b6:	6043      	str	r3, [r0, #4]
}
 80080b8:	4770      	bx	lr
 80080ba:	bf00      	nop
 80080bc:	20011f28 	.word	0x20011f28
 80080c0:	20011f6c 	.word	0x20011f6c

080080c4 <xTaskCheckForTimeOut>:
{
 80080c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080c6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80080c8:	4605      	mov	r5, r0
 80080ca:	b940      	cbnz	r0, 80080de <xTaskCheckForTimeOut+0x1a>
 80080cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080d0:	f383 8811 	msr	BASEPRI, r3
 80080d4:	f3bf 8f6f 	isb	sy
 80080d8:	f3bf 8f4f 	dsb	sy
 80080dc:	e7fe      	b.n	80080dc <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80080de:	b941      	cbnz	r1, 80080f2 <xTaskCheckForTimeOut+0x2e>
 80080e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080e4:	f383 8811 	msr	BASEPRI, r3
 80080e8:	f3bf 8f6f 	isb	sy
 80080ec:	f3bf 8f4f 	dsb	sy
 80080f0:	e7fe      	b.n	80080f0 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80080f2:	f7fe fd97 	bl	8006c24 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80080f6:	4b0f      	ldr	r3, [pc, #60]	; (8008134 <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80080f8:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 80080fa:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80080fc:	6823      	ldr	r3, [r4, #0]
 80080fe:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008100:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 8008104:	d00d      	beq.n	8008122 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008106:	4e0c      	ldr	r6, [pc, #48]	; (8008138 <xTaskCheckForTimeOut+0x74>)
 8008108:	682f      	ldr	r7, [r5, #0]
 800810a:	6836      	ldr	r6, [r6, #0]
 800810c:	42b7      	cmp	r7, r6
 800810e:	d001      	beq.n	8008114 <xTaskCheckForTimeOut+0x50>
 8008110:	4288      	cmp	r0, r1
 8008112:	d90d      	bls.n	8008130 <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008114:	4293      	cmp	r3, r2
 8008116:	d909      	bls.n	800812c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008118:	1a9b      	subs	r3, r3, r2
 800811a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800811c:	4628      	mov	r0, r5
 800811e:	f7ff ffc5 	bl	80080ac <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008122:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008124:	f7fe fda0 	bl	8006c68 <vPortExitCritical>
}
 8008128:	4620      	mov	r0, r4
 800812a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 800812c:	2300      	movs	r3, #0
 800812e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008130:	2401      	movs	r4, #1
 8008132:	e7f7      	b.n	8008124 <xTaskCheckForTimeOut+0x60>
 8008134:	20011f6c 	.word	0x20011f6c
 8008138:	20011f28 	.word	0x20011f28

0800813c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800813c:	4b01      	ldr	r3, [pc, #4]	; (8008144 <vTaskMissedYield+0x8>)
 800813e:	2201      	movs	r2, #1
 8008140:	601a      	str	r2, [r3, #0]
}
 8008142:	4770      	bx	lr
 8008144:	20011f70 	.word	0x20011f70

08008148 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008148:	4b05      	ldr	r3, [pc, #20]	; (8008160 <xTaskGetSchedulerState+0x18>)
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	b133      	cbz	r3, 800815c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800814e:	4b05      	ldr	r3, [pc, #20]	; (8008164 <xTaskGetSchedulerState+0x1c>)
 8008150:	681b      	ldr	r3, [r3, #0]
 8008152:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008154:	bf0c      	ite	eq
 8008156:	2002      	moveq	r0, #2
 8008158:	2000      	movne	r0, #0
 800815a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800815c:	2001      	movs	r0, #1
	}
 800815e:	4770      	bx	lr
 8008160:	20011f40 	.word	0x20011f40
 8008164:	20011ef0 	.word	0x20011ef0

08008168 <xTaskPriorityInherit>:
	{
 8008168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800816a:	4604      	mov	r4, r0
 800816c:	b340      	cbz	r0, 80081c0 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800816e:	4a1b      	ldr	r2, [pc, #108]	; (80081dc <xTaskPriorityInherit+0x74>)
 8008170:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008172:	6811      	ldr	r1, [r2, #0]
 8008174:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008176:	428b      	cmp	r3, r1
 8008178:	4616      	mov	r6, r2
 800817a:	d226      	bcs.n	80081ca <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800817c:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800817e:	4d18      	ldr	r5, [pc, #96]	; (80081e0 <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008180:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008182:	bfa1      	itttt	ge
 8008184:	6832      	ldrge	r2, [r6, #0]
 8008186:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008188:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800818c:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800818e:	2214      	movs	r2, #20
 8008190:	fb02 5303 	mla	r3, r2, r3, r5
 8008194:	6942      	ldr	r2, [r0, #20]
 8008196:	429a      	cmp	r2, r3
 8008198:	d113      	bne.n	80081c2 <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800819a:	1d07      	adds	r7, r0, #4
 800819c:	4638      	mov	r0, r7
 800819e:	f7fe fcc8 	bl	8006b32 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80081a2:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80081a4:	4a0f      	ldr	r2, [pc, #60]	; (80081e4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80081a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80081a8:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80081aa:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80081ac:	2014      	movs	r0, #20
 80081ae:	428b      	cmp	r3, r1
 80081b0:	fb00 5003 	mla	r0, r0, r3, r5
 80081b4:	4639      	mov	r1, r7
 80081b6:	bf88      	it	hi
 80081b8:	6013      	strhi	r3, [r2, #0]
 80081ba:	f7fe fc97 	bl	8006aec <vListInsertEnd>
				xReturn = pdTRUE;
 80081be:	2001      	movs	r0, #1
	}
 80081c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80081c2:	6833      	ldr	r3, [r6, #0]
 80081c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081c6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80081c8:	e7f9      	b.n	80081be <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80081ca:	6813      	ldr	r3, [r2, #0]
 80081cc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80081ce:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80081d0:	42a0      	cmp	r0, r4
 80081d2:	bf2c      	ite	cs
 80081d4:	2000      	movcs	r0, #0
 80081d6:	2001      	movcc	r0, #1
 80081d8:	e7f2      	b.n	80081c0 <xTaskPriorityInherit+0x58>
 80081da:	bf00      	nop
 80081dc:	20011a78 	.word	0x20011a78
 80081e0:	20011a84 	.word	0x20011a84
 80081e4:	20011ef8 	.word	0x20011ef8

080081e8 <xTaskPriorityDisinherit>:
	{
 80081e8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80081ea:	b908      	cbnz	r0, 80081f0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 80081ec:	2000      	movs	r0, #0
	}
 80081ee:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80081f0:	4b1b      	ldr	r3, [pc, #108]	; (8008260 <xTaskPriorityDisinherit+0x78>)
 80081f2:	681c      	ldr	r4, [r3, #0]
 80081f4:	4284      	cmp	r4, r0
 80081f6:	d008      	beq.n	800820a <xTaskPriorityDisinherit+0x22>
 80081f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081fc:	f383 8811 	msr	BASEPRI, r3
 8008200:	f3bf 8f6f 	isb	sy
 8008204:	f3bf 8f4f 	dsb	sy
 8008208:	e7fe      	b.n	8008208 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800820a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800820c:	b943      	cbnz	r3, 8008220 <xTaskPriorityDisinherit+0x38>
 800820e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008212:	f383 8811 	msr	BASEPRI, r3
 8008216:	f3bf 8f6f 	isb	sy
 800821a:	f3bf 8f4f 	dsb	sy
 800821e:	e7fe      	b.n	800821e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008220:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008222:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008224:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008226:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008228:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800822a:	d0df      	beq.n	80081ec <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800822c:	2b00      	cmp	r3, #0
 800822e:	d1dd      	bne.n	80081ec <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008230:	1d25      	adds	r5, r4, #4
 8008232:	4628      	mov	r0, r5
 8008234:	f7fe fc7d 	bl	8006b32 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008238:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800823a:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800823c:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008240:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008242:	4a08      	ldr	r2, [pc, #32]	; (8008264 <xTaskPriorityDisinherit+0x7c>)
 8008244:	6811      	ldr	r1, [r2, #0]
 8008246:	428b      	cmp	r3, r1
 8008248:	bf88      	it	hi
 800824a:	6013      	strhi	r3, [r2, #0]
 800824c:	4a06      	ldr	r2, [pc, #24]	; (8008268 <xTaskPriorityDisinherit+0x80>)
 800824e:	2014      	movs	r0, #20
 8008250:	fb00 2003 	mla	r0, r0, r3, r2
 8008254:	4629      	mov	r1, r5
 8008256:	f7fe fc49 	bl	8006aec <vListInsertEnd>
					xReturn = pdTRUE;
 800825a:	2001      	movs	r0, #1
		return xReturn;
 800825c:	e7c7      	b.n	80081ee <xTaskPriorityDisinherit+0x6>
 800825e:	bf00      	nop
 8008260:	20011a78 	.word	0x20011a78
 8008264:	20011ef8 	.word	0x20011ef8
 8008268:	20011a84 	.word	0x20011a84

0800826c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800826c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800826e:	4604      	mov	r4, r0
 8008270:	2800      	cmp	r0, #0
 8008272:	d041      	beq.n	80082f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8008274:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008276:	b942      	cbnz	r2, 800828a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800827c:	f383 8811 	msr	BASEPRI, r3
 8008280:	f3bf 8f6f 	isb	sy
 8008284:	f3bf 8f4f 	dsb	sy
 8008288:	e7fe      	b.n	8008288 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 800828a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800828c:	4299      	cmp	r1, r3
 800828e:	bf38      	it	cc
 8008290:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008292:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008294:	428b      	cmp	r3, r1
 8008296:	d02f      	beq.n	80082f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008298:	2a01      	cmp	r2, #1
 800829a:	d12d      	bne.n	80082f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800829c:	4a17      	ldr	r2, [pc, #92]	; (80082fc <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800829e:	6812      	ldr	r2, [r2, #0]
 80082a0:	4282      	cmp	r2, r0
 80082a2:	d108      	bne.n	80082b6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80082a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082a8:	f383 8811 	msr	BASEPRI, r3
 80082ac:	f3bf 8f6f 	isb	sy
 80082b0:	f3bf 8f4f 	dsb	sy
 80082b4:	e7fe      	b.n	80082b4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80082b6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80082b8:	4d11      	ldr	r5, [pc, #68]	; (8008300 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80082ba:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80082bc:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80082be:	f04f 0214 	mov.w	r2, #20
 80082c2:	fb02 5303 	mla	r3, r2, r3, r5
 80082c6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80082c8:	bfa4      	itt	ge
 80082ca:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80082ce:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80082d0:	429a      	cmp	r2, r3
 80082d2:	d111      	bne.n	80082f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80082d4:	1d06      	adds	r6, r0, #4
 80082d6:	4630      	mov	r0, r6
 80082d8:	f7fe fc2b 	bl	8006b32 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80082dc:	4a09      	ldr	r2, [pc, #36]	; (8008304 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80082de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80082e0:	6811      	ldr	r1, [r2, #0]
 80082e2:	2014      	movs	r0, #20
 80082e4:	428b      	cmp	r3, r1
 80082e6:	fb00 5003 	mla	r0, r0, r3, r5
 80082ea:	4631      	mov	r1, r6
	}
 80082ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80082f0:	bf88      	it	hi
 80082f2:	6013      	strhi	r3, [r2, #0]
 80082f4:	f7fe bbfa 	b.w	8006aec <vListInsertEnd>
	}
 80082f8:	bd70      	pop	{r4, r5, r6, pc}
 80082fa:	bf00      	nop
 80082fc:	20011a78 	.word	0x20011a78
 8008300:	20011a84 	.word	0x20011a84
 8008304:	20011ef8 	.word	0x20011ef8

08008308 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008308:	4b04      	ldr	r3, [pc, #16]	; (800831c <pvTaskIncrementMutexHeldCount+0x14>)
 800830a:	681a      	ldr	r2, [r3, #0]
 800830c:	b11a      	cbz	r2, 8008316 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800830e:	6819      	ldr	r1, [r3, #0]
 8008310:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008312:	3201      	adds	r2, #1
 8008314:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008316:	6818      	ldr	r0, [r3, #0]
	}
 8008318:	4770      	bx	lr
 800831a:	bf00      	nop
 800831c:	20011a78 	.word	0x20011a78

08008320 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008320:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008322:	4c11      	ldr	r4, [pc, #68]	; (8008368 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008324:	f7fe fc7e 	bl	8006c24 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008328:	6825      	ldr	r5, [r4, #0]
 800832a:	b9bd      	cbnz	r5, 800835c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800832c:	4f0f      	ldr	r7, [pc, #60]	; (800836c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800832e:	4e10      	ldr	r6, [pc, #64]	; (8008370 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008330:	4638      	mov	r0, r7
 8008332:	f7fe fbcd 	bl	8006ad0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008336:	4630      	mov	r0, r6
 8008338:	f7fe fbca 	bl	8006ad0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800833c:	4b0d      	ldr	r3, [pc, #52]	; (8008374 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800833e:	4a0e      	ldr	r2, [pc, #56]	; (8008378 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008340:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008342:	4b0e      	ldr	r3, [pc, #56]	; (800837c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008344:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008346:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008348:	200a      	movs	r0, #10
 800834a:	9500      	str	r5, [sp, #0]
 800834c:	4b0c      	ldr	r3, [pc, #48]	; (8008380 <prvCheckForValidListAndQueue+0x60>)
 800834e:	f7fe fe81 	bl	8007054 <xQueueGenericCreateStatic>
 8008352:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008354:	b110      	cbz	r0, 800835c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008356:	490b      	ldr	r1, [pc, #44]	; (8008384 <prvCheckForValidListAndQueue+0x64>)
 8008358:	f7ff fa4c 	bl	80077f4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800835c:	b003      	add	sp, #12
 800835e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008362:	f7fe bc81 	b.w	8006c68 <vPortExitCritical>
 8008366:	bf00      	nop
 8008368:	20012098 	.word	0x20012098
 800836c:	2001201c 	.word	0x2001201c
 8008370:	20012030 	.word	0x20012030
 8008374:	20011f74 	.word	0x20011f74
 8008378:	20011f7c 	.word	0x20011f7c
 800837c:	20011f78 	.word	0x20011f78
 8008380:	20012048 	.word	0x20012048
 8008384:	0801c445 	.word	0x0801c445

08008388 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008388:	4291      	cmp	r1, r2
{
 800838a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800838c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800838e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008390:	d80a      	bhi.n	80083a8 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008392:	1ad2      	subs	r2, r2, r3
 8008394:	6983      	ldr	r3, [r0, #24]
 8008396:	429a      	cmp	r2, r3
 8008398:	d20d      	bcs.n	80083b6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800839a:	4b08      	ldr	r3, [pc, #32]	; (80083bc <prvInsertTimerInActiveList+0x34>)
 800839c:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800839e:	6818      	ldr	r0, [r3, #0]
 80083a0:	f7fe fbb0 	bl	8006b04 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80083a4:	2000      	movs	r0, #0
}
 80083a6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80083a8:	429a      	cmp	r2, r3
 80083aa:	d201      	bcs.n	80083b0 <prvInsertTimerInActiveList+0x28>
 80083ac:	4299      	cmp	r1, r3
 80083ae:	d202      	bcs.n	80083b6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80083b0:	1d01      	adds	r1, r0, #4
 80083b2:	4b03      	ldr	r3, [pc, #12]	; (80083c0 <prvInsertTimerInActiveList+0x38>)
 80083b4:	e7f3      	b.n	800839e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80083b6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80083b8:	e7f5      	b.n	80083a6 <prvInsertTimerInActiveList+0x1e>
 80083ba:	bf00      	nop
 80083bc:	20011f78 	.word	0x20011f78
 80083c0:	20011f74 	.word	0x20011f74

080083c4 <xTimerCreateTimerTask>:
{
 80083c4:	b510      	push	{r4, lr}
 80083c6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80083c8:	f7ff ffaa 	bl	8008320 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80083cc:	4b12      	ldr	r3, [pc, #72]	; (8008418 <xTimerCreateTimerTask+0x54>)
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	b1b3      	cbz	r3, 8008400 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80083d2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80083d4:	aa07      	add	r2, sp, #28
 80083d6:	a906      	add	r1, sp, #24
 80083d8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80083da:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80083de:	f7fe fa83 	bl	80068e8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80083e2:	9b05      	ldr	r3, [sp, #20]
 80083e4:	9302      	str	r3, [sp, #8]
 80083e6:	9b06      	ldr	r3, [sp, #24]
 80083e8:	9301      	str	r3, [sp, #4]
 80083ea:	2302      	movs	r3, #2
 80083ec:	9300      	str	r3, [sp, #0]
 80083ee:	9a07      	ldr	r2, [sp, #28]
 80083f0:	490a      	ldr	r1, [pc, #40]	; (800841c <xTimerCreateTimerTask+0x58>)
 80083f2:	480b      	ldr	r0, [pc, #44]	; (8008420 <xTimerCreateTimerTask+0x5c>)
 80083f4:	4623      	mov	r3, r4
 80083f6:	f7ff fbc5 	bl	8007b84 <xTaskCreateStatic>
 80083fa:	4b0a      	ldr	r3, [pc, #40]	; (8008424 <xTimerCreateTimerTask+0x60>)
 80083fc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80083fe:	b940      	cbnz	r0, 8008412 <xTimerCreateTimerTask+0x4e>
 8008400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008404:	f383 8811 	msr	BASEPRI, r3
 8008408:	f3bf 8f6f 	isb	sy
 800840c:	f3bf 8f4f 	dsb	sy
 8008410:	e7fe      	b.n	8008410 <xTimerCreateTimerTask+0x4c>
}
 8008412:	2001      	movs	r0, #1
 8008414:	b008      	add	sp, #32
 8008416:	bd10      	pop	{r4, pc}
 8008418:	20012098 	.word	0x20012098
 800841c:	0801c44a 	.word	0x0801c44a
 8008420:	08008501 	.word	0x08008501
 8008424:	2001209c 	.word	0x2001209c

08008428 <xTimerGenericCommand>:
{
 8008428:	b530      	push	{r4, r5, lr}
 800842a:	4615      	mov	r5, r2
 800842c:	b085      	sub	sp, #20
 800842e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008430:	4603      	mov	r3, r0
 8008432:	b940      	cbnz	r0, 8008446 <xTimerGenericCommand+0x1e>
 8008434:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008438:	f383 8811 	msr	BASEPRI, r3
 800843c:	f3bf 8f6f 	isb	sy
 8008440:	f3bf 8f4f 	dsb	sy
 8008444:	e7fe      	b.n	8008444 <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 8008446:	4c0d      	ldr	r4, [pc, #52]	; (800847c <xTimerGenericCommand+0x54>)
 8008448:	6820      	ldr	r0, [r4, #0]
 800844a:	b180      	cbz	r0, 800846e <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800844c:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800844e:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008452:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008454:	dc0d      	bgt.n	8008472 <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008456:	f7ff fe77 	bl	8008148 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800845a:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800845c:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800845e:	bf08      	it	eq
 8008460:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008462:	6820      	ldr	r0, [r4, #0]
 8008464:	bf18      	it	ne
 8008466:	461a      	movne	r2, r3
 8008468:	4669      	mov	r1, sp
 800846a:	f7fe fea9 	bl	80071c0 <xQueueGenericSend>
}
 800846e:	b005      	add	sp, #20
 8008470:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008472:	2300      	movs	r3, #0
 8008474:	4669      	mov	r1, sp
 8008476:	f7fe ff55 	bl	8007324 <xQueueGenericSendFromISR>
 800847a:	e7f8      	b.n	800846e <xTimerGenericCommand+0x46>
 800847c:	20012098 	.word	0x20012098

08008480 <prvSwitchTimerLists>:
{
 8008480:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008484:	4d1c      	ldr	r5, [pc, #112]	; (80084f8 <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008486:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800848a:	682b      	ldr	r3, [r5, #0]
 800848c:	681a      	ldr	r2, [r3, #0]
 800848e:	b932      	cbnz	r2, 800849e <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8008490:	4a1a      	ldr	r2, [pc, #104]	; (80084fc <prvSwitchTimerLists+0x7c>)
 8008492:	6811      	ldr	r1, [r2, #0]
 8008494:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008496:	6013      	str	r3, [r2, #0]
}
 8008498:	b002      	add	sp, #8
 800849a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800849e:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084a0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80084a2:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80084a4:	1d27      	adds	r7, r4, #4
 80084a6:	4638      	mov	r0, r7
 80084a8:	f7fe fb43 	bl	8006b32 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80084ac:	6a23      	ldr	r3, [r4, #32]
 80084ae:	4620      	mov	r0, r4
 80084b0:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80084b2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80084b6:	075b      	lsls	r3, r3, #29
 80084b8:	d5e7      	bpl.n	800848a <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80084ba:	69a3      	ldr	r3, [r4, #24]
 80084bc:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80084be:	429e      	cmp	r6, r3
 80084c0:	d206      	bcs.n	80084d0 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80084c2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80084c4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80084c6:	4639      	mov	r1, r7
 80084c8:	6828      	ldr	r0, [r5, #0]
 80084ca:	f7fe fb1b 	bl	8006b04 <vListInsert>
 80084ce:	e7dc      	b.n	800848a <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80084d0:	2300      	movs	r3, #0
 80084d2:	f8cd 8000 	str.w	r8, [sp]
 80084d6:	4632      	mov	r2, r6
 80084d8:	4619      	mov	r1, r3
 80084da:	4620      	mov	r0, r4
 80084dc:	f7ff ffa4 	bl	8008428 <xTimerGenericCommand>
				configASSERT( xResult );
 80084e0:	2800      	cmp	r0, #0
 80084e2:	d1d2      	bne.n	800848a <prvSwitchTimerLists+0xa>
 80084e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084e8:	f383 8811 	msr	BASEPRI, r3
 80084ec:	f3bf 8f6f 	isb	sy
 80084f0:	f3bf 8f4f 	dsb	sy
 80084f4:	e7fe      	b.n	80084f4 <prvSwitchTimerLists+0x74>
 80084f6:	bf00      	nop
 80084f8:	20011f74 	.word	0x20011f74
 80084fc:	20011f78 	.word	0x20011f78

08008500 <prvTimerTask>:
{
 8008500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008504:	4d81      	ldr	r5, [pc, #516]	; (800870c <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 8008506:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8008718 <prvTimerTask+0x218>
{
 800850a:	b087      	sub	sp, #28
 800850c:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800850e:	682a      	ldr	r2, [r5, #0]
 8008510:	6813      	ldr	r3, [r2, #0]
 8008512:	b353      	cbz	r3, 800856a <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008514:	68d3      	ldr	r3, [r2, #12]
 8008516:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800851a:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800851c:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 800871c <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8008520:	f7ff fbda 	bl	8007cd8 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8008524:	f7ff fbe0 	bl	8007ce8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008528:	f8db 3000 	ldr.w	r3, [fp]
 800852c:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800852e:	4682      	mov	sl, r0
 8008530:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 8008532:	d31d      	bcc.n	8008570 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8008534:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008538:	b32c      	cbz	r4, 8008586 <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800853a:	4b75      	ldr	r3, [pc, #468]	; (8008710 <prvTimerTask+0x210>)
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	681a      	ldr	r2, [r3, #0]
 8008540:	fab2 f282 	clz	r2, r2
 8008544:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008546:	4b73      	ldr	r3, [pc, #460]	; (8008714 <prvTimerTask+0x214>)
 8008548:	eba9 010a 	sub.w	r1, r9, sl
 800854c:	6818      	ldr	r0, [r3, #0]
 800854e:	f7ff f98e 	bl	800786e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008552:	f7ff fc5f 	bl	8007e14 <xTaskResumeAll>
 8008556:	b988      	cbnz	r0, 800857c <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8008558:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800855c:	f8c8 3000 	str.w	r3, [r8]
 8008560:	f3bf 8f4f 	dsb	sy
 8008564:	f3bf 8f6f 	isb	sy
 8008568:	e008      	b.n	800857c <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800856a:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 800856c:	4699      	mov	r9, r3
 800856e:	e7d5      	b.n	800851c <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8008570:	f7ff ff86 	bl	8008480 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008574:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8008578:	f7ff fc4c 	bl	8007e14 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800857c:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8008714 <prvTimerTask+0x214>
 8008580:	f04f 0a00 	mov.w	sl, #0
 8008584:	e07d      	b.n	8008682 <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008586:	4581      	cmp	r9, r0
 8008588:	d830      	bhi.n	80085ec <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 800858a:	f7ff fc43 	bl	8007e14 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800858e:	683b      	ldr	r3, [r7, #0]
 8008590:	68db      	ldr	r3, [r3, #12]
 8008592:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008596:	f10b 0004 	add.w	r0, fp, #4
 800859a:	f7fe faca 	bl	8006b32 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800859e:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 80085a2:	0758      	lsls	r0, r3, #29
 80085a4:	d519      	bpl.n	80085da <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80085a6:	f8db 1018 	ldr.w	r1, [fp, #24]
 80085aa:	464b      	mov	r3, r9
 80085ac:	4652      	mov	r2, sl
 80085ae:	4449      	add	r1, r9
 80085b0:	4658      	mov	r0, fp
 80085b2:	f7ff fee9 	bl	8008388 <prvInsertTimerInActiveList>
 80085b6:	b1a0      	cbz	r0, 80085e2 <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80085b8:	9400      	str	r4, [sp, #0]
 80085ba:	4623      	mov	r3, r4
 80085bc:	464a      	mov	r2, r9
 80085be:	4621      	mov	r1, r4
 80085c0:	4658      	mov	r0, fp
 80085c2:	f7ff ff31 	bl	8008428 <xTimerGenericCommand>
			configASSERT( xResult );
 80085c6:	b960      	cbnz	r0, 80085e2 <prvTimerTask+0xe2>
 80085c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085cc:	f383 8811 	msr	BASEPRI, r3
 80085d0:	f3bf 8f6f 	isb	sy
 80085d4:	f3bf 8f4f 	dsb	sy
 80085d8:	e7fe      	b.n	80085d8 <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80085da:	f023 0301 	bic.w	r3, r3, #1
 80085de:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80085e2:	f8db 3020 	ldr.w	r3, [fp, #32]
 80085e6:	4658      	mov	r0, fp
 80085e8:	4798      	blx	r3
 80085ea:	e7c7      	b.n	800857c <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80085ec:	4622      	mov	r2, r4
 80085ee:	e7aa      	b.n	8008546 <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80085f0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80085f4:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80085f6:	f043 0301 	orr.w	r3, r3, #1
 80085fa:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80085fe:	9b03      	ldr	r3, [sp, #12]
 8008600:	465a      	mov	r2, fp
 8008602:	4419      	add	r1, r3
 8008604:	4620      	mov	r0, r4
 8008606:	f7ff febf 	bl	8008388 <prvInsertTimerInActiveList>
 800860a:	2800      	cmp	r0, #0
 800860c:	d039      	beq.n	8008682 <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800860e:	6a23      	ldr	r3, [r4, #32]
 8008610:	4620      	mov	r0, r4
 8008612:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008614:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008618:	0759      	lsls	r1, r3, #29
 800861a:	d532      	bpl.n	8008682 <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800861c:	69a2      	ldr	r2, [r4, #24]
 800861e:	9903      	ldr	r1, [sp, #12]
 8008620:	f8cd a000 	str.w	sl, [sp]
 8008624:	2300      	movs	r3, #0
 8008626:	440a      	add	r2, r1
 8008628:	4620      	mov	r0, r4
 800862a:	4619      	mov	r1, r3
 800862c:	f7ff fefc 	bl	8008428 <xTimerGenericCommand>
							configASSERT( xResult );
 8008630:	bb38      	cbnz	r0, 8008682 <prvTimerTask+0x182>
 8008632:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008636:	f383 8811 	msr	BASEPRI, r3
 800863a:	f3bf 8f6f 	isb	sy
 800863e:	f3bf 8f4f 	dsb	sy
 8008642:	e7fe      	b.n	8008642 <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008644:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008648:	f023 0301 	bic.w	r3, r3, #1
 800864c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008650:	e017      	b.n	8008682 <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008652:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008656:	9903      	ldr	r1, [sp, #12]
 8008658:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800865a:	f043 0301 	orr.w	r3, r3, #1
 800865e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008662:	b941      	cbnz	r1, 8008676 <prvTimerTask+0x176>
 8008664:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008668:	f383 8811 	msr	BASEPRI, r3
 800866c:	f3bf 8f6f 	isb	sy
 8008670:	f3bf 8f4f 	dsb	sy
 8008674:	e7fe      	b.n	8008674 <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008676:	465b      	mov	r3, fp
 8008678:	465a      	mov	r2, fp
 800867a:	4459      	add	r1, fp
 800867c:	4620      	mov	r0, r4
 800867e:	f7ff fe83 	bl	8008388 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008682:	2200      	movs	r2, #0
 8008684:	a902      	add	r1, sp, #8
 8008686:	f8d9 0000 	ldr.w	r0, [r9]
 800868a:	f7fe ff01 	bl	8007490 <xQueueReceive>
 800868e:	2800      	cmp	r0, #0
 8008690:	f43f af3d 	beq.w	800850e <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008694:	9b02      	ldr	r3, [sp, #8]
 8008696:	2b00      	cmp	r3, #0
 8008698:	da03      	bge.n	80086a2 <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800869a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800869e:	9b03      	ldr	r3, [sp, #12]
 80086a0:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80086a2:	9b02      	ldr	r3, [sp, #8]
 80086a4:	2b00      	cmp	r3, #0
 80086a6:	dbec      	blt.n	8008682 <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80086a8:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80086aa:	6963      	ldr	r3, [r4, #20]
 80086ac:	b113      	cbz	r3, 80086b4 <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80086ae:	1d20      	adds	r0, r4, #4
 80086b0:	f7fe fa3f 	bl	8006b32 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80086b4:	f7ff fb18 	bl	8007ce8 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80086b8:	6833      	ldr	r3, [r6, #0]
 80086ba:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80086bc:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 80086be:	d201      	bcs.n	80086c4 <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 80086c0:	f7ff fede 	bl	8008480 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 80086c4:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 80086c6:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 80086ca:	2b09      	cmp	r3, #9
 80086cc:	d8d9      	bhi.n	8008682 <prvTimerTask+0x182>
 80086ce:	a201      	add	r2, pc, #4	; (adr r2, 80086d4 <prvTimerTask+0x1d4>)
 80086d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80086d4:	080085f1 	.word	0x080085f1
 80086d8:	080085f1 	.word	0x080085f1
 80086dc:	080085f1 	.word	0x080085f1
 80086e0:	08008645 	.word	0x08008645
 80086e4:	08008653 	.word	0x08008653
 80086e8:	080086fd 	.word	0x080086fd
 80086ec:	080085f1 	.word	0x080085f1
 80086f0:	080085f1 	.word	0x080085f1
 80086f4:	08008645 	.word	0x08008645
 80086f8:	08008653 	.word	0x08008653
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80086fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008700:	079a      	lsls	r2, r3, #30
 8008702:	d4a1      	bmi.n	8008648 <prvTimerTask+0x148>
							vPortFree( pxTimer );
 8008704:	4620      	mov	r0, r4
 8008706:	f7fe f9ab 	bl	8006a60 <vPortFree>
 800870a:	e7ba      	b.n	8008682 <prvTimerTask+0x182>
 800870c:	20011f74 	.word	0x20011f74
 8008710:	20011f78 	.word	0x20011f78
 8008714:	20012098 	.word	0x20012098
 8008718:	e000ed04 	.word	0xe000ed04
 800871c:	20012044 	.word	0x20012044

08008720 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008720:	8880      	ldrh	r0, [r0, #4]
 8008722:	4770      	bx	lr

08008724 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008724:	2300      	movs	r3, #0
 8008726:	8083      	strh	r3, [r0, #4]
 8008728:	4770      	bx	lr
	...

0800872c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800872c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800872e:	6803      	ldr	r3, [r0, #0]
 8008730:	4605      	mov	r5, r0
 8008732:	460e      	mov	r6, r1
 8008734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008736:	2100      	movs	r1, #0
 8008738:	4798      	blx	r3
 800873a:	682b      	ldr	r3, [r5, #0]
 800873c:	4604      	mov	r4, r0
 800873e:	6a1b      	ldr	r3, [r3, #32]
 8008740:	4628      	mov	r0, r5
 8008742:	4798      	blx	r3
 8008744:	88ab      	ldrh	r3, [r5, #4]
 8008746:	1b34      	subs	r4, r6, r4
 8008748:	b2a4      	uxth	r4, r4
 800874a:	fbb4 f4f0 	udiv	r4, r4, r0
 800874e:	42a3      	cmp	r3, r4
 8008750:	d805      	bhi.n	800875e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008752:	4b0e      	ldr	r3, [pc, #56]	; (800878c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008754:	4a0e      	ldr	r2, [pc, #56]	; (8008790 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008756:	2120      	movs	r1, #32
 8008758:	480e      	ldr	r0, [pc, #56]	; (8008794 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800875a:	f011 fe0b 	bl	801a374 <__assert_func>
 800875e:	682b      	ldr	r3, [r5, #0]
 8008760:	2100      	movs	r1, #0
 8008762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008764:	4628      	mov	r0, r5
 8008766:	4798      	blx	r3
 8008768:	682b      	ldr	r3, [r5, #0]
 800876a:	4607      	mov	r7, r0
 800876c:	6a1b      	ldr	r3, [r3, #32]
 800876e:	4628      	mov	r0, r5
 8008770:	4798      	blx	r3
 8008772:	1bf3      	subs	r3, r6, r7
 8008774:	b29b      	uxth	r3, r3
 8008776:	fbb3 f2f0 	udiv	r2, r3, r0
 800877a:	fb02 3010 	mls	r0, r2, r0, r3
 800877e:	b118      	cbz	r0, 8008788 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008780:	4b05      	ldr	r3, [pc, #20]	; (8008798 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008782:	4a03      	ldr	r2, [pc, #12]	; (8008790 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008784:	2121      	movs	r1, #33	; 0x21
 8008786:	e7e7      	b.n	8008758 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008788:	4620      	mov	r0, r4
 800878a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800878c:	0801c452 	.word	0x0801c452
 8008790:	0801c5be 	.word	0x0801c5be
 8008794:	0801c467 	.word	0x0801c467
 8008798:	0801c495 	.word	0x0801c495

0800879c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800879c:	b538      	push	{r3, r4, r5, lr}
 800879e:	6803      	ldr	r3, [r0, #0]
 80087a0:	6a1b      	ldr	r3, [r3, #32]
 80087a2:	460d      	mov	r5, r1
 80087a4:	4604      	mov	r4, r0
 80087a6:	4798      	blx	r3
 80087a8:	4285      	cmp	r5, r0
 80087aa:	d905      	bls.n	80087b8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 80087ac:	4b0c      	ldr	r3, [pc, #48]	; (80087e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 80087ae:	4a0d      	ldr	r2, [pc, #52]	; (80087e4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80087b0:	2132      	movs	r1, #50	; 0x32
 80087b2:	480d      	ldr	r0, [pc, #52]	; (80087e8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 80087b4:	f011 fdde 	bl	801a374 <__assert_func>
 80087b8:	6823      	ldr	r3, [r4, #0]
 80087ba:	88a5      	ldrh	r5, [r4, #4]
 80087bc:	69db      	ldr	r3, [r3, #28]
 80087be:	4620      	mov	r0, r4
 80087c0:	4798      	blx	r3
 80087c2:	4285      	cmp	r5, r0
 80087c4:	d303      	bcc.n	80087ce <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 80087c6:	4b09      	ldr	r3, [pc, #36]	; (80087ec <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80087c8:	4a06      	ldr	r2, [pc, #24]	; (80087e4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80087ca:	2133      	movs	r1, #51	; 0x33
 80087cc:	e7f1      	b.n	80087b2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80087ce:	6823      	ldr	r3, [r4, #0]
 80087d0:	88a1      	ldrh	r1, [r4, #4]
 80087d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087d4:	4620      	mov	r0, r4
 80087d6:	4798      	blx	r3
 80087d8:	88a3      	ldrh	r3, [r4, #4]
 80087da:	3301      	adds	r3, #1
 80087dc:	80a3      	strh	r3, [r4, #4]
 80087de:	bd38      	pop	{r3, r4, r5, pc}
 80087e0:	0801c50f 	.word	0x0801c50f
 80087e4:	0801c601 	.word	0x0801c601
 80087e8:	0801c467 	.word	0x0801c467
 80087ec:	0801c526 	.word	0x0801c526

080087f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80087f0:	b570      	push	{r4, r5, r6, lr}
 80087f2:	6803      	ldr	r3, [r0, #0]
 80087f4:	6a1b      	ldr	r3, [r3, #32]
 80087f6:	4616      	mov	r6, r2
 80087f8:	4604      	mov	r4, r0
 80087fa:	460d      	mov	r5, r1
 80087fc:	4798      	blx	r3
 80087fe:	4286      	cmp	r6, r0
 8008800:	d905      	bls.n	800880e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008802:	4b06      	ldr	r3, [pc, #24]	; (800881c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008804:	4a06      	ldr	r2, [pc, #24]	; (8008820 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008806:	4807      	ldr	r0, [pc, #28]	; (8008824 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008808:	213c      	movs	r1, #60	; 0x3c
 800880a:	f011 fdb3 	bl	801a374 <__assert_func>
 800880e:	6823      	ldr	r3, [r4, #0]
 8008810:	4629      	mov	r1, r5
 8008812:	4620      	mov	r0, r4
 8008814:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008816:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800881a:	4718      	bx	r3
 800881c:	0801c50f 	.word	0x0801c50f
 8008820:	0801c574 	.word	0x0801c574
 8008824:	0801c467 	.word	0x0801c467

08008828 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008828:	4770      	bx	lr
	...

0800882c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800882c:	4a02      	ldr	r2, [pc, #8]	; (8008838 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800882e:	6002      	str	r2, [r0, #0]
 8008830:	2200      	movs	r2, #0
 8008832:	8082      	strh	r2, [r0, #4]
 8008834:	4770      	bx	lr
 8008836:	bf00      	nop
 8008838:	0801c548 	.word	0x0801c548

0800883c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800883c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800883e:	2000      	movs	r0, #0
 8008840:	b12b      	cbz	r3, 800884e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008842:	b920      	cbnz	r0, 800884e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008844:	1a5a      	subs	r2, r3, r1
 8008846:	4250      	negs	r0, r2
 8008848:	4150      	adcs	r0, r2
 800884a:	699b      	ldr	r3, [r3, #24]
 800884c:	e7f8      	b.n	8008840 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800884e:	4770      	bx	lr

08008850 <_ZN8touchgfx9Container9removeAllEv>:
 8008850:	2200      	movs	r2, #0
 8008852:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008854:	b123      	cbz	r3, 8008860 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008856:	6999      	ldr	r1, [r3, #24]
 8008858:	6281      	str	r1, [r0, #40]	; 0x28
 800885a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800885e:	e7f8      	b.n	8008852 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008860:	4770      	bx	lr

08008862 <_ZN8touchgfx9Container6unlinkEv>:
 8008862:	2300      	movs	r3, #0
 8008864:	6283      	str	r3, [r0, #40]	; 0x28
 8008866:	4770      	bx	lr

08008868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800886c:	461f      	mov	r7, r3
 800886e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008872:	460d      	mov	r5, r1
 8008874:	4616      	mov	r6, r2
 8008876:	b103      	cbz	r3, 800887a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008878:	6038      	str	r0, [r7, #0]
 800887a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800887c:	b314      	cbz	r4, 80088c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800887e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008882:	b1eb      	cbz	r3, 80088c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008884:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008888:	428d      	cmp	r5, r1
 800888a:	db19      	blt.n	80088c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800888c:	8923      	ldrh	r3, [r4, #8]
 800888e:	b289      	uxth	r1, r1
 8008890:	440b      	add	r3, r1
 8008892:	b21b      	sxth	r3, r3
 8008894:	429d      	cmp	r5, r3
 8008896:	da13      	bge.n	80088c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008898:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800889c:	4296      	cmp	r6, r2
 800889e:	db0f      	blt.n	80088c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80088a0:	8963      	ldrh	r3, [r4, #10]
 80088a2:	b292      	uxth	r2, r2
 80088a4:	4413      	add	r3, r2
 80088a6:	b21b      	sxth	r3, r3
 80088a8:	429e      	cmp	r6, r3
 80088aa:	da09      	bge.n	80088c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80088ac:	6823      	ldr	r3, [r4, #0]
 80088ae:	1ab2      	subs	r2, r6, r2
 80088b0:	1a69      	subs	r1, r5, r1
 80088b2:	f8d3 801c 	ldr.w	r8, [r3, #28]
 80088b6:	b212      	sxth	r2, r2
 80088b8:	463b      	mov	r3, r7
 80088ba:	b209      	sxth	r1, r1
 80088bc:	4620      	mov	r0, r4
 80088be:	47c0      	blx	r8
 80088c0:	69a4      	ldr	r4, [r4, #24]
 80088c2:	e7db      	b.n	800887c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80088c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080088c8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80088c8:	2200      	movs	r2, #0
 80088ca:	8002      	strh	r2, [r0, #0]
 80088cc:	8042      	strh	r2, [r0, #2]
 80088ce:	8082      	strh	r2, [r0, #4]
 80088d0:	80c2      	strh	r2, [r0, #6]
 80088d2:	4770      	bx	lr

080088d4 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80088d4:	b570      	push	{r4, r5, r6, lr}
 80088d6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80088d8:	460d      	mov	r5, r1
 80088da:	4616      	mov	r6, r2
 80088dc:	b13c      	cbz	r4, 80088ee <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80088de:	6823      	ldr	r3, [r4, #0]
 80088e0:	4620      	mov	r0, r4
 80088e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80088e4:	4632      	mov	r2, r6
 80088e6:	4629      	mov	r1, r5
 80088e8:	4798      	blx	r3
 80088ea:	69a4      	ldr	r4, [r4, #24]
 80088ec:	e7f6      	b.n	80088dc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80088ee:	bd70      	pop	{r4, r5, r6, pc}

080088f0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80088f0:	b538      	push	{r3, r4, r5, lr}
 80088f2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80088f4:	460d      	mov	r5, r1
 80088f6:	b134      	cbz	r4, 8008906 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80088f8:	682b      	ldr	r3, [r5, #0]
 80088fa:	4621      	mov	r1, r4
 80088fc:	689b      	ldr	r3, [r3, #8]
 80088fe:	4628      	mov	r0, r5
 8008900:	4798      	blx	r3
 8008902:	69a4      	ldr	r4, [r4, #24]
 8008904:	e7f7      	b.n	80088f6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008906:	bd38      	pop	{r3, r4, r5, pc}

08008908 <_ZN8touchgfx9ContainerD1Ev>:
 8008908:	4770      	bx	lr

0800890a <_ZN8touchgfx9ContainerD0Ev>:
 800890a:	b510      	push	{r4, lr}
 800890c:	212c      	movs	r1, #44	; 0x2c
 800890e:	4604      	mov	r4, r0
 8008910:	f011 fd04 	bl	801a31c <_ZdlPvj>
 8008914:	4620      	mov	r0, r4
 8008916:	bd10      	pop	{r4, pc}

08008918 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008918:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800891a:	b19b      	cbz	r3, 8008944 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800891c:	428b      	cmp	r3, r1
 800891e:	d109      	bne.n	8008934 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008920:	699a      	ldr	r2, [r3, #24]
 8008922:	2100      	movs	r1, #0
 8008924:	6159      	str	r1, [r3, #20]
 8008926:	6282      	str	r2, [r0, #40]	; 0x28
 8008928:	b902      	cbnz	r2, 800892c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800892a:	4770      	bx	lr
 800892c:	6199      	str	r1, [r3, #24]
 800892e:	4770      	bx	lr
 8008930:	4613      	mov	r3, r2
 8008932:	b13a      	cbz	r2, 8008944 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008934:	699a      	ldr	r2, [r3, #24]
 8008936:	428a      	cmp	r2, r1
 8008938:	d1fa      	bne.n	8008930 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800893a:	698a      	ldr	r2, [r1, #24]
 800893c:	619a      	str	r2, [r3, #24]
 800893e:	2300      	movs	r3, #0
 8008940:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008944:	4770      	bx	lr

08008946 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008946:	b410      	push	{r4}
 8008948:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800894a:	4604      	mov	r4, r0
 800894c:	b92b      	cbnz	r3, 800895a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800894e:	6803      	ldr	r3, [r0, #0]
 8008950:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008954:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008956:	4611      	mov	r1, r2
 8008958:	4718      	bx	r3
 800895a:	b941      	cbnz	r1, 800896e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800895c:	6193      	str	r3, [r2, #24]
 800895e:	6282      	str	r2, [r0, #40]	; 0x28
 8008960:	6154      	str	r4, [r2, #20]
 8008962:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008966:	4770      	bx	lr
 8008968:	4603      	mov	r3, r0
 800896a:	2800      	cmp	r0, #0
 800896c:	d0f9      	beq.n	8008962 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800896e:	4299      	cmp	r1, r3
 8008970:	6998      	ldr	r0, [r3, #24]
 8008972:	d1f9      	bne.n	8008968 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008974:	6190      	str	r0, [r2, #24]
 8008976:	618a      	str	r2, [r1, #24]
 8008978:	e7f2      	b.n	8008960 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800897c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800897c:	4288      	cmp	r0, r1
 800897e:	b508      	push	{r3, lr}
 8008980:	d105      	bne.n	800898e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008982:	4b11      	ldr	r3, [pc, #68]	; (80089c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008984:	4a11      	ldr	r2, [pc, #68]	; (80089cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008986:	2123      	movs	r1, #35	; 0x23
 8008988:	4811      	ldr	r0, [pc, #68]	; (80089d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800898a:	f011 fcf3 	bl	801a374 <__assert_func>
 800898e:	694b      	ldr	r3, [r1, #20]
 8008990:	b11b      	cbz	r3, 800899a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008992:	4b10      	ldr	r3, [pc, #64]	; (80089d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008994:	4a0d      	ldr	r2, [pc, #52]	; (80089cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008996:	2124      	movs	r1, #36	; 0x24
 8008998:	e7f6      	b.n	8008988 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800899a:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800899e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80089a0:	b913      	cbnz	r3, 80089a8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 80089a2:	6281      	str	r1, [r0, #40]	; 0x28
 80089a4:	bd08      	pop	{r3, pc}
 80089a6:	4613      	mov	r3, r2
 80089a8:	699a      	ldr	r2, [r3, #24]
 80089aa:	b12a      	cbz	r2, 80089b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80089ac:	428b      	cmp	r3, r1
 80089ae:	d1fa      	bne.n	80089a6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80089b0:	4b09      	ldr	r3, [pc, #36]	; (80089d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80089b2:	4a06      	ldr	r2, [pc, #24]	; (80089cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80089b4:	2135      	movs	r1, #53	; 0x35
 80089b6:	e7e7      	b.n	8008988 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80089b8:	428b      	cmp	r3, r1
 80089ba:	d103      	bne.n	80089c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80089bc:	4b06      	ldr	r3, [pc, #24]	; (80089d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80089be:	4a03      	ldr	r2, [pc, #12]	; (80089cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80089c0:	2138      	movs	r1, #56	; 0x38
 80089c2:	e7e1      	b.n	8008988 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80089c4:	6199      	str	r1, [r3, #24]
 80089c6:	e7ed      	b.n	80089a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80089c8:	0801c63f 	.word	0x0801c63f
 80089cc:	0801c794 	.word	0x0801c794
 80089d0:	0801c66b 	.word	0x0801c66b
 80089d4:	0801c69e 	.word	0x0801c69e
 80089d8:	0801c6d4 	.word	0x0801c6d4

080089dc <_ZN8touchgfx4RectaNERKS0_>:
 80089dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80089e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80089e4:	888c      	ldrh	r4, [r1, #4]
 80089e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80089ea:	443c      	add	r4, r7
 80089ec:	b2a4      	uxth	r4, r4
 80089ee:	fa0f f884 	sxth.w	r8, r4
 80089f2:	45c1      	cmp	r9, r8
 80089f4:	da2f      	bge.n	8008a56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80089f6:	8882      	ldrh	r2, [r0, #4]
 80089f8:	444a      	add	r2, r9
 80089fa:	b292      	uxth	r2, r2
 80089fc:	fa0f fe82 	sxth.w	lr, r2
 8008a00:	4577      	cmp	r7, lr
 8008a02:	da28      	bge.n	8008a56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008a04:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008a08:	88cb      	ldrh	r3, [r1, #6]
 8008a0a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008a0e:	442b      	add	r3, r5
 8008a10:	b21b      	sxth	r3, r3
 8008a12:	429e      	cmp	r6, r3
 8008a14:	da1f      	bge.n	8008a56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008a16:	88c3      	ldrh	r3, [r0, #6]
 8008a18:	4433      	add	r3, r6
 8008a1a:	b29b      	uxth	r3, r3
 8008a1c:	fa0f fc83 	sxth.w	ip, r3
 8008a20:	4565      	cmp	r5, ip
 8008a22:	da18      	bge.n	8008a56 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008a24:	454f      	cmp	r7, r9
 8008a26:	bfb8      	it	lt
 8008a28:	464f      	movlt	r7, r9
 8008a2a:	42b5      	cmp	r5, r6
 8008a2c:	bfb8      	it	lt
 8008a2e:	4635      	movlt	r5, r6
 8008a30:	45f0      	cmp	r8, lr
 8008a32:	bfd8      	it	le
 8008a34:	4622      	movle	r2, r4
 8008a36:	1bd2      	subs	r2, r2, r7
 8008a38:	8082      	strh	r2, [r0, #4]
 8008a3a:	884a      	ldrh	r2, [r1, #2]
 8008a3c:	88c9      	ldrh	r1, [r1, #6]
 8008a3e:	8007      	strh	r7, [r0, #0]
 8008a40:	440a      	add	r2, r1
 8008a42:	b292      	uxth	r2, r2
 8008a44:	b211      	sxth	r1, r2
 8008a46:	458c      	cmp	ip, r1
 8008a48:	bfa8      	it	ge
 8008a4a:	4613      	movge	r3, r2
 8008a4c:	1b5b      	subs	r3, r3, r5
 8008a4e:	80c3      	strh	r3, [r0, #6]
 8008a50:	8045      	strh	r5, [r0, #2]
 8008a52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008a56:	2300      	movs	r3, #0
 8008a58:	8003      	strh	r3, [r0, #0]
 8008a5a:	8043      	strh	r3, [r0, #2]
 8008a5c:	8083      	strh	r3, [r0, #4]
 8008a5e:	80c3      	strh	r3, [r0, #6]
 8008a60:	e7f7      	b.n	8008a52 <_ZN8touchgfx4RectaNERKS0_+0x76>

08008a62 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8008a62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008a66:	2b00      	cmp	r3, #0
 8008a68:	dd06      	ble.n	8008a78 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8008a6a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8008a6e:	2800      	cmp	r0, #0
 8008a70:	bfcc      	ite	gt
 8008a72:	2000      	movgt	r0, #0
 8008a74:	2001      	movle	r0, #1
 8008a76:	4770      	bx	lr
 8008a78:	2001      	movs	r0, #1
 8008a7a:	4770      	bx	lr

08008a7c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8008a7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a80:	2300      	movs	r3, #0
 8008a82:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8008a84:	8003      	strh	r3, [r0, #0]
 8008a86:	4604      	mov	r4, r0
 8008a88:	8043      	strh	r3, [r0, #2]
 8008a8a:	8083      	strh	r3, [r0, #4]
 8008a8c:	80c3      	strh	r3, [r0, #6]
 8008a8e:	2d00      	cmp	r5, #0
 8008a90:	d040      	beq.n	8008b14 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8008a92:	1d28      	adds	r0, r5, #4
 8008a94:	f7ff ffe5 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008a98:	b988      	cbnz	r0, 8008abe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008a9a:	4620      	mov	r0, r4
 8008a9c:	f7ff ffe1 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008aa0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8008aa4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8008aa8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8008aac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8008ab0:	b138      	cbz	r0, 8008ac2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8008ab2:	8022      	strh	r2, [r4, #0]
 8008ab4:	8063      	strh	r3, [r4, #2]
 8008ab6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8008aba:	f8a4 c006 	strh.w	ip, [r4, #6]
 8008abe:	69ad      	ldr	r5, [r5, #24]
 8008ac0:	e7e5      	b.n	8008a8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8008ac2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8008ac6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008aca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8008ace:	4290      	cmp	r0, r2
 8008ad0:	4607      	mov	r7, r0
 8008ad2:	bfa8      	it	ge
 8008ad4:	4617      	movge	r7, r2
 8008ad6:	4472      	add	r2, lr
 8008ad8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8008adc:	8027      	strh	r7, [r4, #0]
 8008ade:	4299      	cmp	r1, r3
 8008ae0:	460e      	mov	r6, r1
 8008ae2:	4440      	add	r0, r8
 8008ae4:	bfa8      	it	ge
 8008ae6:	461e      	movge	r6, r3
 8008ae8:	4471      	add	r1, lr
 8008aea:	4463      	add	r3, ip
 8008aec:	b200      	sxth	r0, r0
 8008aee:	b212      	sxth	r2, r2
 8008af0:	b209      	sxth	r1, r1
 8008af2:	b21b      	sxth	r3, r3
 8008af4:	4290      	cmp	r0, r2
 8008af6:	bfac      	ite	ge
 8008af8:	ebc7 0200 	rsbge	r2, r7, r0
 8008afc:	ebc7 0202 	rsblt	r2, r7, r2
 8008b00:	4299      	cmp	r1, r3
 8008b02:	bfac      	ite	ge
 8008b04:	ebc6 0301 	rsbge	r3, r6, r1
 8008b08:	ebc6 0303 	rsblt	r3, r6, r3
 8008b0c:	8066      	strh	r6, [r4, #2]
 8008b0e:	80a2      	strh	r2, [r4, #4]
 8008b10:	80e3      	strh	r3, [r4, #6]
 8008b12:	e7d4      	b.n	8008abe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008b14:	4620      	mov	r0, r4
 8008b16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8008b1a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008b1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008b22:	b383      	cbz	r3, 8008b86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008b24:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008b26:	b374      	cbz	r4, 8008b86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008b28:	f9b1 5000 	ldrsh.w	r5, [r1]
 8008b2c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8008b30:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8008b34:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8008b38:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008b3c:	b303      	cbz	r3, 8008b80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008b3e:	4668      	mov	r0, sp
 8008b40:	1d21      	adds	r1, r4, #4
 8008b42:	f8ad 5000 	strh.w	r5, [sp]
 8008b46:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008b4a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008b4e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8008b52:	f7ff ff43 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 8008b56:	4668      	mov	r0, sp
 8008b58:	f7ff ff83 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008b5c:	b980      	cbnz	r0, 8008b80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008b5e:	f8bd 3000 	ldrh.w	r3, [sp]
 8008b62:	88a2      	ldrh	r2, [r4, #4]
 8008b64:	1a9b      	subs	r3, r3, r2
 8008b66:	f8ad 3000 	strh.w	r3, [sp]
 8008b6a:	88e2      	ldrh	r2, [r4, #6]
 8008b6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008b70:	1a9b      	subs	r3, r3, r2
 8008b72:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008b76:	6823      	ldr	r3, [r4, #0]
 8008b78:	4669      	mov	r1, sp
 8008b7a:	689b      	ldr	r3, [r3, #8]
 8008b7c:	4620      	mov	r0, r4
 8008b7e:	4798      	blx	r3
 8008b80:	69a4      	ldr	r4, [r4, #24]
 8008b82:	2c00      	cmp	r4, #0
 8008b84:	d1d8      	bne.n	8008b38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8008b86:	b002      	add	sp, #8
 8008b88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8008b8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b8e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008b92:	460d      	mov	r5, r1
 8008b94:	4616      	mov	r6, r2
 8008b96:	b323      	cbz	r3, 8008be2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008b98:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008b9a:	b314      	cbz	r4, 8008be2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008b9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008ba0:	b1eb      	cbz	r3, 8008bde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008ba2:	6828      	ldr	r0, [r5, #0]
 8008ba4:	6869      	ldr	r1, [r5, #4]
 8008ba6:	466b      	mov	r3, sp
 8008ba8:	c303      	stmia	r3!, {r0, r1}
 8008baa:	4668      	mov	r0, sp
 8008bac:	1d21      	adds	r1, r4, #4
 8008bae:	f7ff ff15 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 8008bb2:	4668      	mov	r0, sp
 8008bb4:	f7ff ff55 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008bb8:	b988      	cbnz	r0, 8008bde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008bba:	f8bd 3000 	ldrh.w	r3, [sp]
 8008bbe:	88a2      	ldrh	r2, [r4, #4]
 8008bc0:	1a9b      	subs	r3, r3, r2
 8008bc2:	f8ad 3000 	strh.w	r3, [sp]
 8008bc6:	88e2      	ldrh	r2, [r4, #6]
 8008bc8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008bcc:	1a9b      	subs	r3, r3, r2
 8008bce:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008bd2:	6823      	ldr	r3, [r4, #0]
 8008bd4:	4632      	mov	r2, r6
 8008bd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008bd8:	4669      	mov	r1, sp
 8008bda:	4620      	mov	r0, r4
 8008bdc:	4798      	blx	r3
 8008bde:	69a4      	ldr	r4, [r4, #24]
 8008be0:	e7db      	b.n	8008b9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8008be2:	b002      	add	sp, #8
 8008be4:	bd70      	pop	{r4, r5, r6, pc}

08008be6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8008be6:	b513      	push	{r0, r1, r4, lr}
 8008be8:	6803      	ldr	r3, [r0, #0]
 8008bea:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 8008bee:	2300      	movs	r3, #0
 8008bf0:	e9cd 3300 	strd	r3, r3, [sp]
 8008bf4:	466b      	mov	r3, sp
 8008bf6:	47a0      	blx	r4
 8008bf8:	b002      	add	sp, #8
 8008bfa:	bd10      	pop	{r4, pc}

08008bfc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8008bfc:	2301      	movs	r3, #1
 8008bfe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008c02:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008c06:	4770      	bx	lr

08008c08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8008c08:	2301      	movs	r3, #1
 8008c0a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008c0e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008c12:	4770      	bx	lr

08008c14 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8008c14:	6843      	ldr	r3, [r0, #4]
 8008c16:	2201      	movs	r2, #1
 8008c18:	725a      	strb	r2, [r3, #9]
 8008c1a:	6840      	ldr	r0, [r0, #4]
 8008c1c:	6803      	ldr	r3, [r0, #0]
 8008c1e:	691b      	ldr	r3, [r3, #16]
 8008c20:	4718      	bx	r3

08008c22 <_ZN8touchgfx3HAL8flushDMAEv>:
 8008c22:	6840      	ldr	r0, [r0, #4]
 8008c24:	6803      	ldr	r3, [r0, #0]
 8008c26:	689b      	ldr	r3, [r3, #8]
 8008c28:	4718      	bx	r3
	...

08008c2c <_ZN8touchgfx3HAL10beginFrameEv>:
 8008c2c:	4b04      	ldr	r3, [pc, #16]	; (8008c40 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8008c2e:	781b      	ldrb	r3, [r3, #0]
 8008c30:	b123      	cbz	r3, 8008c3c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8008c32:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8008c36:	f080 0001 	eor.w	r0, r0, #1
 8008c3a:	4770      	bx	lr
 8008c3c:	2001      	movs	r0, #1
 8008c3e:	4770      	bx	lr
 8008c40:	200120aa 	.word	0x200120aa

08008c44 <_ZN8touchgfx3HAL8endFrameEv>:
 8008c44:	b510      	push	{r4, lr}
 8008c46:	4604      	mov	r4, r0
 8008c48:	6840      	ldr	r0, [r0, #4]
 8008c4a:	6803      	ldr	r3, [r0, #0]
 8008c4c:	689b      	ldr	r3, [r3, #8]
 8008c4e:	4798      	blx	r3
 8008c50:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8008c54:	b113      	cbz	r3, 8008c5c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8008c56:	2301      	movs	r3, #1
 8008c58:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8008c5c:	bd10      	pop	{r4, pc}
	...

08008c60 <_ZN8touchgfx3HAL4tickEv>:
 8008c60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008c62:	6803      	ldr	r3, [r0, #0]
 8008c64:	4d5c      	ldr	r5, [pc, #368]	; (8008dd8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8008c66:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8008c6a:	4604      	mov	r4, r0
 8008c6c:	4798      	blx	r3
 8008c6e:	2800      	cmp	r0, #0
 8008c70:	f000 8097 	beq.w	8008da2 <_ZN8touchgfx3HAL4tickEv+0x142>
 8008c74:	2001      	movs	r0, #1
 8008c76:	f7f7 fd5f 	bl	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8008c7a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8008c7e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008c82:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8008c86:	2600      	movs	r6, #0
 8008c88:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008c8c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8008c90:	b133      	cbz	r3, 8008ca0 <_ZN8touchgfx3HAL4tickEv+0x40>
 8008c92:	6823      	ldr	r3, [r4, #0]
 8008c94:	4620      	mov	r0, r4
 8008c96:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8008c9a:	4798      	blx	r3
 8008c9c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8008ca0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8008ca4:	6862      	ldr	r2, [r4, #4]
 8008ca6:	f083 0301 	eor.w	r3, r3, #1
 8008caa:	7253      	strb	r3, [r2, #9]
 8008cac:	2601      	movs	r6, #1
 8008cae:	702e      	strb	r6, [r5, #0]
 8008cb0:	f003 f8fa 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 8008cb4:	6803      	ldr	r3, [r0, #0]
 8008cb6:	4631      	mov	r1, r6
 8008cb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008cba:	4798      	blx	r3
 8008cbc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008cc0:	b90b      	cbnz	r3, 8008cc6 <_ZN8touchgfx3HAL4tickEv+0x66>
 8008cc2:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8008cc6:	f003 f8ef 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 8008cca:	6803      	ldr	r3, [r0, #0]
 8008ccc:	695b      	ldr	r3, [r3, #20]
 8008cce:	4798      	blx	r3
 8008cd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008cd2:	6803      	ldr	r3, [r0, #0]
 8008cd4:	691b      	ldr	r3, [r3, #16]
 8008cd6:	4798      	blx	r3
 8008cd8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008cdc:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8008ce0:	3b01      	subs	r3, #1
 8008ce2:	b2db      	uxtb	r3, r3
 8008ce4:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008ce8:	b10a      	cbz	r2, 8008cee <_ZN8touchgfx3HAL4tickEv+0x8e>
 8008cea:	2b00      	cmp	r3, #0
 8008cec:	d1eb      	bne.n	8008cc6 <_ZN8touchgfx3HAL4tickEv+0x66>
 8008cee:	4a3b      	ldr	r2, [pc, #236]	; (8008ddc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8008cf0:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8008cf4:	7813      	ldrb	r3, [r2, #0]
 8008cf6:	3301      	adds	r3, #1
 8008cf8:	b25b      	sxtb	r3, r3
 8008cfa:	4299      	cmp	r1, r3
 8008cfc:	7013      	strb	r3, [r2, #0]
 8008cfe:	dc10      	bgt.n	8008d22 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008d00:	68e0      	ldr	r0, [r4, #12]
 8008d02:	2300      	movs	r3, #0
 8008d04:	7013      	strb	r3, [r2, #0]
 8008d06:	6803      	ldr	r3, [r0, #0]
 8008d08:	aa03      	add	r2, sp, #12
 8008d0a:	68db      	ldr	r3, [r3, #12]
 8008d0c:	a902      	add	r1, sp, #8
 8008d0e:	4798      	blx	r3
 8008d10:	6823      	ldr	r3, [r4, #0]
 8008d12:	2800      	cmp	r0, #0
 8008d14:	d051      	beq.n	8008dba <_ZN8touchgfx3HAL4tickEv+0x15a>
 8008d16:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008d1a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8008d1e:	4620      	mov	r0, r4
 8008d20:	4798      	blx	r3
 8008d22:	6960      	ldr	r0, [r4, #20]
 8008d24:	2300      	movs	r3, #0
 8008d26:	f88d 3007 	strb.w	r3, [sp, #7]
 8008d2a:	b158      	cbz	r0, 8008d44 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008d2c:	6803      	ldr	r3, [r0, #0]
 8008d2e:	f10d 0107 	add.w	r1, sp, #7
 8008d32:	68db      	ldr	r3, [r3, #12]
 8008d34:	4798      	blx	r3
 8008d36:	b128      	cbz	r0, 8008d44 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008d38:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008d3a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8008d3e:	6803      	ldr	r3, [r0, #0]
 8008d40:	68db      	ldr	r3, [r3, #12]
 8008d42:	4798      	blx	r3
 8008d44:	f104 001c 	add.w	r0, r4, #28
 8008d48:	f011 fa06 	bl	801a158 <_ZN8touchgfx8Gestures4tickEv>
 8008d4c:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8008d50:	b30b      	cbz	r3, 8008d96 <_ZN8touchgfx3HAL4tickEv+0x136>
 8008d52:	6920      	ldr	r0, [r4, #16]
 8008d54:	6803      	ldr	r3, [r0, #0]
 8008d56:	691b      	ldr	r3, [r3, #16]
 8008d58:	4798      	blx	r3
 8008d5a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008d5c:	4606      	mov	r6, r0
 8008d5e:	b903      	cbnz	r3, 8008d62 <_ZN8touchgfx3HAL4tickEv+0x102>
 8008d60:	6720      	str	r0, [r4, #112]	; 0x70
 8008d62:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008d64:	4a1e      	ldr	r2, [pc, #120]	; (8008de0 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8008d66:	1af3      	subs	r3, r6, r3
 8008d68:	4293      	cmp	r3, r2
 8008d6a:	d914      	bls.n	8008d96 <_ZN8touchgfx3HAL4tickEv+0x136>
 8008d6c:	6920      	ldr	r0, [r4, #16]
 8008d6e:	6803      	ldr	r3, [r0, #0]
 8008d70:	699b      	ldr	r3, [r3, #24]
 8008d72:	4798      	blx	r3
 8008d74:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008d76:	2264      	movs	r2, #100	; 0x64
 8008d78:	1af3      	subs	r3, r6, r3
 8008d7a:	fbb3 f3f2 	udiv	r3, r3, r2
 8008d7e:	fbb0 f0f3 	udiv	r0, r0, r3
 8008d82:	2800      	cmp	r0, #0
 8008d84:	dc1e      	bgt.n	8008dc4 <_ZN8touchgfx3HAL4tickEv+0x164>
 8008d86:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8008d8a:	6920      	ldr	r0, [r4, #16]
 8008d8c:	6803      	ldr	r3, [r0, #0]
 8008d8e:	2100      	movs	r1, #0
 8008d90:	69db      	ldr	r3, [r3, #28]
 8008d92:	4798      	blx	r3
 8008d94:	6726      	str	r6, [r4, #112]	; 0x70
 8008d96:	f003 f887 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 8008d9a:	6803      	ldr	r3, [r0, #0]
 8008d9c:	2100      	movs	r1, #0
 8008d9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008da0:	4798      	blx	r3
 8008da2:	6823      	ldr	r3, [r4, #0]
 8008da4:	4620      	mov	r0, r4
 8008da6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8008daa:	4798      	blx	r3
 8008dac:	2001      	movs	r0, #1
 8008dae:	f7f7 fcc4 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8008db2:	2300      	movs	r3, #0
 8008db4:	702b      	strb	r3, [r5, #0]
 8008db6:	b004      	add	sp, #16
 8008db8:	bd70      	pop	{r4, r5, r6, pc}
 8008dba:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008dbe:	4620      	mov	r0, r4
 8008dc0:	4798      	blx	r3
 8008dc2:	e7ae      	b.n	8008d22 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008dc4:	2863      	cmp	r0, #99	; 0x63
 8008dc6:	bfcb      	itete	gt
 8008dc8:	2300      	movgt	r3, #0
 8008dca:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8008dce:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8008dd2:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8008dd6:	e7d8      	b.n	8008d8a <_ZN8touchgfx3HAL4tickEv+0x12a>
 8008dd8:	200120b0 	.word	0x200120b0
 8008ddc:	200120b1 	.word	0x200120b1
 8008de0:	05f5e100 	.word	0x05f5e100

08008de4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8008de4:	f7f7 bdd2 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08008de8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8008de8:	6581      	str	r1, [r0, #88]	; 0x58
 8008dea:	301c      	adds	r0, #28
 8008dec:	f011 b9b2 	b.w	801a154 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08008df0 <_ZN8touchgfx3HAL5touchEll>:
 8008df0:	b530      	push	{r4, r5, lr}
 8008df2:	b087      	sub	sp, #28
 8008df4:	4604      	mov	r4, r0
 8008df6:	a804      	add	r0, sp, #16
 8008df8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8008dfc:	f002 fde8 	bl	800b9d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8008e00:	9b04      	ldr	r3, [sp, #16]
 8008e02:	f8ad 300c 	strh.w	r3, [sp, #12]
 8008e06:	a906      	add	r1, sp, #24
 8008e08:	9b05      	ldr	r3, [sp, #20]
 8008e0a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8008e0e:	a803      	add	r0, sp, #12
 8008e10:	f002 fe2c 	bl	800ba6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8008e14:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8008e18:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8008e1c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008e20:	f104 001c 	add.w	r0, r4, #28
 8008e24:	b189      	cbz	r1, 8008e4a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8008e26:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8008e2a:	9300      	str	r3, [sp, #0]
 8008e2c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8008e30:	4613      	mov	r3, r2
 8008e32:	462a      	mov	r2, r5
 8008e34:	f011 f99e 	bl	801a174 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8008e38:	b128      	cbz	r0, 8008e46 <_ZN8touchgfx3HAL5touchEll+0x56>
 8008e3a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8008e3e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8008e40:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8008e44:	6623      	str	r3, [r4, #96]	; 0x60
 8008e46:	b007      	add	sp, #28
 8008e48:	bd30      	pop	{r4, r5, pc}
 8008e4a:	f011 f9d7 	bl	801a1fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8008e4e:	2301      	movs	r3, #1
 8008e50:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8008e54:	e7f1      	b.n	8008e3a <_ZN8touchgfx3HAL5touchEll+0x4a>

08008e56 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8008e56:	b570      	push	{r4, r5, r6, lr}
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d050      	beq.n	8008efe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8008e5c:	ea81 0002 	eor.w	r0, r1, r2
 8008e60:	07c6      	lsls	r6, r0, #31
 8008e62:	d508      	bpl.n	8008e76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8008e64:	3a01      	subs	r2, #1
 8008e66:	18cc      	adds	r4, r1, r3
 8008e68:	42a1      	cmp	r1, r4
 8008e6a:	d048      	beq.n	8008efe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8008e6c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8008e70:	f801 0b01 	strb.w	r0, [r1], #1
 8008e74:	e7f8      	b.n	8008e68 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8008e76:	07d5      	lsls	r5, r2, #31
 8008e78:	bf42      	ittt	mi
 8008e7a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8008e7e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8008e82:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8008e86:	2b01      	cmp	r3, #1
 8008e88:	d915      	bls.n	8008eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8008e8a:	ea82 0001 	eor.w	r0, r2, r1
 8008e8e:	0784      	lsls	r4, r0, #30
 8008e90:	d02d      	beq.n	8008eee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8008e92:	1e94      	subs	r4, r2, #2
 8008e94:	4608      	mov	r0, r1
 8008e96:	18ce      	adds	r6, r1, r3
 8008e98:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8008e9c:	f820 5b02 	strh.w	r5, [r0], #2
 8008ea0:	1a35      	subs	r5, r6, r0
 8008ea2:	2d01      	cmp	r5, #1
 8008ea4:	d8f8      	bhi.n	8008e98 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8008ea6:	1e98      	subs	r0, r3, #2
 8008ea8:	f020 0001 	bic.w	r0, r0, #1
 8008eac:	3002      	adds	r0, #2
 8008eae:	4401      	add	r1, r0
 8008eb0:	4402      	add	r2, r0
 8008eb2:	f003 0301 	and.w	r3, r3, #1
 8008eb6:	1f14      	subs	r4, r2, #4
 8008eb8:	4608      	mov	r0, r1
 8008eba:	18ce      	adds	r6, r1, r3
 8008ebc:	1a35      	subs	r5, r6, r0
 8008ebe:	2d03      	cmp	r5, #3
 8008ec0:	d810      	bhi.n	8008ee4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8008ec2:	089c      	lsrs	r4, r3, #2
 8008ec4:	00a0      	lsls	r0, r4, #2
 8008ec6:	4401      	add	r1, r0
 8008ec8:	3801      	subs	r0, #1
 8008eca:	4402      	add	r2, r0
 8008ecc:	f06f 0003 	mvn.w	r0, #3
 8008ed0:	fb00 3404 	mla	r4, r0, r4, r3
 8008ed4:	440c      	add	r4, r1
 8008ed6:	42a1      	cmp	r1, r4
 8008ed8:	d011      	beq.n	8008efe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8008eda:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8008ede:	f801 3b01 	strb.w	r3, [r1], #1
 8008ee2:	e7f8      	b.n	8008ed6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8008ee4:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8008ee8:	f840 5b04 	str.w	r5, [r0], #4
 8008eec:	e7e6      	b.n	8008ebc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8008eee:	0790      	lsls	r0, r2, #30
 8008ef0:	d0e1      	beq.n	8008eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8008ef2:	f832 0b02 	ldrh.w	r0, [r2], #2
 8008ef6:	f821 0b02 	strh.w	r0, [r1], #2
 8008efa:	3b02      	subs	r3, #2
 8008efc:	e7db      	b.n	8008eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8008efe:	2001      	movs	r0, #1
 8008f00:	bd70      	pop	{r4, r5, r6, pc}

08008f02 <_ZN8touchgfx3HAL7noTouchEv>:
 8008f02:	b510      	push	{r4, lr}
 8008f04:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8008f08:	4604      	mov	r4, r0
 8008f0a:	b153      	cbz	r3, 8008f22 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8008f0c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8008f10:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8008f14:	2101      	movs	r1, #1
 8008f16:	301c      	adds	r0, #28
 8008f18:	f011 f970 	bl	801a1fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8008f1c:	2300      	movs	r3, #0
 8008f1e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8008f22:	bd10      	pop	{r4, pc}

08008f24 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8008f24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f28:	4605      	mov	r5, r0
 8008f2a:	6980      	ldr	r0, [r0, #24]
 8008f2c:	b085      	sub	sp, #20
 8008f2e:	460f      	mov	r7, r1
 8008f30:	4690      	mov	r8, r2
 8008f32:	4699      	mov	r9, r3
 8008f34:	b930      	cbnz	r0, 8008f44 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8008f36:	4b1f      	ldr	r3, [pc, #124]	; (8008fb4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8008f38:	4a1f      	ldr	r2, [pc, #124]	; (8008fb8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8008f3a:	f240 112f 	movw	r1, #303	; 0x12f
 8008f3e:	481f      	ldr	r0, [pc, #124]	; (8008fbc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 8008f40:	f011 fa18 	bl	801a374 <__assert_func>
 8008f44:	ac04      	add	r4, sp, #16
 8008f46:	2600      	movs	r6, #0
 8008f48:	f844 6d04 	str.w	r6, [r4, #-4]!
 8008f4c:	6806      	ldr	r6, [r0, #0]
 8008f4e:	9401      	str	r4, [sp, #4]
 8008f50:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8008f54:	9400      	str	r4, [sp, #0]
 8008f56:	6834      	ldr	r4, [r6, #0]
 8008f58:	47a0      	blx	r4
 8008f5a:	4c19      	ldr	r4, [pc, #100]	; (8008fc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 8008f5c:	4606      	mov	r6, r0
 8008f5e:	f8a4 9000 	strh.w	r9, [r4]
 8008f62:	f7f7 fda3 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 8008f66:	6803      	ldr	r3, [r0, #0]
 8008f68:	6a1b      	ldr	r3, [r3, #32]
 8008f6a:	4798      	blx	r3
 8008f6c:	280c      	cmp	r0, #12
 8008f6e:	d80f      	bhi.n	8008f90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8008f70:	e8df f000 	tbb	[pc, r0]
 8008f74:	1b1b1207 	.word	0x1b1b1207
 8008f78:	1b1b1b1b 	.word	0x1b1b1b1b
 8008f7c:	1b1b1b1b 	.word	0x1b1b1b1b
 8008f80:	1b          	.byte	0x1b
 8008f81:	00          	.byte	0x00
 8008f82:	8823      	ldrh	r3, [r4, #0]
 8008f84:	fb08 7203 	mla	r2, r8, r3, r7
 8008f88:	9b03      	ldr	r3, [sp, #12]
 8008f8a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8008f8e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8008f90:	4630      	mov	r0, r6
 8008f92:	b005      	add	sp, #20
 8008f94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008f98:	8822      	ldrh	r2, [r4, #0]
 8008f9a:	9b03      	ldr	r3, [sp, #12]
 8008f9c:	fb08 7202 	mla	r2, r8, r2, r7
 8008fa0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8008fa4:	1a9a      	subs	r2, r3, r2
 8008fa6:	63ea      	str	r2, [r5, #60]	; 0x3c
 8008fa8:	e7f2      	b.n	8008f90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8008faa:	4b06      	ldr	r3, [pc, #24]	; (8008fc4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 8008fac:	4a02      	ldr	r2, [pc, #8]	; (8008fb8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8008fae:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 8008fb2:	e7c4      	b.n	8008f3e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8008fb4:	0801c83d 	.word	0x0801c83d
 8008fb8:	0801ca97 	.word	0x0801ca97
 8008fbc:	0801c882 	.word	0x0801c882
 8008fc0:	200120a6 	.word	0x200120a6
 8008fc4:	0801c8a8 	.word	0x0801c8a8

08008fc8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8008fc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008fcc:	4698      	mov	r8, r3
 8008fce:	6803      	ldr	r3, [r0, #0]
 8008fd0:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8008fd2:	4b0f      	ldr	r3, [pc, #60]	; (8009010 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8008fd4:	b087      	sub	sp, #28
 8008fd6:	f8b3 9000 	ldrh.w	r9, [r3]
 8008fda:	460e      	mov	r6, r1
 8008fdc:	4617      	mov	r7, r2
 8008fde:	4604      	mov	r4, r0
 8008fe0:	f7f7 fd64 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 8008fe4:	6803      	ldr	r3, [r0, #0]
 8008fe6:	6a1b      	ldr	r3, [r3, #32]
 8008fe8:	4798      	blx	r3
 8008fea:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8008fee:	9302      	str	r3, [sp, #8]
 8008ff0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8008ff4:	9301      	str	r3, [sp, #4]
 8008ff6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8008ffa:	9300      	str	r3, [sp, #0]
 8008ffc:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009000:	4643      	mov	r3, r8
 8009002:	463a      	mov	r2, r7
 8009004:	4631      	mov	r1, r6
 8009006:	4620      	mov	r0, r4
 8009008:	47a8      	blx	r5
 800900a:	b007      	add	sp, #28
 800900c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009010:	200120a6 	.word	0x200120a6

08009014 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009018:	4606      	mov	r6, r0
 800901a:	b089      	sub	sp, #36	; 0x24
 800901c:	4610      	mov	r0, r2
 800901e:	460c      	mov	r4, r1
 8009020:	4691      	mov	r9, r2
 8009022:	4698      	mov	r8, r3
 8009024:	f005 fc14 	bl	800e850 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009028:	2800      	cmp	r0, #0
 800902a:	f000 8093 	beq.w	8009154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 800902e:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800916c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009032:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8009170 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 8009036:	f8da 0000 	ldr.w	r0, [sl]
 800903a:	4f4b      	ldr	r7, [pc, #300]	; (8009168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800903c:	6802      	ldr	r2, [r0, #0]
 800903e:	6a12      	ldr	r2, [r2, #32]
 8009040:	4790      	blx	r2
 8009042:	f8da 0000 	ldr.w	r0, [sl]
 8009046:	6802      	ldr	r2, [r0, #0]
 8009048:	ad08      	add	r5, sp, #32
 800904a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800904c:	4790      	blx	r2
 800904e:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 8009052:	f8bb 3000 	ldrh.w	r3, [fp]
 8009056:	9300      	str	r3, [sp, #0]
 8009058:	4628      	mov	r0, r5
 800905a:	883b      	ldrh	r3, [r7, #0]
 800905c:	9301      	str	r3, [sp, #4]
 800905e:	f005 fcbb 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009062:	f8ab 0000 	strh.w	r0, [fp]
 8009066:	4628      	mov	r0, r5
 8009068:	f005 fcf0 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800906c:	f8da b000 	ldr.w	fp, [sl]
 8009070:	8038      	strh	r0, [r7, #0]
 8009072:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 8009076:	9302      	str	r3, [sp, #8]
 8009078:	4648      	mov	r0, r9
 800907a:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800907e:	f005 fbe7 	bl	800e850 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009082:	f8da 2000 	ldr.w	r2, [sl]
 8009086:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800908a:	63d0      	str	r0, [r2, #60]	; 0x3c
 800908c:	6822      	ldr	r2, [r4, #0]
 800908e:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8009092:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009094:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 8009098:	2200      	movs	r2, #0
 800909a:	4611      	mov	r1, r2
 800909c:	4620      	mov	r0, r4
 800909e:	4798      	blx	r3
 80090a0:	2201      	movs	r2, #1
 80090a2:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 80090a6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80090aa:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80090ae:	2a00      	cmp	r2, #0
 80090b0:	f104 0204 	add.w	r2, r4, #4
 80090b4:	dd51      	ble.n	800915a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80090b6:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 80090ba:	2900      	cmp	r1, #0
 80090bc:	dd4d      	ble.n	800915a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80090be:	6810      	ldr	r0, [r2, #0]
 80090c0:	6851      	ldr	r1, [r2, #4]
 80090c2:	f10d 0c18 	add.w	ip, sp, #24
 80090c6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80090ca:	4641      	mov	r1, r8
 80090cc:	a806      	add	r0, sp, #24
 80090ce:	f7ff fc85 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 80090d2:	4628      	mov	r0, r5
 80090d4:	f005 fe0c 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80090d8:	4680      	mov	r8, r0
 80090da:	f7f7 fce7 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 80090de:	6802      	ldr	r2, [r0, #0]
 80090e0:	6a12      	ldr	r2, [r2, #32]
 80090e2:	4790      	blx	r2
 80090e4:	4580      	cmp	r8, r0
 80090e6:	d03d      	beq.n	8009164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 80090e8:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80090ea:	b150      	cbz	r0, 8009102 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 80090ec:	4628      	mov	r0, r5
 80090ee:	f005 fdff 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80090f2:	4605      	mov	r5, r0
 80090f4:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80090f6:	6803      	ldr	r3, [r0, #0]
 80090f8:	6a1b      	ldr	r3, [r3, #32]
 80090fa:	4798      	blx	r3
 80090fc:	1a2b      	subs	r3, r5, r0
 80090fe:	4258      	negs	r0, r3
 8009100:	4158      	adcs	r0, r3
 8009102:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 8009106:	6822      	ldr	r2, [r4, #0]
 8009108:	6963      	ldr	r3, [r4, #20]
 800910a:	9303      	str	r3, [sp, #12]
 800910c:	2500      	movs	r5, #0
 800910e:	6165      	str	r5, [r4, #20]
 8009110:	4620      	mov	r0, r4
 8009112:	6892      	ldr	r2, [r2, #8]
 8009114:	a906      	add	r1, sp, #24
 8009116:	4790      	blx	r2
 8009118:	9b03      	ldr	r3, [sp, #12]
 800911a:	6163      	str	r3, [r4, #20]
 800911c:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 8009120:	6823      	ldr	r3, [r4, #0]
 8009122:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 8009126:	4620      	mov	r0, r4
 8009128:	4c10      	ldr	r4, [pc, #64]	; (800916c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800912a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800912c:	4652      	mov	r2, sl
 800912e:	4649      	mov	r1, r9
 8009130:	4798      	blx	r3
 8009132:	6820      	ldr	r0, [r4, #0]
 8009134:	9b02      	ldr	r3, [sp, #8]
 8009136:	9a00      	ldr	r2, [sp, #0]
 8009138:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800913c:	4b0c      	ldr	r3, [pc, #48]	; (8009170 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800913e:	801a      	strh	r2, [r3, #0]
 8009140:	4b09      	ldr	r3, [pc, #36]	; (8009168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009142:	9a01      	ldr	r2, [sp, #4]
 8009144:	801a      	strh	r2, [r3, #0]
 8009146:	6803      	ldr	r3, [r0, #0]
 8009148:	6a1b      	ldr	r3, [r3, #32]
 800914a:	4798      	blx	r3
 800914c:	6820      	ldr	r0, [r4, #0]
 800914e:	6803      	ldr	r3, [r0, #0]
 8009150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009152:	4798      	blx	r3
 8009154:	b009      	add	sp, #36	; 0x24
 8009156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800915a:	6810      	ldr	r0, [r2, #0]
 800915c:	6851      	ldr	r1, [r2, #4]
 800915e:	ab06      	add	r3, sp, #24
 8009160:	c303      	stmia	r3!, {r0, r1}
 8009162:	e7b6      	b.n	80090d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 8009164:	2000      	movs	r0, #0
 8009166:	e7cc      	b.n	8009102 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 8009168:	200120a8 	.word	0x200120a8
 800916c:	200120ac 	.word	0x200120ac
 8009170:	200120a6 	.word	0x200120a6

08009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009174:	b510      	push	{r4, lr}
 8009176:	4b07      	ldr	r3, [pc, #28]	; (8009194 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009178:	781b      	ldrb	r3, [r3, #0]
 800917a:	4604      	mov	r4, r0
 800917c:	b13b      	cbz	r3, 800918e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800917e:	6803      	ldr	r3, [r0, #0]
 8009180:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009182:	4798      	blx	r3
 8009184:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009186:	4283      	cmp	r3, r0
 8009188:	d101      	bne.n	800918e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800918a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800918c:	bd10      	pop	{r4, pc}
 800918e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009190:	e7fc      	b.n	800918c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009192:	bf00      	nop
 8009194:	200120aa 	.word	0x200120aa

08009198 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009198:	b510      	push	{r4, lr}
 800919a:	4b0b      	ldr	r3, [pc, #44]	; (80091c8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800919c:	781b      	ldrb	r3, [r3, #0]
 800919e:	4604      	mov	r4, r0
 80091a0:	b95b      	cbnz	r3, 80091ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80091a2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80091a6:	2b02      	cmp	r3, #2
 80091a8:	d007      	beq.n	80091ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80091aa:	6840      	ldr	r0, [r0, #4]
 80091ac:	f000 fbce 	bl	800994c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80091b0:	b118      	cbz	r0, 80091ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80091b2:	6862      	ldr	r2, [r4, #4]
 80091b4:	7a53      	ldrb	r3, [r2, #9]
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	d0fc      	beq.n	80091b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80091ba:	f7f7 fbdf 	bl	800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80091be:	4620      	mov	r0, r4
 80091c0:	f7ff ffd8 	bl	8009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80091c4:	bd10      	pop	{r4, pc}
 80091c6:	bf00      	nop
 80091c8:	200120aa 	.word	0x200120aa

080091cc <_ZN8touchgfx3HAL10initializeEv>:
 80091cc:	b510      	push	{r4, lr}
 80091ce:	4604      	mov	r4, r0
 80091d0:	f7f7 fbac 	bl	800092c <_ZN8touchgfx10OSWrappers10initializeEv>
 80091d4:	6860      	ldr	r0, [r4, #4]
 80091d6:	6803      	ldr	r3, [r0, #0]
 80091d8:	68db      	ldr	r3, [r3, #12]
 80091da:	4798      	blx	r3
 80091dc:	68e0      	ldr	r0, [r4, #12]
 80091de:	6803      	ldr	r3, [r0, #0]
 80091e0:	689b      	ldr	r3, [r3, #8]
 80091e2:	4798      	blx	r3
 80091e4:	6823      	ldr	r3, [r4, #0]
 80091e6:	4620      	mov	r0, r4
 80091e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80091ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80091ee:	4718      	bx	r3

080091f0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80091f0:	b508      	push	{r3, lr}
 80091f2:	290c      	cmp	r1, #12
 80091f4:	d817      	bhi.n	8009226 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80091f6:	e8df f001 	tbb	[pc, r1]
 80091fa:	090b      	.short	0x090b
 80091fc:	0d0d0d07 	.word	0x0d0d0d07
 8009200:	1414140d 	.word	0x1414140d
 8009204:	1414      	.short	0x1414
 8009206:	0d          	.byte	0x0d
 8009207:	00          	.byte	0x00
 8009208:	2020      	movs	r0, #32
 800920a:	bd08      	pop	{r3, pc}
 800920c:	2018      	movs	r0, #24
 800920e:	e7fc      	b.n	800920a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009210:	2010      	movs	r0, #16
 8009212:	e7fa      	b.n	800920a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009214:	4b05      	ldr	r3, [pc, #20]	; (800922c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009216:	4a06      	ldr	r2, [pc, #24]	; (8009230 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009218:	4806      	ldr	r0, [pc, #24]	; (8009234 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800921a:	f240 212f 	movw	r1, #559	; 0x22f
 800921e:	f011 f8a9 	bl	801a374 <__assert_func>
 8009222:	2008      	movs	r0, #8
 8009224:	e7f1      	b.n	800920a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009226:	2000      	movs	r0, #0
 8009228:	e7ef      	b.n	800920a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800922a:	bf00      	nop
 800922c:	0801c97b 	.word	0x0801c97b
 8009230:	0801cc59 	.word	0x0801cc59
 8009234:	0801c882 	.word	0x0801c882

08009238 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009238:	b570      	push	{r4, r5, r6, lr}
 800923a:	460d      	mov	r5, r1
 800923c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009240:	4616      	mov	r6, r2
 8009242:	461c      	mov	r4, r3
 8009244:	f7ff ffd4 	bl	80091f0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009248:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800924c:	10c0      	asrs	r0, r0, #3
 800924e:	fb06 5101 	mla	r1, r6, r1, r5
 8009252:	fb00 4001 	mla	r0, r0, r1, r4
 8009256:	bd70      	pop	{r4, r5, r6, pc}

08009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009258:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800925c:	b08a      	sub	sp, #40	; 0x28
 800925e:	f04f 0c00 	mov.w	ip, #0
 8009262:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8009266:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800926a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800926e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009272:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8009276:	f8cd c020 	str.w	ip, [sp, #32]
 800927a:	f1b8 0f02 	cmp.w	r8, #2
 800927e:	4604      	mov	r4, r0
 8009280:	469a      	mov	sl, r3
 8009282:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009286:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800928a:	d030      	beq.n	80092ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800928c:	2bff      	cmp	r3, #255	; 0xff
 800928e:	d12c      	bne.n	80092ea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009290:	4560      	cmp	r0, ip
 8009292:	bf14      	ite	ne
 8009294:	2004      	movne	r0, #4
 8009296:	2001      	moveq	r0, #1
 8009298:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800929c:	9204      	str	r2, [sp, #16]
 800929e:	4620      	mov	r0, r4
 80092a0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80092a4:	f8ad 201c 	strh.w	r2, [sp, #28]
 80092a8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80092ac:	f8ad 6018 	strh.w	r6, [sp, #24]
 80092b0:	f8ad 501a 	strh.w	r5, [sp, #26]
 80092b4:	f7ff ff5e 	bl	8009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80092b8:	e9cd 9700 	strd	r9, r7, [sp]
 80092bc:	4603      	mov	r3, r0
 80092be:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 80092c2:	4651      	mov	r1, sl
 80092c4:	4620      	mov	r0, r4
 80092c6:	f7ff ffb7 	bl	8009238 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80092ca:	f8ad 901e 	strh.w	r9, [sp, #30]
 80092ce:	9005      	str	r0, [sp, #20]
 80092d0:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 80092d4:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 80092d8:	b106      	cbz	r6, 80092dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 80092da:	b98d      	cbnz	r5, 8009300 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 80092dc:	4b12      	ldr	r3, [pc, #72]	; (8009328 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 80092de:	4a13      	ldr	r2, [pc, #76]	; (800932c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 80092e0:	f240 11af 	movw	r1, #431	; 0x1af
 80092e4:	4812      	ldr	r0, [pc, #72]	; (8009330 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 80092e6:	f011 f845 	bl	801a374 <__assert_func>
 80092ea:	2004      	movs	r0, #4
 80092ec:	e7d4      	b.n	8009298 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 80092ee:	2bff      	cmp	r3, #255	; 0xff
 80092f0:	d104      	bne.n	80092fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 80092f2:	2800      	cmp	r0, #0
 80092f4:	bf14      	ite	ne
 80092f6:	2040      	movne	r0, #64	; 0x40
 80092f8:	2020      	moveq	r0, #32
 80092fa:	e7cd      	b.n	8009298 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 80092fc:	2040      	movs	r0, #64	; 0x40
 80092fe:	e7cb      	b.n	8009298 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009300:	6823      	ldr	r3, [r4, #0]
 8009302:	9d02      	ldr	r5, [sp, #8]
 8009304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009306:	4620      	mov	r0, r4
 8009308:	4798      	blx	r3
 800930a:	4228      	tst	r0, r5
 800930c:	d104      	bne.n	8009318 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800930e:	4b09      	ldr	r3, [pc, #36]	; (8009334 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009310:	4a06      	ldr	r2, [pc, #24]	; (800932c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009312:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 8009316:	e7e5      	b.n	80092e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 8009318:	6860      	ldr	r0, [r4, #4]
 800931a:	6803      	ldr	r3, [r0, #0]
 800931c:	a902      	add	r1, sp, #8
 800931e:	685b      	ldr	r3, [r3, #4]
 8009320:	4798      	blx	r3
 8009322:	b00a      	add	sp, #40	; 0x28
 8009324:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009328:	0801c8fe 	.word	0x0801c8fe
 800932c:	0801cafb 	.word	0x0801cafb
 8009330:	0801c882 	.word	0x0801c882
 8009334:	0801c936 	.word	0x0801c936

08009338 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8009338:	b510      	push	{r4, lr}
 800933a:	b08a      	sub	sp, #40	; 0x28
 800933c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8009340:	9408      	str	r4, [sp, #32]
 8009342:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 8009346:	9407      	str	r4, [sp, #28]
 8009348:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800934c:	9406      	str	r4, [sp, #24]
 800934e:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8009352:	9405      	str	r4, [sp, #20]
 8009354:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8009358:	9404      	str	r4, [sp, #16]
 800935a:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800935e:	9403      	str	r4, [sp, #12]
 8009360:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8009364:	9402      	str	r4, [sp, #8]
 8009366:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800936a:	e9cd 3400 	strd	r3, r4, [sp]
 800936e:	4613      	mov	r3, r2
 8009370:	2200      	movs	r2, #0
 8009372:	f7ff ff71 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009376:	b00a      	add	sp, #40	; 0x28
 8009378:	bd10      	pop	{r4, pc}
	...

0800937c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800937c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800937e:	b08b      	sub	sp, #44	; 0x2c
 8009380:	4616      	mov	r6, r2
 8009382:	460d      	mov	r5, r1
 8009384:	461f      	mov	r7, r3
 8009386:	4604      	mov	r4, r0
 8009388:	f7f7 fb90 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 800938c:	6803      	ldr	r3, [r0, #0]
 800938e:	6a1b      	ldr	r3, [r3, #32]
 8009390:	4798      	blx	r3
 8009392:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009396:	4b0d      	ldr	r3, [pc, #52]	; (80093cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8009398:	881b      	ldrh	r3, [r3, #0]
 800939a:	9306      	str	r3, [sp, #24]
 800939c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80093a0:	9305      	str	r3, [sp, #20]
 80093a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80093a6:	9304      	str	r3, [sp, #16]
 80093a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80093ac:	9303      	str	r3, [sp, #12]
 80093ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80093b2:	9302      	str	r3, [sp, #8]
 80093b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80093b8:	2200      	movs	r2, #0
 80093ba:	e9cd 7300 	strd	r7, r3, [sp]
 80093be:	4629      	mov	r1, r5
 80093c0:	4633      	mov	r3, r6
 80093c2:	4620      	mov	r0, r4
 80093c4:	f7ff ff48 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80093c8:	b00b      	add	sp, #44	; 0x2c
 80093ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093cc:	200120a6 	.word	0x200120a6

080093d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 80093d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80093d4:	461f      	mov	r7, r3
 80093d6:	4b14      	ldr	r3, [pc, #80]	; (8009428 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 80093d8:	b08a      	sub	sp, #40	; 0x28
 80093da:	4616      	mov	r6, r2
 80093dc:	f8b3 8000 	ldrh.w	r8, [r3]
 80093e0:	460d      	mov	r5, r1
 80093e2:	4604      	mov	r4, r0
 80093e4:	f7f7 fb62 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 80093e8:	6803      	ldr	r3, [r0, #0]
 80093ea:	6a1b      	ldr	r3, [r3, #32]
 80093ec:	4798      	blx	r3
 80093ee:	2302      	movs	r3, #2
 80093f0:	e9cd 8306 	strd	r8, r3, [sp, #24]
 80093f4:	2301      	movs	r3, #1
 80093f6:	9305      	str	r3, [sp, #20]
 80093f8:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80093fc:	9304      	str	r3, [sp, #16]
 80093fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009402:	9303      	str	r3, [sp, #12]
 8009404:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009408:	9302      	str	r3, [sp, #8]
 800940a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800940e:	9008      	str	r0, [sp, #32]
 8009410:	e9cd 7300 	strd	r7, r3, [sp]
 8009414:	2200      	movs	r2, #0
 8009416:	4633      	mov	r3, r6
 8009418:	4629      	mov	r1, r5
 800941a:	4620      	mov	r0, r4
 800941c:	f7ff ff1c 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009420:	b00a      	add	sp, #40	; 0x28
 8009422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009426:	bf00      	nop
 8009428:	200120a6 	.word	0x200120a6

0800942c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800942c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009430:	b08b      	sub	sp, #44	; 0x2c
 8009432:	469b      	mov	fp, r3
 8009434:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009438:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800943c:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8009440:	2fff      	cmp	r7, #255	; 0xff
 8009442:	bf14      	ite	ne
 8009444:	2308      	movne	r3, #8
 8009446:	2302      	moveq	r3, #2
 8009448:	2600      	movs	r6, #0
 800944a:	4604      	mov	r4, r0
 800944c:	4689      	mov	r9, r1
 800944e:	4692      	mov	sl, r2
 8009450:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8009454:	9608      	str	r6, [sp, #32]
 8009456:	f7ff fe8d 	bl	8009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800945a:	e9cd 8500 	strd	r8, r5, [sp]
 800945e:	4603      	mov	r3, r0
 8009460:	465a      	mov	r2, fp
 8009462:	4651      	mov	r1, sl
 8009464:	4620      	mov	r0, r4
 8009466:	f7ff fee7 	bl	8009238 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800946a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800946e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009472:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009476:	f8ad 301a 	strh.w	r3, [sp, #26]
 800947a:	6823      	ldr	r3, [r4, #0]
 800947c:	9005      	str	r0, [sp, #20]
 800947e:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009482:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8009486:	f8ad 601c 	strh.w	r6, [sp, #28]
 800948a:	f8ad 801e 	strh.w	r8, [sp, #30]
 800948e:	f8cd 9020 	str.w	r9, [sp, #32]
 8009492:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8009496:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009498:	9d02      	ldr	r5, [sp, #8]
 800949a:	4620      	mov	r0, r4
 800949c:	4798      	blx	r3
 800949e:	4228      	tst	r0, r5
 80094a0:	d106      	bne.n	80094b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 80094a2:	4b07      	ldr	r3, [pc, #28]	; (80094c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 80094a4:	4a07      	ldr	r2, [pc, #28]	; (80094c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 80094a6:	4808      	ldr	r0, [pc, #32]	; (80094c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 80094a8:	f240 11e7 	movw	r1, #487	; 0x1e7
 80094ac:	f010 ff62 	bl	801a374 <__assert_func>
 80094b0:	6860      	ldr	r0, [r4, #4]
 80094b2:	6803      	ldr	r3, [r0, #0]
 80094b4:	a902      	add	r1, sp, #8
 80094b6:	685b      	ldr	r3, [r3, #4]
 80094b8:	4798      	blx	r3
 80094ba:	b00b      	add	sp, #44	; 0x2c
 80094bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80094c0:	0801c936 	.word	0x0801c936
 80094c4:	0801cbc4 	.word	0x0801cbc4
 80094c8:	0801c882 	.word	0x0801c882

080094cc <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80094cc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80094d0:	461f      	mov	r7, r3
 80094d2:	4b0b      	ldr	r3, [pc, #44]	; (8009500 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80094d4:	460d      	mov	r5, r1
 80094d6:	f8b3 8000 	ldrh.w	r8, [r3]
 80094da:	4616      	mov	r6, r2
 80094dc:	4604      	mov	r4, r0
 80094de:	f7f7 fae5 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 80094e2:	6803      	ldr	r3, [r0, #0]
 80094e4:	6a1b      	ldr	r3, [r3, #32]
 80094e6:	4798      	blx	r3
 80094e8:	463b      	mov	r3, r7
 80094ea:	e9cd 8000 	strd	r8, r0, [sp]
 80094ee:	4632      	mov	r2, r6
 80094f0:	4629      	mov	r1, r5
 80094f2:	4620      	mov	r0, r4
 80094f4:	f7ff fea0 	bl	8009238 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80094f8:	b002      	add	sp, #8
 80094fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80094fe:	bf00      	nop
 8009500:	200120a6 	.word	0x200120a6

08009504 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009508:	b088      	sub	sp, #32
 800950a:	4698      	mov	r8, r3
 800950c:	2300      	movs	r3, #0
 800950e:	9306      	str	r3, [sp, #24]
 8009510:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009514:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009518:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800951c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8009520:	e9cd 3100 	strd	r3, r1, [sp]
 8009524:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009528:	f8ad 3014 	strh.w	r3, [sp, #20]
 800952c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009530:	f88d 301c 	strb.w	r3, [sp, #28]
 8009534:	4617      	mov	r7, r2
 8009536:	4604      	mov	r4, r0
 8009538:	f8ad 5012 	strh.w	r5, [sp, #18]
 800953c:	f7ff fe1a 	bl	8009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009540:	4642      	mov	r2, r8
 8009542:	4603      	mov	r3, r0
 8009544:	4639      	mov	r1, r7
 8009546:	4620      	mov	r0, r4
 8009548:	f7ff ffc0 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800954c:	4b16      	ldr	r3, [pc, #88]	; (80095a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800954e:	9003      	str	r0, [sp, #12]
 8009550:	881b      	ldrh	r3, [r3, #0]
 8009552:	f8ad 3016 	strh.w	r3, [sp, #22]
 8009556:	f7f7 faa9 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 800955a:	6803      	ldr	r3, [r0, #0]
 800955c:	6a1b      	ldr	r3, [r3, #32]
 800955e:	4798      	blx	r3
 8009560:	f88d 001e 	strb.w	r0, [sp, #30]
 8009564:	f88d 001d 	strb.w	r0, [sp, #29]
 8009568:	b106      	cbz	r6, 800956c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800956a:	b935      	cbnz	r5, 800957a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800956c:	4b0f      	ldr	r3, [pc, #60]	; (80095ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800956e:	4a10      	ldr	r2, [pc, #64]	; (80095b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009570:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8009574:	480f      	ldr	r0, [pc, #60]	; (80095b4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8009576:	f010 fefd 	bl	801a374 <__assert_func>
 800957a:	6823      	ldr	r3, [r4, #0]
 800957c:	9d00      	ldr	r5, [sp, #0]
 800957e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009580:	4620      	mov	r0, r4
 8009582:	4798      	blx	r3
 8009584:	4228      	tst	r0, r5
 8009586:	d104      	bne.n	8009592 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8009588:	4b0b      	ldr	r3, [pc, #44]	; (80095b8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800958a:	4a09      	ldr	r2, [pc, #36]	; (80095b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800958c:	f240 11cd 	movw	r1, #461	; 0x1cd
 8009590:	e7f0      	b.n	8009574 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8009592:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009594:	6860      	ldr	r0, [r4, #4]
 8009596:	9306      	str	r3, [sp, #24]
 8009598:	6803      	ldr	r3, [r0, #0]
 800959a:	4669      	mov	r1, sp
 800959c:	685b      	ldr	r3, [r3, #4]
 800959e:	4798      	blx	r3
 80095a0:	b008      	add	sp, #32
 80095a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095a6:	bf00      	nop
 80095a8:	200120a6 	.word	0x200120a6
 80095ac:	0801c8fe 	.word	0x0801c8fe
 80095b0:	0801c9ad 	.word	0x0801c9ad
 80095b4:	0801c882 	.word	0x0801c882
 80095b8:	0801c936 	.word	0x0801c936

080095bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80095bc:	b570      	push	{r4, r5, r6, lr}
 80095be:	b08a      	sub	sp, #40	; 0x28
 80095c0:	466b      	mov	r3, sp
 80095c2:	e883 0006 	stmia.w	r3, {r1, r2}
 80095c6:	4b20      	ldr	r3, [pc, #128]	; (8009648 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 80095c8:	781b      	ldrb	r3, [r3, #0]
 80095ca:	4604      	mov	r4, r0
 80095cc:	b933      	cbnz	r3, 80095dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 80095ce:	4b1f      	ldr	r3, [pc, #124]	; (800964c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 80095d0:	4a1f      	ldr	r2, [pc, #124]	; (8009650 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 80095d2:	4820      	ldr	r0, [pc, #128]	; (8009654 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 80095d4:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 80095d8:	f010 fecc 	bl	801a374 <__assert_func>
 80095dc:	2300      	movs	r3, #0
 80095de:	9308      	str	r3, [sp, #32]
 80095e0:	2301      	movs	r3, #1
 80095e2:	9302      	str	r3, [sp, #8]
 80095e4:	6803      	ldr	r3, [r0, #0]
 80095e6:	f8bd 5000 	ldrh.w	r5, [sp]
 80095ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80095ec:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 80095f0:	4798      	blx	r3
 80095f2:	4632      	mov	r2, r6
 80095f4:	4629      	mov	r1, r5
 80095f6:	4603      	mov	r3, r0
 80095f8:	4620      	mov	r0, r4
 80095fa:	f7ff ff67 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80095fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009600:	9305      	str	r3, [sp, #20]
 8009602:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009606:	f8ad 3018 	strh.w	r3, [sp, #24]
 800960a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800960e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009612:	4b11      	ldr	r3, [pc, #68]	; (8009658 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009614:	9003      	str	r0, [sp, #12]
 8009616:	881b      	ldrh	r3, [r3, #0]
 8009618:	f8ad 301c 	strh.w	r3, [sp, #28]
 800961c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009620:	f7f7 fa44 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 8009624:	6803      	ldr	r3, [r0, #0]
 8009626:	6a1b      	ldr	r3, [r3, #32]
 8009628:	4798      	blx	r3
 800962a:	23ff      	movs	r3, #255	; 0xff
 800962c:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009630:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009634:	6860      	ldr	r0, [r4, #4]
 8009636:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800963a:	6803      	ldr	r3, [r0, #0]
 800963c:	a902      	add	r1, sp, #8
 800963e:	685b      	ldr	r3, [r3, #4]
 8009640:	4798      	blx	r3
 8009642:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009644:	b00a      	add	sp, #40	; 0x28
 8009646:	bd70      	pop	{r4, r5, r6, pc}
 8009648:	200120ab 	.word	0x200120ab
 800964c:	0801c7cf 	.word	0x0801c7cf
 8009650:	0801ca51 	.word	0x0801ca51
 8009654:	0801c882 	.word	0x0801c882
 8009658:	200120a6 	.word	0x200120a6

0800965c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800965c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800965e:	b08b      	sub	sp, #44	; 0x2c
 8009660:	466d      	mov	r5, sp
 8009662:	e885 0006 	stmia.w	r5, {r1, r2}
 8009666:	461d      	mov	r5, r3
 8009668:	2300      	movs	r3, #0
 800966a:	9308      	str	r3, [sp, #32]
 800966c:	2301      	movs	r3, #1
 800966e:	9302      	str	r3, [sp, #8]
 8009670:	6803      	ldr	r3, [r0, #0]
 8009672:	f8bd 6000 	ldrh.w	r6, [sp]
 8009676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009678:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800967c:	4604      	mov	r4, r0
 800967e:	4798      	blx	r3
 8009680:	463a      	mov	r2, r7
 8009682:	4631      	mov	r1, r6
 8009684:	4603      	mov	r3, r0
 8009686:	4620      	mov	r0, r4
 8009688:	f7ff ff20 	bl	80094cc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800968c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009690:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009694:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009698:	f8ad 301a 	strh.w	r3, [sp, #26]
 800969c:	4b0e      	ldr	r3, [pc, #56]	; (80096d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800969e:	9003      	str	r0, [sp, #12]
 80096a0:	881b      	ldrh	r3, [r3, #0]
 80096a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80096a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80096a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80096ac:	9505      	str	r5, [sp, #20]
 80096ae:	f7f7 f9fd 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 80096b2:	6803      	ldr	r3, [r0, #0]
 80096b4:	6a1b      	ldr	r3, [r3, #32]
 80096b6:	4798      	blx	r3
 80096b8:	23ff      	movs	r3, #255	; 0xff
 80096ba:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80096be:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80096c2:	6860      	ldr	r0, [r4, #4]
 80096c4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80096c8:	6803      	ldr	r3, [r0, #0]
 80096ca:	a902      	add	r1, sp, #8
 80096cc:	685b      	ldr	r3, [r3, #4]
 80096ce:	4798      	blx	r3
 80096d0:	4628      	mov	r0, r5
 80096d2:	b00b      	add	sp, #44	; 0x2c
 80096d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096d6:	bf00      	nop
 80096d8:	200120a6 	.word	0x200120a6

080096dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80096dc:	b570      	push	{r4, r5, r6, lr}
 80096de:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 80096e2:	4604      	mov	r4, r0
 80096e4:	b19b      	cbz	r3, 800970e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80096e6:	2002      	movs	r0, #2
 80096e8:	f7f7 f828 	bl	800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80096ec:	2300      	movs	r3, #0
 80096ee:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80096f2:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80096f6:	6823      	ldr	r3, [r4, #0]
 80096f8:	4620      	mov	r0, r4
 80096fa:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 80096fe:	f7ff fd39 	bl	8009174 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009702:	462b      	mov	r3, r5
 8009704:	4601      	mov	r1, r0
 8009706:	4620      	mov	r0, r4
 8009708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800970c:	4718      	bx	r3
 800970e:	bd70      	pop	{r4, r5, r6, pc}

08009710 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009710:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009714:	1a13      	subs	r3, r2, r0
 8009716:	4258      	negs	r0, r3
 8009718:	4158      	adcs	r0, r3
 800971a:	4770      	bx	lr

0800971c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800971c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009720:	1a9b      	subs	r3, r3, r2
 8009722:	2b00      	cmp	r3, #0
 8009724:	bfdc      	itt	le
 8009726:	6882      	ldrle	r2, [r0, #8]
 8009728:	189b      	addle	r3, r3, r2
 800972a:	2b01      	cmp	r3, #1
 800972c:	bfcc      	ite	gt
 800972e:	2000      	movgt	r0, #0
 8009730:	2001      	movle	r0, #1
 8009732:	4770      	bx	lr

08009734 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009734:	6902      	ldr	r2, [r0, #16]
 8009736:	6840      	ldr	r0, [r0, #4]
 8009738:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800973c:	4770      	bx	lr

0800973e <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800973e:	6803      	ldr	r3, [r0, #0]
 8009740:	691b      	ldr	r3, [r3, #16]
 8009742:	4718      	bx	r3

08009744 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009744:	4770      	bx	lr

08009746 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009746:	4770      	bx	lr

08009748 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009748:	4770      	bx	lr
	...

0800974c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800974c:	b570      	push	{r4, r5, r6, lr}
 800974e:	2301      	movs	r3, #1
 8009750:	7203      	strb	r3, [r0, #8]
 8009752:	4604      	mov	r4, r0
 8009754:	6840      	ldr	r0, [r0, #4]
 8009756:	6803      	ldr	r3, [r0, #0]
 8009758:	699b      	ldr	r3, [r3, #24]
 800975a:	4798      	blx	r3
 800975c:	6803      	ldr	r3, [r0, #0]
 800975e:	2b08      	cmp	r3, #8
 8009760:	4605      	mov	r5, r0
 8009762:	d01e      	beq.n	80097a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 8009764:	d80b      	bhi.n	800977e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009766:	2b02      	cmp	r3, #2
 8009768:	d027      	beq.n	80097ba <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800976a:	2b04      	cmp	r3, #4
 800976c:	d011      	beq.n	8009792 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800976e:	2b01      	cmp	r3, #1
 8009770:	d028      	beq.n	80097c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009772:	4b17      	ldr	r3, [pc, #92]	; (80097d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8009774:	4a17      	ldr	r2, [pc, #92]	; (80097d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8009776:	4818      	ldr	r0, [pc, #96]	; (80097d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 8009778:	218b      	movs	r1, #139	; 0x8b
 800977a:	f010 fdfb 	bl	801a374 <__assert_func>
 800977e:	2b40      	cmp	r3, #64	; 0x40
 8009780:	d020      	beq.n	80097c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009782:	d801      	bhi.n	8009788 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8009784:	2b20      	cmp	r3, #32
 8009786:	e7f3      	b.n	8009770 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009788:	2b80      	cmp	r3, #128	; 0x80
 800978a:	d01b      	beq.n	80097c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800978c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009790:	e7ee      	b.n	8009770 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009792:	6823      	ldr	r3, [r4, #0]
 8009794:	7f01      	ldrb	r1, [r0, #28]
 8009796:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009798:	4620      	mov	r0, r4
 800979a:	4798      	blx	r3
 800979c:	6823      	ldr	r3, [r4, #0]
 800979e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80097a0:	e006      	b.n	80097b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80097a2:	6823      	ldr	r3, [r4, #0]
 80097a4:	7f01      	ldrb	r1, [r0, #28]
 80097a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80097a8:	4620      	mov	r0, r4
 80097aa:	4798      	blx	r3
 80097ac:	6823      	ldr	r3, [r4, #0]
 80097ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80097b0:	4629      	mov	r1, r5
 80097b2:	4620      	mov	r0, r4
 80097b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80097b8:	4718      	bx	r3
 80097ba:	6823      	ldr	r3, [r4, #0]
 80097bc:	4620      	mov	r0, r4
 80097be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80097c0:	4798      	blx	r3
 80097c2:	e7f3      	b.n	80097ac <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 80097c4:	6823      	ldr	r3, [r4, #0]
 80097c6:	4620      	mov	r0, r4
 80097c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80097ca:	4798      	blx	r3
 80097cc:	e7e6      	b.n	800979c <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 80097ce:	bf00      	nop
 80097d0:	0801cca2 	.word	0x0801cca2
 80097d4:	0801cd64 	.word	0x0801cd64
 80097d8:	0801ccc7 	.word	0x0801ccc7

080097dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80097dc:	b570      	push	{r4, r5, r6, lr}
 80097de:	4604      	mov	r4, r0
 80097e0:	460e      	mov	r6, r1
 80097e2:	6860      	ldr	r0, [r4, #4]
 80097e4:	6803      	ldr	r3, [r0, #0]
 80097e6:	685b      	ldr	r3, [r3, #4]
 80097e8:	4798      	blx	r3
 80097ea:	2800      	cmp	r0, #0
 80097ec:	d1f9      	bne.n	80097e2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80097ee:	4d0b      	ldr	r5, [pc, #44]	; (800981c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 80097f0:	6828      	ldr	r0, [r5, #0]
 80097f2:	6803      	ldr	r3, [r0, #0]
 80097f4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80097f6:	4798      	blx	r3
 80097f8:	f7f7 f8ce 	bl	8000998 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80097fc:	6860      	ldr	r0, [r4, #4]
 80097fe:	6803      	ldr	r3, [r0, #0]
 8009800:	4631      	mov	r1, r6
 8009802:	689b      	ldr	r3, [r3, #8]
 8009804:	4798      	blx	r3
 8009806:	6823      	ldr	r3, [r4, #0]
 8009808:	4620      	mov	r0, r4
 800980a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800980c:	4798      	blx	r3
 800980e:	6828      	ldr	r0, [r5, #0]
 8009810:	6803      	ldr	r3, [r0, #0]
 8009812:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009816:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009818:	4718      	bx	r3
 800981a:	bf00      	nop
 800981c:	200120ac 	.word	0x200120ac

08009820 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8009820:	b508      	push	{r3, lr}
 8009822:	f7f7 f8ab 	bl	800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009826:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800982a:	f7f7 b8af 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800982e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800982e:	b510      	push	{r4, lr}
 8009830:	2114      	movs	r1, #20
 8009832:	4604      	mov	r4, r0
 8009834:	f010 fd72 	bl	801a31c <_ZdlPvj>
 8009838:	4620      	mov	r0, r4
 800983a:	bd10      	pop	{r4, pc}

0800983c <_ZN8touchgfx13DMA_Interface5startEv>:
 800983c:	b510      	push	{r4, lr}
 800983e:	4604      	mov	r4, r0
 8009840:	6840      	ldr	r0, [r0, #4]
 8009842:	6803      	ldr	r3, [r0, #0]
 8009844:	681b      	ldr	r3, [r3, #0]
 8009846:	4798      	blx	r3
 8009848:	b948      	cbnz	r0, 800985e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800984a:	7a63      	ldrb	r3, [r4, #9]
 800984c:	b13b      	cbz	r3, 800985e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800984e:	7a23      	ldrb	r3, [r4, #8]
 8009850:	b92b      	cbnz	r3, 800985e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009852:	6823      	ldr	r3, [r4, #0]
 8009854:	4620      	mov	r0, r4
 8009856:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800985c:	4718      	bx	r3
 800985e:	bd10      	pop	{r4, pc}

08009860 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8009860:	b510      	push	{r4, lr}
 8009862:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8009866:	1b12      	subs	r2, r2, r4
 8009868:	2a00      	cmp	r2, #0
 800986a:	bfdc      	itt	le
 800986c:	6883      	ldrle	r3, [r0, #8]
 800986e:	18d2      	addle	r2, r2, r3
 8009870:	2a01      	cmp	r2, #1
 8009872:	dd18      	ble.n	80098a6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 8009874:	6843      	ldr	r3, [r0, #4]
 8009876:	f101 021c 	add.w	r2, r1, #28
 800987a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800987e:	f851 4b04 	ldr.w	r4, [r1], #4
 8009882:	f843 4b04 	str.w	r4, [r3], #4
 8009886:	4291      	cmp	r1, r2
 8009888:	d1f9      	bne.n	800987e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800988a:	880a      	ldrh	r2, [r1, #0]
 800988c:	801a      	strh	r2, [r3, #0]
 800988e:	788a      	ldrb	r2, [r1, #2]
 8009890:	709a      	strb	r2, [r3, #2]
 8009892:	68c3      	ldr	r3, [r0, #12]
 8009894:	6882      	ldr	r2, [r0, #8]
 8009896:	f3bf 8f5b 	dmb	ish
 800989a:	3301      	adds	r3, #1
 800989c:	429a      	cmp	r2, r3
 800989e:	bfd8      	it	le
 80098a0:	1a9b      	suble	r3, r3, r2
 80098a2:	60c3      	str	r3, [r0, #12]
 80098a4:	bd10      	pop	{r4, pc}
 80098a6:	4b03      	ldr	r3, [pc, #12]	; (80098b4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 80098a8:	4a03      	ldr	r2, [pc, #12]	; (80098b8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 80098aa:	4804      	ldr	r0, [pc, #16]	; (80098bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 80098ac:	2139      	movs	r1, #57	; 0x39
 80098ae:	f010 fd61 	bl	801a374 <__assert_func>
 80098b2:	bf00      	nop
 80098b4:	0801cced 	.word	0x0801cced
 80098b8:	0801cd94 	.word	0x0801cd94
 80098bc:	0801ccc7 	.word	0x0801ccc7

080098c0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80098c0:	b510      	push	{r4, lr}
 80098c2:	6803      	ldr	r3, [r0, #0]
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	4604      	mov	r4, r0
 80098c8:	4798      	blx	r3
 80098ca:	b128      	cbz	r0, 80098d8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 80098cc:	4b07      	ldr	r3, [pc, #28]	; (80098ec <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 80098ce:	4a08      	ldr	r2, [pc, #32]	; (80098f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 80098d0:	4808      	ldr	r0, [pc, #32]	; (80098f4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 80098d2:	213f      	movs	r1, #63	; 0x3f
 80098d4:	f010 fd4e 	bl	801a374 <__assert_func>
 80098d8:	6923      	ldr	r3, [r4, #16]
 80098da:	68a2      	ldr	r2, [r4, #8]
 80098dc:	f3bf 8f5b 	dmb	ish
 80098e0:	3301      	adds	r3, #1
 80098e2:	429a      	cmp	r2, r3
 80098e4:	bfd8      	it	le
 80098e6:	1a9b      	suble	r3, r3, r2
 80098e8:	6123      	str	r3, [r4, #16]
 80098ea:	bd10      	pop	{r4, pc}
 80098ec:	0801cd10 	.word	0x0801cd10
 80098f0:	0801cde2 	.word	0x0801cde2
 80098f4:	0801ccc7 	.word	0x0801ccc7

080098f8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80098f8:	b570      	push	{r4, r5, r6, lr}
 80098fa:	4604      	mov	r4, r0
 80098fc:	6840      	ldr	r0, [r0, #4]
 80098fe:	6803      	ldr	r3, [r0, #0]
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	4798      	blx	r3
 8009904:	4605      	mov	r5, r0
 8009906:	b930      	cbnz	r0, 8009916 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009908:	7a23      	ldrb	r3, [r4, #8]
 800990a:	b123      	cbz	r3, 8009916 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800990c:	6860      	ldr	r0, [r4, #4]
 800990e:	6803      	ldr	r3, [r0, #0]
 8009910:	695b      	ldr	r3, [r3, #20]
 8009912:	4798      	blx	r3
 8009914:	7225      	strb	r5, [r4, #8]
 8009916:	6860      	ldr	r0, [r4, #4]
 8009918:	6803      	ldr	r3, [r0, #0]
 800991a:	681b      	ldr	r3, [r3, #0]
 800991c:	4798      	blx	r3
 800991e:	b928      	cbnz	r0, 800992c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8009920:	6823      	ldr	r3, [r4, #0]
 8009922:	4620      	mov	r0, r4
 8009924:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009926:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800992a:	4718      	bx	r3
 800992c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009930:	f7f7 b83a 	b.w	80009a8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08009934 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8009934:	b510      	push	{r4, lr}
 8009936:	4c04      	ldr	r4, [pc, #16]	; (8009948 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8009938:	6082      	str	r2, [r0, #8]
 800993a:	2200      	movs	r2, #0
 800993c:	e9c0 4100 	strd	r4, r1, [r0]
 8009940:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8009944:	bd10      	pop	{r4, pc}
 8009946:	bf00      	nop
 8009948:	0801cd48 	.word	0x0801cd48

0800994c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800994c:	6840      	ldr	r0, [r0, #4]
 800994e:	6803      	ldr	r3, [r0, #0]
 8009950:	681b      	ldr	r3, [r3, #0]
 8009952:	4718      	bx	r3

08009954 <_ZN8touchgfx13ScalableImage8setAlphaEh>:
 8009954:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
 8009958:	4770      	bx	lr

0800995a <_ZNK8touchgfx13ScalableImage8getAlphaEv>:
 800995a:	f890 002a 	ldrb.w	r0, [r0, #42]	; 0x2a
 800995e:	4770      	bx	lr

08009960 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 8009960:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8009964:	4770      	bx	lr

08009966 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8009966:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800996a:	4770      	bx	lr

0800996c <_ZN8touchgfx13ScalableImageD1Ev>:
 800996c:	4770      	bx	lr

0800996e <_ZN8touchgfx13ScalableImage9setBitmapERKNS_6BitmapE>:
 800996e:	b570      	push	{r4, r5, r6, lr}
 8009970:	4605      	mov	r5, r0
 8009972:	880b      	ldrh	r3, [r1, #0]
 8009974:	8503      	strh	r3, [r0, #40]	; 0x28
 8009976:	f855 3b28 	ldr.w	r3, [r5], #40
 800997a:	4604      	mov	r4, r0
 800997c:	4628      	mov	r0, r5
 800997e:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8009980:	f005 f82a 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009984:	b201      	sxth	r1, r0
 8009986:	4620      	mov	r0, r4
 8009988:	47b0      	blx	r6
 800998a:	6823      	ldr	r3, [r4, #0]
 800998c:	4628      	mov	r0, r5
 800998e:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 8009990:	f005 f85c 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009994:	4633      	mov	r3, r6
 8009996:	b201      	sxth	r1, r0
 8009998:	4620      	mov	r0, r4
 800999a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800999e:	4718      	bx	r3

080099a0 <_ZN8touchgfx13ScalableImageD0Ev>:
 80099a0:	b510      	push	{r4, lr}
 80099a2:	212c      	movs	r1, #44	; 0x2c
 80099a4:	4604      	mov	r4, r0
 80099a6:	f010 fcb9 	bl	801a31c <_ZdlPvj>
 80099aa:	4620      	mov	r0, r4
 80099ac:	bd10      	pop	{r4, pc}

080099ae <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 80099ae:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80099b0:	f891 302a 	ldrb.w	r3, [r1, #42]	; 0x2a
 80099b4:	2bff      	cmp	r3, #255	; 0xff
 80099b6:	4605      	mov	r5, r0
 80099b8:	d007      	beq.n	80099ca <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 80099ba:	2300      	movs	r3, #0
 80099bc:	802b      	strh	r3, [r5, #0]
 80099be:	806b      	strh	r3, [r5, #2]
 80099c0:	80ab      	strh	r3, [r5, #4]
 80099c2:	80eb      	strh	r3, [r5, #6]
 80099c4:	4628      	mov	r0, r5
 80099c6:	b004      	add	sp, #16
 80099c8:	bd70      	pop	{r4, r5, r6, pc}
 80099ca:	f101 0428 	add.w	r4, r1, #40	; 0x28
 80099ce:	4621      	mov	r1, r4
 80099d0:	4668      	mov	r0, sp
 80099d2:	f005 f875 	bl	800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80099d6:	4620      	mov	r0, r4
 80099d8:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 80099dc:	f004 fffc 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80099e0:	4286      	cmp	r6, r0
 80099e2:	d1ea      	bne.n	80099ba <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 80099e4:	4621      	mov	r1, r4
 80099e6:	a802      	add	r0, sp, #8
 80099e8:	f005 f86a 	bl	800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80099ec:	4620      	mov	r0, r4
 80099ee:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80099f2:	f005 f82b 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80099f6:	4286      	cmp	r6, r0
 80099f8:	d1df      	bne.n	80099ba <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 80099fa:	4621      	mov	r1, r4
 80099fc:	4628      	mov	r0, r5
 80099fe:	f005 f85f 	bl	800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8009a02:	e7df      	b.n	80099c4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>

08009a04 <_ZN8touchgfx13ScalableImageC1Ev>:
 8009a04:	2200      	movs	r2, #0
 8009a06:	8082      	strh	r2, [r0, #4]
 8009a08:	80c2      	strh	r2, [r0, #6]
 8009a0a:	8102      	strh	r2, [r0, #8]
 8009a0c:	8142      	strh	r2, [r0, #10]
 8009a0e:	8182      	strh	r2, [r0, #12]
 8009a10:	81c2      	strh	r2, [r0, #14]
 8009a12:	8202      	strh	r2, [r0, #16]
 8009a14:	8242      	strh	r2, [r0, #18]
 8009a16:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8009a1a:	61c2      	str	r2, [r0, #28]
 8009a1c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8009a20:	2201      	movs	r2, #1
 8009a22:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8009a26:	4905      	ldr	r1, [pc, #20]	; (8009a3c <_ZN8touchgfx13ScalableImageC1Ev+0x38>)
 8009a28:	f880 2026 	strb.w	r2, [r0, #38]	; 0x26
 8009a2c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a30:	6001      	str	r1, [r0, #0]
 8009a32:	8502      	strh	r2, [r0, #40]	; 0x28
 8009a34:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8009a38:	4770      	bx	lr
 8009a3a:	bf00      	nop
 8009a3c:	0801ce1c 	.word	0x0801ce1c

08009a40 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8009a40:	4603      	mov	r3, r0
 8009a42:	3028      	adds	r0, #40	; 0x28
 8009a44:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8009a48:	b90b      	cbnz	r3, 8009a4e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8009a4a:	f003 b849 	b.w	800cae0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8009a4e:	f003 b857 	b.w	800cb00 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

08009a54 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8009a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a58:	4604      	mov	r4, r0
 8009a5a:	469b      	mov	fp, r3
 8009a5c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8009a60:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8009a64:	f9b1 6000 	ldrsh.w	r6, [r1]
 8009a68:	8888      	ldrh	r0, [r1, #4]
 8009a6a:	b0ab      	sub	sp, #172	; 0xac
 8009a6c:	4430      	add	r0, r6
 8009a6e:	b280      	uxth	r0, r0
 8009a70:	9206      	str	r2, [sp, #24]
 8009a72:	fa0f fe80 	sxth.w	lr, r0
 8009a76:	2200      	movs	r2, #0
 8009a78:	4596      	cmp	lr, r2
 8009a7a:	e9dd a934 	ldrd	sl, r9, [sp, #208]	; 0xd0
 8009a7e:	e9dd 8736 	ldrd	r8, r7, [sp, #216]	; 0xd8
 8009a82:	920e      	str	r2, [sp, #56]	; 0x38
 8009a84:	f340 80f2 	ble.w	8009c6c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x218>
 8009a88:	45b4      	cmp	ip, r6
 8009a8a:	f340 80ef 	ble.w	8009c6c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x218>
 8009a8e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009a92:	88ca      	ldrh	r2, [r1, #6]
 8009a94:	442a      	add	r2, r5
 8009a96:	b292      	uxth	r2, r2
 8009a98:	b211      	sxth	r1, r2
 8009a9a:	2900      	cmp	r1, #0
 8009a9c:	f340 80e6 	ble.w	8009c6c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x218>
 8009aa0:	42ab      	cmp	r3, r5
 8009aa2:	f340 80e3 	ble.w	8009c6c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x218>
 8009aa6:	45f4      	cmp	ip, lr
 8009aa8:	bfb8      	it	lt
 8009aaa:	fa1f f08c 	uxthlt.w	r0, ip
 8009aae:	428b      	cmp	r3, r1
 8009ab0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8009ab4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8009ab8:	bfb8      	it	lt
 8009aba:	b29a      	uxthlt	r2, r3
 8009abc:	1b80      	subs	r0, r0, r6
 8009abe:	1b52      	subs	r2, r2, r5
 8009ac0:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 8009ac4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 8009ac8:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 8009acc:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 8009ad0:	ab0e      	add	r3, sp, #56	; 0x38
 8009ad2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8009ad6:	6822      	ldr	r2, [r4, #0]
 8009ad8:	9307      	str	r3, [sp, #28]
 8009ada:	ad10      	add	r5, sp, #64	; 0x40
 8009adc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009ade:	e885 0003 	stmia.w	r5, {r0, r1}
 8009ae2:	4629      	mov	r1, r5
 8009ae4:	4620      	mov	r0, r4
 8009ae6:	4790      	blx	r2
 8009ae8:	4621      	mov	r1, r4
 8009aea:	a812      	add	r0, sp, #72	; 0x48
 8009aec:	f002 ff54 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009af0:	a812      	add	r0, sp, #72	; 0x48
 8009af2:	f002 f845 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8009af6:	9b07      	ldr	r3, [sp, #28]
 8009af8:	1d26      	adds	r6, r4, #4
 8009afa:	4618      	mov	r0, r3
 8009afc:	4631      	mov	r1, r6
 8009afe:	f002 f827 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8009b02:	4628      	mov	r0, r5
 8009b04:	f104 0528 	add.w	r5, r4, #40	; 0x28
 8009b08:	f002 f83a 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8009b0c:	4628      	mov	r0, r5
 8009b0e:	f005 f86b 	bl	800ebe8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8009b12:	9007      	str	r0, [sp, #28]
 8009b14:	2800      	cmp	r0, #0
 8009b16:	f000 80a6 	beq.w	8009c66 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x212>
 8009b1a:	f8db 2000 	ldr.w	r2, [fp]
 8009b1e:	9208      	str	r2, [sp, #32]
 8009b20:	f8db 2004 	ldr.w	r2, [fp, #4]
 8009b24:	9209      	str	r2, [sp, #36]	; 0x24
 8009b26:	f8db 2008 	ldr.w	r2, [fp, #8]
 8009b2a:	920a      	str	r2, [sp, #40]	; 0x28
 8009b2c:	f8da 2000 	ldr.w	r2, [sl]
 8009b30:	920b      	str	r2, [sp, #44]	; 0x2c
 8009b32:	f8da 2004 	ldr.w	r2, [sl, #4]
 8009b36:	920c      	str	r2, [sp, #48]	; 0x30
 8009b38:	f8da 2008 	ldr.w	r2, [sl, #8]
 8009b3c:	920d      	str	r2, [sp, #52]	; 0x34
 8009b3e:	a90b      	add	r1, sp, #44	; 0x2c
 8009b40:	4632      	mov	r2, r6
 8009b42:	a808      	add	r0, sp, #32
 8009b44:	f001 ffe8 	bl	800bb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8009b48:	4632      	mov	r2, r6
 8009b4a:	a90c      	add	r1, sp, #48	; 0x30
 8009b4c:	a809      	add	r0, sp, #36	; 0x24
 8009b4e:	f001 ffe3 	bl	800bb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8009b52:	4632      	mov	r2, r6
 8009b54:	a90d      	add	r1, sp, #52	; 0x34
 8009b56:	a80a      	add	r0, sp, #40	; 0x28
 8009b58:	f001 ffde 	bl	800bb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8009b5c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8009b60:	ed97 6a00 	vldr	s12, [r7]
 8009b64:	ed99 5a00 	vldr	s10, [r9]
 8009b68:	edd8 5a00 	vldr	s11, [r8]
 8009b6c:	edd9 6a01 	vldr	s13, [r9, #4]
 8009b70:	f8d9 e008 	ldr.w	lr, [r9, #8]
 8009b74:	f8d8 c008 	ldr.w	ip, [r8, #8]
 8009b78:	f8d7 a004 	ldr.w	sl, [r7, #4]
 8009b7c:	9b06      	ldr	r3, [sp, #24]
 8009b7e:	f8d8 b004 	ldr.w	fp, [r8, #4]
 8009b82:	68bf      	ldr	r7, [r7, #8]
 8009b84:	ed8d 5a1d 	vstr	s10, [sp, #116]	; 0x74
 8009b88:	eeb0 7a67 	vmov.f32	s14, s15
 8009b8c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8009b90:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 8009b94:	edcd 5a1e 	vstr	s11, [sp, #120]	; 0x78
 8009b98:	ee17 6a10 	vmov	r6, s14
 8009b9c:	eeb0 7a67 	vmov.f32	s14, s15
 8009ba0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8009ba4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8009ba8:	ed8d 6a1f 	vstr	s12, [sp, #124]	; 0x7c
 8009bac:	ee17 0a10 	vmov	r0, s14
 8009bb0:	eeb0 7a67 	vmov.f32	s14, s15
 8009bb4:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8009bb8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8009bbc:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8009bc0:	ee17 1a10 	vmov	r1, s14
 8009bc4:	eeb0 7a67 	vmov.f32	s14, s15
 8009bc8:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8009bcc:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8009bd0:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
 8009bd4:	ee17 2a10 	vmov	r2, s14
 8009bd8:	ed9d 7a08 	vldr	s14, [sp, #32]
 8009bdc:	9225      	str	r2, [sp, #148]	; 0x94
 8009bde:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8009be2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8009be6:	4a23      	ldr	r2, [pc, #140]	; (8009c74 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 8009be8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8009bec:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 8009bf0:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 8009bf4:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 8009bf8:	9314      	str	r3, [sp, #80]	; 0x50
 8009bfa:	961c      	str	r6, [sp, #112]	; 0x70
 8009bfc:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8009c00:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
 8009c04:	9729      	str	r7, [sp, #164]	; 0xa4
 8009c06:	4628      	mov	r0, r5
 8009c08:	8812      	ldrh	r2, [r2, #0]
 8009c0a:	9b07      	ldr	r3, [sp, #28]
 8009c0c:	9215      	str	r2, [sp, #84]	; 0x54
 8009c0e:	9316      	str	r3, [sp, #88]	; 0x58
 8009c10:	f005 f81c 	bl	800ec4c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8009c14:	9017      	str	r0, [sp, #92]	; 0x5c
 8009c16:	4628      	mov	r0, r5
 8009c18:	f004 fede 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009c1c:	9018      	str	r0, [sp, #96]	; 0x60
 8009c1e:	4628      	mov	r0, r5
 8009c20:	f004 ff14 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009c24:	9019      	str	r0, [sp, #100]	; 0x64
 8009c26:	4628      	mov	r0, r5
 8009c28:	f004 fed6 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009c2c:	4b12      	ldr	r3, [pc, #72]	; (8009c78 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x224>)
 8009c2e:	901a      	str	r0, [sp, #104]	; 0x68
 8009c30:	681b      	ldr	r3, [r3, #0]
 8009c32:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009c36:	b10a      	cbz	r2, 8009c3c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1e8>
 8009c38:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8009c3a:	b905      	cbnz	r5, 8009c3e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 8009c3c:	689d      	ldr	r5, [r3, #8]
 8009c3e:	4620      	mov	r0, r4
 8009c40:	f7ff fefe 	bl	8009a40 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8009c44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009c48:	9304      	str	r3, [sp, #16]
 8009c4a:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
 8009c4e:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8009c52:	ab10      	add	r3, sp, #64	; 0x40
 8009c54:	9301      	str	r3, [sp, #4]
 8009c56:	ab12      	add	r3, sp, #72	; 0x48
 8009c58:	9300      	str	r3, [sp, #0]
 8009c5a:	aa1b      	add	r2, sp, #108	; 0x6c
 8009c5c:	ab16      	add	r3, sp, #88	; 0x58
 8009c5e:	a914      	add	r1, sp, #80	; 0x50
 8009c60:	4628      	mov	r0, r5
 8009c62:	f001 fafd 	bl	800b260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 8009c66:	b02b      	add	sp, #172	; 0xac
 8009c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c6c:	2300      	movs	r3, #0
 8009c6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8009c70:	e72e      	b.n	8009ad0 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 8009c72:	bf00      	nop
 8009c74:	200120a6 	.word	0x200120a6
 8009c78:	200120ac 	.word	0x200120ac

08009c7c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8009c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c80:	ed2d 8b0a 	vpush	{d8-d12}
 8009c84:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 8009c88:	b095      	sub	sp, #84	; 0x54
 8009c8a:	4680      	mov	r8, r0
 8009c8c:	4689      	mov	r9, r1
 8009c8e:	2b00      	cmp	r3, #0
 8009c90:	f000 808a 	beq.w	8009da8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x12c>
 8009c94:	4c4b      	ldr	r4, [pc, #300]	; (8009dc4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x148>)
 8009c96:	ed9f 8a4c 	vldr	s16, [pc, #304]	; 8009dc8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x14c>
 8009c9a:	6820      	ldr	r0, [r4, #0]
 8009c9c:	6803      	ldr	r3, [r0, #0]
 8009c9e:	6a1b      	ldr	r3, [r3, #32]
 8009ca0:	4798      	blx	r3
 8009ca2:	f9b8 3008 	ldrsh.w	r3, [r8, #8]
 8009ca6:	ee09 3a10 	vmov	s18, r3
 8009caa:	f9b8 300a 	ldrsh.w	r3, [r8, #10]
 8009cae:	f108 0528 	add.w	r5, r8, #40	; 0x28
 8009cb2:	ee08 3a90 	vmov	s17, r3
 8009cb6:	4682      	mov	sl, r0
 8009cb8:	4b44      	ldr	r3, [pc, #272]	; (8009dcc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x150>)
 8009cba:	930b      	str	r3, [sp, #44]	; 0x2c
 8009cbc:	4628      	mov	r0, r5
 8009cbe:	930c      	str	r3, [sp, #48]	; 0x30
 8009cc0:	930d      	str	r3, [sp, #52]	; 0x34
 8009cc2:	f004 fe89 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009cc6:	ee07 0a90 	vmov	s15, r0
 8009cca:	4628      	mov	r0, r5
 8009ccc:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 8009cd0:	f004 febc 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009cd4:	4b3e      	ldr	r3, [pc, #248]	; (8009dd0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x154>)
 8009cd6:	781b      	ldrb	r3, [r3, #0]
 8009cd8:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 8009cdc:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8009ce0:	ee07 0a90 	vmov	s15, r0
 8009ce4:	2b01      	cmp	r3, #1
 8009ce6:	ee39 9a08 	vadd.f32	s18, s18, s16
 8009cea:	ee78 8a88 	vadd.f32	s17, s17, s16
 8009cee:	eef8 9a67 	vcvt.f32.u32	s19, s15
 8009cf2:	46a3      	mov	fp, r4
 8009cf4:	d15d      	bne.n	8009db2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x136>
 8009cf6:	eef0 aa4a 	vmov.f32	s21, s20
 8009cfa:	eef0 ba69 	vmov.f32	s23, s19
 8009cfe:	eeb0 ca69 	vmov.f32	s24, s19
 8009d02:	eeb0 ba4a 	vmov.f32	s22, s20
 8009d06:	eef0 9a48 	vmov.f32	s19, s16
 8009d0a:	eeb0 aa48 	vmov.f32	s20, s16
 8009d0e:	af11      	add	r7, sp, #68	; 0x44
 8009d10:	ae0e      	add	r6, sp, #56	; 0x38
 8009d12:	ad0b      	add	r5, sp, #44	; 0x2c
 8009d14:	ac08      	add	r4, sp, #32
 8009d16:	ab05      	add	r3, sp, #20
 8009d18:	4652      	mov	r2, sl
 8009d1a:	4649      	mov	r1, r9
 8009d1c:	4640      	mov	r0, r8
 8009d1e:	9703      	str	r7, [sp, #12]
 8009d20:	9602      	str	r6, [sp, #8]
 8009d22:	9501      	str	r5, [sp, #4]
 8009d24:	9400      	str	r4, [sp, #0]
 8009d26:	ed8d 8a05 	vstr	s16, [sp, #20]
 8009d2a:	ed8d 9a06 	vstr	s18, [sp, #24]
 8009d2e:	ed8d 9a07 	vstr	s18, [sp, #28]
 8009d32:	ed8d 8a08 	vstr	s16, [sp, #32]
 8009d36:	ed8d 8a09 	vstr	s16, [sp, #36]	; 0x24
 8009d3a:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 8009d3e:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 8009d42:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 8009d46:	ed8d ca10 	vstr	s24, [sp, #64]	; 0x40
 8009d4a:	ed8d ba11 	vstr	s22, [sp, #68]	; 0x44
 8009d4e:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 8009d52:	edcd 9a13 	vstr	s19, [sp, #76]	; 0x4c
 8009d56:	f7ff fe7d 	bl	8009a54 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8009d5a:	ab05      	add	r3, sp, #20
 8009d5c:	4640      	mov	r0, r8
 8009d5e:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8009d62:	e9cd 4500 	strd	r4, r5, [sp]
 8009d66:	4652      	mov	r2, sl
 8009d68:	4649      	mov	r1, r9
 8009d6a:	ed8d 8a05 	vstr	s16, [sp, #20]
 8009d6e:	ed8d 9a06 	vstr	s18, [sp, #24]
 8009d72:	ed8d 8a07 	vstr	s16, [sp, #28]
 8009d76:	ed8d 8a08 	vstr	s16, [sp, #32]
 8009d7a:	edcd 8a09 	vstr	s17, [sp, #36]	; 0x24
 8009d7e:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 8009d82:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 8009d86:	ed8d ca0f 	vstr	s24, [sp, #60]	; 0x3c
 8009d8a:	edcd ba10 	vstr	s23, [sp, #64]	; 0x40
 8009d8e:	ed8d ba11 	vstr	s22, [sp, #68]	; 0x44
 8009d92:	edcd 9a12 	vstr	s19, [sp, #72]	; 0x48
 8009d96:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 8009d9a:	f7ff fe5b 	bl	8009a54 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8009d9e:	f8db 0000 	ldr.w	r0, [fp]
 8009da2:	6803      	ldr	r3, [r0, #0]
 8009da4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009da6:	4798      	blx	r3
 8009da8:	b015      	add	sp, #84	; 0x54
 8009daa:	ecbd 8b0a 	vpop	{d8-d12}
 8009dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009db2:	eef0 aa69 	vmov.f32	s21, s19
 8009db6:	eeb0 ca4a 	vmov.f32	s24, s20
 8009dba:	eef0 ba48 	vmov.f32	s23, s16
 8009dbe:	eeb0 ba48 	vmov.f32	s22, s16
 8009dc2:	e7a4      	b.n	8009d0e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x92>
 8009dc4:	200120ac 	.word	0x200120ac
 8009dc8:	00000000 	.word	0x00000000
 8009dcc:	42c80000 	.word	0x42c80000
 8009dd0:	200120a4 	.word	0x200120a4

08009dd4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8009dd4:	2200      	movs	r2, #0
 8009dd6:	8002      	strh	r2, [r0, #0]
 8009dd8:	8042      	strh	r2, [r0, #2]
 8009dda:	8082      	strh	r2, [r0, #4]
 8009ddc:	80c2      	strh	r2, [r0, #6]
 8009dde:	4770      	bx	lr

08009de0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 8009de0:	b570      	push	{r4, r5, r6, lr}
 8009de2:	6803      	ldr	r3, [r0, #0]
 8009de4:	4604      	mov	r4, r0
 8009de6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009de8:	4615      	mov	r5, r2
 8009dea:	4798      	blx	r3
 8009dec:	6823      	ldr	r3, [r4, #0]
 8009dee:	4629      	mov	r1, r5
 8009df0:	4620      	mov	r0, r4
 8009df2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009df4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009df8:	4718      	bx	r3

08009dfa <_ZN8touchgfx8TextAreaD1Ev>:
 8009dfa:	4770      	bx	lr

08009dfc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8009dfc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009dfe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009e00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009e04:	4299      	cmp	r1, r3
 8009e06:	d029      	beq.n	8009e5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8009e08:	4b15      	ldr	r3, [pc, #84]	; (8009e60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8009e0a:	681b      	ldr	r3, [r3, #0]
 8009e0c:	b92b      	cbnz	r3, 8009e1a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8009e0e:	4b15      	ldr	r3, [pc, #84]	; (8009e64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8009e10:	4a15      	ldr	r2, [pc, #84]	; (8009e68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009e12:	21b1      	movs	r1, #177	; 0xb1
 8009e14:	4815      	ldr	r0, [pc, #84]	; (8009e6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8009e16:	f010 faad 	bl	801a374 <__assert_func>
 8009e1a:	4a15      	ldr	r2, [pc, #84]	; (8009e70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8009e1c:	8812      	ldrh	r2, [r2, #0]
 8009e1e:	428a      	cmp	r2, r1
 8009e20:	d803      	bhi.n	8009e2a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8009e22:	4b14      	ldr	r3, [pc, #80]	; (8009e74 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8009e24:	4a10      	ldr	r2, [pc, #64]	; (8009e68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8009e26:	21b2      	movs	r1, #178	; 0xb2
 8009e28:	e7f4      	b.n	8009e14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8009e2a:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8009e2e:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8009e32:	4b11      	ldr	r3, [pc, #68]	; (8009e78 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8009e34:	7854      	ldrb	r4, [r2, #1]
 8009e36:	681b      	ldr	r3, [r3, #0]
 8009e38:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8009e3c:	682b      	ldr	r3, [r5, #0]
 8009e3e:	69de      	ldr	r6, [r3, #28]
 8009e40:	4b0e      	ldr	r3, [pc, #56]	; (8009e7c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8009e42:	6818      	ldr	r0, [r3, #0]
 8009e44:	f7f9 f8be 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 8009e48:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8009e4c:	2300      	movs	r3, #0
 8009e4e:	4602      	mov	r2, r0
 8009e50:	9300      	str	r3, [sp, #0]
 8009e52:	4621      	mov	r1, r4
 8009e54:	4628      	mov	r0, r5
 8009e56:	47b0      	blx	r6
 8009e58:	b002      	add	sp, #8
 8009e5a:	bd70      	pop	{r4, r5, r6, pc}
 8009e5c:	2000      	movs	r0, #0
 8009e5e:	e7fb      	b.n	8009e58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8009e60:	2001211c 	.word	0x2001211c
 8009e64:	0801beac 	.word	0x0801beac
 8009e68:	0801cf0c 	.word	0x0801cf0c
 8009e6c:	0801bf0c 	.word	0x0801bf0c
 8009e70:	20012120 	.word	0x20012120
 8009e74:	0801bf35 	.word	0x0801bf35
 8009e78:	20012124 	.word	0x20012124
 8009e7c:	20012128 	.word	0x20012128

08009e80 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8009e80:	b570      	push	{r4, r5, r6, lr}
 8009e82:	6803      	ldr	r3, [r0, #0]
 8009e84:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8009e86:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8009e88:	4b11      	ldr	r3, [pc, #68]	; (8009ed0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8009e8a:	681b      	ldr	r3, [r3, #0]
 8009e8c:	4604      	mov	r4, r0
 8009e8e:	b28d      	uxth	r5, r1
 8009e90:	b92b      	cbnz	r3, 8009e9e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8009e92:	4b10      	ldr	r3, [pc, #64]	; (8009ed4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8009e94:	4a10      	ldr	r2, [pc, #64]	; (8009ed8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009e96:	21b1      	movs	r1, #177	; 0xb1
 8009e98:	4810      	ldr	r0, [pc, #64]	; (8009edc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8009e9a:	f010 fa6b 	bl	801a374 <__assert_func>
 8009e9e:	4910      	ldr	r1, [pc, #64]	; (8009ee0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8009ea0:	8809      	ldrh	r1, [r1, #0]
 8009ea2:	4291      	cmp	r1, r2
 8009ea4:	d803      	bhi.n	8009eae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8009ea6:	4b0f      	ldr	r3, [pc, #60]	; (8009ee4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8009ea8:	4a0b      	ldr	r2, [pc, #44]	; (8009ed8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8009eaa:	21b2      	movs	r1, #178	; 0xb2
 8009eac:	e7f4      	b.n	8009e98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 8009eae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8009eb2:	4b0d      	ldr	r3, [pc, #52]	; (8009ee8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8009eb4:	681b      	ldr	r3, [r3, #0]
 8009eb6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009eba:	6803      	ldr	r3, [r0, #0]
 8009ebc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ebe:	4798      	blx	r3
 8009ec0:	1a29      	subs	r1, r5, r0
 8009ec2:	4633      	mov	r3, r6
 8009ec4:	4620      	mov	r0, r4
 8009ec6:	b209      	sxth	r1, r1
 8009ec8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009ecc:	4718      	bx	r3
 8009ece:	bf00      	nop
 8009ed0:	2001211c 	.word	0x2001211c
 8009ed4:	0801beac 	.word	0x0801beac
 8009ed8:	0801cf0c 	.word	0x0801cf0c
 8009edc:	0801bf0c 	.word	0x0801bf0c
 8009ee0:	20012120 	.word	0x20012120
 8009ee4:	0801bf35 	.word	0x0801bf35
 8009ee8:	20012124 	.word	0x20012124

08009eec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8009eec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ef0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8009ef2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009ef6:	4293      	cmp	r3, r2
 8009ef8:	b08c      	sub	sp, #48	; 0x30
 8009efa:	4604      	mov	r4, r0
 8009efc:	4688      	mov	r8, r1
 8009efe:	d05f      	beq.n	8009fc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8009f00:	4e31      	ldr	r6, [pc, #196]	; (8009fc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8009f02:	6832      	ldr	r2, [r6, #0]
 8009f04:	b92a      	cbnz	r2, 8009f12 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8009f06:	4b31      	ldr	r3, [pc, #196]	; (8009fcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8009f08:	4a31      	ldr	r2, [pc, #196]	; (8009fd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8009f0a:	21b1      	movs	r1, #177	; 0xb1
 8009f0c:	4831      	ldr	r0, [pc, #196]	; (8009fd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 8009f0e:	f010 fa31 	bl	801a374 <__assert_func>
 8009f12:	4d31      	ldr	r5, [pc, #196]	; (8009fd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8009f14:	8829      	ldrh	r1, [r5, #0]
 8009f16:	4299      	cmp	r1, r3
 8009f18:	d803      	bhi.n	8009f22 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 8009f1a:	4b30      	ldr	r3, [pc, #192]	; (8009fdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 8009f1c:	4a2c      	ldr	r2, [pc, #176]	; (8009fd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8009f1e:	21b2      	movs	r1, #178	; 0xb2
 8009f20:	e7f4      	b.n	8009f0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8009f22:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8009f26:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8009f2a:	4b2d      	ldr	r3, [pc, #180]	; (8009fe0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 8009f2c:	681b      	ldr	r3, [r3, #0]
 8009f2e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8009f32:	2a00      	cmp	r2, #0
 8009f34:	d044      	beq.n	8009fc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8009f36:	784b      	ldrb	r3, [r1, #1]
 8009f38:	9207      	str	r2, [sp, #28]
 8009f3a:	f3c3 0901 	ubfx	r9, r3, #0, #2
 8009f3e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8009f42:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8009f46:	4b27      	ldr	r3, [pc, #156]	; (8009fe4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8009f48:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 8009f4c:	681b      	ldr	r3, [r3, #0]
 8009f4e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8009f52:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009f56:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8009f5a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8009f5e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8009f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009f64:	9009      	str	r0, [sp, #36]	; 0x24
 8009f66:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 8009f6a:	f88d 9020 	strb.w	r9, [sp, #32]
 8009f6e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8009f72:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8009f76:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8009f7a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8009f7e:	b10a      	cbz	r2, 8009f84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8009f80:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8009f82:	b907      	cbnz	r7, 8009f86 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8009f84:	689f      	ldr	r7, [r3, #8]
 8009f86:	f10d 0914 	add.w	r9, sp, #20
 8009f8a:	4621      	mov	r1, r4
 8009f8c:	4648      	mov	r0, r9
 8009f8e:	f002 fd03 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009f92:	6833      	ldr	r3, [r6, #0]
 8009f94:	2b00      	cmp	r3, #0
 8009f96:	d0b6      	beq.n	8009f06 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8009f98:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8009f9a:	882b      	ldrh	r3, [r5, #0]
 8009f9c:	428b      	cmp	r3, r1
 8009f9e:	d9bc      	bls.n	8009f1a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8009fa0:	4b11      	ldr	r3, [pc, #68]	; (8009fe8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8009fa2:	6818      	ldr	r0, [r3, #0]
 8009fa4:	f7f9 f80e 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 8009fa8:	2300      	movs	r3, #0
 8009faa:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8009fae:	ab07      	add	r3, sp, #28
 8009fb0:	9001      	str	r0, [sp, #4]
 8009fb2:	9300      	str	r3, [sp, #0]
 8009fb4:	e899 0006 	ldmia.w	r9, {r1, r2}
 8009fb8:	4643      	mov	r3, r8
 8009fba:	4638      	mov	r0, r7
 8009fbc:	f7f8 ffb6 	bl	8002f2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8009fc0:	b00c      	add	sp, #48	; 0x30
 8009fc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009fc6:	bf00      	nop
 8009fc8:	2001211c 	.word	0x2001211c
 8009fcc:	0801beac 	.word	0x0801beac
 8009fd0:	0801cf0c 	.word	0x0801cf0c
 8009fd4:	0801bf0c 	.word	0x0801bf0c
 8009fd8:	20012120 	.word	0x20012120
 8009fdc:	0801bf35 	.word	0x0801bf35
 8009fe0:	20012124 	.word	0x20012124
 8009fe4:	200120ac 	.word	0x200120ac
 8009fe8:	20012128 	.word	0x20012128

08009fec <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8009fec:	b40e      	push	{r1, r2, r3}
 8009fee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ff2:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8009ff4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009ff8:	4293      	cmp	r3, r2
 8009ffa:	b09b      	sub	sp, #108	; 0x6c
 8009ffc:	4604      	mov	r4, r0
 8009ffe:	d061      	beq.n	800a0c4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a000:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800a0d8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800a004:	aa24      	add	r2, sp, #144	; 0x90
 800a006:	9203      	str	r2, [sp, #12]
 800a008:	f8da 2000 	ldr.w	r2, [sl]
 800a00c:	b92a      	cbnz	r2, 800a01a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a00e:	4b2e      	ldr	r3, [pc, #184]	; (800a0c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800a010:	4a2e      	ldr	r2, [pc, #184]	; (800a0cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a012:	21b1      	movs	r1, #177	; 0xb1
 800a014:	482e      	ldr	r0, [pc, #184]	; (800a0d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800a016:	f010 f9ad 	bl	801a374 <__assert_func>
 800a01a:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800a0dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800a01e:	f8b8 1000 	ldrh.w	r1, [r8]
 800a022:	4299      	cmp	r1, r3
 800a024:	d803      	bhi.n	800a02e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a026:	4b2b      	ldr	r3, [pc, #172]	; (800a0d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a028:	4a28      	ldr	r2, [pc, #160]	; (800a0cc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a02a:	21b2      	movs	r1, #178	; 0xb2
 800a02c:	e7f2      	b.n	800a014 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a02e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a0e0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800a032:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a036:	f8d9 3000 	ldr.w	r3, [r9]
 800a03a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a03e:	683b      	ldr	r3, [r7, #0]
 800a040:	4638      	mov	r0, r7
 800a042:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a044:	4798      	blx	r3
 800a046:	4606      	mov	r6, r0
 800a048:	b205      	sxth	r5, r0
 800a04a:	a804      	add	r0, sp, #16
 800a04c:	f003 f8e0 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800a050:	683b      	ldr	r3, [r7, #0]
 800a052:	4638      	mov	r0, r7
 800a054:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a056:	4798      	blx	r3
 800a058:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a05a:	9a03      	ldr	r2, [sp, #12]
 800a05c:	4603      	mov	r3, r0
 800a05e:	a804      	add	r0, sp, #16
 800a060:	f003 f91b 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800a064:	f8da 3000 	ldr.w	r3, [sl]
 800a068:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a06c:	2b00      	cmp	r3, #0
 800a06e:	d0ce      	beq.n	800a00e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a070:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a072:	f8b8 0000 	ldrh.w	r0, [r8]
 800a076:	4290      	cmp	r0, r2
 800a078:	d9d5      	bls.n	800a026 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a07a:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800a07e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a082:	787a      	ldrb	r2, [r7, #1]
 800a084:	f8d9 3000 	ldr.w	r3, [r9]
 800a088:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800a08c:	9700      	str	r7, [sp, #0]
 800a08e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a092:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a096:	a804      	add	r0, sp, #16
 800a098:	f000 ff58 	bl	800af4c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a09c:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a0a0:	18a9      	adds	r1, r5, r2
 800a0a2:	2900      	cmp	r1, #0
 800a0a4:	b203      	sxth	r3, r0
 800a0a6:	dd0b      	ble.n	800a0c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a0a8:	3b01      	subs	r3, #1
 800a0aa:	fb13 f302 	smulbb	r3, r3, r2
 800a0ae:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a0b2:	b21d      	sxth	r5, r3
 800a0b4:	4628      	mov	r0, r5
 800a0b6:	b01b      	add	sp, #108	; 0x6c
 800a0b8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0bc:	b003      	add	sp, #12
 800a0be:	4770      	bx	lr
 800a0c0:	2b00      	cmp	r3, #0
 800a0c2:	dcf7      	bgt.n	800a0b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a0c4:	2500      	movs	r5, #0
 800a0c6:	e7f5      	b.n	800a0b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a0c8:	0801beac 	.word	0x0801beac
 800a0cc:	0801cf0c 	.word	0x0801cf0c
 800a0d0:	0801bf0c 	.word	0x0801bf0c
 800a0d4:	0801bf35 	.word	0x0801bf35
 800a0d8:	2001211c 	.word	0x2001211c
 800a0dc:	20012120 	.word	0x20012120
 800a0e0:	20012124 	.word	0x20012124

0800a0e4 <_ZN8touchgfx8TextAreaD0Ev>:
 800a0e4:	b510      	push	{r4, lr}
 800a0e6:	213c      	movs	r1, #60	; 0x3c
 800a0e8:	4604      	mov	r4, r0
 800a0ea:	f010 f917 	bl	801a31c <_ZdlPvj>
 800a0ee:	4620      	mov	r0, r4
 800a0f0:	bd10      	pop	{r4, pc}
	...

0800a0f4 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a0f4:	b570      	push	{r4, r5, r6, lr}
 800a0f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a0f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a0fc:	4299      	cmp	r1, r3
 800a0fe:	4604      	mov	r4, r0
 800a100:	d01e      	beq.n	800a140 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a102:	6803      	ldr	r3, [r0, #0]
 800a104:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a106:	4b0f      	ldr	r3, [pc, #60]	; (800a144 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a108:	681b      	ldr	r3, [r3, #0]
 800a10a:	b92b      	cbnz	r3, 800a118 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a10c:	4b0e      	ldr	r3, [pc, #56]	; (800a148 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a10e:	4a0f      	ldr	r2, [pc, #60]	; (800a14c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a110:	21b1      	movs	r1, #177	; 0xb1
 800a112:	480f      	ldr	r0, [pc, #60]	; (800a150 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a114:	f010 f92e 	bl	801a374 <__assert_func>
 800a118:	4b0e      	ldr	r3, [pc, #56]	; (800a154 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a11a:	881b      	ldrh	r3, [r3, #0]
 800a11c:	428b      	cmp	r3, r1
 800a11e:	d803      	bhi.n	800a128 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a120:	4b0d      	ldr	r3, [pc, #52]	; (800a158 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a122:	4a0a      	ldr	r2, [pc, #40]	; (800a14c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a124:	21b2      	movs	r1, #178	; 0xb2
 800a126:	e7f4      	b.n	800a112 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a128:	4b0c      	ldr	r3, [pc, #48]	; (800a15c <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a12a:	6818      	ldr	r0, [r3, #0]
 800a12c:	f7f8 ff4a 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a130:	2300      	movs	r3, #0
 800a132:	4601      	mov	r1, r0
 800a134:	46ac      	mov	ip, r5
 800a136:	4620      	mov	r0, r4
 800a138:	461a      	mov	r2, r3
 800a13a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a13e:	4760      	bx	ip
 800a140:	2000      	movs	r0, #0
 800a142:	bd70      	pop	{r4, r5, r6, pc}
 800a144:	2001211c 	.word	0x2001211c
 800a148:	0801beac 	.word	0x0801beac
 800a14c:	0801cf0c 	.word	0x0801cf0c
 800a150:	0801bf0c 	.word	0x0801bf0c
 800a154:	20012120 	.word	0x20012120
 800a158:	0801bf35 	.word	0x0801bf35
 800a15c:	20012128 	.word	0x20012128

0800a160 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a160:	b570      	push	{r4, r5, r6, lr}
 800a162:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a164:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a168:	429a      	cmp	r2, r3
 800a16a:	4604      	mov	r4, r0
 800a16c:	d021      	beq.n	800a1b2 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800a16e:	6803      	ldr	r3, [r0, #0]
 800a170:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a172:	4798      	blx	r3
 800a174:	6823      	ldr	r3, [r4, #0]
 800a176:	4605      	mov	r5, r0
 800a178:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a17a:	4620      	mov	r0, r4
 800a17c:	4798      	blx	r3
 800a17e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a182:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a186:	6823      	ldr	r3, [r4, #0]
 800a188:	4606      	mov	r6, r0
 800a18a:	b22d      	sxth	r5, r5
 800a18c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a18e:	d109      	bne.n	800a1a4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800a190:	4629      	mov	r1, r5
 800a192:	4620      	mov	r0, r4
 800a194:	4798      	blx	r3
 800a196:	6823      	ldr	r3, [r4, #0]
 800a198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a19a:	4631      	mov	r1, r6
 800a19c:	4620      	mov	r0, r4
 800a19e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1a2:	4718      	bx	r3
 800a1a4:	4601      	mov	r1, r0
 800a1a6:	4620      	mov	r0, r4
 800a1a8:	4798      	blx	r3
 800a1aa:	6823      	ldr	r3, [r4, #0]
 800a1ac:	4629      	mov	r1, r5
 800a1ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a1b0:	e7f4      	b.n	800a19c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800a1b2:	bd70      	pop	{r4, r5, r6, pc}

0800a1b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800a1b4:	888a      	ldrh	r2, [r1, #4]
 800a1b6:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a1b8:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a1bc:	b922      	cbnz	r2, 800a1c8 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a1be:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a1c2:	b90b      	cbnz	r3, 800a1c8 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a1c4:	f7ff bfcc 	b.w	800a160 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a1c8:	4770      	bx	lr

0800a1ca <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a1ca:	2300      	movs	r3, #0
 800a1cc:	8003      	strh	r3, [r0, #0]
 800a1ce:	8043      	strh	r3, [r0, #2]
 800a1d0:	8083      	strh	r3, [r0, #4]
 800a1d2:	80c3      	strh	r3, [r0, #6]
 800a1d4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a1d8:	b91b      	cbnz	r3, 800a1e2 <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800a1da:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a1de:	2bff      	cmp	r3, #255	; 0xff
 800a1e0:	d103      	bne.n	800a1ea <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800a1e2:	890b      	ldrh	r3, [r1, #8]
 800a1e4:	8083      	strh	r3, [r0, #4]
 800a1e6:	894b      	ldrh	r3, [r1, #10]
 800a1e8:	80c3      	strh	r3, [r0, #6]
 800a1ea:	4770      	bx	lr

0800a1ec <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a1ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1ee:	4604      	mov	r4, r0
 800a1f0:	6808      	ldr	r0, [r1, #0]
 800a1f2:	6849      	ldr	r1, [r1, #4]
 800a1f4:	466b      	mov	r3, sp
 800a1f6:	c303      	stmia	r3!, {r0, r1}
 800a1f8:	6823      	ldr	r3, [r4, #0]
 800a1fa:	4669      	mov	r1, sp
 800a1fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1fe:	4620      	mov	r0, r4
 800a200:	4798      	blx	r3
 800a202:	4b08      	ldr	r3, [pc, #32]	; (800a224 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a204:	681b      	ldr	r3, [r3, #0]
 800a206:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a20a:	b10a      	cbz	r2, 800a210 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a20c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a20e:	b900      	cbnz	r0, 800a212 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a210:	6898      	ldr	r0, [r3, #8]
 800a212:	6803      	ldr	r3, [r0, #0]
 800a214:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a216:	699d      	ldr	r5, [r3, #24]
 800a218:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a21c:	4669      	mov	r1, sp
 800a21e:	47a8      	blx	r5
 800a220:	b003      	add	sp, #12
 800a222:	bd30      	pop	{r4, r5, pc}
 800a224:	200120ac 	.word	0x200120ac

0800a228 <_ZN8touchgfx3BoxD1Ev>:
 800a228:	4770      	bx	lr

0800a22a <_ZN8touchgfx3BoxD0Ev>:
 800a22a:	b510      	push	{r4, lr}
 800a22c:	2130      	movs	r1, #48	; 0x30
 800a22e:	4604      	mov	r4, r0
 800a230:	f010 f874 	bl	801a31c <_ZdlPvj>
 800a234:	4620      	mov	r0, r4
 800a236:	bd10      	pop	{r4, pc}

0800a238 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a238:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a23c:	4770      	bx	lr

0800a23e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a23e:	b538      	push	{r3, r4, r5, lr}
 800a240:	880b      	ldrh	r3, [r1, #0]
 800a242:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800a244:	4605      	mov	r5, r0
 800a246:	8813      	ldrh	r3, [r2, #0]
 800a248:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a24c:	4604      	mov	r4, r0
 800a24e:	4628      	mov	r0, r5
 800a250:	f004 fbc2 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a254:	8120      	strh	r0, [r4, #8]
 800a256:	4628      	mov	r0, r5
 800a258:	f004 fbf8 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a25c:	8160      	strh	r0, [r4, #10]
 800a25e:	bd38      	pop	{r3, r4, r5, pc}

0800a260 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a260:	b510      	push	{r4, lr}
 800a262:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800a266:	2bff      	cmp	r3, #255	; 0xff
 800a268:	4604      	mov	r4, r0
 800a26a:	d006      	beq.n	800a27a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a26c:	2300      	movs	r3, #0
 800a26e:	8003      	strh	r3, [r0, #0]
 800a270:	8043      	strh	r3, [r0, #2]
 800a272:	8083      	strh	r3, [r0, #4]
 800a274:	80c3      	strh	r3, [r0, #6]
 800a276:	4620      	mov	r0, r4
 800a278:	bd10      	pop	{r4, pc}
 800a27a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a27e:	b11b      	cbz	r3, 800a288 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a280:	3130      	adds	r1, #48	; 0x30
 800a282:	f004 fc1d 	bl	800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a286:	e7f6      	b.n	800a276 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a288:	312e      	adds	r1, #46	; 0x2e
 800a28a:	e7fa      	b.n	800a282 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800a28c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a28c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a290:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a294:	b08a      	sub	sp, #40	; 0x28
 800a296:	4604      	mov	r4, r0
 800a298:	4688      	mov	r8, r1
 800a29a:	2b00      	cmp	r3, #0
 800a29c:	d044      	beq.n	800a328 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800a29e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a2a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a2a4:	a805      	add	r0, sp, #20
 800a2a6:	f004 fb97 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a2aa:	4605      	mov	r5, r0
 800a2ac:	b206      	sxth	r6, r0
 800a2ae:	a805      	add	r0, sp, #20
 800a2b0:	f004 fbcc 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a2b4:	f9b8 2000 	ldrsh.w	r2, [r8]
 800a2b8:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800a2bc:	4417      	add	r7, r2
 800a2be:	b2bf      	uxth	r7, r7
 800a2c0:	2300      	movs	r3, #0
 800a2c2:	fa0f fe87 	sxth.w	lr, r7
 800a2c6:	459e      	cmp	lr, r3
 800a2c8:	fa0f fc80 	sxth.w	ip, r0
 800a2cc:	9306      	str	r3, [sp, #24]
 800a2ce:	dd2d      	ble.n	800a32c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a2d0:	4296      	cmp	r6, r2
 800a2d2:	dd2b      	ble.n	800a32c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a2d4:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800a2d8:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800a2dc:	4419      	add	r1, r3
 800a2de:	b289      	uxth	r1, r1
 800a2e0:	fa0f f881 	sxth.w	r8, r1
 800a2e4:	f1b8 0f00 	cmp.w	r8, #0
 800a2e8:	dd20      	ble.n	800a32c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a2ea:	459c      	cmp	ip, r3
 800a2ec:	dd1e      	ble.n	800a32c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a2ee:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a2f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a2f6:	4576      	cmp	r6, lr
 800a2f8:	bfa8      	it	ge
 800a2fa:	463d      	movge	r5, r7
 800a2fc:	45c4      	cmp	ip, r8
 800a2fe:	bfa8      	it	ge
 800a300:	4608      	movge	r0, r1
 800a302:	1aad      	subs	r5, r5, r2
 800a304:	1ac0      	subs	r0, r0, r3
 800a306:	f8ad 501c 	strh.w	r5, [sp, #28]
 800a30a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a30e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a312:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a316:	4b1f      	ldr	r3, [pc, #124]	; (800a394 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800a318:	681b      	ldr	r3, [r3, #0]
 800a31a:	b953      	cbnz	r3, 800a332 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800a31c:	4b1e      	ldr	r3, [pc, #120]	; (800a398 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800a31e:	4a1f      	ldr	r2, [pc, #124]	; (800a39c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800a320:	481f      	ldr	r0, [pc, #124]	; (800a3a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800a322:	2189      	movs	r1, #137	; 0x89
 800a324:	f010 f826 	bl	801a374 <__assert_func>
 800a328:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800a32a:	e7b9      	b.n	800a2a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a32c:	2300      	movs	r3, #0
 800a32e:	9307      	str	r3, [sp, #28]
 800a330:	e7f1      	b.n	800a316 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800a332:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a336:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a33a:	429a      	cmp	r2, r3
 800a33c:	d026      	beq.n	800a38c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a33e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a342:	2b00      	cmp	r3, #0
 800a344:	dd22      	ble.n	800a38c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a346:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a34a:	2b00      	cmp	r3, #0
 800a34c:	dd1e      	ble.n	800a38c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a34e:	2300      	movs	r3, #0
 800a350:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a354:	6823      	ldr	r3, [r4, #0]
 800a356:	a908      	add	r1, sp, #32
 800a358:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a35a:	4620      	mov	r0, r4
 800a35c:	4798      	blx	r3
 800a35e:	4b11      	ldr	r3, [pc, #68]	; (800a3a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a366:	b10a      	cbz	r2, 800a36c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a368:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a36a:	b900      	cbnz	r0, 800a36e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800a36c:	6898      	ldr	r0, [r3, #8]
 800a36e:	6801      	ldr	r1, [r0, #0]
 800a370:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800a374:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a378:	2501      	movs	r5, #1
 800a37a:	9502      	str	r5, [sp, #8]
 800a37c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800a380:	9401      	str	r4, [sp, #4]
 800a382:	ac06      	add	r4, sp, #24
 800a384:	9400      	str	r4, [sp, #0]
 800a386:	688c      	ldr	r4, [r1, #8]
 800a388:	a905      	add	r1, sp, #20
 800a38a:	47a0      	blx	r4
 800a38c:	b00a      	add	sp, #40	; 0x28
 800a38e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a392:	bf00      	nop
 800a394:	20012154 	.word	0x20012154
 800a398:	0801cfa4 	.word	0x0801cfa4
 800a39c:	0801d006 	.word	0x0801d006
 800a3a0:	0801cfe0 	.word	0x0801cfe0
 800a3a4:	200120ac 	.word	0x200120ac

0800a3a8 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800a3a8:	4770      	bx	lr
	...

0800a3ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800a3ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a3ae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a3b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a3b4:	4299      	cmp	r1, r3
 800a3b6:	4606      	mov	r6, r0
 800a3b8:	d02a      	beq.n	800a410 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800a3ba:	4b16      	ldr	r3, [pc, #88]	; (800a414 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800a3bc:	681b      	ldr	r3, [r3, #0]
 800a3be:	b92b      	cbnz	r3, 800a3cc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800a3c0:	4b15      	ldr	r3, [pc, #84]	; (800a418 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800a3c2:	4a16      	ldr	r2, [pc, #88]	; (800a41c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a3c4:	21b1      	movs	r1, #177	; 0xb1
 800a3c6:	4816      	ldr	r0, [pc, #88]	; (800a420 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800a3c8:	f00f ffd4 	bl	801a374 <__assert_func>
 800a3cc:	4a15      	ldr	r2, [pc, #84]	; (800a424 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800a3ce:	8812      	ldrh	r2, [r2, #0]
 800a3d0:	428a      	cmp	r2, r1
 800a3d2:	d803      	bhi.n	800a3dc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800a3d4:	4b14      	ldr	r3, [pc, #80]	; (800a428 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800a3d6:	4a11      	ldr	r2, [pc, #68]	; (800a41c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a3d8:	21b2      	movs	r1, #178	; 0xb2
 800a3da:	e7f4      	b.n	800a3c6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800a3dc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a3e0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a3e4:	4b11      	ldr	r3, [pc, #68]	; (800a42c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800a3e6:	7854      	ldrb	r4, [r2, #1]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a3ee:	682b      	ldr	r3, [r5, #0]
 800a3f0:	69df      	ldr	r7, [r3, #28]
 800a3f2:	4b0f      	ldr	r3, [pc, #60]	; (800a430 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800a3f4:	6818      	ldr	r0, [r3, #0]
 800a3f6:	f7f8 fde5 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a3fa:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a3fe:	2300      	movs	r3, #0
 800a400:	9300      	str	r3, [sp, #0]
 800a402:	4602      	mov	r2, r0
 800a404:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800a406:	4621      	mov	r1, r4
 800a408:	4628      	mov	r0, r5
 800a40a:	47b8      	blx	r7
 800a40c:	b003      	add	sp, #12
 800a40e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a410:	2000      	movs	r0, #0
 800a412:	e7fb      	b.n	800a40c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800a414:	2001211c 	.word	0x2001211c
 800a418:	0801beac 	.word	0x0801beac
 800a41c:	0801d0b8 	.word	0x0801d0b8
 800a420:	0801bf0c 	.word	0x0801bf0c
 800a424:	20012120 	.word	0x20012120
 800a428:	0801bf35 	.word	0x0801bf35
 800a42c:	20012124 	.word	0x20012124
 800a430:	20012128 	.word	0x20012128

0800a434 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800a434:	b570      	push	{r4, r5, r6, lr}
 800a436:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a438:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a43c:	4299      	cmp	r1, r3
 800a43e:	4604      	mov	r4, r0
 800a440:	d01e      	beq.n	800a480 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800a442:	6803      	ldr	r3, [r0, #0]
 800a444:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a446:	4b0f      	ldr	r3, [pc, #60]	; (800a484 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800a448:	681b      	ldr	r3, [r3, #0]
 800a44a:	b92b      	cbnz	r3, 800a458 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800a44c:	4b0e      	ldr	r3, [pc, #56]	; (800a488 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800a44e:	4a0f      	ldr	r2, [pc, #60]	; (800a48c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800a450:	21b1      	movs	r1, #177	; 0xb1
 800a452:	480f      	ldr	r0, [pc, #60]	; (800a490 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800a454:	f00f ff8e 	bl	801a374 <__assert_func>
 800a458:	4b0e      	ldr	r3, [pc, #56]	; (800a494 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800a45a:	881b      	ldrh	r3, [r3, #0]
 800a45c:	428b      	cmp	r3, r1
 800a45e:	d803      	bhi.n	800a468 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800a460:	4b0d      	ldr	r3, [pc, #52]	; (800a498 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800a462:	4a0a      	ldr	r2, [pc, #40]	; (800a48c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800a464:	21b2      	movs	r1, #178	; 0xb2
 800a466:	e7f4      	b.n	800a452 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800a468:	4b0c      	ldr	r3, [pc, #48]	; (800a49c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800a46a:	6818      	ldr	r0, [r3, #0]
 800a46c:	f7f8 fdaa 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a470:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800a472:	4601      	mov	r1, r0
 800a474:	46ac      	mov	ip, r5
 800a476:	4620      	mov	r0, r4
 800a478:	2300      	movs	r3, #0
 800a47a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a47e:	4760      	bx	ip
 800a480:	2000      	movs	r0, #0
 800a482:	bd70      	pop	{r4, r5, r6, pc}
 800a484:	2001211c 	.word	0x2001211c
 800a488:	0801beac 	.word	0x0801beac
 800a48c:	0801d0b8 	.word	0x0801d0b8
 800a490:	0801bf0c 	.word	0x0801bf0c
 800a494:	20012120 	.word	0x20012120
 800a498:	0801bf35 	.word	0x0801bf35
 800a49c:	20012128 	.word	0x20012128

0800a4a0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a4a0:	b510      	push	{r4, lr}
 800a4a2:	2140      	movs	r1, #64	; 0x40
 800a4a4:	4604      	mov	r4, r0
 800a4a6:	f00f ff39 	bl	801a31c <_ZdlPvj>
 800a4aa:	4620      	mov	r0, r4
 800a4ac:	bd10      	pop	{r4, pc}
	...

0800a4b0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800a4b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a4b4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a4b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a4ba:	4293      	cmp	r3, r2
 800a4bc:	b08c      	sub	sp, #48	; 0x30
 800a4be:	4604      	mov	r4, r0
 800a4c0:	460e      	mov	r6, r1
 800a4c2:	d05d      	beq.n	800a580 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800a4c4:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800a5a4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800a4c8:	f8d8 2000 	ldr.w	r2, [r8]
 800a4cc:	b92a      	cbnz	r2, 800a4da <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800a4ce:	4b2e      	ldr	r3, [pc, #184]	; (800a588 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800a4d0:	4a2e      	ldr	r2, [pc, #184]	; (800a58c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800a4d2:	21b1      	movs	r1, #177	; 0xb1
 800a4d4:	482e      	ldr	r0, [pc, #184]	; (800a590 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800a4d6:	f00f ff4d 	bl	801a374 <__assert_func>
 800a4da:	4f2e      	ldr	r7, [pc, #184]	; (800a594 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800a4dc:	8839      	ldrh	r1, [r7, #0]
 800a4de:	4299      	cmp	r1, r3
 800a4e0:	d803      	bhi.n	800a4ea <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800a4e2:	4b2d      	ldr	r3, [pc, #180]	; (800a598 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800a4e4:	4a29      	ldr	r2, [pc, #164]	; (800a58c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800a4e6:	21b2      	movs	r1, #178	; 0xb2
 800a4e8:	e7f4      	b.n	800a4d4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800a4ea:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a4ee:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a4f2:	4b2a      	ldr	r3, [pc, #168]	; (800a59c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800a4f4:	681b      	ldr	r3, [r3, #0]
 800a4f6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a4fa:	2a00      	cmp	r2, #0
 800a4fc:	d040      	beq.n	800a580 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800a4fe:	784b      	ldrb	r3, [r1, #1]
 800a500:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800a504:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a508:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800a50c:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800a510:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800a514:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a516:	9207      	str	r2, [sp, #28]
 800a518:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800a51c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a520:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a524:	f88d 9020 	strb.w	r9, [sp, #32]
 800a528:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800a52c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800a530:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a534:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a538:	9009      	str	r0, [sp, #36]	; 0x24
 800a53a:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800a53e:	f7f6 fab5 	bl	8000aac <_ZN8touchgfx3HAL3lcdEv>
 800a542:	ad05      	add	r5, sp, #20
 800a544:	4681      	mov	r9, r0
 800a546:	4621      	mov	r1, r4
 800a548:	4628      	mov	r0, r5
 800a54a:	f002 fa25 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a54e:	f8d8 3000 	ldr.w	r3, [r8]
 800a552:	2b00      	cmp	r3, #0
 800a554:	d0bb      	beq.n	800a4ce <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800a556:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a558:	883b      	ldrh	r3, [r7, #0]
 800a55a:	428b      	cmp	r3, r1
 800a55c:	d9c1      	bls.n	800a4e2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800a55e:	4b10      	ldr	r3, [pc, #64]	; (800a5a0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800a560:	6818      	ldr	r0, [r3, #0]
 800a562:	f7f8 fd2f 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a566:	2300      	movs	r3, #0
 800a568:	9303      	str	r3, [sp, #12]
 800a56a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a56c:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800a570:	ab07      	add	r3, sp, #28
 800a572:	9300      	str	r3, [sp, #0]
 800a574:	e895 0006 	ldmia.w	r5, {r1, r2}
 800a578:	4633      	mov	r3, r6
 800a57a:	4648      	mov	r0, r9
 800a57c:	f7f8 fcd6 	bl	8002f2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a580:	b00c      	add	sp, #48	; 0x30
 800a582:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a586:	bf00      	nop
 800a588:	0801beac 	.word	0x0801beac
 800a58c:	0801d0b8 	.word	0x0801d0b8
 800a590:	0801bf0c 	.word	0x0801bf0c
 800a594:	20012120 	.word	0x20012120
 800a598:	0801bf35 	.word	0x0801bf35
 800a59c:	20012124 	.word	0x20012124
 800a5a0:	20012128 	.word	0x20012128
 800a5a4:	2001211c 	.word	0x2001211c

0800a5a8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800a5a8:	4770      	bx	lr

0800a5aa <_ZNK8touchgfx15ButtonWithLabel12getSolidRectEv>:
 800a5aa:	b510      	push	{r4, lr}
 800a5ac:	4604      	mov	r4, r0
 800a5ae:	f7ff fe57 	bl	800a260 <_ZNK8touchgfx6Button12getSolidRectEv>
 800a5b2:	4620      	mov	r0, r4
 800a5b4:	bd10      	pop	{r4, pc}

0800a5b6 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800a5b6:	b510      	push	{r4, lr}
 800a5b8:	2148      	movs	r1, #72	; 0x48
 800a5ba:	4604      	mov	r4, r0
 800a5bc:	f00f feae 	bl	801a31c <_ZdlPvj>
 800a5c0:	4620      	mov	r0, r4
 800a5c2:	bd10      	pop	{r4, pc}

0800a5c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800a5c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a5c8:	4604      	mov	r4, r0
 800a5ca:	b08c      	sub	sp, #48	; 0x30
 800a5cc:	4688      	mov	r8, r1
 800a5ce:	f7ff fe5d 	bl	800a28c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800a5d2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a5d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a5d8:	4293      	cmp	r3, r2
 800a5da:	f000 8099 	beq.w	800a710 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800a5de:	4e54      	ldr	r6, [pc, #336]	; (800a730 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800a5e0:	6832      	ldr	r2, [r6, #0]
 800a5e2:	b92a      	cbnz	r2, 800a5f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800a5e4:	4b53      	ldr	r3, [pc, #332]	; (800a734 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800a5e6:	4a54      	ldr	r2, [pc, #336]	; (800a738 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800a5e8:	21b1      	movs	r1, #177	; 0xb1
 800a5ea:	4854      	ldr	r0, [pc, #336]	; (800a73c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800a5ec:	f00f fec2 	bl	801a374 <__assert_func>
 800a5f0:	4d53      	ldr	r5, [pc, #332]	; (800a740 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800a5f2:	8829      	ldrh	r1, [r5, #0]
 800a5f4:	4299      	cmp	r1, r3
 800a5f6:	d803      	bhi.n	800a600 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800a5f8:	4b52      	ldr	r3, [pc, #328]	; (800a744 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800a5fa:	4a4f      	ldr	r2, [pc, #316]	; (800a738 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800a5fc:	21b2      	movs	r1, #178	; 0xb2
 800a5fe:	e7f4      	b.n	800a5ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800a600:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a604:	4b50      	ldr	r3, [pc, #320]	; (800a748 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800a606:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800a60a:	681b      	ldr	r3, [r3, #0]
 800a60c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800a610:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a614:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a618:	2300      	movs	r3, #0
 800a61a:	f1be 0f01 	cmp.w	lr, #1
 800a61e:	9303      	str	r3, [sp, #12]
 800a620:	b208      	sxth	r0, r1
 800a622:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800a626:	f04f 0c02 	mov.w	ip, #2
 800a62a:	d074      	beq.n	800a716 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800a62c:	f1be 0f03 	cmp.w	lr, #3
 800a630:	d071      	beq.n	800a716 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800a632:	1a52      	subs	r2, r2, r1
 800a634:	f8ad 3010 	strh.w	r3, [sp, #16]
 800a638:	fb92 f2fc 	sdiv	r2, r2, ip
 800a63c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800a640:	f8ad 200e 	strh.w	r2, [sp, #14]
 800a644:	f10d 090c 	add.w	r9, sp, #12
 800a648:	e899 0003 	ldmia.w	r9, {r0, r1}
 800a64c:	f10d 0a14 	add.w	sl, sp, #20
 800a650:	e88a 0003 	stmia.w	sl, {r0, r1}
 800a654:	4641      	mov	r1, r8
 800a656:	4650      	mov	r0, sl
 800a658:	f7fe f9c0 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800a65c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800a660:	2b00      	cmp	r3, #0
 800a662:	dd55      	ble.n	800a710 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800a664:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800a668:	2b00      	cmp	r3, #0
 800a66a:	dd51      	ble.n	800a710 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800a66c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800a670:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a674:	1a9b      	subs	r3, r3, r2
 800a676:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a67a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800a67e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800a682:	1a9b      	subs	r3, r3, r2
 800a684:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a688:	6823      	ldr	r3, [r4, #0]
 800a68a:	4649      	mov	r1, r9
 800a68c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a68e:	4620      	mov	r0, r4
 800a690:	4798      	blx	r3
 800a692:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a696:	2b00      	cmp	r3, #0
 800a698:	d047      	beq.n	800a72a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800a69a:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800a69e:	6833      	ldr	r3, [r6, #0]
 800a6a0:	f894 c032 	ldrb.w	ip, [r4, #50]	; 0x32
 800a6a4:	2b00      	cmp	r3, #0
 800a6a6:	d09d      	beq.n	800a5e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800a6a8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800a6aa:	8828      	ldrh	r0, [r5, #0]
 800a6ac:	4288      	cmp	r0, r1
 800a6ae:	d9a3      	bls.n	800a5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800a6b0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800a6b4:	6812      	ldr	r2, [r2, #0]
 800a6b6:	785b      	ldrb	r3, [r3, #1]
 800a6b8:	9209      	str	r2, [sp, #36]	; 0x24
 800a6ba:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800a6be:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a6c2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a6c6:	2300      	movs	r3, #0
 800a6c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a6cc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800a6d0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800a6d4:	4b1d      	ldr	r3, [pc, #116]	; (800a74c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800a6d6:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	9707      	str	r7, [sp, #28]
 800a6de:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a6e2:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800a6e6:	f88d 5020 	strb.w	r5, [sp, #32]
 800a6ea:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a6ee:	b10a      	cbz	r2, 800a6f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800a6f0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800a6f2:	b904      	cbnz	r4, 800a6f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800a6f4:	689c      	ldr	r4, [r3, #8]
 800a6f6:	4b16      	ldr	r3, [pc, #88]	; (800a750 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800a6f8:	6818      	ldr	r0, [r3, #0]
 800a6fa:	f7f8 fc63 	bl	8002fc4 <_ZNK8touchgfx5Texts7getTextEt>
 800a6fe:	ab07      	add	r3, sp, #28
 800a700:	9001      	str	r0, [sp, #4]
 800a702:	9300      	str	r3, [sp, #0]
 800a704:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a708:	4653      	mov	r3, sl
 800a70a:	4620      	mov	r0, r4
 800a70c:	f7f8 fc0e 	bl	8002f2c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a710:	b00c      	add	sp, #48	; 0x30
 800a712:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a716:	1a5b      	subs	r3, r3, r1
 800a718:	f8ad 0010 	strh.w	r0, [sp, #16]
 800a71c:	fb93 f3fc 	sdiv	r3, r3, ip
 800a720:	f8ad 2012 	strh.w	r2, [sp, #18]
 800a724:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a728:	e78c      	b.n	800a644 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800a72a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800a72e:	e7b6      	b.n	800a69e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800a730:	2001211c 	.word	0x2001211c
 800a734:	0801beac 	.word	0x0801beac
 800a738:	0801d158 	.word	0x0801d158
 800a73c:	0801bf0c 	.word	0x0801bf0c
 800a740:	20012120 	.word	0x20012120
 800a744:	0801bf35 	.word	0x0801bf35
 800a748:	20012124 	.word	0x20012124
 800a74c:	200120ac 	.word	0x200120ac
 800a750:	20012128 	.word	0x20012128

0800a754 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800a754:	b510      	push	{r4, lr}
 800a756:	2101      	movs	r1, #1
 800a758:	4c12      	ldr	r4, [pc, #72]	; (800a7a4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x50>)
 800a75a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800a75e:	2200      	movs	r2, #0
 800a760:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800a764:	6004      	str	r4, [r0, #0]
 800a766:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a76a:	4c0f      	ldr	r4, [pc, #60]	; (800a7a8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800a76c:	8082      	strh	r2, [r0, #4]
 800a76e:	80c2      	strh	r2, [r0, #6]
 800a770:	8102      	strh	r2, [r0, #8]
 800a772:	8142      	strh	r2, [r0, #10]
 800a774:	8182      	strh	r2, [r0, #12]
 800a776:	81c2      	strh	r2, [r0, #14]
 800a778:	8202      	strh	r2, [r0, #16]
 800a77a:	8242      	strh	r2, [r0, #18]
 800a77c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a780:	61c2      	str	r2, [r0, #28]
 800a782:	6282      	str	r2, [r0, #40]	; 0x28
 800a784:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800a788:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800a78a:	8601      	strh	r1, [r0, #48]	; 0x30
 800a78c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800a790:	6344      	str	r4, [r0, #52]	; 0x34
 800a792:	8701      	strh	r1, [r0, #56]	; 0x38
 800a794:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800a798:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800a79c:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800a7a0:	bd10      	pop	{r4, pc}
 800a7a2:	bf00      	nop
 800a7a4:	0801d0f0 	.word	0x0801d0f0
 800a7a8:	0801b994 	.word	0x0801b994

0800a7ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7b0:	b091      	sub	sp, #68	; 0x44
 800a7b2:	4699      	mov	r9, r3
 800a7b4:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800a7b8:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800a7ba:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800a7be:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800a7c2:	4680      	mov	r8, r0
 800a7c4:	4617      	mov	r7, r2
 800a7c6:	a80e      	add	r0, sp, #56	; 0x38
 800a7c8:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800a7cc:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800a7d0:	2500      	movs	r5, #0
 800a7d2:	910d      	str	r1, [sp, #52]	; 0x34
 800a7d4:	950e      	str	r5, [sp, #56]	; 0x38
 800a7d6:	f001 f9d3 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a7da:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800a7dc:	f8d9 6000 	ldr.w	r6, [r9]
 800a7e0:	6818      	ldr	r0, [r3, #0]
 800a7e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800a7e4:	f9b4 b000 	ldrsh.w	fp, [r4]
 800a7e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a7ec:	eb02 0c06 	add.w	ip, r2, r6
 800a7f0:	1b80      	subs	r0, r0, r6
 800a7f2:	ebab 0e0c 	sub.w	lr, fp, ip
 800a7f6:	4570      	cmp	r0, lr
 800a7f8:	f340 80bd 	ble.w	800a976 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a7fc:	88a1      	ldrh	r1, [r4, #4]
 800a7fe:	4459      	add	r1, fp
 800a800:	b209      	sxth	r1, r1
 800a802:	458c      	cmp	ip, r1
 800a804:	f300 80b7 	bgt.w	800a976 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a808:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800a80c:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800a810:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800a814:	edd9 6a07 	vldr	s13, [r9, #28]
 800a818:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800a81c:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800a820:	4283      	cmp	r3, r0
 800a822:	bfa8      	it	ge
 800a824:	4603      	movge	r3, r0
 800a826:	ee07 3a90 	vmov	s15, r3
 800a82a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a82e:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800a832:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a836:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a83a:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a83e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a842:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a846:	45e3      	cmp	fp, ip
 800a848:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a84c:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a850:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a854:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a858:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a85c:	f340 808e 	ble.w	800a97c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800a860:	fb9e f5f3 	sdiv	r5, lr, r3
 800a864:	ee07 5a10 	vmov	s14, r5
 800a868:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a86c:	2d00      	cmp	r5, #0
 800a86e:	fb03 e415 	mls	r4, r3, r5, lr
 800a872:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a876:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a87a:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a87e:	dd13      	ble.n	800a8a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800a880:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a884:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a888:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a88c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a890:	bf18      	it	ne
 800a892:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a896:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a89a:	bf08      	it	eq
 800a89c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a8a0:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a8a4:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a8a8:	fb05 f703 	mul.w	r7, r5, r3
 800a8ac:	1bc0      	subs	r0, r0, r7
 800a8ae:	443e      	add	r6, r7
 800a8b0:	1997      	adds	r7, r2, r6
 800a8b2:	4407      	add	r7, r0
 800a8b4:	42b9      	cmp	r1, r7
 800a8b6:	bfbc      	itt	lt
 800a8b8:	1a88      	sublt	r0, r1, r2
 800a8ba:	1b80      	sublt	r0, r0, r6
 800a8bc:	2800      	cmp	r0, #0
 800a8be:	dd5a      	ble.n	800a976 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800a8c0:	fb90 f1f3 	sdiv	r1, r0, r3
 800a8c4:	fb03 0211 	mls	r2, r3, r1, r0
 800a8c8:	b90a      	cbnz	r2, 800a8ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800a8ca:	3901      	subs	r1, #1
 800a8cc:	461a      	mov	r2, r3
 800a8ce:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a8d2:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800a8d6:	44a4      	add	ip, r4
 800a8d8:	fb03 c505 	mla	r5, r3, r5, ip
 800a8dc:	2900      	cmp	r1, #0
 800a8de:	bfcc      	ite	gt
 800a8e0:	469e      	movgt	lr, r3
 800a8e2:	4696      	movle	lr, r2
 800a8e4:	eef0 6a42 	vmov.f32	s13, s4
 800a8e8:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a8ec:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a8f0:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a8f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a8f8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a8fc:	eeb0 7a61 	vmov.f32	s14, s3
 800a900:	ee17 0a90 	vmov	r0, s15
 800a904:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a908:	fb90 f6f3 	sdiv	r6, r0, r3
 800a90c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a910:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a914:	ee17 0a90 	vmov	r0, s15
 800a918:	fb90 f7f3 	sdiv	r7, r0, r3
 800a91c:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800a920:	900c      	str	r0, [sp, #48]	; 0x30
 800a922:	f8d0 8000 	ldr.w	r8, [r0]
 800a926:	981c      	ldr	r0, [sp, #112]	; 0x70
 800a928:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800a92c:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800a930:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800a934:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800a938:	f8cd a020 	str.w	sl, [sp, #32]
 800a93c:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800a940:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a942:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800a946:	9603      	str	r6, [sp, #12]
 800a948:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800a94c:	ee16 0a90 	vmov	r0, s13
 800a950:	fb07 0704 	mla	r7, r7, r4, r0
 800a954:	ee17 0a10 	vmov	r0, s14
 800a958:	fb06 0604 	mla	r6, r6, r4, r0
 800a95c:	e9cd 3600 	strd	r3, r6, [sp]
 800a960:	44ca      	add	sl, r9
 800a962:	f8cd a01c 	str.w	sl, [sp, #28]
 800a966:	9506      	str	r5, [sp, #24]
 800a968:	9702      	str	r7, [sp, #8]
 800a96a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800a96e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a970:	ebae 0304 	sub.w	r3, lr, r4
 800a974:	47a8      	blx	r5
 800a976:	b011      	add	sp, #68	; 0x44
 800a978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a97c:	462c      	mov	r4, r5
 800a97e:	e797      	b.n	800a8b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800a980 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800a980:	b570      	push	{r4, r5, r6, lr}
 800a982:	4604      	mov	r4, r0
 800a984:	2500      	movs	r5, #0
 800a986:	7223      	strb	r3, [r4, #8]
 800a988:	9804      	ldr	r0, [sp, #16]
 800a98a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a98e:	8025      	strh	r5, [r4, #0]
 800a990:	6061      	str	r1, [r4, #4]
 800a992:	7263      	strb	r3, [r4, #9]
 800a994:	60e0      	str	r0, [r4, #12]
 800a996:	8222      	strh	r2, [r4, #16]
 800a998:	8265      	strh	r5, [r4, #18]
 800a99a:	82a5      	strh	r5, [r4, #20]
 800a99c:	82e5      	strh	r5, [r4, #22]
 800a99e:	8325      	strh	r5, [r4, #24]
 800a9a0:	8365      	strh	r5, [r4, #26]
 800a9a2:	83a5      	strh	r5, [r4, #28]
 800a9a4:	77a5      	strb	r5, [r4, #30]
 800a9a6:	6803      	ldr	r3, [r0, #0]
 800a9a8:	695b      	ldr	r3, [r3, #20]
 800a9aa:	4798      	blx	r3
 800a9ac:	4606      	mov	r6, r0
 800a9ae:	b1f8      	cbz	r0, 800a9f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800a9b0:	68e0      	ldr	r0, [r4, #12]
 800a9b2:	6803      	ldr	r3, [r0, #0]
 800a9b4:	4631      	mov	r1, r6
 800a9b6:	68db      	ldr	r3, [r3, #12]
 800a9b8:	4798      	blx	r3
 800a9ba:	7b43      	ldrb	r3, [r0, #13]
 800a9bc:	7a82      	ldrb	r2, [r0, #10]
 800a9be:	005b      	lsls	r3, r3, #1
 800a9c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a9c4:	4313      	orrs	r3, r2
 800a9c6:	83a3      	strh	r3, [r4, #28]
 800a9c8:	7a63      	ldrb	r3, [r4, #9]
 800a9ca:	2b04      	cmp	r3, #4
 800a9cc:	4605      	mov	r5, r0
 800a9ce:	d10f      	bne.n	800a9f0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800a9d0:	68e0      	ldr	r0, [r4, #12]
 800a9d2:	6803      	ldr	r3, [r0, #0]
 800a9d4:	462a      	mov	r2, r5
 800a9d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9d8:	4631      	mov	r1, r6
 800a9da:	4798      	blx	r3
 800a9dc:	7b6b      	ldrb	r3, [r5, #13]
 800a9de:	005b      	lsls	r3, r3, #1
 800a9e0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800a9e4:	7aab      	ldrb	r3, [r5, #10]
 800a9e6:	4313      	orrs	r3, r2
 800a9e8:	4418      	add	r0, r3
 800a9ea:	8ba3      	ldrh	r3, [r4, #28]
 800a9ec:	4418      	add	r0, r3
 800a9ee:	83a0      	strh	r0, [r4, #28]
 800a9f0:	4620      	mov	r0, r4
 800a9f2:	bd70      	pop	{r4, r5, r6, pc}

0800a9f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800a9f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9f8:	2400      	movs	r4, #0
 800a9fa:	b085      	sub	sp, #20
 800a9fc:	4681      	mov	r9, r0
 800a9fe:	4688      	mov	r8, r1
 800aa00:	4692      	mov	sl, r2
 800aa02:	469b      	mov	fp, r3
 800aa04:	4627      	mov	r7, r4
 800aa06:	4625      	mov	r5, r4
 800aa08:	4626      	mov	r6, r4
 800aa0a:	4554      	cmp	r4, sl
 800aa0c:	da2a      	bge.n	800aa64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aa0e:	2300      	movs	r3, #0
 800aa10:	9303      	str	r3, [sp, #12]
 800aa12:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800aa16:	429d      	cmp	r5, r3
 800aa18:	d004      	beq.n	800aa24 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800aa1a:	f242 030b 	movw	r3, #8203	; 0x200b
 800aa1e:	429d      	cmp	r5, r3
 800aa20:	bf18      	it	ne
 800aa22:	462f      	movne	r7, r5
 800aa24:	ab03      	add	r3, sp, #12
 800aa26:	4642      	mov	r2, r8
 800aa28:	4659      	mov	r1, fp
 800aa2a:	4648      	mov	r0, r9
 800aa2c:	f002 ff2e 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800aa30:	4605      	mov	r5, r0
 800aa32:	b1b8      	cbz	r0, 800aa64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aa34:	280a      	cmp	r0, #10
 800aa36:	d015      	beq.n	800aa64 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800aa38:	9a03      	ldr	r2, [sp, #12]
 800aa3a:	b18a      	cbz	r2, 800aa60 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800aa3c:	7b50      	ldrb	r0, [r2, #13]
 800aa3e:	7a93      	ldrb	r3, [r2, #10]
 800aa40:	8895      	ldrh	r5, [r2, #4]
 800aa42:	0040      	lsls	r0, r0, #1
 800aa44:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800aa48:	4303      	orrs	r3, r0
 800aa4a:	9301      	str	r3, [sp, #4]
 800aa4c:	f8d8 3000 	ldr.w	r3, [r8]
 800aa50:	4639      	mov	r1, r7
 800aa52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa54:	4640      	mov	r0, r8
 800aa56:	4798      	blx	r3
 800aa58:	9b01      	ldr	r3, [sp, #4]
 800aa5a:	4418      	add	r0, r3
 800aa5c:	4406      	add	r6, r0
 800aa5e:	b2b6      	uxth	r6, r6
 800aa60:	3401      	adds	r4, #1
 800aa62:	e7d2      	b.n	800aa0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800aa64:	4630      	mov	r0, r6
 800aa66:	b005      	add	sp, #20
 800aa68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800aa6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800aa6c:	2a02      	cmp	r2, #2
 800aa6e:	b530      	push	{r4, r5, lr}
 800aa70:	d011      	beq.n	800aa96 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800aa72:	2a03      	cmp	r2, #3
 800aa74:	d01c      	beq.n	800aab0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800aa76:	2a01      	cmp	r2, #1
 800aa78:	d10c      	bne.n	800aa94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800aa7a:	888b      	ldrh	r3, [r1, #4]
 800aa7c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800aa80:	8801      	ldrh	r1, [r0, #0]
 800aa82:	8844      	ldrh	r4, [r0, #2]
 800aa84:	8004      	strh	r4, [r0, #0]
 800aa86:	1a9b      	subs	r3, r3, r2
 800aa88:	1a5b      	subs	r3, r3, r1
 800aa8a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800aa8e:	8043      	strh	r3, [r0, #2]
 800aa90:	8081      	strh	r1, [r0, #4]
 800aa92:	80c2      	strh	r2, [r0, #6]
 800aa94:	bd30      	pop	{r4, r5, pc}
 800aa96:	88cb      	ldrh	r3, [r1, #6]
 800aa98:	88c2      	ldrh	r2, [r0, #6]
 800aa9a:	1a9b      	subs	r3, r3, r2
 800aa9c:	8842      	ldrh	r2, [r0, #2]
 800aa9e:	1a9b      	subs	r3, r3, r2
 800aaa0:	888a      	ldrh	r2, [r1, #4]
 800aaa2:	8881      	ldrh	r1, [r0, #4]
 800aaa4:	8043      	strh	r3, [r0, #2]
 800aaa6:	1a52      	subs	r2, r2, r1
 800aaa8:	8801      	ldrh	r1, [r0, #0]
 800aaaa:	1a52      	subs	r2, r2, r1
 800aaac:	8002      	strh	r2, [r0, #0]
 800aaae:	e7f1      	b.n	800aa94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800aab0:	88cb      	ldrh	r3, [r1, #6]
 800aab2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800aab6:	8841      	ldrh	r1, [r0, #2]
 800aab8:	f9b0 5000 	ldrsh.w	r5, [r0]
 800aabc:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800aac0:	8045      	strh	r5, [r0, #2]
 800aac2:	1a9b      	subs	r3, r3, r2
 800aac4:	1a5b      	subs	r3, r3, r1
 800aac6:	8003      	strh	r3, [r0, #0]
 800aac8:	8082      	strh	r2, [r0, #4]
 800aaca:	80c4      	strh	r4, [r0, #6]
 800aacc:	e7e2      	b.n	800aa94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800aace <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800aace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aad2:	b09f      	sub	sp, #124	; 0x7c
 800aad4:	9116      	str	r1, [sp, #88]	; 0x58
 800aad6:	9317      	str	r3, [sp, #92]	; 0x5c
 800aad8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800aada:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800aadc:	8809      	ldrh	r1, [r1, #0]
 800aade:	889b      	ldrh	r3, [r3, #4]
 800aae0:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800aae4:	9212      	str	r2, [sp, #72]	; 0x48
 800aae6:	440b      	add	r3, r1
 800aae8:	b21b      	sxth	r3, r3
 800aaea:	9310      	str	r3, [sp, #64]	; 0x40
 800aaec:	f8d8 3000 	ldr.w	r3, [r8]
 800aaf0:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800aaf4:	7a59      	ldrb	r1, [r3, #9]
 800aaf6:	7a1b      	ldrb	r3, [r3, #8]
 800aaf8:	9315      	str	r3, [sp, #84]	; 0x54
 800aafa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800aafc:	9011      	str	r0, [sp, #68]	; 0x44
 800aafe:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800ab02:	9114      	str	r1, [sp, #80]	; 0x50
 800ab04:	f9b3 5000 	ldrsh.w	r5, [r3]
 800ab08:	2a00      	cmp	r2, #0
 800ab0a:	d067      	beq.n	800abdc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800ab0c:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ab10:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ab12:	2b04      	cmp	r3, #4
 800ab14:	bf14      	ite	ne
 800ab16:	2301      	movne	r3, #1
 800ab18:	2302      	moveq	r3, #2
 800ab1a:	4413      	add	r3, r2
 800ab1c:	f04f 0900 	mov.w	r9, #0
 800ab20:	930f      	str	r3, [sp, #60]	; 0x3c
 800ab22:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800ab26:	464c      	mov	r4, r9
 800ab28:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800ab2c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ab30:	4293      	cmp	r3, r2
 800ab32:	f280 808c 	bge.w	800ac4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800ab36:	2300      	movs	r3, #0
 800ab38:	931c      	str	r3, [sp, #112]	; 0x70
 800ab3a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ab3e:	429c      	cmp	r4, r3
 800ab40:	d006      	beq.n	800ab50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800ab42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ab44:	f242 020b 	movw	r2, #8203	; 0x200b
 800ab48:	4294      	cmp	r4, r2
 800ab4a:	bf18      	it	ne
 800ab4c:	4623      	movne	r3, r4
 800ab4e:	930d      	str	r3, [sp, #52]	; 0x34
 800ab50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ab52:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800ab54:	f8d8 2000 	ldr.w	r2, [r8]
 800ab58:	428b      	cmp	r3, r1
 800ab5a:	db41      	blt.n	800abe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800ab5c:	6813      	ldr	r3, [r2, #0]
 800ab5e:	4610      	mov	r0, r2
 800ab60:	695b      	ldr	r3, [r3, #20]
 800ab62:	4798      	blx	r3
 800ab64:	4604      	mov	r4, r0
 800ab66:	f8d8 0000 	ldr.w	r0, [r8]
 800ab6a:	6803      	ldr	r3, [r0, #0]
 800ab6c:	aa1d      	add	r2, sp, #116	; 0x74
 800ab6e:	689e      	ldr	r6, [r3, #8]
 800ab70:	4621      	mov	r1, r4
 800ab72:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ab76:	47b0      	blx	r6
 800ab78:	901c      	str	r0, [sp, #112]	; 0x70
 800ab7a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ab7e:	429c      	cmp	r4, r3
 800ab80:	f000 80e9 	beq.w	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ab84:	f242 030b 	movw	r3, #8203	; 0x200b
 800ab88:	429c      	cmp	r4, r3
 800ab8a:	f000 80e4 	beq.w	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ab8e:	2c00      	cmp	r4, #0
 800ab90:	f000 80f6 	beq.w	800ad80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ab94:	2c0a      	cmp	r4, #10
 800ab96:	d060      	beq.n	800ac5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800ab98:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ab9a:	b36a      	cbz	r2, 800abf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800ab9c:	8894      	ldrh	r4, [r2, #4]
 800ab9e:	f1bb 0f00 	cmp.w	fp, #0
 800aba2:	d03b      	beq.n	800ac1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800aba4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800aba8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800abac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800abb0:	f892 900a 	ldrb.w	r9, [r2, #10]
 800abb4:	f1bb 0f01 	cmp.w	fp, #1
 800abb8:	ea49 0903 	orr.w	r9, r9, r3
 800abbc:	d134      	bne.n	800ac28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800abbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800abc0:	eba5 0509 	sub.w	r5, r5, r9
 800abc4:	2b00      	cmp	r3, #0
 800abc6:	d14f      	bne.n	800ac68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800abc8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800abca:	eb09 0305 	add.w	r3, r9, r5
 800abce:	4413      	add	r3, r2
 800abd0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800abd2:	f9b2 2000 	ldrsh.w	r2, [r2]
 800abd6:	4293      	cmp	r3, r2
 800abd8:	da51      	bge.n	800ac7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800abda:	e038      	b.n	800ac4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800abdc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800abde:	e79d      	b.n	800ab1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800abe0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800abe4:	9301      	str	r3, [sp, #4]
 800abe6:	ab1d      	add	r3, sp, #116	; 0x74
 800abe8:	9300      	str	r3, [sp, #0]
 800abea:	4659      	mov	r1, fp
 800abec:	ab1c      	add	r3, sp, #112	; 0x70
 800abee:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800abf0:	f002 fea4 	bl	800d93c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800abf4:	4604      	mov	r4, r0
 800abf6:	e7c0      	b.n	800ab7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800abf8:	f8d8 0000 	ldr.w	r0, [r8]
 800abfc:	6803      	ldr	r3, [r0, #0]
 800abfe:	691b      	ldr	r3, [r3, #16]
 800ac00:	4798      	blx	r3
 800ac02:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ac06:	4298      	cmp	r0, r3
 800ac08:	f000 80a5 	beq.w	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ac0c:	f242 030b 	movw	r3, #8203	; 0x200b
 800ac10:	4298      	cmp	r0, r3
 800ac12:	f000 80a0 	beq.w	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ac16:	f1bb 0f00 	cmp.w	fp, #0
 800ac1a:	d100      	bne.n	800ac1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800ac1c:	444d      	add	r5, r9
 800ac1e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ac20:	2a00      	cmp	r2, #0
 800ac22:	d1bf      	bne.n	800aba4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800ac24:	4691      	mov	r9, r2
 800ac26:	e096      	b.n	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ac28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ac2a:	2b00      	cmp	r3, #0
 800ac2c:	f000 80aa 	beq.w	800ad84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800ac30:	f1bb 0f00 	cmp.w	fp, #0
 800ac34:	d118      	bne.n	800ac68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800ac36:	f8d8 0000 	ldr.w	r0, [r8]
 800ac3a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ac3c:	6803      	ldr	r3, [r0, #0]
 800ac3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ac40:	4798      	blx	r3
 800ac42:	4405      	add	r5, r0
 800ac44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ac46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ac48:	1aeb      	subs	r3, r5, r3
 800ac4a:	4293      	cmp	r3, r2
 800ac4c:	dd17      	ble.n	800ac7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800ac4e:	2c00      	cmp	r4, #0
 800ac50:	f000 8096 	beq.w	800ad80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ac54:	2c0a      	cmp	r4, #10
 800ac56:	f040 8084 	bne.w	800ad62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800ac5a:	240a      	movs	r4, #10
 800ac5c:	fab4 f084 	clz	r0, r4
 800ac60:	0940      	lsrs	r0, r0, #5
 800ac62:	b01f      	add	sp, #124	; 0x7c
 800ac64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac68:	f8d8 0000 	ldr.w	r0, [r8]
 800ac6c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ac6e:	6803      	ldr	r3, [r0, #0]
 800ac70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ac72:	4798      	blx	r3
 800ac74:	f1bb 0f01 	cmp.w	fp, #1
 800ac78:	eba5 0500 	sub.w	r5, r5, r0
 800ac7c:	d0a4      	beq.n	800abc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800ac7e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ac80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ac82:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800ac86:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ac8a:	7b43      	ldrb	r3, [r0, #13]
 800ac8c:	015b      	lsls	r3, r3, #5
 800ac8e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ac92:	7983      	ldrb	r3, [r0, #6]
 800ac94:	4429      	add	r1, r5
 800ac96:	4313      	orrs	r3, r2
 800ac98:	440b      	add	r3, r1
 800ac9a:	42b3      	cmp	r3, r6
 800ac9c:	db5b      	blt.n	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ac9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800aca0:	4299      	cmp	r1, r3
 800aca2:	da58      	bge.n	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aca4:	f8d8 0000 	ldr.w	r0, [r8]
 800aca8:	6803      	ldr	r3, [r0, #0]
 800acaa:	42ae      	cmp	r6, r5
 800acac:	bfc8      	it	gt
 800acae:	1b76      	subgt	r6, r6, r5
 800acb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800acb2:	bfcc      	ite	gt
 800acb4:	b2b6      	uxthgt	r6, r6
 800acb6:	2600      	movle	r6, #0
 800acb8:	4798      	blx	r3
 800acba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800acbc:	7b5a      	ldrb	r2, [r3, #13]
 800acbe:	00d1      	lsls	r1, r2, #3
 800acc0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800acc4:	7a19      	ldrb	r1, [r3, #8]
 800acc6:	4339      	orrs	r1, r7
 800acc8:	0657      	lsls	r7, r2, #25
 800acca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800accc:	bf44      	itt	mi
 800acce:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800acd2:	b209      	sxthmi	r1, r1
 800acd4:	19c7      	adds	r7, r0, r7
 800acd6:	1a7f      	subs	r7, r7, r1
 800acd8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800acda:	b2bf      	uxth	r7, r7
 800acdc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800ace0:	fa0f fa87 	sxth.w	sl, r7
 800ace4:	4551      	cmp	r1, sl
 800ace6:	dd3a      	ble.n	800ad5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ace8:	0112      	lsls	r2, r2, #4
 800acea:	79d8      	ldrb	r0, [r3, #7]
 800acec:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800acf0:	4302      	orrs	r2, r0
 800acf2:	4492      	add	sl, r2
 800acf4:	4551      	cmp	r1, sl
 800acf6:	dc2e      	bgt.n	800ad56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800acf8:	1bcf      	subs	r7, r1, r7
 800acfa:	b2bf      	uxth	r7, r7
 800acfc:	468a      	mov	sl, r1
 800acfe:	9319      	str	r3, [sp, #100]	; 0x64
 800ad00:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ad02:	f8d8 0000 	ldr.w	r0, [r8]
 800ad06:	681a      	ldr	r2, [r3, #0]
 800ad08:	6801      	ldr	r1, [r0, #0]
 800ad0a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ad0c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800ad0e:	9313      	str	r3, [sp, #76]	; 0x4c
 800ad10:	9218      	str	r2, [sp, #96]	; 0x60
 800ad12:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800ad14:	4788      	blx	r1
 800ad16:	f898 1006 	ldrb.w	r1, [r8, #6]
 800ad1a:	910b      	str	r1, [sp, #44]	; 0x2c
 800ad1c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800ad20:	910a      	str	r1, [sp, #40]	; 0x28
 800ad22:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800ad26:	9109      	str	r1, [sp, #36]	; 0x24
 800ad28:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ad2a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800ad2e:	9305      	str	r3, [sp, #20]
 800ad30:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ad32:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ad34:	9206      	str	r2, [sp, #24]
 800ad36:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800ad3a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800ad3e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800ad42:	442e      	add	r6, r5
 800ad44:	b236      	sxth	r6, r6
 800ad46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ad48:	9600      	str	r6, [sp, #0]
 800ad4a:	681a      	ldr	r2, [r3, #0]
 800ad4c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ad4e:	685b      	ldr	r3, [r3, #4]
 800ad50:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ad52:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ad54:	47b0      	blx	r6
 800ad56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ad58:	3301      	adds	r3, #1
 800ad5a:	930e      	str	r3, [sp, #56]	; 0x38
 800ad5c:	e6e6      	b.n	800ab2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800ad5e:	2700      	movs	r7, #0
 800ad60:	e7cd      	b.n	800acfe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800ad62:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800ad64:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ad66:	3501      	adds	r5, #1
 800ad68:	429d      	cmp	r5, r3
 800ad6a:	f6bf af77 	bge.w	800ac5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ad6e:	4659      	mov	r1, fp
 800ad70:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ad72:	f7f8 f897 	bl	8002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ad76:	4604      	mov	r4, r0
 800ad78:	b110      	cbz	r0, 800ad80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ad7a:	280a      	cmp	r0, #10
 800ad7c:	d1f2      	bne.n	800ad64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800ad7e:	e76c      	b.n	800ac5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800ad80:	2400      	movs	r4, #0
 800ad82:	e76b      	b.n	800ac5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800ad84:	f1bb 0f00 	cmp.w	fp, #0
 800ad88:	f43f af5c 	beq.w	800ac44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800ad8c:	e777      	b.n	800ac7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800ad8e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ad8e:	b530      	push	{r4, r5, lr}
 800ad90:	8a44      	ldrh	r4, [r0, #18]
 800ad92:	8ac5      	ldrh	r5, [r0, #22]
 800ad94:	82c3      	strh	r3, [r0, #22]
 800ad96:	442c      	add	r4, r5
 800ad98:	1ae4      	subs	r4, r4, r3
 800ad9a:	8244      	strh	r4, [r0, #18]
 800ad9c:	8b03      	ldrh	r3, [r0, #24]
 800ad9e:	8a84      	ldrh	r4, [r0, #20]
 800ada0:	4422      	add	r2, r4
 800ada2:	440c      	add	r4, r1
 800ada4:	1a59      	subs	r1, r3, r1
 800ada6:	8342      	strh	r2, [r0, #26]
 800ada8:	8284      	strh	r4, [r0, #20]
 800adaa:	8301      	strh	r1, [r0, #24]
 800adac:	bd30      	pop	{r4, r5, pc}

0800adae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800adae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adb2:	7a43      	ldrb	r3, [r0, #9]
 800adb4:	1eda      	subs	r2, r3, #3
 800adb6:	b087      	sub	sp, #28
 800adb8:	4604      	mov	r4, r0
 800adba:	b2d2      	uxtb	r2, r2
 800adbc:	460f      	mov	r7, r1
 800adbe:	2900      	cmp	r1, #0
 800adc0:	d036      	beq.n	800ae30 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800adc2:	2a01      	cmp	r2, #1
 800adc4:	d932      	bls.n	800ae2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800adc6:	1e58      	subs	r0, r3, #1
 800adc8:	f1d0 0b00 	rsbs	fp, r0, #0
 800adcc:	eb4b 0b00 	adc.w	fp, fp, r0
 800add0:	1e99      	subs	r1, r3, #2
 800add2:	424b      	negs	r3, r1
 800add4:	414b      	adcs	r3, r1
 800add6:	9303      	str	r3, [sp, #12]
 800add8:	2300      	movs	r3, #0
 800adda:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800adde:	2500      	movs	r5, #0
 800ade0:	8265      	strh	r5, [r4, #18]
 800ade2:	82a5      	strh	r5, [r4, #20]
 800ade4:	46a9      	mov	r9, r5
 800ade6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800adea:	2300      	movs	r3, #0
 800adec:	9305      	str	r3, [sp, #20]
 800adee:	8823      	ldrh	r3, [r4, #0]
 800adf0:	2b20      	cmp	r3, #32
 800adf2:	d02b      	beq.n	800ae4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800adf4:	eba3 020a 	sub.w	r2, r3, sl
 800adf8:	4256      	negs	r6, r2
 800adfa:	4156      	adcs	r6, r2
 800adfc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ae00:	4293      	cmp	r3, r2
 800ae02:	d004      	beq.n	800ae0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800ae04:	4553      	cmp	r3, sl
 800ae06:	bf16      	itet	ne
 800ae08:	4699      	movne	r9, r3
 800ae0a:	2601      	moveq	r6, #1
 800ae0c:	2600      	movne	r6, #0
 800ae0e:	ab05      	add	r3, sp, #20
 800ae10:	68e2      	ldr	r2, [r4, #12]
 800ae12:	7a21      	ldrb	r1, [r4, #8]
 800ae14:	6860      	ldr	r0, [r4, #4]
 800ae16:	f002 fd39 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ae1a:	8020      	strh	r0, [r4, #0]
 800ae1c:	b9c8      	cbnz	r0, 800ae52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800ae1e:	8b22      	ldrh	r2, [r4, #24]
 800ae20:	2300      	movs	r3, #0
 800ae22:	4611      	mov	r1, r2
 800ae24:	4620      	mov	r0, r4
 800ae26:	f7ff ffb2 	bl	800ad8e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ae2a:	e066      	b.n	800aefa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800ae2c:	468b      	mov	fp, r1
 800ae2e:	e7cf      	b.n	800add0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800ae30:	3b01      	subs	r3, #1
 800ae32:	2a01      	cmp	r2, #1
 800ae34:	bf8c      	ite	hi
 800ae36:	2200      	movhi	r2, #0
 800ae38:	2201      	movls	r2, #1
 800ae3a:	2b01      	cmp	r3, #1
 800ae3c:	bf8c      	ite	hi
 800ae3e:	2300      	movhi	r3, #0
 800ae40:	2301      	movls	r3, #1
 800ae42:	9202      	str	r2, [sp, #8]
 800ae44:	9301      	str	r3, [sp, #4]
 800ae46:	9103      	str	r1, [sp, #12]
 800ae48:	468b      	mov	fp, r1
 800ae4a:	e7c8      	b.n	800adde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800ae4c:	4699      	mov	r9, r3
 800ae4e:	2601      	movs	r6, #1
 800ae50:	e7dd      	b.n	800ae0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800ae52:	8ae3      	ldrh	r3, [r4, #22]
 800ae54:	280a      	cmp	r0, #10
 800ae56:	f103 0301 	add.w	r3, r3, #1
 800ae5a:	82e3      	strh	r3, [r4, #22]
 800ae5c:	d0df      	beq.n	800ae1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800ae5e:	9a05      	ldr	r2, [sp, #20]
 800ae60:	bb42      	cbnz	r2, 800aeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800ae62:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ae66:	4298      	cmp	r0, r3
 800ae68:	d001      	beq.n	800ae6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800ae6a:	4550      	cmp	r0, sl
 800ae6c:	d1bd      	bne.n	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800ae6e:	8823      	ldrh	r3, [r4, #0]
 800ae70:	8b21      	ldrh	r1, [r4, #24]
 800ae72:	2b20      	cmp	r3, #32
 800ae74:	d001      	beq.n	800ae7a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800ae76:	4553      	cmp	r3, sl
 800ae78:	d131      	bne.n	800aede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800ae7a:	2e00      	cmp	r6, #0
 800ae7c:	bf0a      	itet	eq
 800ae7e:	460d      	moveq	r5, r1
 800ae80:	4630      	movne	r0, r6
 800ae82:	2001      	moveq	r0, #1
 800ae84:	440a      	add	r2, r1
 800ae86:	8aa3      	ldrh	r3, [r4, #20]
 800ae88:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800ae8c:	b292      	uxth	r2, r2
 800ae8e:	8322      	strh	r2, [r4, #24]
 800ae90:	4413      	add	r3, r2
 800ae92:	2f00      	cmp	r7, #0
 800ae94:	d03a      	beq.n	800af0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800ae96:	f1bb 0f00 	cmp.w	fp, #0
 800ae9a:	d102      	bne.n	800aea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800ae9c:	9903      	ldr	r1, [sp, #12]
 800ae9e:	b301      	cbz	r1, 800aee2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800aea0:	b1f8      	cbz	r0, 800aee2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800aea2:	8ba1      	ldrh	r1, [r4, #28]
 800aea4:	4419      	add	r1, r3
 800aea6:	458c      	cmp	ip, r1
 800aea8:	da2a      	bge.n	800af00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800aeaa:	8a61      	ldrh	r1, [r4, #18]
 800aeac:	b341      	cbz	r1, 800af00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800aeae:	4563      	cmp	r3, ip
 800aeb0:	dd9b      	ble.n	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aeb2:	e01c      	b.n	800aeee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800aeb4:	8893      	ldrh	r3, [r2, #4]
 800aeb6:	8023      	strh	r3, [r4, #0]
 800aeb8:	f892 800d 	ldrb.w	r8, [r2, #13]
 800aebc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800aec0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800aec4:	f892 800a 	ldrb.w	r8, [r2, #10]
 800aec8:	ea48 0800 	orr.w	r8, r8, r0
 800aecc:	68e0      	ldr	r0, [r4, #12]
 800aece:	6803      	ldr	r3, [r0, #0]
 800aed0:	4649      	mov	r1, r9
 800aed2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aed4:	4798      	blx	r3
 800aed6:	eb08 0200 	add.w	r2, r8, r0
 800aeda:	b292      	uxth	r2, r2
 800aedc:	e7c7      	b.n	800ae6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800aede:	2000      	movs	r0, #0
 800aee0:	e7d0      	b.n	800ae84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800aee2:	4563      	cmp	r3, ip
 800aee4:	dd81      	ble.n	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aee6:	8a63      	ldrh	r3, [r4, #18]
 800aee8:	2b00      	cmp	r3, #0
 800aeea:	f43f af7e 	beq.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800aeee:	2301      	movs	r3, #1
 800aef0:	77a3      	strb	r3, [r4, #30]
 800aef2:	8ba2      	ldrh	r2, [r4, #28]
 800aef4:	8b63      	ldrh	r3, [r4, #26]
 800aef6:	4413      	add	r3, r2
 800aef8:	8363      	strh	r3, [r4, #26]
 800aefa:	b007      	add	sp, #28
 800aefc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af00:	2300      	movs	r3, #0
 800af02:	4611      	mov	r1, r2
 800af04:	4620      	mov	r0, r4
 800af06:	f7ff ff42 	bl	800ad8e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800af0a:	e76e      	b.n	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af0c:	4563      	cmp	r3, ip
 800af0e:	dd14      	ble.n	800af3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800af10:	9b02      	ldr	r3, [sp, #8]
 800af12:	b113      	cbz	r3, 800af1a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800af14:	2301      	movs	r3, #1
 800af16:	460a      	mov	r2, r1
 800af18:	e783      	b.n	800ae22 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800af1a:	9b01      	ldr	r3, [sp, #4]
 800af1c:	2b00      	cmp	r3, #0
 800af1e:	f43f af64 	beq.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af22:	2800      	cmp	r0, #0
 800af24:	f47f af61 	bne.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af28:	b116      	cbz	r6, 800af30 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800af2a:	2301      	movs	r3, #1
 800af2c:	462a      	mov	r2, r5
 800af2e:	e779      	b.n	800ae24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800af30:	8a63      	ldrh	r3, [r4, #18]
 800af32:	2b00      	cmp	r3, #0
 800af34:	f43f af59 	beq.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af38:	e7df      	b.n	800aefa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800af3a:	2800      	cmp	r0, #0
 800af3c:	f47f af55 	bne.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af40:	2e00      	cmp	r6, #0
 800af42:	f43f af52 	beq.w	800adea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800af46:	2301      	movs	r3, #1
 800af48:	462a      	mov	r2, r5
 800af4a:	e7db      	b.n	800af04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800af4c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800af4c:	b530      	push	{r4, r5, lr}
 800af4e:	4605      	mov	r5, r0
 800af50:	b08b      	sub	sp, #44	; 0x2c
 800af52:	b191      	cbz	r1, 800af7a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800af54:	e9cd 3100 	strd	r3, r1, [sp]
 800af58:	4613      	mov	r3, r2
 800af5a:	4601      	mov	r1, r0
 800af5c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800af60:	a802      	add	r0, sp, #8
 800af62:	f7ff fd0d 	bl	800a980 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800af66:	2401      	movs	r4, #1
 800af68:	2100      	movs	r1, #0
 800af6a:	a802      	add	r0, sp, #8
 800af6c:	f7ff ff1f 	bl	800adae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800af70:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800af74:	b163      	cbz	r3, 800af90 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800af76:	3401      	adds	r4, #1
 800af78:	e7f6      	b.n	800af68 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800af7a:	f002 fd7f 	bl	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af7e:	2401      	movs	r4, #1
 800af80:	280a      	cmp	r0, #10
 800af82:	4628      	mov	r0, r5
 800af84:	bf08      	it	eq
 800af86:	3401      	addeq	r4, #1
 800af88:	f002 fd78 	bl	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800af8c:	2800      	cmp	r0, #0
 800af8e:	d1f7      	bne.n	800af80 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800af90:	b2a0      	uxth	r0, r4
 800af92:	b00b      	add	sp, #44	; 0x2c
 800af94:	bd30      	pop	{r4, r5, pc}

0800af96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800af96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af9a:	b0db      	sub	sp, #364	; 0x16c
 800af9c:	4689      	mov	r9, r1
 800af9e:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800afa2:	900a      	str	r0, [sp, #40]	; 0x28
 800afa4:	461c      	mov	r4, r3
 800afa6:	f1ba 0f00 	cmp.w	sl, #0
 800afaa:	f000 80a5 	beq.w	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800afae:	681b      	ldr	r3, [r3, #0]
 800afb0:	2b00      	cmp	r3, #0
 800afb2:	f000 80a1 	beq.w	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800afb6:	7ba3      	ldrb	r3, [r4, #14]
 800afb8:	2b00      	cmp	r3, #0
 800afba:	f000 809d 	beq.w	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800afbe:	6810      	ldr	r0, [r2, #0]
 800afc0:	6851      	ldr	r1, [r2, #4]
 800afc2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800afc6:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800afca:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800afce:	4643      	mov	r3, r8
 800afd0:	c303      	stmia	r3!, {r0, r1}
 800afd2:	2500      	movs	r5, #0
 800afd4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800afd8:	79a2      	ldrb	r2, [r4, #6]
 800afda:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800afde:	a90e      	add	r1, sp, #56	; 0x38
 800afe0:	4640      	mov	r0, r8
 800afe2:	950e      	str	r5, [sp, #56]	; 0x38
 800afe4:	f7ff fd42 	bl	800aa6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800afe8:	a90e      	add	r1, sp, #56	; 0x38
 800afea:	4608      	mov	r0, r1
 800afec:	79a2      	ldrb	r2, [r4, #6]
 800afee:	af18      	add	r7, sp, #96	; 0x60
 800aff0:	f7ff fd3c 	bl	800aa6c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800aff4:	4638      	mov	r0, r7
 800aff6:	f002 f90b 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800affa:	6820      	ldr	r0, [r4, #0]
 800affc:	6803      	ldr	r3, [r0, #0]
 800affe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b000:	4798      	blx	r3
 800b002:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b004:	4603      	mov	r3, r0
 800b006:	4651      	mov	r1, sl
 800b008:	4638      	mov	r0, r7
 800b00a:	f002 f946 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b00e:	6820      	ldr	r0, [r4, #0]
 800b010:	7923      	ldrb	r3, [r4, #4]
 800b012:	9308      	str	r3, [sp, #32]
 800b014:	6803      	ldr	r3, [r0, #0]
 800b016:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b018:	4798      	blx	r3
 800b01a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b01e:	181e      	adds	r6, r3, r0
 800b020:	42ae      	cmp	r6, r5
 800b022:	dd06      	ble.n	800b032 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800b024:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b028:	4282      	cmp	r2, r0
 800b02a:	bfa4      	itt	ge
 800b02c:	189d      	addge	r5, r3, r2
 800b02e:	fb95 f5f6 	sdivge	r5, r5, r6
 800b032:	a82e      	add	r0, sp, #184	; 0xb8
 800b034:	f002 f8ec 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800b038:	7c23      	ldrb	r3, [r4, #16]
 800b03a:	b14b      	cbz	r3, 800b050 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800b03c:	6820      	ldr	r0, [r4, #0]
 800b03e:	6803      	ldr	r3, [r0, #0]
 800b040:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b042:	4798      	blx	r3
 800b044:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b046:	4603      	mov	r3, r0
 800b048:	4651      	mov	r1, sl
 800b04a:	a82e      	add	r0, sp, #184	; 0xb8
 800b04c:	f002 f925 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b050:	7c21      	ldrb	r1, [r4, #16]
 800b052:	9101      	str	r1, [sp, #4]
 800b054:	6821      	ldr	r1, [r4, #0]
 800b056:	7963      	ldrb	r3, [r4, #5]
 800b058:	9100      	str	r1, [sp, #0]
 800b05a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800b05e:	a92e      	add	r1, sp, #184	; 0xb8
 800b060:	a810      	add	r0, sp, #64	; 0x40
 800b062:	f7ff fc8d 	bl	800a980 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b066:	7c23      	ldrb	r3, [r4, #16]
 800b068:	b9bb      	cbnz	r3, 800b09a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800b06a:	fa1f fa86 	uxth.w	sl, r6
 800b06e:	2d00      	cmp	r5, #0
 800b070:	dd45      	ble.n	800b0fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b072:	4638      	mov	r0, r7
 800b074:	f002 fd02 	bl	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b078:	2800      	cmp	r0, #0
 800b07a:	d03d      	beq.n	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b07c:	280a      	cmp	r0, #10
 800b07e:	d1f6      	bne.n	800b06e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b080:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b084:	4453      	add	r3, sl
 800b086:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b08a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b08e:	eba3 030a 	sub.w	r3, r3, sl
 800b092:	3d01      	subs	r5, #1
 800b094:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b098:	e7e9      	b.n	800b06e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b09a:	0073      	lsls	r3, r6, #1
 800b09c:	9309      	str	r3, [sp, #36]	; 0x24
 800b09e:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b0a2:	fa1f fa86 	uxth.w	sl, r6
 800b0a6:	2d00      	cmp	r5, #0
 800b0a8:	dd29      	ble.n	800b0fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b0aa:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b0ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b0b0:	428b      	cmp	r3, r1
 800b0b2:	bfd4      	ite	le
 800b0b4:	2100      	movle	r1, #0
 800b0b6:	2101      	movgt	r1, #1
 800b0b8:	a810      	add	r0, sp, #64	; 0x40
 800b0ba:	f7ff fe78 	bl	800adae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b0be:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800b0c2:	3b01      	subs	r3, #1
 800b0c4:	b29b      	uxth	r3, r3
 800b0c6:	455b      	cmp	r3, fp
 800b0c8:	930b      	str	r3, [sp, #44]	; 0x2c
 800b0ca:	d005      	beq.n	800b0d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800b0cc:	7961      	ldrb	r1, [r4, #5]
 800b0ce:	4638      	mov	r0, r7
 800b0d0:	f7f7 fee8 	bl	8002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b0d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b0d6:	e7f4      	b.n	800b0c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800b0d8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b0dc:	4453      	add	r3, sl
 800b0de:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b0e2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b0e6:	eba3 030a 	sub.w	r3, r3, sl
 800b0ea:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b0ee:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b0f2:	3d01      	subs	r5, #1
 800b0f4:	2b00      	cmp	r3, #0
 800b0f6:	d1d6      	bne.n	800b0a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800b0f8:	b05b      	add	sp, #364	; 0x16c
 800b0fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0fe:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800b102:	ad44      	add	r5, sp, #272	; 0x110
 800b104:	f04f 0b00 	mov.w	fp, #0
 800b108:	7c23      	ldrb	r3, [r4, #16]
 800b10a:	2b00      	cmp	r3, #0
 800b10c:	d067      	beq.n	800b1de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800b10e:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b112:	458a      	cmp	sl, r1
 800b114:	bfd4      	ite	le
 800b116:	2100      	movle	r1, #0
 800b118:	2101      	movgt	r1, #1
 800b11a:	a810      	add	r0, sp, #64	; 0x40
 800b11c:	f7ff fe47 	bl	800adae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b120:	9b08      	ldr	r3, [sp, #32]
 800b122:	2b00      	cmp	r3, #0
 800b124:	d056      	beq.n	800b1d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b126:	7c23      	ldrb	r3, [r4, #16]
 800b128:	9309      	str	r3, [sp, #36]	; 0x24
 800b12a:	2258      	movs	r2, #88	; 0x58
 800b12c:	4639      	mov	r1, r7
 800b12e:	4628      	mov	r0, r5
 800b130:	f00f f99e 	bl	801a470 <memcpy>
 800b134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b136:	2b00      	cmp	r3, #0
 800b138:	d059      	beq.n	800b1ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800b13a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800b13e:	7922      	ldrb	r2, [r4, #4]
 800b140:	2a01      	cmp	r2, #1
 800b142:	d13d      	bne.n	800b1c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800b144:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800b148:	1ac0      	subs	r0, r0, r3
 800b14a:	2302      	movs	r3, #2
 800b14c:	fb90 f0f3 	sdiv	r0, r0, r3
 800b150:	b200      	sxth	r0, r0
 800b152:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b156:	4418      	add	r0, r3
 800b158:	7c23      	ldrb	r3, [r4, #16]
 800b15a:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800b15e:	2b00      	cmp	r3, #0
 800b160:	d03a      	beq.n	800b1d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b162:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800b166:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800b16a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800b16e:	9500      	str	r5, [sp, #0]
 800b170:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b174:	e9cd b703 	strd	fp, r7, [sp, #12]
 800b178:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b17c:	464a      	mov	r2, r9
 800b17e:	2100      	movs	r1, #0
 800b180:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b182:	f7ff fca4 	bl	800aace <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b186:	2800      	cmp	r0, #0
 800b188:	d1b6      	bne.n	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b18a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b18e:	b2b2      	uxth	r2, r6
 800b190:	4611      	mov	r1, r2
 800b192:	4413      	add	r3, r2
 800b194:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800b198:	1a52      	subs	r2, r2, r1
 800b19a:	7c21      	ldrb	r1, [r4, #16]
 800b19c:	b21b      	sxth	r3, r3
 800b19e:	b212      	sxth	r2, r2
 800b1a0:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b1a4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b1a8:	b109      	cbz	r1, 800b1ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800b1aa:	42b2      	cmp	r2, r6
 800b1ac:	dba4      	blt.n	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b1ae:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b1b2:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b1b6:	440a      	add	r2, r1
 800b1b8:	b212      	sxth	r2, r2
 800b1ba:	4293      	cmp	r3, r2
 800b1bc:	dda4      	ble.n	800b108 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800b1be:	e79b      	b.n	800b0f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b1c0:	2a02      	cmp	r2, #2
 800b1c2:	d105      	bne.n	800b1d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800b1c4:	7be2      	ldrb	r2, [r4, #15]
 800b1c6:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800b1ca:	1a80      	subs	r0, r0, r2
 800b1cc:	1ac0      	subs	r0, r0, r3
 800b1ce:	e7bf      	b.n	800b150 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800b1d0:	2000      	movs	r0, #0
 800b1d2:	e7be      	b.n	800b152 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b1d4:	7be0      	ldrb	r0, [r4, #15]
 800b1d6:	e7bc      	b.n	800b152 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b1d8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b1dc:	e7c3      	b.n	800b166 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800b1de:	9b08      	ldr	r3, [sp, #32]
 800b1e0:	2b00      	cmp	r3, #0
 800b1e2:	d0f7      	beq.n	800b1d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b1e4:	2258      	movs	r2, #88	; 0x58
 800b1e6:	4639      	mov	r1, r7
 800b1e8:	4628      	mov	r0, r5
 800b1ea:	f00f f941 	bl	801a470 <memcpy>
 800b1ee:	2300      	movs	r3, #0
 800b1f0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b1f4:	6821      	ldr	r1, [r4, #0]
 800b1f6:	4628      	mov	r0, r5
 800b1f8:	f7ff fbfc 	bl	800a9f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b1fc:	b203      	sxth	r3, r0
 800b1fe:	e79e      	b.n	800b13e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800b200 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b200:	b510      	push	{r4, lr}
 800b202:	2b02      	cmp	r3, #2
 800b204:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b208:	d00b      	beq.n	800b222 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b20a:	2b03      	cmp	r3, #3
 800b20c:	d00e      	beq.n	800b22c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b20e:	2b01      	cmp	r3, #1
 800b210:	d001      	beq.n	800b216 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b212:	1860      	adds	r0, r4, r1
 800b214:	bd10      	pop	{r4, pc}
 800b216:	8880      	ldrh	r0, [r0, #4]
 800b218:	4420      	add	r0, r4
 800b21a:	b200      	sxth	r0, r0
 800b21c:	1a80      	subs	r0, r0, r2
 800b21e:	3801      	subs	r0, #1
 800b220:	e7f8      	b.n	800b214 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b222:	8880      	ldrh	r0, [r0, #4]
 800b224:	4420      	add	r0, r4
 800b226:	b200      	sxth	r0, r0
 800b228:	1a40      	subs	r0, r0, r1
 800b22a:	e7f8      	b.n	800b21e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b22c:	18a0      	adds	r0, r4, r2
 800b22e:	e7f1      	b.n	800b214 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b230 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b230:	b510      	push	{r4, lr}
 800b232:	2b02      	cmp	r3, #2
 800b234:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b238:	d006      	beq.n	800b248 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b23a:	2b03      	cmp	r3, #3
 800b23c:	d00a      	beq.n	800b254 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b23e:	2b01      	cmp	r3, #1
 800b240:	bf14      	ite	ne
 800b242:	18a0      	addne	r0, r4, r2
 800b244:	1860      	addeq	r0, r4, r1
 800b246:	bd10      	pop	{r4, pc}
 800b248:	88c0      	ldrh	r0, [r0, #6]
 800b24a:	4420      	add	r0, r4
 800b24c:	b200      	sxth	r0, r0
 800b24e:	1a80      	subs	r0, r0, r2
 800b250:	3801      	subs	r0, #1
 800b252:	e7f8      	b.n	800b246 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b254:	88c0      	ldrh	r0, [r0, #6]
 800b256:	4420      	add	r0, r4
 800b258:	b200      	sxth	r0, r0
 800b25a:	1a40      	subs	r0, r0, r1
 800b25c:	e7f8      	b.n	800b250 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b260 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b264:	b0d3      	sub	sp, #332	; 0x14c
 800b266:	4614      	mov	r4, r2
 800b268:	9309      	str	r3, [sp, #36]	; 0x24
 800b26a:	f8bd 3178 	ldrh.w	r3, [sp, #376]	; 0x178
 800b26e:	930a      	str	r3, [sp, #40]	; 0x28
 800b270:	f89d 317c 	ldrb.w	r3, [sp, #380]	; 0x17c
 800b274:	930b      	str	r3, [sp, #44]	; 0x2c
 800b276:	f8bd 3180 	ldrh.w	r3, [sp, #384]	; 0x180
 800b27a:	930e      	str	r3, [sp, #56]	; 0x38
 800b27c:	6803      	ldr	r3, [r0, #0]
 800b27e:	910d      	str	r1, [sp, #52]	; 0x34
 800b280:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 800b282:	9008      	str	r0, [sp, #32]
 800b284:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b288:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b28a:	f8dd b174 	ldr.w	fp, [sp, #372]	; 0x174
 800b28e:	47a8      	blx	r5
 800b290:	9b08      	ldr	r3, [sp, #32]
 800b292:	6058      	str	r0, [r3, #4]
 800b294:	2800      	cmp	r0, #0
 800b296:	f000 835c 	beq.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b29a:	ed94 7a02 	vldr	s14, [r4, #8]
 800b29e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b2a2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2aa:	f240 8352 	bls.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2ae:	ed94 7a07 	vldr	s14, [r4, #28]
 800b2b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2ba:	f240 834a 	bls.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2be:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b2c2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2ca:	f240 8342 	bls.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2ce:	6822      	ldr	r2, [r4, #0]
 800b2d0:	4ba3      	ldr	r3, [pc, #652]	; (800b560 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x300>)
 800b2d2:	429a      	cmp	r2, r3
 800b2d4:	f2c0 833d 	blt.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2d8:	49a2      	ldr	r1, [pc, #648]	; (800b564 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x304>)
 800b2da:	6963      	ldr	r3, [r4, #20]
 800b2dc:	428a      	cmp	r2, r1
 800b2de:	f300 8338 	bgt.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2e2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b2e6:	48a0      	ldr	r0, [pc, #640]	; (800b568 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x308>)
 800b2e8:	33ff      	adds	r3, #255	; 0xff
 800b2ea:	4283      	cmp	r3, r0
 800b2ec:	f200 8331 	bhi.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b2f0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b2f2:	4a9e      	ldr	r2, [pc, #632]	; (800b56c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>)
 800b2f4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b2f8:	33ff      	adds	r3, #255	; 0xff
 800b2fa:	4293      	cmp	r3, r2
 800b2fc:	f200 8329 	bhi.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b300:	6862      	ldr	r2, [r4, #4]
 800b302:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b306:	33ff      	adds	r3, #255	; 0xff
 800b308:	4283      	cmp	r3, r0
 800b30a:	f200 8322 	bhi.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b30e:	69a1      	ldr	r1, [r4, #24]
 800b310:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b314:	33ff      	adds	r3, #255	; 0xff
 800b316:	4283      	cmp	r3, r0
 800b318:	f200 831b 	bhi.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b31c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b31e:	4d93      	ldr	r5, [pc, #588]	; (800b56c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>)
 800b320:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b324:	30ff      	adds	r0, #255	; 0xff
 800b326:	42a8      	cmp	r0, r5
 800b328:	f200 8313 	bhi.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b32c:	428a      	cmp	r2, r1
 800b32e:	f280 80f6 	bge.w	800b51e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2be>
 800b332:	429a      	cmp	r2, r3
 800b334:	f300 80ff 	bgt.w	800b536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2d6>
 800b338:	4299      	cmp	r1, r3
 800b33a:	f280 8103 	bge.w	800b544 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2e4>
 800b33e:	2502      	movs	r5, #2
 800b340:	2701      	movs	r7, #1
 800b342:	46a9      	mov	r9, r5
 800b344:	46b8      	mov	r8, r7
 800b346:	f04f 0a00 	mov.w	sl, #0
 800b34a:	4621      	mov	r1, r4
 800b34c:	a841      	add	r0, sp, #260	; 0x104
 800b34e:	f002 fd17 	bl	800dd80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b352:	4622      	mov	r2, r4
 800b354:	4653      	mov	r3, sl
 800b356:	a941      	add	r1, sp, #260	; 0x104
 800b358:	f8cd 9000 	str.w	r9, [sp]
 800b35c:	a811      	add	r0, sp, #68	; 0x44
 800b35e:	f002 fe3f 	bl	800dfe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b362:	4622      	mov	r2, r4
 800b364:	4653      	mov	r3, sl
 800b366:	a941      	add	r1, sp, #260	; 0x104
 800b368:	f8cd 8000 	str.w	r8, [sp]
 800b36c:	a821      	add	r0, sp, #132	; 0x84
 800b36e:	f002 fe37 	bl	800dfe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b372:	4643      	mov	r3, r8
 800b374:	4622      	mov	r2, r4
 800b376:	a941      	add	r1, sp, #260	; 0x104
 800b378:	f8cd 9000 	str.w	r9, [sp]
 800b37c:	a831      	add	r0, sp, #196	; 0xc4
 800b37e:	f002 fe2f 	bl	800dfe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b382:	42af      	cmp	r7, r5
 800b384:	bfb7      	itett	lt
 800b386:	2300      	movlt	r3, #0
 800b388:	2301      	movge	r3, #1
 800b38a:	930c      	strlt	r3, [sp, #48]	; 0x30
 800b38c:	ac11      	addlt	r4, sp, #68	; 0x44
 800b38e:	bfa4      	itt	ge
 800b390:	930c      	strge	r3, [sp, #48]	; 0x30
 800b392:	ac21      	addge	r4, sp, #132	; 0x84
 800b394:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 800b396:	6961      	ldr	r1, [r4, #20]
 800b398:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b39c:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
 800b3a0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800b3a2:	440b      	add	r3, r1
 800b3a4:	f8bb 1006 	ldrh.w	r1, [fp, #6]
 800b3a8:	4401      	add	r1, r0
 800b3aa:	b209      	sxth	r1, r1
 800b3ac:	bfb4      	ite	lt
 800b3ae:	ad21      	addlt	r5, sp, #132	; 0x84
 800b3b0:	ad11      	addge	r5, sp, #68	; 0x44
 800b3b2:	428b      	cmp	r3, r1
 800b3b4:	f280 80d2 	bge.w	800b55c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2fc>
 800b3b8:	4283      	cmp	r3, r0
 800b3ba:	da09      	bge.n	800b3d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b3bc:	2a00      	cmp	r2, #0
 800b3be:	f340 8169 	ble.w	800b694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b3c2:	1ac3      	subs	r3, r0, r3
 800b3c4:	429a      	cmp	r2, r3
 800b3c6:	f2c0 80d3 	blt.w	800b570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b3ca:	2b00      	cmp	r3, #0
 800b3cc:	f300 80d1 	bgt.w	800b572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x312>
 800b3d0:	4617      	mov	r7, r2
 800b3d2:	2f00      	cmp	r7, #0
 800b3d4:	f340 815e 	ble.w	800b694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b3d8:	9b08      	ldr	r3, [sp, #32]
 800b3da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b3dc:	681b      	ldr	r3, [r3, #0]
 800b3de:	9206      	str	r2, [sp, #24]
 800b3e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b3e2:	9205      	str	r2, [sp, #20]
 800b3e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b3e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b3e8:	9808      	ldr	r0, [sp, #32]
 800b3ea:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b3ee:	9a5c      	ldr	r2, [sp, #368]	; 0x170
 800b3f0:	9202      	str	r2, [sp, #8]
 800b3f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b3f4:	e9cd 5200 	strd	r5, r2, [sp]
 800b3f8:	aa41      	add	r2, sp, #260	; 0x104
 800b3fa:	f8d3 803c 	ldr.w	r8, [r3, #60]	; 0x3c
 800b3fe:	4623      	mov	r3, r4
 800b400:	47c0      	blx	r8
 800b402:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 800b404:	6961      	ldr	r1, [r4, #20]
 800b406:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800b40a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b40e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 800b412:	440a      	add	r2, r1
 800b414:	4403      	add	r3, r0
 800b416:	3201      	adds	r2, #1
 800b418:	b21b      	sxth	r3, r3
 800b41a:	429a      	cmp	r2, r3
 800b41c:	f280 813a 	bge.w	800b694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b420:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b424:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b428:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b42c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b430:	ed94 6a08 	vldr	s12, [r4, #32]
 800b434:	441a      	add	r2, r3
 800b436:	69a3      	ldr	r3, [r4, #24]
 800b438:	6022      	str	r2, [r4, #0]
 800b43a:	3101      	adds	r1, #1
 800b43c:	3b01      	subs	r3, #1
 800b43e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b442:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b446:	6161      	str	r1, [r4, #20]
 800b448:	61a3      	str	r3, [r4, #24]
 800b44a:	68a1      	ldr	r1, [r4, #8]
 800b44c:	6923      	ldr	r3, [r4, #16]
 800b44e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b452:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b456:	edd4 6a07 	vldr	s13, [r4, #28]
 800b45a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b45e:	440b      	add	r3, r1
 800b460:	68e1      	ldr	r1, [r4, #12]
 800b462:	6123      	str	r3, [r4, #16]
 800b464:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b468:	428b      	cmp	r3, r1
 800b46a:	edc4 6a07 	vstr	s13, [r4, #28]
 800b46e:	db15      	blt.n	800b49c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x23c>
 800b470:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b474:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b478:	3201      	adds	r2, #1
 800b47a:	edc4 6a07 	vstr	s13, [r4, #28]
 800b47e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b482:	6022      	str	r2, [r4, #0]
 800b484:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b488:	1a5b      	subs	r3, r3, r1
 800b48a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b48e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b492:	6123      	str	r3, [r4, #16]
 800b494:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b498:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b49c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b4a0:	441a      	add	r2, r3
 800b4a2:	696b      	ldr	r3, [r5, #20]
 800b4a4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b4a8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b4ac:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b4b0:	68a9      	ldr	r1, [r5, #8]
 800b4b2:	ed95 6a08 	vldr	s12, [r5, #32]
 800b4b6:	602a      	str	r2, [r5, #0]
 800b4b8:	3301      	adds	r3, #1
 800b4ba:	616b      	str	r3, [r5, #20]
 800b4bc:	69ab      	ldr	r3, [r5, #24]
 800b4be:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b4c2:	3b01      	subs	r3, #1
 800b4c4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b4c8:	61ab      	str	r3, [r5, #24]
 800b4ca:	692b      	ldr	r3, [r5, #16]
 800b4cc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b4d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b4d4:	edd5 6a07 	vldr	s13, [r5, #28]
 800b4d8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b4dc:	440b      	add	r3, r1
 800b4de:	68e9      	ldr	r1, [r5, #12]
 800b4e0:	612b      	str	r3, [r5, #16]
 800b4e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b4e6:	428b      	cmp	r3, r1
 800b4e8:	edc5 6a07 	vstr	s13, [r5, #28]
 800b4ec:	db15      	blt.n	800b51a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ba>
 800b4ee:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b4f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b4f6:	3201      	adds	r2, #1
 800b4f8:	edc5 6a07 	vstr	s13, [r5, #28]
 800b4fc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b500:	602a      	str	r2, [r5, #0]
 800b502:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b506:	1a5b      	subs	r3, r3, r1
 800b508:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b50c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b510:	612b      	str	r3, [r5, #16]
 800b512:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b516:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b51a:	3f01      	subs	r7, #1
 800b51c:	e759      	b.n	800b3d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x172>
 800b51e:	4299      	cmp	r1, r3
 800b520:	dc13      	bgt.n	800b54a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2ea>
 800b522:	429a      	cmp	r2, r3
 800b524:	da14      	bge.n	800b550 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2f0>
 800b526:	2502      	movs	r5, #2
 800b528:	2703      	movs	r7, #3
 800b52a:	46a9      	mov	r9, r5
 800b52c:	f04f 0800 	mov.w	r8, #0
 800b530:	f04f 0a01 	mov.w	sl, #1
 800b534:	e709      	b.n	800b34a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 800b536:	2501      	movs	r5, #1
 800b538:	2700      	movs	r7, #0
 800b53a:	46a9      	mov	r9, r5
 800b53c:	46b8      	mov	r8, r7
 800b53e:	f04f 0a02 	mov.w	sl, #2
 800b542:	e702      	b.n	800b34a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xea>
 800b544:	2501      	movs	r5, #1
 800b546:	2702      	movs	r7, #2
 800b548:	e6fb      	b.n	800b342 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe2>
 800b54a:	2500      	movs	r5, #0
 800b54c:	2701      	movs	r7, #1
 800b54e:	e7f4      	b.n	800b53a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2da>
 800b550:	2702      	movs	r7, #2
 800b552:	2503      	movs	r5, #3
 800b554:	f04f 0900 	mov.w	r9, #0
 800b558:	46b8      	mov	r8, r7
 800b55a:	e7e9      	b.n	800b530 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2d0>
 800b55c:	4613      	mov	r3, r2
 800b55e:	e734      	b.n	800b3ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x16a>
 800b560:	fffd8f01 	.word	0xfffd8f01
 800b564:	00027100 	.word	0x00027100
 800b568:	0004e1ff 	.word	0x0004e1ff
 800b56c:	0004e1fe 	.word	0x0004e1fe
 800b570:	4613      	mov	r3, r2
 800b572:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800b574:	910f      	str	r1, [sp, #60]	; 0x3c
 800b576:	e9dd 0a21 	ldrd	r0, sl, [sp, #132]	; 0x84
 800b57a:	e9dd 8124 	ldrd	r8, r1, [sp, #144]	; 0x90
 800b57e:	f8dd c098 	ldr.w	ip, [sp, #152]	; 0x98
 800b582:	eddd 4a2c 	vldr	s9, [sp, #176]	; 0xb0
 800b586:	ed9d 7a2b 	vldr	s14, [sp, #172]	; 0xac
 800b58a:	ed9d 4a2f 	vldr	s8, [sp, #188]	; 0xbc
 800b58e:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 800b592:	eddd 3a29 	vldr	s7, [sp, #164]	; 0xa4
 800b596:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 800b59a:	ed9d 5a2a 	vldr	s10, [sp, #168]	; 0xa8
 800b59e:	eddd 5a2d 	vldr	s11, [sp, #180]	; 0xb4
 800b5a2:	ed9d 6a30 	vldr	s12, [sp, #192]	; 0xc0
 800b5a6:	469e      	mov	lr, r3
 800b5a8:	461f      	mov	r7, r3
 800b5aa:	f04f 0900 	mov.w	r9, #0
 800b5ae:	2f00      	cmp	r7, #0
 800b5b0:	d147      	bne.n	800b642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3e2>
 800b5b2:	449c      	add	ip, r3
 800b5b4:	1ad7      	subs	r7, r2, r3
 800b5b6:	f1b9 0f00 	cmp.w	r9, #0
 800b5ba:	d009      	beq.n	800b5d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x370>
 800b5bc:	e9cd c726 	strd	ip, r7, [sp, #152]	; 0x98
 800b5c0:	9021      	str	r0, [sp, #132]	; 0x84
 800b5c2:	ed8d 7a2b 	vstr	s14, [sp, #172]	; 0xac
 800b5c6:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800b5ca:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 800b5ce:	9125      	str	r1, [sp, #148]	; 0x94
 800b5d0:	e9dd 0a11 	ldrd	r0, sl, [sp, #68]	; 0x44
 800b5d4:	e9dd c716 	ldrd	ip, r7, [sp, #88]	; 0x58
 800b5d8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b5da:	eddd 6a1b 	vldr	s13, [sp, #108]	; 0x6c
 800b5de:	eddd 4a1c 	vldr	s9, [sp, #112]	; 0x70
 800b5e2:	ed9d 7a1e 	vldr	s14, [sp, #120]	; 0x78
 800b5e6:	ed9d 4a1f 	vldr	s8, [sp, #124]	; 0x7c
 800b5ea:	eddd 7a18 	vldr	s15, [sp, #96]	; 0x60
 800b5ee:	eddd 3a19 	vldr	s7, [sp, #100]	; 0x64
 800b5f2:	9915      	ldr	r1, [sp, #84]	; 0x54
 800b5f4:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 800b5f8:	ed9d 5a1a 	vldr	s10, [sp, #104]	; 0x68
 800b5fc:	eddd 5a1d 	vldr	s11, [sp, #116]	; 0x74
 800b600:	ed9d 6a20 	vldr	s12, [sp, #128]	; 0x80
 800b604:	960f      	str	r6, [sp, #60]	; 0x3c
 800b606:	f04f 0800 	mov.w	r8, #0
 800b60a:	f1be 0f00 	cmp.w	lr, #0
 800b60e:	d030      	beq.n	800b672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x412>
 800b610:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800b612:	4431      	add	r1, r6
 800b614:	4549      	cmp	r1, r9
 800b616:	4450      	add	r0, sl
 800b618:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b61c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b620:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b624:	db08      	blt.n	800b638 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3d8>
 800b626:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b62a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b62e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b632:	3001      	adds	r0, #1
 800b634:	eba1 0109 	sub.w	r1, r1, r9
 800b638:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b63c:	f04f 0801 	mov.w	r8, #1
 800b640:	e7e3      	b.n	800b60a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3aa>
 800b642:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800b644:	4431      	add	r1, r6
 800b646:	4541      	cmp	r1, r8
 800b648:	4450      	add	r0, sl
 800b64a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b64e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b652:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b656:	db08      	blt.n	800b66a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x40a>
 800b658:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b65c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b660:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b664:	3001      	adds	r0, #1
 800b666:	eba1 0108 	sub.w	r1, r1, r8
 800b66a:	3f01      	subs	r7, #1
 800b66c:	f04f 0901 	mov.w	r9, #1
 800b670:	e79d      	b.n	800b5ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b672:	449c      	add	ip, r3
 800b674:	1aff      	subs	r7, r7, r3
 800b676:	f1b8 0f00 	cmp.w	r8, #0
 800b67a:	d009      	beq.n	800b690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x430>
 800b67c:	e9cd c716 	strd	ip, r7, [sp, #88]	; 0x58
 800b680:	9011      	str	r0, [sp, #68]	; 0x44
 800b682:	edcd 6a1b 	vstr	s13, [sp, #108]	; 0x6c
 800b686:	ed8d 7a1e 	vstr	s14, [sp, #120]	; 0x78
 800b68a:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 800b68e:	9115      	str	r1, [sp, #84]	; 0x54
 800b690:	1ad2      	subs	r2, r2, r3
 800b692:	e69d      	b.n	800b3d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b694:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b696:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 800b698:	2b00      	cmp	r3, #0
 800b69a:	f000 80c3 	beq.w	800b824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5c4>
 800b69e:	ad11      	add	r5, sp, #68	; 0x44
 800b6a0:	ac31      	add	r4, sp, #196	; 0xc4
 800b6a2:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 800b6a4:	6961      	ldr	r1, [r4, #20]
 800b6a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b6aa:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
 800b6ae:	440b      	add	r3, r1
 800b6b0:	f8bb 1006 	ldrh.w	r1, [fp, #6]
 800b6b4:	4401      	add	r1, r0
 800b6b6:	b209      	sxth	r1, r1
 800b6b8:	428b      	cmp	r3, r1
 800b6ba:	f280 80b6 	bge.w	800b82a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5ca>
 800b6be:	4283      	cmp	r3, r0
 800b6c0:	da09      	bge.n	800b6d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x476>
 800b6c2:	2a00      	cmp	r2, #0
 800b6c4:	f340 8145 	ble.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b6c8:	1ac3      	subs	r3, r0, r3
 800b6ca:	429a      	cmp	r2, r3
 800b6cc:	f2c0 80af 	blt.w	800b82e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5ce>
 800b6d0:	2b00      	cmp	r3, #0
 800b6d2:	f300 80ad 	bgt.w	800b830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5d0>
 800b6d6:	4617      	mov	r7, r2
 800b6d8:	2f00      	cmp	r7, #0
 800b6da:	f340 813a 	ble.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b6de:	9b08      	ldr	r3, [sp, #32]
 800b6e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b6e2:	681b      	ldr	r3, [r3, #0]
 800b6e4:	9206      	str	r2, [sp, #24]
 800b6e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b6e8:	9205      	str	r2, [sp, #20]
 800b6ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b6ec:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b6ee:	9808      	ldr	r0, [sp, #32]
 800b6f0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b6f4:	9a5c      	ldr	r2, [sp, #368]	; 0x170
 800b6f6:	9202      	str	r2, [sp, #8]
 800b6f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b6fa:	e9cd 5200 	strd	r5, r2, [sp]
 800b6fe:	aa41      	add	r2, sp, #260	; 0x104
 800b700:	f8d3 803c 	ldr.w	r8, [r3, #60]	; 0x3c
 800b704:	4623      	mov	r3, r4
 800b706:	47c0      	blx	r8
 800b708:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 800b70a:	6961      	ldr	r1, [r4, #20]
 800b70c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800b710:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b714:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 800b718:	440a      	add	r2, r1
 800b71a:	4403      	add	r3, r0
 800b71c:	3201      	adds	r2, #1
 800b71e:	b21b      	sxth	r3, r3
 800b720:	429a      	cmp	r2, r3
 800b722:	f280 8116 	bge.w	800b952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6f2>
 800b726:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b72a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b72e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b732:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b736:	ed94 6a08 	vldr	s12, [r4, #32]
 800b73a:	441a      	add	r2, r3
 800b73c:	69a3      	ldr	r3, [r4, #24]
 800b73e:	6022      	str	r2, [r4, #0]
 800b740:	3101      	adds	r1, #1
 800b742:	3b01      	subs	r3, #1
 800b744:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b748:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b74c:	6161      	str	r1, [r4, #20]
 800b74e:	61a3      	str	r3, [r4, #24]
 800b750:	68a1      	ldr	r1, [r4, #8]
 800b752:	6923      	ldr	r3, [r4, #16]
 800b754:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b758:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b75c:	edd4 6a07 	vldr	s13, [r4, #28]
 800b760:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b764:	440b      	add	r3, r1
 800b766:	68e1      	ldr	r1, [r4, #12]
 800b768:	6123      	str	r3, [r4, #16]
 800b76a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b76e:	428b      	cmp	r3, r1
 800b770:	edc4 6a07 	vstr	s13, [r4, #28]
 800b774:	db15      	blt.n	800b7a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x542>
 800b776:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b77a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b77e:	3201      	adds	r2, #1
 800b780:	edc4 6a07 	vstr	s13, [r4, #28]
 800b784:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b788:	6022      	str	r2, [r4, #0]
 800b78a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b78e:	1a5b      	subs	r3, r3, r1
 800b790:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b794:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b798:	6123      	str	r3, [r4, #16]
 800b79a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b79e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b7a2:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b7a6:	441a      	add	r2, r3
 800b7a8:	696b      	ldr	r3, [r5, #20]
 800b7aa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b7ae:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b7b2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b7b6:	68a9      	ldr	r1, [r5, #8]
 800b7b8:	ed95 6a08 	vldr	s12, [r5, #32]
 800b7bc:	602a      	str	r2, [r5, #0]
 800b7be:	3301      	adds	r3, #1
 800b7c0:	616b      	str	r3, [r5, #20]
 800b7c2:	69ab      	ldr	r3, [r5, #24]
 800b7c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b7c8:	3b01      	subs	r3, #1
 800b7ca:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b7ce:	61ab      	str	r3, [r5, #24]
 800b7d0:	692b      	ldr	r3, [r5, #16]
 800b7d2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b7d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b7da:	edd5 6a07 	vldr	s13, [r5, #28]
 800b7de:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b7e2:	440b      	add	r3, r1
 800b7e4:	68e9      	ldr	r1, [r5, #12]
 800b7e6:	612b      	str	r3, [r5, #16]
 800b7e8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b7ec:	428b      	cmp	r3, r1
 800b7ee:	edc5 6a07 	vstr	s13, [r5, #28]
 800b7f2:	db15      	blt.n	800b820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5c0>
 800b7f4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b7f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b7fc:	3201      	adds	r2, #1
 800b7fe:	edc5 6a07 	vstr	s13, [r5, #28]
 800b802:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b806:	602a      	str	r2, [r5, #0]
 800b808:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b80c:	1a5b      	subs	r3, r3, r1
 800b80e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b812:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b816:	612b      	str	r3, [r5, #16]
 800b818:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b81c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b820:	3f01      	subs	r7, #1
 800b822:	e759      	b.n	800b6d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x478>
 800b824:	ad31      	add	r5, sp, #196	; 0xc4
 800b826:	ac11      	add	r4, sp, #68	; 0x44
 800b828:	e73b      	b.n	800b6a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x442>
 800b82a:	4613      	mov	r3, r2
 800b82c:	e750      	b.n	800b6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b82e:	4613      	mov	r3, r2
 800b830:	e9dd 0a31 	ldrd	r0, sl, [sp, #196]	; 0xc4
 800b834:	9e33      	ldr	r6, [sp, #204]	; 0xcc
 800b836:	f8dd c0d8 	ldr.w	ip, [sp, #216]	; 0xd8
 800b83a:	ed9d 7a3b 	vldr	s14, [sp, #236]	; 0xec
 800b83e:	eddd 4a3c 	vldr	s9, [sp, #240]	; 0xf0
 800b842:	eddd 7a3e 	vldr	s15, [sp, #248]	; 0xf8
 800b846:	ed9d 4a3f 	vldr	s8, [sp, #252]	; 0xfc
 800b84a:	eddd 6a38 	vldr	s13, [sp, #224]	; 0xe0
 800b84e:	eddd 3a39 	vldr	s7, [sp, #228]	; 0xe4
 800b852:	9935      	ldr	r1, [sp, #212]	; 0xd4
 800b854:	f8dd 80d0 	ldr.w	r8, [sp, #208]	; 0xd0
 800b858:	ed9d 5a3a 	vldr	s10, [sp, #232]	; 0xe8
 800b85c:	eddd 5a3d 	vldr	s11, [sp, #244]	; 0xf4
 800b860:	ed9d 6a40 	vldr	s12, [sp, #256]	; 0x100
 800b864:	960c      	str	r6, [sp, #48]	; 0x30
 800b866:	469e      	mov	lr, r3
 800b868:	461f      	mov	r7, r3
 800b86a:	f04f 0900 	mov.w	r9, #0
 800b86e:	2f00      	cmp	r7, #0
 800b870:	d146      	bne.n	800b900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6a0>
 800b872:	449c      	add	ip, r3
 800b874:	1ad7      	subs	r7, r2, r3
 800b876:	f1b9 0f00 	cmp.w	r9, #0
 800b87a:	d009      	beq.n	800b890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x630>
 800b87c:	e9cd c736 	strd	ip, r7, [sp, #216]	; 0xd8
 800b880:	9031      	str	r0, [sp, #196]	; 0xc4
 800b882:	9135      	str	r1, [sp, #212]	; 0xd4
 800b884:	edcd 6a38 	vstr	s13, [sp, #224]	; 0xe0
 800b888:	ed8d 7a3b 	vstr	s14, [sp, #236]	; 0xec
 800b88c:	edcd 7a3e 	vstr	s15, [sp, #248]	; 0xf8
 800b890:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800b892:	910c      	str	r1, [sp, #48]	; 0x30
 800b894:	e9dd 0a11 	ldrd	r0, sl, [sp, #68]	; 0x44
 800b898:	e9dd c716 	ldrd	ip, r7, [sp, #88]	; 0x58
 800b89c:	e9dd 9114 	ldrd	r9, r1, [sp, #80]	; 0x50
 800b8a0:	eddd 4a1c 	vldr	s9, [sp, #112]	; 0x70
 800b8a4:	eddd 6a1b 	vldr	s13, [sp, #108]	; 0x6c
 800b8a8:	ed9d 4a1f 	vldr	s8, [sp, #124]	; 0x7c
 800b8ac:	ed9d 7a1e 	vldr	s14, [sp, #120]	; 0x78
 800b8b0:	eddd 3a19 	vldr	s7, [sp, #100]	; 0x64
 800b8b4:	eddd 7a18 	vldr	s15, [sp, #96]	; 0x60
 800b8b8:	ed9d 5a1a 	vldr	s10, [sp, #104]	; 0x68
 800b8bc:	eddd 5a1d 	vldr	s11, [sp, #116]	; 0x74
 800b8c0:	ed9d 6a20 	vldr	s12, [sp, #128]	; 0x80
 800b8c4:	f04f 0800 	mov.w	r8, #0
 800b8c8:	f1be 0f00 	cmp.w	lr, #0
 800b8cc:	d030      	beq.n	800b930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6d0>
 800b8ce:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b8d0:	4431      	add	r1, r6
 800b8d2:	4549      	cmp	r1, r9
 800b8d4:	4450      	add	r0, sl
 800b8d6:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b8da:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b8de:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b8e2:	db08      	blt.n	800b8f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x696>
 800b8e4:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b8e8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b8ec:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b8f0:	3001      	adds	r0, #1
 800b8f2:	eba1 0109 	sub.w	r1, r1, r9
 800b8f6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b8fa:	f04f 0801 	mov.w	r8, #1
 800b8fe:	e7e3      	b.n	800b8c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x668>
 800b900:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b902:	4431      	add	r1, r6
 800b904:	4541      	cmp	r1, r8
 800b906:	4450      	add	r0, sl
 800b908:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b90c:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b910:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b914:	db08      	blt.n	800b928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6c8>
 800b916:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b91a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b91e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b922:	3001      	adds	r0, #1
 800b924:	eba1 0108 	sub.w	r1, r1, r8
 800b928:	3f01      	subs	r7, #1
 800b92a:	f04f 0901 	mov.w	r9, #1
 800b92e:	e79e      	b.n	800b86e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x60e>
 800b930:	449c      	add	ip, r3
 800b932:	1aff      	subs	r7, r7, r3
 800b934:	f1b8 0f00 	cmp.w	r8, #0
 800b938:	d009      	beq.n	800b94e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6ee>
 800b93a:	e9cd c716 	strd	ip, r7, [sp, #88]	; 0x58
 800b93e:	9011      	str	r0, [sp, #68]	; 0x44
 800b940:	edcd 6a1b 	vstr	s13, [sp, #108]	; 0x6c
 800b944:	ed8d 7a1e 	vstr	s14, [sp, #120]	; 0x78
 800b948:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 800b94c:	9115      	str	r1, [sp, #84]	; 0x54
 800b94e:	1ad2      	subs	r2, r2, r3
 800b950:	e6c1      	b.n	800b6d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x476>
 800b952:	b053      	add	sp, #332	; 0x14c
 800b954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b958 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b958:	4b01      	ldr	r3, [pc, #4]	; (800b960 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b95a:	2200      	movs	r2, #0
 800b95c:	601a      	str	r2, [r3, #0]
 800b95e:	4770      	bx	lr
 800b960:	200120b4 	.word	0x200120b4

0800b964 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800b964:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b966:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800b96a:	1e05      	subs	r5, r0, #0
 800b96c:	bfba      	itte	lt
 800b96e:	f04f 37ff 	movlt.w	r7, #4294967295
 800b972:	426d      	neglt	r5, r5
 800b974:	2701      	movge	r7, #1
 800b976:	f1be 0f00 	cmp.w	lr, #0
 800b97a:	bfb8      	it	lt
 800b97c:	f1ce 0e00 	rsblt	lr, lr, #0
 800b980:	f04f 0601 	mov.w	r6, #1
 800b984:	fa4e f001 	asr.w	r0, lr, r1
 800b988:	fa06 f101 	lsl.w	r1, r6, r1
 800b98c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800b990:	f101 31ff 	add.w	r1, r1, #4294967295
 800b994:	ea01 010e 	and.w	r1, r1, lr
 800b998:	bfb8      	it	lt
 800b99a:	427f      	neglt	r7, r7
 800b99c:	434d      	muls	r5, r1
 800b99e:	2c00      	cmp	r4, #0
 800b9a0:	f8dc 1000 	ldr.w	r1, [ip]
 800b9a4:	bfb8      	it	lt
 800b9a6:	4264      	neglt	r4, r4
 800b9a8:	fb03 1300 	mla	r3, r3, r0, r1
 800b9ac:	fb95 f1f4 	sdiv	r1, r5, r4
 800b9b0:	fb04 5511 	mls	r5, r4, r1, r5
 800b9b4:	441d      	add	r5, r3
 800b9b6:	fb95 f3f4 	sdiv	r3, r5, r4
 800b9ba:	fb04 5413 	mls	r4, r4, r3, r5
 800b9be:	4419      	add	r1, r3
 800b9c0:	bfb8      	it	lt
 800b9c2:	427f      	neglt	r7, r7
 800b9c4:	fb02 1000 	mla	r0, r2, r0, r1
 800b9c8:	f8cc 4000 	str.w	r4, [ip]
 800b9cc:	4378      	muls	r0, r7
 800b9ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b9d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b9d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9d4:	4c24      	ldr	r4, [pc, #144]	; (800ba68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800b9d6:	6807      	ldr	r7, [r0, #0]
 800b9d8:	69a3      	ldr	r3, [r4, #24]
 800b9da:	b086      	sub	sp, #24
 800b9dc:	4605      	mov	r5, r0
 800b9de:	b92b      	cbnz	r3, 800b9ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800b9e0:	6840      	ldr	r0, [r0, #4]
 800b9e2:	e9c5 7000 	strd	r7, r0, [r5]
 800b9e6:	b006      	add	sp, #24
 800b9e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9ec:	68a2      	ldr	r2, [r4, #8]
 800b9ee:	6820      	ldr	r0, [r4, #0]
 800b9f0:	ae06      	add	r6, sp, #24
 800b9f2:	f04f 0802 	mov.w	r8, #2
 800b9f6:	fb93 f1f8 	sdiv	r1, r3, r8
 800b9fa:	440a      	add	r2, r1
 800b9fc:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ba00:	69e1      	ldr	r1, [r4, #28]
 800ba02:	9700      	str	r7, [sp, #0]
 800ba04:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800ba08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ba0a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ba0c:	f7ff ffaa 	bl	800b964 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ba10:	69a3      	ldr	r3, [r4, #24]
 800ba12:	9301      	str	r3, [sp, #4]
 800ba14:	686b      	ldr	r3, [r5, #4]
 800ba16:	9300      	str	r3, [sp, #0]
 800ba18:	4607      	mov	r7, r0
 800ba1a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ba1c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ba1e:	6a21      	ldr	r1, [r4, #32]
 800ba20:	9602      	str	r6, [sp, #8]
 800ba22:	6860      	ldr	r0, [r4, #4]
 800ba24:	f7ff ff9e 	bl	800b964 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ba28:	6963      	ldr	r3, [r4, #20]
 800ba2a:	69a2      	ldr	r2, [r4, #24]
 800ba2c:	fb92 f8f8 	sdiv	r8, r2, r8
 800ba30:	4443      	add	r3, r8
 800ba32:	9305      	str	r3, [sp, #20]
 800ba34:	682b      	ldr	r3, [r5, #0]
 800ba36:	9300      	str	r3, [sp, #0]
 800ba38:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800ba3c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ba3e:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800ba40:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ba42:	4407      	add	r7, r0
 800ba44:	68e0      	ldr	r0, [r4, #12]
 800ba46:	f7ff ff8d 	bl	800b964 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ba4a:	69a3      	ldr	r3, [r4, #24]
 800ba4c:	9301      	str	r3, [sp, #4]
 800ba4e:	686b      	ldr	r3, [r5, #4]
 800ba50:	9300      	str	r3, [sp, #0]
 800ba52:	4680      	mov	r8, r0
 800ba54:	9602      	str	r6, [sp, #8]
 800ba56:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800ba58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ba5a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ba5c:	6920      	ldr	r0, [r4, #16]
 800ba5e:	f7ff ff81 	bl	800b964 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ba62:	4440      	add	r0, r8
 800ba64:	e7bd      	b.n	800b9e2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800ba66:	bf00      	nop
 800ba68:	200120b8 	.word	0x200120b8

0800ba6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ba6c:	b510      	push	{r4, lr}
 800ba6e:	4b07      	ldr	r3, [pc, #28]	; (800ba8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ba70:	781b      	ldrb	r3, [r3, #0]
 800ba72:	2b01      	cmp	r3, #1
 800ba74:	d108      	bne.n	800ba88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ba76:	4b06      	ldr	r3, [pc, #24]	; (800ba90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ba78:	880c      	ldrh	r4, [r1, #0]
 800ba7a:	881b      	ldrh	r3, [r3, #0]
 800ba7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ba80:	3b01      	subs	r3, #1
 800ba82:	1b1b      	subs	r3, r3, r4
 800ba84:	8003      	strh	r3, [r0, #0]
 800ba86:	800a      	strh	r2, [r1, #0]
 800ba88:	bd10      	pop	{r4, pc}
 800ba8a:	bf00      	nop
 800ba8c:	200120a4 	.word	0x200120a4
 800ba90:	200120a8 	.word	0x200120a8

0800ba94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ba94:	b510      	push	{r4, lr}
 800ba96:	4b0a      	ldr	r3, [pc, #40]	; (800bac0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ba98:	781b      	ldrb	r3, [r3, #0]
 800ba9a:	2b01      	cmp	r3, #1
 800ba9c:	d10e      	bne.n	800babc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ba9e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800baa2:	8843      	ldrh	r3, [r0, #2]
 800baa4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800baa8:	8044      	strh	r4, [r0, #2]
 800baaa:	18ca      	adds	r2, r1, r3
 800baac:	4b05      	ldr	r3, [pc, #20]	; (800bac4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800baae:	881b      	ldrh	r3, [r3, #0]
 800bab0:	1a9b      	subs	r3, r3, r2
 800bab2:	8003      	strh	r3, [r0, #0]
 800bab4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bab8:	80c3      	strh	r3, [r0, #6]
 800baba:	8081      	strh	r1, [r0, #4]
 800babc:	bd10      	pop	{r4, pc}
 800babe:	bf00      	nop
 800bac0:	200120a4 	.word	0x200120a4
 800bac4:	200120a0 	.word	0x200120a0

0800bac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800bac8:	b510      	push	{r4, lr}
 800baca:	4b07      	ldr	r3, [pc, #28]	; (800bae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800bacc:	781b      	ldrb	r3, [r3, #0]
 800bace:	2b01      	cmp	r3, #1
 800bad0:	d108      	bne.n	800bae4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800bad2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800bad6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bada:	8003      	strh	r3, [r0, #0]
 800badc:	8893      	ldrh	r3, [r2, #4]
 800bade:	3b01      	subs	r3, #1
 800bae0:	1b1b      	subs	r3, r3, r4
 800bae2:	800b      	strh	r3, [r1, #0]
 800bae4:	bd10      	pop	{r4, pc}
 800bae6:	bf00      	nop
 800bae8:	200120a4 	.word	0x200120a4

0800baec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800baec:	b513      	push	{r0, r1, r4, lr}
 800baee:	4b08      	ldr	r3, [pc, #32]	; (800bb10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800baf0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800baf4:	4b07      	ldr	r3, [pc, #28]	; (800bb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800baf6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bafa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bafe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bb02:	2400      	movs	r4, #0
 800bb04:	466a      	mov	r2, sp
 800bb06:	9400      	str	r4, [sp, #0]
 800bb08:	f7ff ffde 	bl	800bac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800bb0c:	b002      	add	sp, #8
 800bb0e:	bd10      	pop	{r4, pc}
 800bb10:	200120a0 	.word	0x200120a0
 800bb14:	200120a2 	.word	0x200120a2

0800bb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800bb18:	4b0b      	ldr	r3, [pc, #44]	; (800bb48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800bb1a:	781b      	ldrb	r3, [r3, #0]
 800bb1c:	2b01      	cmp	r3, #1
 800bb1e:	d111      	bne.n	800bb44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800bb20:	680b      	ldr	r3, [r1, #0]
 800bb22:	ed90 7a00 	vldr	s14, [r0]
 800bb26:	6003      	str	r3, [r0, #0]
 800bb28:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800bb2c:	eddf 6a07 	vldr	s13, [pc, #28]	; 800bb4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800bb30:	ee07 3a90 	vmov	s15, r3
 800bb34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bb38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800bb3c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800bb40:	edc1 7a00 	vstr	s15, [r1]
 800bb44:	4770      	bx	lr
 800bb46:	bf00      	nop
 800bb48:	200120a4 	.word	0x200120a4
 800bb4c:	38d1b717 	.word	0x38d1b717

0800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800bb50:	b510      	push	{r4, lr}
 800bb52:	4b0a      	ldr	r3, [pc, #40]	; (800bb7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800bb54:	781b      	ldrb	r3, [r3, #0]
 800bb56:	2b01      	cmp	r3, #1
 800bb58:	460a      	mov	r2, r1
 800bb5a:	d10d      	bne.n	800bb78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800bb5c:	8881      	ldrh	r1, [r0, #4]
 800bb5e:	8803      	ldrh	r3, [r0, #0]
 800bb60:	440b      	add	r3, r1
 800bb62:	4601      	mov	r1, r0
 800bb64:	3b01      	subs	r3, #1
 800bb66:	f821 3b02 	strh.w	r3, [r1], #2
 800bb6a:	f7ff ffad 	bl	800bac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800bb6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bb72:	88c2      	ldrh	r2, [r0, #6]
 800bb74:	8082      	strh	r2, [r0, #4]
 800bb76:	80c3      	strh	r3, [r0, #6]
 800bb78:	bd10      	pop	{r4, pc}
 800bb7a:	bf00      	nop
 800bb7c:	200120a4 	.word	0x200120a4

0800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800bb80:	b507      	push	{r0, r1, r2, lr}
 800bb82:	4b09      	ldr	r3, [pc, #36]	; (800bba8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800bb84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bb88:	4b08      	ldr	r3, [pc, #32]	; (800bbac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800bb8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bb8e:	2100      	movs	r1, #0
 800bb90:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bb94:	9100      	str	r1, [sp, #0]
 800bb96:	4669      	mov	r1, sp
 800bb98:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bb9c:	f7ff ffd8 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800bba0:	b003      	add	sp, #12
 800bba2:	f85d fb04 	ldr.w	pc, [sp], #4
 800bba6:	bf00      	nop
 800bba8:	200120a0 	.word	0x200120a0
 800bbac:	200120a2 	.word	0x200120a2

0800bbb0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800bbb0:	4b06      	ldr	r3, [pc, #24]	; (800bbcc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800bbb2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bbb6:	4b06      	ldr	r3, [pc, #24]	; (800bbd0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800bbb8:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800bbbc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bbc0:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800bbc4:	2100      	movs	r1, #0
 800bbc6:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800bbca:	4770      	bx	lr
 800bbcc:	200120a0 	.word	0x200120a0
 800bbd0:	200120a2 	.word	0x200120a2

0800bbd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800bbd4:	4b03      	ldr	r3, [pc, #12]	; (800bbe4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800bbd6:	6818      	ldr	r0, [r3, #0]
 800bbd8:	b110      	cbz	r0, 800bbe0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800bbda:	6803      	ldr	r3, [r0, #0]
 800bbdc:	699b      	ldr	r3, [r3, #24]
 800bbde:	4718      	bx	r3
 800bbe0:	4770      	bx	lr
 800bbe2:	bf00      	nop
 800bbe4:	20012108 	.word	0x20012108

0800bbe8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800bbe8:	4770      	bx	lr
	...

0800bbec <_ZN8touchgfx11Application4drawEv>:
 800bbec:	b507      	push	{r0, r1, r2, lr}
 800bbee:	4b09      	ldr	r3, [pc, #36]	; (800bc14 <_ZN8touchgfx11Application4drawEv+0x28>)
 800bbf0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bbf4:	4b08      	ldr	r3, [pc, #32]	; (800bc18 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800bbf6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bbfa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bbfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bc02:	6803      	ldr	r3, [r0, #0]
 800bc04:	2100      	movs	r1, #0
 800bc06:	9100      	str	r1, [sp, #0]
 800bc08:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bc0a:	4669      	mov	r1, sp
 800bc0c:	4798      	blx	r3
 800bc0e:	b003      	add	sp, #12
 800bc10:	f85d fb04 	ldr.w	pc, [sp], #4
 800bc14:	200120a0 	.word	0x200120a0
 800bc18:	200120a2 	.word	0x200120a2

0800bc1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800bc1c:	4b03      	ldr	r3, [pc, #12]	; (800bc2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800bc1e:	6818      	ldr	r0, [r3, #0]
 800bc20:	b110      	cbz	r0, 800bc28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800bc22:	6803      	ldr	r3, [r0, #0]
 800bc24:	69db      	ldr	r3, [r3, #28]
 800bc26:	4718      	bx	r3
 800bc28:	4770      	bx	lr
 800bc2a:	bf00      	nop
 800bc2c:	20012108 	.word	0x20012108

0800bc30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800bc30:	4b03      	ldr	r3, [pc, #12]	; (800bc40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800bc32:	6818      	ldr	r0, [r3, #0]
 800bc34:	b110      	cbz	r0, 800bc3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800bc36:	6803      	ldr	r3, [r0, #0]
 800bc38:	6a1b      	ldr	r3, [r3, #32]
 800bc3a:	4718      	bx	r3
 800bc3c:	4770      	bx	lr
 800bc3e:	bf00      	nop
 800bc40:	20012108 	.word	0x20012108

0800bc44 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800bc44:	4b03      	ldr	r3, [pc, #12]	; (800bc54 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800bc46:	6818      	ldr	r0, [r3, #0]
 800bc48:	b110      	cbz	r0, 800bc50 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800bc4a:	6803      	ldr	r3, [r0, #0]
 800bc4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc4e:	4718      	bx	r3
 800bc50:	4770      	bx	lr
 800bc52:	bf00      	nop
 800bc54:	20012108 	.word	0x20012108

0800bc58 <_ZN8touchgfx11Application15handleTickEventEv>:
 800bc58:	b570      	push	{r4, r5, r6, lr}
 800bc5a:	4d34      	ldr	r5, [pc, #208]	; (800bd2c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800bc5c:	4604      	mov	r4, r0
 800bc5e:	6828      	ldr	r0, [r5, #0]
 800bc60:	b140      	cbz	r0, 800bc74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800bc62:	7a03      	ldrb	r3, [r0, #8]
 800bc64:	b933      	cbnz	r3, 800bc74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800bc66:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800bc6a:	6803      	ldr	r3, [r0, #0]
 800bc6c:	689b      	ldr	r3, [r3, #8]
 800bc6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc72:	4718      	bx	r3
 800bc74:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800bc78:	b97b      	cbnz	r3, 800bc9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800bc7a:	b170      	cbz	r0, 800bc9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800bc7c:	7a03      	ldrb	r3, [r0, #8]
 800bc7e:	b163      	cbz	r3, 800bc9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800bc80:	4b2b      	ldr	r3, [pc, #172]	; (800bd30 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800bc82:	6818      	ldr	r0, [r3, #0]
 800bc84:	b110      	cbz	r0, 800bc8c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800bc86:	6803      	ldr	r3, [r0, #0]
 800bc88:	691b      	ldr	r3, [r3, #16]
 800bc8a:	4798      	blx	r3
 800bc8c:	6828      	ldr	r0, [r5, #0]
 800bc8e:	6803      	ldr	r3, [r0, #0]
 800bc90:	68db      	ldr	r3, [r3, #12]
 800bc92:	4798      	blx	r3
 800bc94:	2301      	movs	r3, #1
 800bc96:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800bc9a:	2500      	movs	r5, #0
 800bc9c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800bca0:	42a8      	cmp	r0, r5
 800bca2:	dd0c      	ble.n	800bcbe <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800bca4:	1963      	adds	r3, r4, r5
 800bca6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800bcaa:	b132      	cbz	r2, 800bcba <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800bcac:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800bcb0:	4413      	add	r3, r2
 800bcb2:	6858      	ldr	r0, [r3, #4]
 800bcb4:	6803      	ldr	r3, [r0, #0]
 800bcb6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800bcb8:	4798      	blx	r3
 800bcba:	3501      	adds	r5, #1
 800bcbc:	e7ee      	b.n	800bc9c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800bcbe:	2300      	movs	r3, #0
 800bcc0:	461a      	mov	r2, r3
 800bcc2:	4298      	cmp	r0, r3
 800bcc4:	d114      	bne.n	800bcf0 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800bcc6:	1d25      	adds	r5, r4, #4
 800bcc8:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800bccc:	1e48      	subs	r0, r1, #1
 800bcce:	b280      	uxth	r0, r0
 800bcd0:	4291      	cmp	r1, r2
 800bcd2:	dd24      	ble.n	800bd1e <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800bcd4:	4288      	cmp	r0, r1
 800bcd6:	d2fb      	bcs.n	800bcd0 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800bcd8:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800bcdc:	3304      	adds	r3, #4
 800bcde:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800bce2:	428b      	cmp	r3, r1
 800bce4:	d018      	beq.n	800bd18 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800bce6:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800bcea:	f843 6c04 	str.w	r6, [r3, #-4]
 800bcee:	e7f8      	b.n	800bce2 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800bcf0:	18e1      	adds	r1, r4, r3
 800bcf2:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800bcf6:	b16d      	cbz	r5, 800bd14 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800bcf8:	429a      	cmp	r2, r3
 800bcfa:	d00a      	beq.n	800bd12 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800bcfc:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800bd00:	4431      	add	r1, r6
 800bd02:	684e      	ldr	r6, [r1, #4]
 800bd04:	b291      	uxth	r1, r2
 800bd06:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800bd0a:	604e      	str	r6, [r1, #4]
 800bd0c:	18a1      	adds	r1, r4, r2
 800bd0e:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800bd12:	3201      	adds	r2, #1
 800bd14:	3301      	adds	r3, #1
 800bd16:	e7d4      	b.n	800bcc2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800bd18:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800bd1c:	e7d4      	b.n	800bcc8 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800bd1e:	4b04      	ldr	r3, [pc, #16]	; (800bd30 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800bd20:	6818      	ldr	r0, [r3, #0]
 800bd22:	b110      	cbz	r0, 800bd2a <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800bd24:	6803      	ldr	r3, [r0, #0]
 800bd26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd28:	e7a1      	b.n	800bc6e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800bd2a:	bd70      	pop	{r4, r5, r6, pc}
 800bd2c:	2001210c 	.word	0x2001210c
 800bd30:	20012108 	.word	0x20012108

0800bd34 <_ZN8touchgfx11ApplicationD1Ev>:
 800bd34:	4770      	bx	lr

0800bd36 <_ZN8touchgfx11ApplicationD0Ev>:
 800bd36:	b510      	push	{r4, lr}
 800bd38:	f44f 719c 	mov.w	r1, #312	; 0x138
 800bd3c:	4604      	mov	r4, r0
 800bd3e:	f00e faed 	bl	801a31c <_ZdlPvj>
 800bd42:	4620      	mov	r0, r4
 800bd44:	bd10      	pop	{r4, pc}
	...

0800bd48 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800bd48:	b570      	push	{r4, r5, r6, lr}
 800bd4a:	4606      	mov	r6, r0
 800bd4c:	460c      	mov	r4, r1
 800bd4e:	b929      	cbnz	r1, 800bd5c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800bd50:	4b0c      	ldr	r3, [pc, #48]	; (800bd84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800bd52:	4a0d      	ldr	r2, [pc, #52]	; (800bd88 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800bd54:	480d      	ldr	r0, [pc, #52]	; (800bd8c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800bd56:	2166      	movs	r1, #102	; 0x66
 800bd58:	f00e fb0c 	bl	801a374 <__assert_func>
 800bd5c:	4d0c      	ldr	r5, [pc, #48]	; (800bd90 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800bd5e:	2300      	movs	r3, #0
 800bd60:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bd64:	6828      	ldr	r0, [r5, #0]
 800bd66:	b110      	cbz	r0, 800bd6e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800bd68:	6803      	ldr	r3, [r0, #0]
 800bd6a:	695b      	ldr	r3, [r3, #20]
 800bd6c:	4798      	blx	r3
 800bd6e:	602c      	str	r4, [r5, #0]
 800bd70:	6823      	ldr	r3, [r4, #0]
 800bd72:	4620      	mov	r0, r4
 800bd74:	68db      	ldr	r3, [r3, #12]
 800bd76:	4798      	blx	r3
 800bd78:	6833      	ldr	r3, [r6, #0]
 800bd7a:	4630      	mov	r0, r6
 800bd7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd82:	4718      	bx	r3
 800bd84:	0801d186 	.word	0x0801d186
 800bd88:	0801d258 	.word	0x0801d258
 800bd8c:	0801d190 	.word	0x0801d190
 800bd90:	20012108 	.word	0x20012108

0800bd94 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800bd94:	b510      	push	{r4, lr}
 800bd96:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bd9a:	888a      	ldrh	r2, [r1, #4]
 800bd9c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bda0:	4422      	add	r2, r4
 800bda2:	b212      	sxth	r2, r2
 800bda4:	4293      	cmp	r3, r2
 800bda6:	da15      	bge.n	800bdd4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bda8:	8882      	ldrh	r2, [r0, #4]
 800bdaa:	4413      	add	r3, r2
 800bdac:	b21b      	sxth	r3, r3
 800bdae:	429c      	cmp	r4, r3
 800bdb0:	da10      	bge.n	800bdd4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bdb2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800bdb6:	88c9      	ldrh	r1, [r1, #6]
 800bdb8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bdbc:	4419      	add	r1, r3
 800bdbe:	b209      	sxth	r1, r1
 800bdc0:	428a      	cmp	r2, r1
 800bdc2:	da07      	bge.n	800bdd4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bdc4:	88c0      	ldrh	r0, [r0, #6]
 800bdc6:	4410      	add	r0, r2
 800bdc8:	b200      	sxth	r0, r0
 800bdca:	4283      	cmp	r3, r0
 800bdcc:	bfac      	ite	ge
 800bdce:	2000      	movge	r0, #0
 800bdd0:	2001      	movlt	r0, #1
 800bdd2:	bd10      	pop	{r4, pc}
 800bdd4:	2000      	movs	r0, #0
 800bdd6:	e7fc      	b.n	800bdd2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800bdd8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800bdd8:	b570      	push	{r4, r5, r6, lr}
 800bdda:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bdde:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bde2:	42ac      	cmp	r4, r5
 800bde4:	db18      	blt.n	800be18 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bde6:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800bdea:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bdee:	429a      	cmp	r2, r3
 800bdf0:	db12      	blt.n	800be18 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800bdf2:	8886      	ldrh	r6, [r0, #4]
 800bdf4:	4435      	add	r5, r6
 800bdf6:	888e      	ldrh	r6, [r1, #4]
 800bdf8:	4434      	add	r4, r6
 800bdfa:	b22d      	sxth	r5, r5
 800bdfc:	b224      	sxth	r4, r4
 800bdfe:	42a5      	cmp	r5, r4
 800be00:	db0a      	blt.n	800be18 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800be02:	88c0      	ldrh	r0, [r0, #6]
 800be04:	4418      	add	r0, r3
 800be06:	88cb      	ldrh	r3, [r1, #6]
 800be08:	441a      	add	r2, r3
 800be0a:	b200      	sxth	r0, r0
 800be0c:	b212      	sxth	r2, r2
 800be0e:	4290      	cmp	r0, r2
 800be10:	bfb4      	ite	lt
 800be12:	2000      	movlt	r0, #0
 800be14:	2001      	movge	r0, #1
 800be16:	bd70      	pop	{r4, r5, r6, pc}
 800be18:	2000      	movs	r0, #0
 800be1a:	e7fc      	b.n	800be16 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800be1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be1e:	4604      	mov	r4, r0
 800be20:	4608      	mov	r0, r1
 800be22:	460d      	mov	r5, r1
 800be24:	f7fc fe1d 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be28:	b978      	cbnz	r0, 800be4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800be2a:	4620      	mov	r0, r4
 800be2c:	f7fc fe19 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be30:	f9b5 6000 	ldrsh.w	r6, [r5]
 800be34:	b150      	cbz	r0, 800be4c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800be36:	8026      	strh	r6, [r4, #0]
 800be38:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800be3c:	8063      	strh	r3, [r4, #2]
 800be3e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800be42:	80a3      	strh	r3, [r4, #4]
 800be44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800be48:	80e3      	strh	r3, [r4, #6]
 800be4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be4c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800be50:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800be54:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800be58:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800be5c:	88ed      	ldrh	r5, [r5, #6]
 800be5e:	42b1      	cmp	r1, r6
 800be60:	460f      	mov	r7, r1
 800be62:	bfa8      	it	ge
 800be64:	4637      	movge	r7, r6
 800be66:	4293      	cmp	r3, r2
 800be68:	4618      	mov	r0, r3
 800be6a:	4466      	add	r6, ip
 800be6c:	bfa8      	it	ge
 800be6e:	4610      	movge	r0, r2
 800be70:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800be74:	8027      	strh	r7, [r4, #0]
 800be76:	442a      	add	r2, r5
 800be78:	88e5      	ldrh	r5, [r4, #6]
 800be7a:	8060      	strh	r0, [r4, #2]
 800be7c:	4461      	add	r1, ip
 800be7e:	442b      	add	r3, r5
 800be80:	b236      	sxth	r6, r6
 800be82:	b209      	sxth	r1, r1
 800be84:	b212      	sxth	r2, r2
 800be86:	b21b      	sxth	r3, r3
 800be88:	428e      	cmp	r6, r1
 800be8a:	bfac      	ite	ge
 800be8c:	ebc7 0106 	rsbge	r1, r7, r6
 800be90:	ebc7 0101 	rsblt	r1, r7, r1
 800be94:	429a      	cmp	r2, r3
 800be96:	bfac      	ite	ge
 800be98:	ebc0 0202 	rsbge	r2, r0, r2
 800be9c:	ebc0 0203 	rsblt	r2, r0, r3
 800bea0:	80a1      	strh	r1, [r4, #4]
 800bea2:	80e2      	strh	r2, [r4, #6]
 800bea4:	e7d1      	b.n	800be4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800bea8 <_ZN8touchgfx11Application11getInstanceEv>:
 800bea8:	4b01      	ldr	r3, [pc, #4]	; (800beb0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800beaa:	6818      	ldr	r0, [r3, #0]
 800beac:	4770      	bx	lr
 800beae:	bf00      	nop
 800beb0:	20012118 	.word	0x20012118

0800beb4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800beb4:	2300      	movs	r3, #0
 800beb6:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800beba:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800bebe:	30a8      	adds	r0, #168	; 0xa8
 800bec0:	f802 3b01 	strb.w	r3, [r2], #1
 800bec4:	4282      	cmp	r2, r0
 800bec6:	d1fb      	bne.n	800bec0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800bec8:	4770      	bx	lr

0800beca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800beca:	4603      	mov	r3, r0
 800becc:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800bed0:	2200      	movs	r2, #0
 800bed2:	801a      	strh	r2, [r3, #0]
 800bed4:	805a      	strh	r2, [r3, #2]
 800bed6:	809a      	strh	r2, [r3, #4]
 800bed8:	80da      	strh	r2, [r3, #6]
 800beda:	3308      	adds	r3, #8
 800bedc:	428b      	cmp	r3, r1
 800bede:	d1f8      	bne.n	800bed2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800bee0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800bee4:	4770      	bx	lr
	...

0800bee8 <_ZN8touchgfx11ApplicationC1Ev>:
 800bee8:	b570      	push	{r4, r5, r6, lr}
 800beea:	4b1a      	ldr	r3, [pc, #104]	; (800bf54 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800beec:	6003      	str	r3, [r0, #0]
 800beee:	2500      	movs	r5, #0
 800bef0:	4604      	mov	r4, r0
 800bef2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800bef6:	30a8      	adds	r0, #168	; 0xa8
 800bef8:	f7ff ffe7 	bl	800beca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800befc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800bf00:	f7ff ffe3 	bl	800beca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bf04:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800bf08:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800bf0c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800bf10:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800bf14:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800bf18:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800bf1c:	490e      	ldr	r1, [pc, #56]	; (800bf58 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800bf1e:	480f      	ldr	r0, [pc, #60]	; (800bf5c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800bf20:	4e0f      	ldr	r6, [pc, #60]	; (800bf60 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800bf22:	f00e f8cb 	bl	801a0bc <CRC_Lock>
 800bf26:	4b0f      	ldr	r3, [pc, #60]	; (800bf64 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800bf28:	b158      	cbz	r0, 800bf42 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800bf2a:	801d      	strh	r5, [r3, #0]
 800bf2c:	4a0e      	ldr	r2, [pc, #56]	; (800bf68 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800bf2e:	2300      	movs	r3, #0
 800bf30:	6013      	str	r3, [r2, #0]
 800bf32:	4a0e      	ldr	r2, [pc, #56]	; (800bf6c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800bf34:	6033      	str	r3, [r6, #0]
 800bf36:	4620      	mov	r0, r4
 800bf38:	6013      	str	r3, [r2, #0]
 800bf3a:	f7ff ffbb 	bl	800beb4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800bf3e:	4620      	mov	r0, r4
 800bf40:	bd70      	pop	{r4, r5, r6, pc}
 800bf42:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800bf46:	2002      	movs	r0, #2
 800bf48:	801a      	strh	r2, [r3, #0]
 800bf4a:	6030      	str	r0, [r6, #0]
 800bf4c:	f001 f818 	bl	800cf80 <_ZN8touchgfx6Screen4drawEv>
 800bf50:	e7ec      	b.n	800bf2c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800bf52:	bf00      	nop
 800bf54:	0801d21c 	.word	0x0801d21c
 800bf58:	b5e8b5cd 	.word	0xb5e8b5cd
 800bf5c:	f407a5c2 	.word	0xf407a5c2
 800bf60:	20012108 	.word	0x20012108
 800bf64:	20000084 	.word	0x20000084
 800bf68:	20012118 	.word	0x20012118
 800bf6c:	2001210c 	.word	0x2001210c

0800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800bf70:	2300      	movs	r3, #0
 800bf72:	8003      	strh	r3, [r0, #0]
 800bf74:	8043      	strh	r3, [r0, #2]
 800bf76:	8083      	strh	r3, [r0, #4]
 800bf78:	80c3      	strh	r3, [r0, #6]
 800bf7a:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800bf7e:	4293      	cmp	r3, r2
 800bf80:	b530      	push	{r4, r5, lr}
 800bf82:	d912      	bls.n	800bfaa <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bf84:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800bf88:	3b01      	subs	r3, #1
 800bf8a:	6825      	ldr	r5, [r4, #0]
 800bf8c:	6005      	str	r5, [r0, #0]
 800bf8e:	b29b      	uxth	r3, r3
 800bf90:	6865      	ldr	r5, [r4, #4]
 800bf92:	6045      	str	r5, [r0, #4]
 800bf94:	4293      	cmp	r3, r2
 800bf96:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800bf9a:	d906      	bls.n	800bfaa <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bf9c:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800bfa0:	681d      	ldr	r5, [r3, #0]
 800bfa2:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800bfa6:	685d      	ldr	r5, [r3, #4]
 800bfa8:	6065      	str	r5, [r4, #4]
 800bfaa:	bd30      	pop	{r4, r5, pc}

0800bfac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800bfac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfae:	466b      	mov	r3, sp
 800bfb0:	e883 0006 	stmia.w	r3, {r1, r2}
 800bfb4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800bfb8:	2a07      	cmp	r2, #7
 800bfba:	4604      	mov	r4, r0
 800bfbc:	d906      	bls.n	800bfcc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800bfbe:	4b09      	ldr	r3, [pc, #36]	; (800bfe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800bfc0:	4a09      	ldr	r2, [pc, #36]	; (800bfe8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800bfc2:	480a      	ldr	r0, [pc, #40]	; (800bfec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800bfc4:	f240 118f 	movw	r1, #399	; 0x18f
 800bfc8:	f00e f9d4 	bl	801a374 <__assert_func>
 800bfcc:	1c51      	adds	r1, r2, #1
 800bfce:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800bfd2:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800bfd6:	cb03      	ldmia	r3!, {r0, r1}
 800bfd8:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800bfdc:	6069      	str	r1, [r5, #4]
 800bfde:	b003      	add	sp, #12
 800bfe0:	bd30      	pop	{r4, r5, pc}
 800bfe2:	bf00      	nop
 800bfe4:	0801d1ba 	.word	0x0801d1ba
 800bfe8:	0801d29c 	.word	0x0801d29c
 800bfec:	0801d1e9 	.word	0x0801d1e9

0800bff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800bff0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bff4:	b089      	sub	sp, #36	; 0x24
 800bff6:	466c      	mov	r4, sp
 800bff8:	4606      	mov	r6, r0
 800bffa:	4620      	mov	r0, r4
 800bffc:	e884 0006 	stmia.w	r4, {r1, r2}
 800c000:	f7fc fd2f 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c004:	bbb0      	cbnz	r0, 800c074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800c006:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800c00a:	b1fd      	cbz	r5, 800c04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800c00c:	3d01      	subs	r5, #1
 800c00e:	af04      	add	r7, sp, #16
 800c010:	f04f 090a 	mov.w	r9, #10
 800c014:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800c018:	ab02      	add	r3, sp, #8
 800c01a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c01e:	6851      	ldr	r1, [r2, #4]
 800c020:	c303      	stmia	r3!, {r0, r1}
 800c022:	4621      	mov	r1, r4
 800c024:	a802      	add	r0, sp, #8
 800c026:	fa1f f885 	uxth.w	r8, r5
 800c02a:	f7ff fed5 	bl	800bdd8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c02e:	bb08      	cbnz	r0, 800c074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800c030:	a902      	add	r1, sp, #8
 800c032:	4620      	mov	r0, r4
 800c034:	f7ff fed0 	bl	800bdd8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c038:	b1f8      	cbz	r0, 800c07a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800c03a:	4642      	mov	r2, r8
 800c03c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800c040:	a806      	add	r0, sp, #24
 800c042:	f7ff ff95 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c046:	f115 35ff 	adds.w	r5, r5, #4294967295
 800c04a:	d2e3      	bcs.n	800c014 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800c04c:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800c050:	2b08      	cmp	r3, #8
 800c052:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800c056:	d108      	bne.n	800c06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800c058:	4629      	mov	r1, r5
 800c05a:	a806      	add	r0, sp, #24
 800c05c:	2207      	movs	r2, #7
 800c05e:	f7ff ff87 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c062:	a906      	add	r1, sp, #24
 800c064:	4620      	mov	r0, r4
 800c066:	f7ff fed9 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c06a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800c06e:	4628      	mov	r0, r5
 800c070:	f7ff ff9c 	bl	800bfac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c074:	b009      	add	sp, #36	; 0x24
 800c076:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c07a:	4621      	mov	r1, r4
 800c07c:	a802      	add	r0, sp, #8
 800c07e:	f7ff fe89 	bl	800bd94 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c082:	b150      	cbz	r0, 800c09a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800c084:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800c088:	a806      	add	r0, sp, #24
 800c08a:	4642      	mov	r2, r8
 800c08c:	f7ff ff70 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c090:	a902      	add	r1, sp, #8
 800c092:	4620      	mov	r0, r4
 800c094:	f7ff fec2 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c098:	e7d5      	b.n	800c046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800c09a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800c09e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c0a2:	a902      	add	r1, sp, #8
 800c0a4:	4638      	mov	r0, r7
 800c0a6:	f7ff feb9 	bl	800be1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c0aa:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c0ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c0b2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800c0b6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800c0ba:	fb13 f302 	smulbb	r3, r3, r2
 800c0be:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c0c2:	fb11 f102 	smulbb	r1, r1, r2
 800c0c6:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c0ca:	fb12 1100 	smlabb	r1, r2, r0, r1
 800c0ce:	220b      	movs	r2, #11
 800c0d0:	fb09 f303 	mul.w	r3, r9, r3
 800c0d4:	434a      	muls	r2, r1
 800c0d6:	4293      	cmp	r3, r2
 800c0d8:	dab5      	bge.n	800c046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800c0da:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800c0de:	a806      	add	r0, sp, #24
 800c0e0:	4642      	mov	r2, r8
 800c0e2:	f7ff ff45 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c0e6:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c0ea:	e884 0003 	stmia.w	r4, {r0, r1}
 800c0ee:	e7aa      	b.n	800c046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800c0f0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c0f0:	b530      	push	{r4, r5, lr}
 800c0f2:	4b1d      	ldr	r3, [pc, #116]	; (800c168 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800c0f4:	b085      	sub	sp, #20
 800c0f6:	460c      	mov	r4, r1
 800c0f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c0fc:	4b1b      	ldr	r3, [pc, #108]	; (800c16c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800c0fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c102:	2100      	movs	r1, #0
 800c104:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c108:	9100      	str	r1, [sp, #0]
 800c10a:	4605      	mov	r5, r0
 800c10c:	6861      	ldr	r1, [r4, #4]
 800c10e:	6820      	ldr	r0, [r4, #0]
 800c110:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c114:	ab02      	add	r3, sp, #8
 800c116:	c303      	stmia	r3!, {r0, r1}
 800c118:	4669      	mov	r1, sp
 800c11a:	a802      	add	r0, sp, #8
 800c11c:	f7fc fc5e 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800c120:	ab02      	add	r3, sp, #8
 800c122:	cb03      	ldmia	r3!, {r0, r1}
 800c124:	4b12      	ldr	r3, [pc, #72]	; (800c170 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800c126:	6020      	str	r0, [r4, #0]
 800c128:	6818      	ldr	r0, [r3, #0]
 800c12a:	6061      	str	r1, [r4, #4]
 800c12c:	b138      	cbz	r0, 800c13e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c12e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800c132:	b133      	cbz	r3, 800c142 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800c134:	6821      	ldr	r1, [r4, #0]
 800c136:	6862      	ldr	r2, [r4, #4]
 800c138:	4628      	mov	r0, r5
 800c13a:	f7ff ff59 	bl	800bff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c13e:	b005      	add	sp, #20
 800c140:	bd30      	pop	{r4, r5, pc}
 800c142:	6803      	ldr	r3, [r0, #0]
 800c144:	4621      	mov	r1, r4
 800c146:	689b      	ldr	r3, [r3, #8]
 800c148:	4798      	blx	r3
 800c14a:	4b0a      	ldr	r3, [pc, #40]	; (800c174 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800c14c:	6818      	ldr	r0, [r3, #0]
 800c14e:	b118      	cbz	r0, 800c158 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800c150:	6803      	ldr	r3, [r0, #0]
 800c152:	4621      	mov	r1, r4
 800c154:	689b      	ldr	r3, [r3, #8]
 800c156:	4798      	blx	r3
 800c158:	4b07      	ldr	r3, [pc, #28]	; (800c178 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800c15a:	6818      	ldr	r0, [r3, #0]
 800c15c:	6803      	ldr	r3, [r0, #0]
 800c15e:	4621      	mov	r1, r4
 800c160:	695b      	ldr	r3, [r3, #20]
 800c162:	4798      	blx	r3
 800c164:	e7eb      	b.n	800c13e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c166:	bf00      	nop
 800c168:	200120a0 	.word	0x200120a0
 800c16c:	200120a2 	.word	0x200120a2
 800c170:	20012108 	.word	0x20012108
 800c174:	20012104 	.word	0x20012104
 800c178:	200120ac 	.word	0x200120ac

0800c17c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800c17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c180:	4604      	mov	r4, r0
 800c182:	b09b      	sub	sp, #108	; 0x6c
 800c184:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800c188:	b129      	cbz	r1, 800c196 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800c18a:	2300      	movs	r3, #0
 800c18c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800c190:	b01b      	add	sp, #108	; 0x6c
 800c192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c196:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800c19a:	4630      	mov	r0, r6
 800c19c:	f7fc fc61 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1a0:	4605      	mov	r5, r0
 800c1a2:	b940      	cbnz	r0, 800c1b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800c1a4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c1a8:	4620      	mov	r0, r4
 800c1aa:	f7ff ff21 	bl	800bff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c1ae:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c1b2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c1b6:	4b92      	ldr	r3, [pc, #584]	; (800c400 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800c1b8:	681b      	ldr	r3, [r3, #0]
 800c1ba:	b33b      	cbz	r3, 800c20c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c1bc:	4d91      	ldr	r5, [pc, #580]	; (800c404 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800c1be:	4628      	mov	r0, r5
 800c1c0:	f7fc fc4f 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1c4:	4606      	mov	r6, r0
 800c1c6:	bb08      	cbnz	r0, 800c20c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c1c8:	4628      	mov	r0, r5
 800c1ca:	f7ff fc63 	bl	800ba94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c1ce:	6829      	ldr	r1, [r5, #0]
 800c1d0:	686a      	ldr	r2, [r5, #4]
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	f7ff ff0c 	bl	800bff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c1d8:	802e      	strh	r6, [r5, #0]
 800c1da:	806e      	strh	r6, [r5, #2]
 800c1dc:	80ae      	strh	r6, [r5, #4]
 800c1de:	80ee      	strh	r6, [r5, #6]
 800c1e0:	4f89      	ldr	r7, [pc, #548]	; (800c408 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800c1e2:	a809      	add	r0, sp, #36	; 0x24
 800c1e4:	f7ff fe71 	bl	800beca <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c1e8:	883d      	ldrh	r5, [r7, #0]
 800c1ea:	462e      	mov	r6, r5
 800c1ec:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c1f0:	42b3      	cmp	r3, r6
 800c1f2:	d910      	bls.n	800c216 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800c1f4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c1f8:	a809      	add	r0, sp, #36	; 0x24
 800c1fa:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800c1fe:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800c202:	3601      	adds	r6, #1
 800c204:	f7ff fed2 	bl	800bfac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c208:	b2b6      	uxth	r6, r6
 800c20a:	e7ef      	b.n	800c1ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800c20c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c210:	2b00      	cmp	r3, #0
 800c212:	d1e5      	bne.n	800c1e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800c214:	e7bc      	b.n	800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c216:	462e      	mov	r6, r5
 800c218:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800c21c:	42b3      	cmp	r3, r6
 800c21e:	d90b      	bls.n	800c238 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800c220:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c224:	4620      	mov	r0, r4
 800c226:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800c22a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800c22e:	3601      	adds	r6, #1
 800c230:	f7ff fede 	bl	800bff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c234:	b2b6      	uxth	r6, r6
 800c236:	e7ef      	b.n	800c218 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800c238:	4a74      	ldr	r2, [pc, #464]	; (800c40c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800c23a:	6813      	ldr	r3, [r2, #0]
 800c23c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800c240:	2b01      	cmp	r3, #1
 800c242:	4690      	mov	r8, r2
 800c244:	f040 8094 	bne.w	800c370 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800c248:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800c24c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800c250:	33aa      	adds	r3, #170	; 0xaa
 800c252:	f04f 0900 	mov.w	r9, #0
 800c256:	42a8      	cmp	r0, r5
 800c258:	f103 0308 	add.w	r3, r3, #8
 800c25c:	dd0a      	ble.n	800c274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800c25e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800c262:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800c266:	440a      	add	r2, r1
 800c268:	b212      	sxth	r2, r2
 800c26a:	4591      	cmp	r9, r2
 800c26c:	bfb8      	it	lt
 800c26e:	4691      	movlt	r9, r2
 800c270:	3501      	adds	r5, #1
 800c272:	e7f0      	b.n	800c256 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800c274:	4b66      	ldr	r3, [pc, #408]	; (800c410 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800c276:	4e67      	ldr	r6, [pc, #412]	; (800c414 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800c278:	881d      	ldrh	r5, [r3, #0]
 800c27a:	2300      	movs	r3, #0
 800c27c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c280:	2d0f      	cmp	r5, #15
 800c282:	bf8c      	ite	hi
 800c284:	08ed      	lsrhi	r5, r5, #3
 800c286:	2501      	movls	r5, #1
 800c288:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c28c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c290:	f8d8 0000 	ldr.w	r0, [r8]
 800c294:	440b      	add	r3, r1
 800c296:	b21b      	sxth	r3, r3
 800c298:	4599      	cmp	r9, r3
 800c29a:	6802      	ldr	r2, [r0, #0]
 800c29c:	dd4b      	ble.n	800c336 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800c29e:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800c2a2:	4798      	blx	r3
 800c2a4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800c2a8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c2ac:	4413      	add	r3, r2
 800c2ae:	b21b      	sxth	r3, r3
 800c2b0:	195a      	adds	r2, r3, r5
 800c2b2:	4290      	cmp	r0, r2
 800c2b4:	da07      	bge.n	800c2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c2b6:	4581      	cmp	r9, r0
 800c2b8:	dd05      	ble.n	800c2c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c2ba:	4298      	cmp	r0, r3
 800c2bc:	da33      	bge.n	800c326 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c2be:	2b00      	cmp	r3, #0
 800c2c0:	dd31      	ble.n	800c326 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c2c2:	4648      	mov	r0, r9
 800c2c4:	e004      	b.n	800c2d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800c2c6:	4298      	cmp	r0, r3
 800c2c8:	dbfb      	blt.n	800c2c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800c2ca:	4548      	cmp	r0, r9
 800c2cc:	bfa8      	it	ge
 800c2ce:	4648      	movge	r0, r9
 800c2d0:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c2d4:	f8b7 a000 	ldrh.w	sl, [r7]
 800c2d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c2dc:	2100      	movs	r1, #0
 800c2de:	1ac0      	subs	r0, r0, r3
 800c2e0:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c2e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c2e8:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c2ec:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c2f0:	4553      	cmp	r3, sl
 800c2f2:	d9c9      	bls.n	800c288 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c2f4:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800c2f8:	ab07      	add	r3, sp, #28
 800c2fa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c2fe:	6851      	ldr	r1, [r2, #4]
 800c300:	c303      	stmia	r3!, {r0, r1}
 800c302:	a807      	add	r0, sp, #28
 800c304:	a905      	add	r1, sp, #20
 800c306:	f7fc fb69 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800c30a:	a807      	add	r0, sp, #28
 800c30c:	f7fc fba9 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c310:	b920      	cbnz	r0, 800c31c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800c312:	6823      	ldr	r3, [r4, #0]
 800c314:	a907      	add	r1, sp, #28
 800c316:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c318:	4620      	mov	r0, r4
 800c31a:	4798      	blx	r3
 800c31c:	f10a 0a01 	add.w	sl, sl, #1
 800c320:	fa1f fa8a 	uxth.w	sl, sl
 800c324:	e7e2      	b.n	800c2ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800c326:	f8d8 0000 	ldr.w	r0, [r8]
 800c32a:	6803      	ldr	r3, [r0, #0]
 800c32c:	2101      	movs	r1, #1
 800c32e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c332:	4798      	blx	r3
 800c334:	e7a8      	b.n	800c288 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c336:	69d3      	ldr	r3, [r2, #28]
 800c338:	4798      	blx	r3
 800c33a:	4b37      	ldr	r3, [pc, #220]	; (800c418 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800c33c:	781b      	ldrb	r3, [r3, #0]
 800c33e:	2b00      	cmp	r3, #0
 800c340:	f43f af26 	beq.w	800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c344:	2300      	movs	r3, #0
 800c346:	883d      	ldrh	r5, [r7, #0]
 800c348:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800c34c:	34ea      	adds	r4, #234	; 0xea
 800c34e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800c352:	42ab      	cmp	r3, r5
 800c354:	f67f af1c 	bls.w	800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c358:	ab1a      	add	r3, sp, #104	; 0x68
 800c35a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c35e:	3b44      	subs	r3, #68	; 0x44
 800c360:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c364:	4620      	mov	r0, r4
 800c366:	3501      	adds	r5, #1
 800c368:	f7ff fe20 	bl	800bfac <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c36c:	b2ad      	uxth	r5, r5
 800c36e:	e7ee      	b.n	800c34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800c370:	2b02      	cmp	r3, #2
 800c372:	f040 813d 	bne.w	800c5f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800c376:	4b29      	ldr	r3, [pc, #164]	; (800c41c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800c378:	781b      	ldrb	r3, [r3, #0]
 800c37a:	2b01      	cmp	r3, #1
 800c37c:	f000 809d 	beq.w	800c4ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c380:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800c384:	883a      	ldrh	r2, [r7, #0]
 800c386:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800c38a:	3201      	adds	r2, #1
 800c38c:	b292      	uxth	r2, r2
 800c38e:	2900      	cmp	r1, #0
 800c390:	d0d3      	beq.n	800c33a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c392:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800c396:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800c39a:	441d      	add	r5, r3
 800c39c:	b22d      	sxth	r5, r5
 800c39e:	4610      	mov	r0, r2
 800c3a0:	f04f 0a00 	mov.w	sl, #0
 800c3a4:	b283      	uxth	r3, r0
 800c3a6:	4299      	cmp	r1, r3
 800c3a8:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800c3ac:	f240 80c3 	bls.w	800c536 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800c3b0:	4426      	add	r6, r4
 800c3b2:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800c3b6:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800c3ba:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800c3be:	4573      	cmp	r3, lr
 800c3c0:	4684      	mov	ip, r0
 800c3c2:	f340 80a5 	ble.w	800c510 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800c3c6:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800c3ca:	4475      	add	r5, lr
 800c3cc:	b22d      	sxth	r5, r5
 800c3ce:	429d      	cmp	r5, r3
 800c3d0:	bfa8      	it	ge
 800c3d2:	461d      	movge	r5, r3
 800c3d4:	3001      	adds	r0, #1
 800c3d6:	46e2      	mov	sl, ip
 800c3d8:	e7e4      	b.n	800c3a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800c3da:	d10b      	bne.n	800c3f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800c3dc:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800c3e0:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800c3e4:	458c      	cmp	ip, r1
 800c3e6:	bfb4      	ite	lt
 800c3e8:	469c      	movlt	ip, r3
 800c3ea:	46b4      	movge	ip, r6
 800c3ec:	4572      	cmp	r2, lr
 800c3ee:	bfb8      	it	lt
 800c3f0:	4672      	movlt	r2, lr
 800c3f2:	e08a      	b.n	800c50a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c3f4:	428a      	cmp	r2, r1
 800c3f6:	bfb8      	it	lt
 800c3f8:	460a      	movlt	r2, r1
 800c3fa:	46b4      	mov	ip, r6
 800c3fc:	e085      	b.n	800c50a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800c3fe:	bf00      	nop
 800c400:	20012104 	.word	0x20012104
 800c404:	20012110 	.word	0x20012110
 800c408:	20000084 	.word	0x20000084
 800c40c:	200120ac 	.word	0x200120ac
 800c410:	200120a2 	.word	0x200120a2
 800c414:	200120a0 	.word	0x200120a0
 800c418:	200120aa 	.word	0x200120aa
 800c41c:	200120a4 	.word	0x200120a4
 800c420:	1961      	adds	r1, r4, r5
 800c422:	ab05      	add	r3, sp, #20
 800c424:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800c428:	6849      	ldr	r1, [r1, #4]
 800c42a:	c303      	stmia	r3!, {r0, r1}
 800c42c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c430:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c434:	2b13      	cmp	r3, #19
 800c436:	bfd8      	it	le
 800c438:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800c43c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c440:	440b      	add	r3, r1
 800c442:	1a9b      	subs	r3, r3, r2
 800c444:	a805      	add	r0, sp, #20
 800c446:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c44a:	f7ff fb99 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c44e:	a805      	add	r0, sp, #20
 800c450:	f7fc fb07 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c454:	bb88      	cbnz	r0, 800c4ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c456:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800c45a:	f8d8 0000 	ldr.w	r0, [r8]
 800c45e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c462:	f8d0 e000 	ldr.w	lr, [r0]
 800c466:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c46a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c46e:	f1bc 0f14 	cmp.w	ip, #20
 800c472:	bfa8      	it	ge
 800c474:	f04f 0c14 	movge.w	ip, #20
 800c478:	fa1f fc8c 	uxth.w	ip, ip
 800c47c:	f8cd c000 	str.w	ip, [sp]
 800c480:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800c484:	47c8      	blx	r9
 800c486:	4681      	mov	r9, r0
 800c488:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c48c:	a805      	add	r0, sp, #20
 800c48e:	f7ff fb01 	bl	800ba94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c492:	6823      	ldr	r3, [r4, #0]
 800c494:	4425      	add	r5, r4
 800c496:	4620      	mov	r0, r4
 800c498:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c49a:	a905      	add	r1, sp, #20
 800c49c:	4798      	blx	r3
 800c49e:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c4a2:	eba0 0009 	sub.w	r0, r0, r9
 800c4a6:	b200      	sxth	r0, r0
 800c4a8:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c4ac:	b928      	cbnz	r0, 800c4ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c4ae:	b2b2      	uxth	r2, r6
 800c4b0:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800c4b4:	a807      	add	r0, sp, #28
 800c4b6:	f7ff fd5b 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c4ba:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800c4be:	f1ba 0f00 	cmp.w	sl, #0
 800c4c2:	f43f af3a 	beq.w	800c33a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c4c6:	883b      	ldrh	r3, [r7, #0]
 800c4c8:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c4cc:	3301      	adds	r3, #1
 800c4ce:	b29b      	uxth	r3, r3
 800c4d0:	2600      	movs	r6, #0
 800c4d2:	b299      	uxth	r1, r3
 800c4d4:	458a      	cmp	sl, r1
 800c4d6:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c4da:	d9a1      	bls.n	800c420 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800c4dc:	4425      	add	r5, r4
 800c4de:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800c4e2:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c4e6:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c4ea:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800c4ee:	4408      	add	r0, r1
 800c4f0:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800c4f4:	4471      	add	r1, lr
 800c4f6:	b200      	sxth	r0, r0
 800c4f8:	b209      	sxth	r1, r1
 800c4fa:	4288      	cmp	r0, r1
 800c4fc:	469c      	mov	ip, r3
 800c4fe:	f6bf af6c 	bge.w	800c3da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c502:	4586      	cmp	lr, r0
 800c504:	4672      	mov	r2, lr
 800c506:	bfb8      	it	lt
 800c508:	4602      	movlt	r2, r0
 800c50a:	3301      	adds	r3, #1
 800c50c:	4666      	mov	r6, ip
 800c50e:	e7e0      	b.n	800c4d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800c510:	d10c      	bne.n	800c52c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800c512:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c516:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c51a:	45b4      	cmp	ip, r6
 800c51c:	bfb4      	ite	lt
 800c51e:	4684      	movlt	ip, r0
 800c520:	46d4      	movge	ip, sl
 800c522:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c526:	4433      	add	r3, r6
 800c528:	b21b      	sxth	r3, r3
 800c52a:	e750      	b.n	800c3ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800c52c:	4575      	cmp	r5, lr
 800c52e:	bfa8      	it	ge
 800c530:	4675      	movge	r5, lr
 800c532:	46d4      	mov	ip, sl
 800c534:	e74e      	b.n	800c3d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800c536:	eb0b 0006 	add.w	r0, fp, r6
 800c53a:	4426      	add	r6, r4
 800c53c:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c540:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c544:	f1b9 0f13 	cmp.w	r9, #19
 800c548:	bfde      	ittt	le
 800c54a:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c54e:	444d      	addle	r5, r9
 800c550:	b22d      	sxthle	r5, r5
 800c552:	f7fc fa86 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c556:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c55a:	2800      	cmp	r0, #0
 800c55c:	f47f af17 	bne.w	800c38e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800c560:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c564:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c568:	eba5 050c 	sub.w	r5, r5, ip
 800c56c:	fa1f f28c 	uxth.w	r2, ip
 800c570:	fa1f f989 	uxth.w	r9, r9
 800c574:	eb02 0009 	add.w	r0, r2, r9
 800c578:	2d14      	cmp	r5, #20
 800c57a:	bfa8      	it	ge
 800c57c:	2514      	movge	r5, #20
 800c57e:	b200      	sxth	r0, r0
 800c580:	fa1f fe85 	uxth.w	lr, r5
 800c584:	eba0 000c 	sub.w	r0, r0, ip
 800c588:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c58c:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c590:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c594:	4586      	cmp	lr, r0
 800c596:	f8d8 0000 	ldr.w	r0, [r8]
 800c59a:	f8ad c016 	strh.w	ip, [sp, #22]
 800c59e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c5a2:	bfb8      	it	lt
 800c5a4:	46f1      	movlt	r9, lr
 800c5a6:	6805      	ldr	r5, [r0, #0]
 800c5a8:	f8cd 9000 	str.w	r9, [sp]
 800c5ac:	b29b      	uxth	r3, r3
 800c5ae:	b289      	uxth	r1, r1
 800c5b0:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800c5b2:	47a8      	blx	r5
 800c5b4:	6823      	ldr	r3, [r4, #0]
 800c5b6:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c5ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c5bc:	a905      	add	r1, sp, #20
 800c5be:	4620      	mov	r0, r4
 800c5c0:	4798      	blx	r3
 800c5c2:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c5c6:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c5ca:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c5ce:	1a5b      	subs	r3, r3, r1
 800c5d0:	440a      	add	r2, r1
 800c5d2:	b21b      	sxth	r3, r3
 800c5d4:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c5d8:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c5dc:	2b00      	cmp	r3, #0
 800c5de:	f47f aed1 	bne.w	800c384 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c5e2:	fa1f f28a 	uxth.w	r2, sl
 800c5e6:	4659      	mov	r1, fp
 800c5e8:	a807      	add	r0, sp, #28
 800c5ea:	f7ff fcc1 	bl	800bf70 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c5ee:	e6c9      	b.n	800c384 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c5f0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c5f4:	42ab      	cmp	r3, r5
 800c5f6:	f67f aea0 	bls.w	800c33a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c5fa:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c5fe:	ab07      	add	r3, sp, #28
 800c600:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c604:	6851      	ldr	r1, [r2, #4]
 800c606:	c303      	stmia	r3!, {r0, r1}
 800c608:	a807      	add	r0, sp, #28
 800c60a:	f7fc fa2a 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c60e:	b920      	cbnz	r0, 800c61a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800c610:	6823      	ldr	r3, [r4, #0]
 800c612:	a907      	add	r1, sp, #28
 800c614:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c616:	4620      	mov	r0, r4
 800c618:	4798      	blx	r3
 800c61a:	3501      	adds	r5, #1
 800c61c:	b2ad      	uxth	r5, r5
 800c61e:	e7e7      	b.n	800c5f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800c620 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c620:	4b03      	ldr	r3, [pc, #12]	; (800c630 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c622:	2200      	movs	r2, #0
 800c624:	801a      	strh	r2, [r3, #0]
 800c626:	805a      	strh	r2, [r3, #2]
 800c628:	809a      	strh	r2, [r3, #4]
 800c62a:	80da      	strh	r2, [r3, #6]
 800c62c:	4770      	bx	lr
 800c62e:	bf00      	nop
 800c630:	20012110 	.word	0x20012110

0800c634 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c638:	4607      	mov	r7, r0
 800c63a:	b099      	sub	sp, #100	; 0x64
 800c63c:	a802      	add	r0, sp, #8
 800c63e:	4614      	mov	r4, r2
 800c640:	461d      	mov	r5, r3
 800c642:	468a      	mov	sl, r1
 800c644:	f000 fde4 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800c648:	683b      	ldr	r3, [r7, #0]
 800c64a:	4638      	mov	r0, r7
 800c64c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c64e:	4798      	blx	r3
 800c650:	462a      	mov	r2, r5
 800c652:	4603      	mov	r3, r0
 800c654:	4621      	mov	r1, r4
 800c656:	a802      	add	r0, sp, #8
 800c658:	f000 fe1f 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c65c:	2500      	movs	r5, #0
 800c65e:	462c      	mov	r4, r5
 800c660:	46a9      	mov	r9, r5
 800c662:	46a8      	mov	r8, r5
 800c664:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c668:	2300      	movs	r3, #0
 800c66a:	9301      	str	r3, [sp, #4]
 800c66c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c670:	429c      	cmp	r4, r3
 800c672:	d002      	beq.n	800c67a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800c674:	455c      	cmp	r4, fp
 800c676:	bf18      	it	ne
 800c678:	4625      	movne	r5, r4
 800c67a:	ab01      	add	r3, sp, #4
 800c67c:	463a      	mov	r2, r7
 800c67e:	4651      	mov	r1, sl
 800c680:	a802      	add	r0, sp, #8
 800c682:	f001 f903 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c686:	4604      	mov	r4, r0
 800c688:	b108      	cbz	r0, 800c68e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800c68a:	280a      	cmp	r0, #10
 800c68c:	d10a      	bne.n	800c6a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800c68e:	45c1      	cmp	r9, r8
 800c690:	bf38      	it	cc
 800c692:	46c1      	movcc	r9, r8
 800c694:	f04f 0800 	mov.w	r8, #0
 800c698:	2c00      	cmp	r4, #0
 800c69a:	d1e5      	bne.n	800c668 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c69c:	4648      	mov	r0, r9
 800c69e:	b019      	add	sp, #100	; 0x64
 800c6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6a4:	9a01      	ldr	r2, [sp, #4]
 800c6a6:	2a00      	cmp	r2, #0
 800c6a8:	d0de      	beq.n	800c668 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c6aa:	7b56      	ldrb	r6, [r2, #13]
 800c6ac:	683b      	ldr	r3, [r7, #0]
 800c6ae:	8894      	ldrh	r4, [r2, #4]
 800c6b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c6b2:	0076      	lsls	r6, r6, #1
 800c6b4:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800c6b8:	7a96      	ldrb	r6, [r2, #10]
 800c6ba:	4629      	mov	r1, r5
 800c6bc:	4306      	orrs	r6, r0
 800c6be:	4638      	mov	r0, r7
 800c6c0:	4798      	blx	r3
 800c6c2:	4430      	add	r0, r6
 800c6c4:	4480      	add	r8, r0
 800c6c6:	fa1f f888 	uxth.w	r8, r8
 800c6ca:	e7e5      	b.n	800c698 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800c6cc <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c6cc:	b508      	push	{r3, lr}
 800c6ce:	6803      	ldr	r3, [r0, #0]
 800c6d0:	68db      	ldr	r3, [r3, #12]
 800c6d2:	4798      	blx	r3
 800c6d4:	b128      	cbz	r0, 800c6e2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c6d6:	7b43      	ldrb	r3, [r0, #13]
 800c6d8:	7a80      	ldrb	r0, [r0, #10]
 800c6da:	005b      	lsls	r3, r3, #1
 800c6dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c6e0:	4318      	orrs	r0, r3
 800c6e2:	bd08      	pop	{r3, pc}

0800c6e4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c6e4:	b40e      	push	{r1, r2, r3}
 800c6e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6e8:	b098      	sub	sp, #96	; 0x60
 800c6ea:	ab1d      	add	r3, sp, #116	; 0x74
 800c6ec:	4605      	mov	r5, r0
 800c6ee:	f853 4b04 	ldr.w	r4, [r3], #4
 800c6f2:	9300      	str	r3, [sp, #0]
 800c6f4:	a802      	add	r0, sp, #8
 800c6f6:	f000 fd8b 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800c6fa:	682b      	ldr	r3, [r5, #0]
 800c6fc:	4628      	mov	r0, r5
 800c6fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c700:	4798      	blx	r3
 800c702:	ae18      	add	r6, sp, #96	; 0x60
 800c704:	4603      	mov	r3, r0
 800c706:	4621      	mov	r1, r4
 800c708:	9a00      	ldr	r2, [sp, #0]
 800c70a:	2400      	movs	r4, #0
 800c70c:	a802      	add	r0, sp, #8
 800c70e:	f000 fdc4 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c712:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800c716:	462a      	mov	r2, r5
 800c718:	4633      	mov	r3, r6
 800c71a:	4621      	mov	r1, r4
 800c71c:	a802      	add	r0, sp, #8
 800c71e:	f001 f8b5 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c722:	b1f0      	cbz	r0, 800c762 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800c724:	280a      	cmp	r0, #10
 800c726:	d018      	beq.n	800c75a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c728:	9f01      	ldr	r7, [sp, #4]
 800c72a:	b1b7      	cbz	r7, 800c75a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c72c:	7b78      	ldrb	r0, [r7, #13]
 800c72e:	7a3b      	ldrb	r3, [r7, #8]
 800c730:	88aa      	ldrh	r2, [r5, #4]
 800c732:	00c1      	lsls	r1, r0, #3
 800c734:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c738:	4319      	orrs	r1, r3
 800c73a:	0643      	lsls	r3, r0, #25
 800c73c:	bf44      	itt	mi
 800c73e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c742:	b219      	sxthmi	r1, r3
 800c744:	0100      	lsls	r0, r0, #4
 800c746:	79fb      	ldrb	r3, [r7, #7]
 800c748:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c74c:	4303      	orrs	r3, r0
 800c74e:	4413      	add	r3, r2
 800c750:	1a5b      	subs	r3, r3, r1
 800c752:	b29b      	uxth	r3, r3
 800c754:	42a3      	cmp	r3, r4
 800c756:	bfc8      	it	gt
 800c758:	b21c      	sxthgt	r4, r3
 800c75a:	4633      	mov	r3, r6
 800c75c:	462a      	mov	r2, r5
 800c75e:	2100      	movs	r1, #0
 800c760:	e7dc      	b.n	800c71c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800c762:	b2a0      	uxth	r0, r4
 800c764:	b018      	add	sp, #96	; 0x60
 800c766:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c76a:	b003      	add	sp, #12
 800c76c:	4770      	bx	lr

0800c76e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c76e:	b40e      	push	{r1, r2, r3}
 800c770:	b530      	push	{r4, r5, lr}
 800c772:	b098      	sub	sp, #96	; 0x60
 800c774:	ab1b      	add	r3, sp, #108	; 0x6c
 800c776:	4604      	mov	r4, r0
 800c778:	f853 5b04 	ldr.w	r5, [r3], #4
 800c77c:	9301      	str	r3, [sp, #4]
 800c77e:	a802      	add	r0, sp, #8
 800c780:	f000 fd46 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800c784:	6823      	ldr	r3, [r4, #0]
 800c786:	4620      	mov	r0, r4
 800c788:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c78a:	4798      	blx	r3
 800c78c:	9a01      	ldr	r2, [sp, #4]
 800c78e:	4603      	mov	r3, r0
 800c790:	4629      	mov	r1, r5
 800c792:	a802      	add	r0, sp, #8
 800c794:	f000 fd81 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c798:	a802      	add	r0, sp, #8
 800c79a:	f001 f96f 	bl	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c79e:	2401      	movs	r4, #1
 800c7a0:	b2a3      	uxth	r3, r4
 800c7a2:	b140      	cbz	r0, 800c7b6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800c7a4:	280a      	cmp	r0, #10
 800c7a6:	bf08      	it	eq
 800c7a8:	3301      	addeq	r3, #1
 800c7aa:	a802      	add	r0, sp, #8
 800c7ac:	bf08      	it	eq
 800c7ae:	b21c      	sxtheq	r4, r3
 800c7b0:	f001 f964 	bl	800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c7b4:	e7f4      	b.n	800c7a0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800c7b6:	4618      	mov	r0, r3
 800c7b8:	b018      	add	sp, #96	; 0x60
 800c7ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c7be:	b003      	add	sp, #12
 800c7c0:	4770      	bx	lr

0800c7c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c7c2:	b40e      	push	{r1, r2, r3}
 800c7c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c7c6:	b098      	sub	sp, #96	; 0x60
 800c7c8:	ab1d      	add	r3, sp, #116	; 0x74
 800c7ca:	4604      	mov	r4, r0
 800c7cc:	f853 5b04 	ldr.w	r5, [r3], #4
 800c7d0:	9300      	str	r3, [sp, #0]
 800c7d2:	a802      	add	r0, sp, #8
 800c7d4:	f000 fd1c 	bl	800d210 <_ZN8touchgfx12TextProviderC1Ev>
 800c7d8:	6823      	ldr	r3, [r4, #0]
 800c7da:	4620      	mov	r0, r4
 800c7dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c7de:	4798      	blx	r3
 800c7e0:	4629      	mov	r1, r5
 800c7e2:	4603      	mov	r3, r0
 800c7e4:	9a00      	ldr	r2, [sp, #0]
 800c7e6:	a802      	add	r0, sp, #8
 800c7e8:	ad18      	add	r5, sp, #96	; 0x60
 800c7ea:	f000 fd56 	bl	800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c7ee:	2100      	movs	r1, #0
 800c7f0:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800c7f4:	4622      	mov	r2, r4
 800c7f6:	462b      	mov	r3, r5
 800c7f8:	a802      	add	r0, sp, #8
 800c7fa:	f001 f847 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c7fe:	26ff      	movs	r6, #255	; 0xff
 800c800:	b1d8      	cbz	r0, 800c83a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c802:	280a      	cmp	r0, #10
 800c804:	d012      	beq.n	800c82c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c806:	9801      	ldr	r0, [sp, #4]
 800c808:	b180      	cbz	r0, 800c82c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c80a:	7b47      	ldrb	r7, [r0, #13]
 800c80c:	7922      	ldrb	r2, [r4, #4]
 800c80e:	00fb      	lsls	r3, r7, #3
 800c810:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c814:	7a03      	ldrb	r3, [r0, #8]
 800c816:	430b      	orrs	r3, r1
 800c818:	0679      	lsls	r1, r7, #25
 800c81a:	bf44      	itt	mi
 800c81c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c820:	b21b      	sxthmi	r3, r3
 800c822:	1ad3      	subs	r3, r2, r3
 800c824:	b2db      	uxtb	r3, r3
 800c826:	429e      	cmp	r6, r3
 800c828:	bf28      	it	cs
 800c82a:	461e      	movcs	r6, r3
 800c82c:	462b      	mov	r3, r5
 800c82e:	4622      	mov	r2, r4
 800c830:	2100      	movs	r1, #0
 800c832:	a802      	add	r0, sp, #8
 800c834:	f001 f82a 	bl	800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c838:	e7e2      	b.n	800c800 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800c83a:	4630      	mov	r0, r6
 800c83c:	b018      	add	sp, #96	; 0x60
 800c83e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c842:	b003      	add	sp, #12
 800c844:	4770      	bx	lr

0800c846 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c846:	b513      	push	{r0, r1, r4, lr}
 800c848:	1d01      	adds	r1, r0, #4
 800c84a:	4603      	mov	r3, r0
 800c84c:	c903      	ldmia	r1, {r0, r1}
 800c84e:	466a      	mov	r2, sp
 800c850:	e882 0003 	stmia.w	r2, {r0, r1}
 800c854:	2100      	movs	r1, #0
 800c856:	9100      	str	r1, [sp, #0]
 800c858:	6819      	ldr	r1, [r3, #0]
 800c85a:	4618      	mov	r0, r3
 800c85c:	690c      	ldr	r4, [r1, #16]
 800c85e:	4611      	mov	r1, r2
 800c860:	47a0      	blx	r4
 800c862:	b002      	add	sp, #8
 800c864:	bd10      	pop	{r4, pc}

0800c866 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c866:	b538      	push	{r3, r4, r5, lr}
 800c868:	680b      	ldr	r3, [r1, #0]
 800c86a:	460c      	mov	r4, r1
 800c86c:	68db      	ldr	r3, [r3, #12]
 800c86e:	4605      	mov	r5, r0
 800c870:	4798      	blx	r3
 800c872:	6823      	ldr	r3, [r4, #0]
 800c874:	4620      	mov	r0, r4
 800c876:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c878:	4629      	mov	r1, r5
 800c87a:	4798      	blx	r3
 800c87c:	4628      	mov	r0, r5
 800c87e:	bd38      	pop	{r3, r4, r5, pc}

0800c880 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c880:	b410      	push	{r4}
 800c882:	880a      	ldrh	r2, [r1, #0]
 800c884:	8884      	ldrh	r4, [r0, #4]
 800c886:	4422      	add	r2, r4
 800c888:	800a      	strh	r2, [r1, #0]
 800c88a:	88c4      	ldrh	r4, [r0, #6]
 800c88c:	884a      	ldrh	r2, [r1, #2]
 800c88e:	4422      	add	r2, r4
 800c890:	804a      	strh	r2, [r1, #2]
 800c892:	6940      	ldr	r0, [r0, #20]
 800c894:	b120      	cbz	r0, 800c8a0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c896:	6803      	ldr	r3, [r0, #0]
 800c898:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c89c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c89e:	4718      	bx	r3
 800c8a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c8a4:	4770      	bx	lr

0800c8a6 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c8a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8a8:	460b      	mov	r3, r1
 800c8aa:	b085      	sub	sp, #20
 800c8ac:	4604      	mov	r4, r0
 800c8ae:	b901      	cbnz	r1, 800c8b2 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c8b0:	b1fa      	cbz	r2, 800c8f2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800c8b2:	1d27      	adds	r7, r4, #4
 800c8b4:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c8b8:	466e      	mov	r6, sp
 800c8ba:	e886 0003 	stmia.w	r6, {r0, r1}
 800c8be:	88e1      	ldrh	r1, [r4, #6]
 800c8c0:	440a      	add	r2, r1
 800c8c2:	88a1      	ldrh	r1, [r4, #4]
 800c8c4:	4419      	add	r1, r3
 800c8c6:	6823      	ldr	r3, [r4, #0]
 800c8c8:	b209      	sxth	r1, r1
 800c8ca:	4620      	mov	r0, r4
 800c8cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c8ce:	b212      	sxth	r2, r2
 800c8d0:	4798      	blx	r3
 800c8d2:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c8d6:	ad02      	add	r5, sp, #8
 800c8d8:	e885 0003 	stmia.w	r5, {r0, r1}
 800c8dc:	6960      	ldr	r0, [r4, #20]
 800c8de:	b150      	cbz	r0, 800c8f6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800c8e0:	6803      	ldr	r3, [r0, #0]
 800c8e2:	4631      	mov	r1, r6
 800c8e4:	691b      	ldr	r3, [r3, #16]
 800c8e6:	4798      	blx	r3
 800c8e8:	6960      	ldr	r0, [r4, #20]
 800c8ea:	6803      	ldr	r3, [r0, #0]
 800c8ec:	691b      	ldr	r3, [r3, #16]
 800c8ee:	4629      	mov	r1, r5
 800c8f0:	4798      	blx	r3
 800c8f2:	b005      	add	sp, #20
 800c8f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c8f6:	f7ff fad7 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 800c8fa:	6803      	ldr	r3, [r0, #0]
 800c8fc:	4631      	mov	r1, r6
 800c8fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c900:	4798      	blx	r3
 800c902:	f7ff fad1 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 800c906:	6803      	ldr	r3, [r0, #0]
 800c908:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c90a:	e7f0      	b.n	800c8ee <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800c90c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c90c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c90e:	8882      	ldrh	r2, [r0, #4]
 800c910:	880b      	ldrh	r3, [r1, #0]
 800c912:	4413      	add	r3, r2
 800c914:	800b      	strh	r3, [r1, #0]
 800c916:	88c2      	ldrh	r2, [r0, #6]
 800c918:	884b      	ldrh	r3, [r1, #2]
 800c91a:	4413      	add	r3, r2
 800c91c:	4602      	mov	r2, r0
 800c91e:	804b      	strh	r3, [r1, #2]
 800c920:	4605      	mov	r5, r0
 800c922:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c926:	460c      	mov	r4, r1
 800c928:	6851      	ldr	r1, [r2, #4]
 800c92a:	466b      	mov	r3, sp
 800c92c:	c303      	stmia	r3!, {r0, r1}
 800c92e:	4621      	mov	r1, r4
 800c930:	4668      	mov	r0, sp
 800c932:	f7fc f853 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800c936:	466b      	mov	r3, sp
 800c938:	cb03      	ldmia	r3!, {r0, r1}
 800c93a:	6020      	str	r0, [r4, #0]
 800c93c:	6061      	str	r1, [r4, #4]
 800c93e:	6968      	ldr	r0, [r5, #20]
 800c940:	b128      	cbz	r0, 800c94e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800c942:	6803      	ldr	r3, [r0, #0]
 800c944:	691b      	ldr	r3, [r3, #16]
 800c946:	4621      	mov	r1, r4
 800c948:	4798      	blx	r3
 800c94a:	b003      	add	sp, #12
 800c94c:	bd30      	pop	{r4, r5, pc}
 800c94e:	f7ff faab 	bl	800bea8 <_ZN8touchgfx11Application11getInstanceEv>
 800c952:	6803      	ldr	r3, [r0, #0]
 800c954:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c956:	e7f6      	b.n	800c946 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800c958 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c958:	b570      	push	{r4, r5, r6, lr}
 800c95a:	8882      	ldrh	r2, [r0, #4]
 800c95c:	880b      	ldrh	r3, [r1, #0]
 800c95e:	4413      	add	r3, r2
 800c960:	800b      	strh	r3, [r1, #0]
 800c962:	88c2      	ldrh	r2, [r0, #6]
 800c964:	884b      	ldrh	r3, [r1, #2]
 800c966:	460c      	mov	r4, r1
 800c968:	4413      	add	r3, r2
 800c96a:	804b      	strh	r3, [r1, #2]
 800c96c:	4605      	mov	r5, r0
 800c96e:	1d01      	adds	r1, r0, #4
 800c970:	4620      	mov	r0, r4
 800c972:	f7fc f833 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800c976:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c97a:	2b00      	cmp	r3, #0
 800c97c:	dd0b      	ble.n	800c996 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c97e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c982:	2b00      	cmp	r3, #0
 800c984:	dd07      	ble.n	800c996 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c986:	6968      	ldr	r0, [r5, #20]
 800c988:	b128      	cbz	r0, 800c996 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c98a:	6803      	ldr	r3, [r0, #0]
 800c98c:	4621      	mov	r1, r4
 800c98e:	6a1b      	ldr	r3, [r3, #32]
 800c990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c994:	4718      	bx	r3
 800c996:	bd70      	pop	{r4, r5, r6, pc}

0800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c998:	b510      	push	{r4, lr}
 800c99a:	4604      	mov	r4, r0
 800c99c:	4608      	mov	r0, r1
 800c99e:	2300      	movs	r3, #0
 800c9a0:	8023      	strh	r3, [r4, #0]
 800c9a2:	8063      	strh	r3, [r4, #2]
 800c9a4:	6803      	ldr	r3, [r0, #0]
 800c9a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c9aa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c9ae:	80a1      	strh	r1, [r4, #4]
 800c9b0:	80e2      	strh	r2, [r4, #6]
 800c9b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9b4:	4621      	mov	r1, r4
 800c9b6:	4798      	blx	r3
 800c9b8:	4620      	mov	r0, r4
 800c9ba:	bd10      	pop	{r4, pc}

0800c9bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c9bc:	b530      	push	{r4, r5, lr}
 800c9be:	8083      	strh	r3, [r0, #4]
 800c9c0:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c9c4:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c9c8:	7183      	strb	r3, [r0, #6]
 800c9ca:	79c3      	ldrb	r3, [r0, #7]
 800c9cc:	6101      	str	r1, [r0, #16]
 800c9ce:	f365 0306 	bfi	r3, r5, #0, #7
 800c9d2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c9d6:	8282      	strh	r2, [r0, #20]
 800c9d8:	f365 13c7 	bfi	r3, r5, #7, #1
 800c9dc:	71c3      	strb	r3, [r0, #7]
 800c9de:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c9e2:	7203      	strb	r3, [r0, #8]
 800c9e4:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c9e8:	7243      	strb	r3, [r0, #9]
 800c9ea:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c9ee:	8143      	strh	r3, [r0, #10]
 800c9f0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c9f4:	8183      	strh	r3, [r0, #12]
 800c9f6:	4b01      	ldr	r3, [pc, #4]	; (800c9fc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c9f8:	6003      	str	r3, [r0, #0]
 800c9fa:	bd30      	pop	{r4, r5, pc}
 800c9fc:	0801d30c 	.word	0x0801d30c

0800ca00 <_ZNK8touchgfx9ConstFont4findEt>:
 800ca00:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca02:	6904      	ldr	r4, [r0, #16]
 800ca04:	8a82      	ldrh	r2, [r0, #20]
 800ca06:	88a3      	ldrh	r3, [r4, #4]
 800ca08:	1acb      	subs	r3, r1, r3
 800ca0a:	f102 32ff 	add.w	r2, r2, #4294967295
 800ca0e:	d431      	bmi.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca10:	4293      	cmp	r3, r2
 800ca12:	dd0c      	ble.n	800ca2e <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800ca14:	230e      	movs	r3, #14
 800ca16:	fb03 4302 	mla	r3, r3, r2, r4
 800ca1a:	889b      	ldrh	r3, [r3, #4]
 800ca1c:	1a5b      	subs	r3, r3, r1
 800ca1e:	1ad3      	subs	r3, r2, r3
 800ca20:	429a      	cmp	r2, r3
 800ca22:	db27      	blt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca24:	2b00      	cmp	r3, #0
 800ca26:	bfbc      	itt	lt
 800ca28:	2302      	movlt	r3, #2
 800ca2a:	fb92 f3f3 	sdivlt	r3, r2, r3
 800ca2e:	2500      	movs	r5, #0
 800ca30:	260e      	movs	r6, #14
 800ca32:	4295      	cmp	r5, r2
 800ca34:	dc1e      	bgt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca36:	fb06 4003 	mla	r0, r6, r3, r4
 800ca3a:	8887      	ldrh	r7, [r0, #4]
 800ca3c:	42b9      	cmp	r1, r7
 800ca3e:	d01a      	beq.n	800ca76 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ca40:	d20d      	bcs.n	800ca5e <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800ca42:	1e5a      	subs	r2, r3, #1
 800ca44:	4295      	cmp	r5, r2
 800ca46:	dc15      	bgt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca48:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800ca4c:	1a5b      	subs	r3, r3, r1
 800ca4e:	1ad3      	subs	r3, r2, r3
 800ca50:	429a      	cmp	r2, r3
 800ca52:	db0f      	blt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca54:	429d      	cmp	r5, r3
 800ca56:	ddec      	ble.n	800ca32 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800ca58:	1953      	adds	r3, r2, r5
 800ca5a:	105b      	asrs	r3, r3, #1
 800ca5c:	e7e9      	b.n	800ca32 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800ca5e:	1c5d      	adds	r5, r3, #1
 800ca60:	42aa      	cmp	r2, r5
 800ca62:	db07      	blt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca64:	8a43      	ldrh	r3, [r0, #18]
 800ca66:	1acb      	subs	r3, r1, r3
 800ca68:	442b      	add	r3, r5
 800ca6a:	429d      	cmp	r5, r3
 800ca6c:	dc02      	bgt.n	800ca74 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800ca6e:	429a      	cmp	r2, r3
 800ca70:	dadf      	bge.n	800ca32 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800ca72:	e7f1      	b.n	800ca58 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800ca74:	2000      	movs	r0, #0
 800ca76:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ca78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800ca78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca7a:	4604      	mov	r4, r0
 800ca7c:	4617      	mov	r7, r2
 800ca7e:	461e      	mov	r6, r3
 800ca80:	b911      	cbnz	r1, 800ca88 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800ca82:	2500      	movs	r5, #0
 800ca84:	4628      	mov	r0, r5
 800ca86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca88:	290a      	cmp	r1, #10
 800ca8a:	d0fa      	beq.n	800ca82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca8c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ca90:	4291      	cmp	r1, r2
 800ca92:	d0f6      	beq.n	800ca82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca94:	f242 020b 	movw	r2, #8203	; 0x200b
 800ca98:	4291      	cmp	r1, r2
 800ca9a:	d0f2      	beq.n	800ca82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca9c:	f7ff ffb0 	bl	800ca00 <_ZNK8touchgfx9ConstFont4findEt>
 800caa0:	4605      	mov	r5, r0
 800caa2:	b950      	cbnz	r0, 800caba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800caa4:	6823      	ldr	r3, [r4, #0]
 800caa6:	4620      	mov	r0, r4
 800caa8:	691b      	ldr	r3, [r3, #16]
 800caaa:	4798      	blx	r3
 800caac:	4601      	mov	r1, r0
 800caae:	4620      	mov	r0, r4
 800cab0:	f7ff ffa6 	bl	800ca00 <_ZNK8touchgfx9ConstFont4findEt>
 800cab4:	4605      	mov	r5, r0
 800cab6:	2800      	cmp	r0, #0
 800cab8:	d0e3      	beq.n	800ca82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800caba:	6823      	ldr	r3, [r4, #0]
 800cabc:	4629      	mov	r1, r5
 800cabe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cac0:	4620      	mov	r0, r4
 800cac2:	4798      	blx	r3
 800cac4:	6038      	str	r0, [r7, #0]
 800cac6:	6823      	ldr	r3, [r4, #0]
 800cac8:	4620      	mov	r0, r4
 800caca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cacc:	4798      	blx	r3
 800cace:	7030      	strb	r0, [r6, #0]
 800cad0:	e7d8      	b.n	800ca84 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800cad2 <_ZN8touchgfx6memsetEPvhm>:
 800cad2:	4402      	add	r2, r0
 800cad4:	4290      	cmp	r0, r2
 800cad6:	d002      	beq.n	800cade <_ZN8touchgfx6memsetEPvhm+0xc>
 800cad8:	f800 1b01 	strb.w	r1, [r0], #1
 800cadc:	e7fa      	b.n	800cad4 <_ZN8touchgfx6memsetEPvhm+0x2>
 800cade:	4770      	bx	lr

0800cae0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800cae0:	b538      	push	{r3, r4, r5, lr}
 800cae2:	4605      	mov	r5, r0
 800cae4:	f002 f904 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cae8:	4604      	mov	r4, r0
 800caea:	4628      	mov	r0, r5
 800caec:	f002 f842 	bl	800eb74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800caf0:	2800      	cmp	r0, #0
 800caf2:	bf14      	ite	ne
 800caf4:	2002      	movne	r0, #2
 800caf6:	2000      	moveq	r0, #0
 800caf8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800cafc:	b280      	uxth	r0, r0
 800cafe:	bd38      	pop	{r3, r4, r5, pc}

0800cb00 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800cb00:	b538      	push	{r3, r4, r5, lr}
 800cb02:	4605      	mov	r5, r0
 800cb04:	f002 f8f4 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cb08:	4604      	mov	r4, r0
 800cb0a:	4628      	mov	r0, r5
 800cb0c:	f002 f832 	bl	800eb74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800cb10:	2800      	cmp	r0, #0
 800cb12:	bf14      	ite	ne
 800cb14:	2002      	movne	r0, #2
 800cb16:	2000      	moveq	r0, #0
 800cb18:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800cb1c:	f040 0001 	orr.w	r0, r0, #1
 800cb20:	b280      	uxth	r0, r0
 800cb22:	bd38      	pop	{r3, r4, r5, pc}

0800cb24 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800cb24:	2000      	movs	r0, #0
 800cb26:	4770      	bx	lr

0800cb28 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800cb28:	2001      	movs	r0, #1
 800cb2a:	4770      	bx	lr

0800cb2c <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800cb2c:	2002      	movs	r0, #2
 800cb2e:	4770      	bx	lr

0800cb30 <_ZN8touchgfx6ScreenD1Ev>:
 800cb30:	4770      	bx	lr

0800cb32 <_ZN8touchgfx12GestureEventD1Ev>:
 800cb32:	4770      	bx	lr

0800cb34 <_ZN8touchgfx9DragEventD1Ev>:
 800cb34:	4770      	bx	lr

0800cb36 <_ZN8touchgfx10ClickEventD1Ev>:
 800cb36:	4770      	bx	lr

0800cb38 <_ZN8touchgfx10ClickEventD0Ev>:
 800cb38:	b510      	push	{r4, lr}
 800cb3a:	210c      	movs	r1, #12
 800cb3c:	4604      	mov	r4, r0
 800cb3e:	f00d fbed 	bl	801a31c <_ZdlPvj>
 800cb42:	4620      	mov	r0, r4
 800cb44:	bd10      	pop	{r4, pc}

0800cb46 <_ZN8touchgfx9DragEventD0Ev>:
 800cb46:	b510      	push	{r4, lr}
 800cb48:	2110      	movs	r1, #16
 800cb4a:	4604      	mov	r4, r0
 800cb4c:	f00d fbe6 	bl	801a31c <_ZdlPvj>
 800cb50:	4620      	mov	r0, r4
 800cb52:	bd10      	pop	{r4, pc}

0800cb54 <_ZN8touchgfx12GestureEventD0Ev>:
 800cb54:	b510      	push	{r4, lr}
 800cb56:	210c      	movs	r1, #12
 800cb58:	4604      	mov	r4, r0
 800cb5a:	f00d fbdf 	bl	801a31c <_ZdlPvj>
 800cb5e:	4620      	mov	r0, r4
 800cb60:	bd10      	pop	{r4, pc}

0800cb62 <_ZN8touchgfx6ScreenD0Ev>:
 800cb62:	b510      	push	{r4, lr}
 800cb64:	213c      	movs	r1, #60	; 0x3c
 800cb66:	4604      	mov	r4, r0
 800cb68:	f00d fbd8 	bl	801a31c <_ZdlPvj>
 800cb6c:	4620      	mov	r0, r4
 800cb6e:	bd10      	pop	{r4, pc}

0800cb70 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800cb70:	b530      	push	{r4, r5, lr}
 800cb72:	460d      	mov	r5, r1
 800cb74:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800cb76:	b087      	sub	sp, #28
 800cb78:	4604      	mov	r4, r0
 800cb7a:	b301      	cbz	r1, 800cbbe <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800cb7c:	a801      	add	r0, sp, #4
 800cb7e:	f7ff ff0b 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cb82:	892a      	ldrh	r2, [r5, #8]
 800cb84:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cb88:	7928      	ldrb	r0, [r5, #4]
 800cb8a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800cb8e:	f88d 0010 	strb.w	r0, [sp, #16]
 800cb92:	1ad2      	subs	r2, r2, r3
 800cb94:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800cb96:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800cb98:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cb9c:	441a      	add	r2, r3
 800cb9e:	896b      	ldrh	r3, [r5, #10]
 800cba0:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800cba4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cba8:	1b5b      	subs	r3, r3, r5
 800cbaa:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800cbac:	442b      	add	r3, r5
 800cbae:	4d05      	ldr	r5, [pc, #20]	; (800cbc4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800cbb0:	9503      	str	r5, [sp, #12]
 800cbb2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cbb6:	6803      	ldr	r3, [r0, #0]
 800cbb8:	a903      	add	r1, sp, #12
 800cbba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cbbc:	4798      	blx	r3
 800cbbe:	b007      	add	sp, #28
 800cbc0:	bd30      	pop	{r4, r5, pc}
 800cbc2:	bf00      	nop
 800cbc4:	0801d388 	.word	0x0801d388

0800cbc8 <_ZNK8touchgfx4Rect9intersectEss>:
 800cbc8:	b510      	push	{r4, lr}
 800cbca:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cbce:	428b      	cmp	r3, r1
 800cbd0:	dc10      	bgt.n	800cbf4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cbd2:	8884      	ldrh	r4, [r0, #4]
 800cbd4:	4423      	add	r3, r4
 800cbd6:	b21b      	sxth	r3, r3
 800cbd8:	4299      	cmp	r1, r3
 800cbda:	da0b      	bge.n	800cbf4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cbdc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cbe0:	4293      	cmp	r3, r2
 800cbe2:	dc07      	bgt.n	800cbf4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cbe4:	88c0      	ldrh	r0, [r0, #6]
 800cbe6:	4418      	add	r0, r3
 800cbe8:	b200      	sxth	r0, r0
 800cbea:	4282      	cmp	r2, r0
 800cbec:	bfac      	ite	ge
 800cbee:	2000      	movge	r0, #0
 800cbf0:	2001      	movlt	r0, #1
 800cbf2:	bd10      	pop	{r4, pc}
 800cbf4:	2000      	movs	r0, #0
 800cbf6:	e7fc      	b.n	800cbf2 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800cbf8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800cbf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cbfa:	460c      	mov	r4, r1
 800cbfc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800cbfe:	b089      	sub	sp, #36	; 0x24
 800cc00:	4605      	mov	r5, r0
 800cc02:	2900      	cmp	r1, #0
 800cc04:	d054      	beq.n	800ccb0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800cc06:	4668      	mov	r0, sp
 800cc08:	f7ff fec6 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cc0c:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800cc0e:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800cc10:	8922      	ldrh	r2, [r4, #8]
 800cc12:	88e1      	ldrh	r1, [r4, #6]
 800cc14:	443a      	add	r2, r7
 800cc16:	4431      	add	r1, r6
 800cc18:	b212      	sxth	r2, r2
 800cc1a:	b209      	sxth	r1, r1
 800cc1c:	4668      	mov	r0, sp
 800cc1e:	f7ff ffd3 	bl	800cbc8 <_ZNK8touchgfx4Rect9intersectEss>
 800cc22:	b1d0      	cbz	r0, 800cc5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cc24:	89a2      	ldrh	r2, [r4, #12]
 800cc26:	8961      	ldrh	r1, [r4, #10]
 800cc28:	443a      	add	r2, r7
 800cc2a:	4431      	add	r1, r6
 800cc2c:	b212      	sxth	r2, r2
 800cc2e:	b209      	sxth	r1, r1
 800cc30:	4668      	mov	r0, sp
 800cc32:	f7ff ffc9 	bl	800cbc8 <_ZNK8touchgfx4Rect9intersectEss>
 800cc36:	4603      	mov	r3, r0
 800cc38:	b978      	cbnz	r0, 800cc5a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cc3a:	4a1e      	ldr	r2, [pc, #120]	; (800ccb4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800cc3c:	9204      	str	r2, [sp, #16]
 800cc3e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cc40:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cc44:	2202      	movs	r2, #2
 800cc46:	f88d 2014 	strb.w	r2, [sp, #20]
 800cc4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc4e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc52:	6803      	ldr	r3, [r0, #0]
 800cc54:	a904      	add	r1, sp, #16
 800cc56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cc58:	4798      	blx	r3
 800cc5a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800cc5c:	a802      	add	r0, sp, #8
 800cc5e:	f7ff fe9b 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cc62:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800cc66:	88e0      	ldrh	r0, [r4, #6]
 800cc68:	8961      	ldrh	r1, [r4, #10]
 800cc6a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800cc6e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800cc72:	8923      	ldrh	r3, [r4, #8]
 800cc74:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800cc76:	7927      	ldrb	r7, [r4, #4]
 800cc78:	f88d 7014 	strb.w	r7, [sp, #20]
 800cc7c:	1a80      	subs	r0, r0, r2
 800cc7e:	1a89      	subs	r1, r1, r2
 800cc80:	89a2      	ldrh	r2, [r4, #12]
 800cc82:	4c0d      	ldr	r4, [pc, #52]	; (800ccb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800cc84:	9404      	str	r4, [sp, #16]
 800cc86:	4460      	add	r0, ip
 800cc88:	eba3 030e 	sub.w	r3, r3, lr
 800cc8c:	eba2 020e 	sub.w	r2, r2, lr
 800cc90:	f8ad 0016 	strh.w	r0, [sp, #22]
 800cc94:	4433      	add	r3, r6
 800cc96:	4461      	add	r1, ip
 800cc98:	4432      	add	r2, r6
 800cc9a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cc9c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800cca0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cca4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cca8:	6803      	ldr	r3, [r0, #0]
 800ccaa:	a904      	add	r1, sp, #16
 800ccac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ccae:	4798      	blx	r3
 800ccb0:	b009      	add	sp, #36	; 0x24
 800ccb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ccb4:	0801d360 	.word	0x0801d360
 800ccb8:	0801d374 	.word	0x0801d374

0800ccbc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800ccbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccc0:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800ccc4:	790b      	ldrb	r3, [r1, #4]
 800ccc6:	b0a1      	sub	sp, #132	; 0x84
 800ccc8:	4604      	mov	r4, r0
 800ccca:	460d      	mov	r5, r1
 800cccc:	f1b9 0f00 	cmp.w	r9, #0
 800ccd0:	d00f      	beq.n	800ccf2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800ccd2:	2b00      	cmp	r3, #0
 800ccd4:	f040 80a0 	bne.w	800ce18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ccd8:	b021      	add	sp, #132	; 0x84
 800ccda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ccde:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800cce2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cce6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ccea:	1d20      	adds	r0, r4, #4
 800ccec:	f7fb fdbc 	bl	8008868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ccf0:	e092      	b.n	800ce18 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800ccf2:	2b00      	cmp	r3, #0
 800ccf4:	d1f0      	bne.n	800ccd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ccf6:	4b5e      	ldr	r3, [pc, #376]	; (800ce70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800ccf8:	681b      	ldr	r3, [r3, #0]
 800ccfa:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800ccfe:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800cd02:	f1ba 0f03 	cmp.w	sl, #3
 800cd06:	ddea      	ble.n	800ccde <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800cd08:	f1ba 0f0c 	cmp.w	sl, #12
 800cd0c:	f04f 0303 	mov.w	r3, #3
 800cd10:	bfdc      	itt	le
 800cd12:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800cd16:	fb92 f3f3 	sdivle	r3, r2, r3
 800cd1a:	9301      	str	r3, [sp, #4]
 800cd1c:	4b55      	ldr	r3, [pc, #340]	; (800ce74 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800cd1e:	4956      	ldr	r1, [pc, #344]	; (800ce78 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800cd20:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd24:	4b55      	ldr	r3, [pc, #340]	; (800ce7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800cd26:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800cd2a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd2e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800cd32:	ab0e      	add	r3, sp, #56	; 0x38
 800cd34:	2248      	movs	r2, #72	; 0x48
 800cd36:	2600      	movs	r6, #0
 800cd38:	4618      	mov	r0, r3
 800cd3a:	960a      	str	r6, [sp, #40]	; 0x28
 800cd3c:	f00d fb98 	bl	801a470 <memcpy>
 800cd40:	f04f 32ff 	mov.w	r2, #4294967295
 800cd44:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800cd48:	f8cd a008 	str.w	sl, [sp, #8]
 800cd4c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800cd50:	fb93 f3f2 	sdiv	r3, r3, r2
 800cd54:	b29b      	uxth	r3, r3
 800cd56:	46b3      	mov	fp, r6
 800cd58:	9303      	str	r3, [sp, #12]
 800cd5a:	2300      	movs	r3, #0
 800cd5c:	9309      	str	r3, [sp, #36]	; 0x24
 800cd5e:	9b07      	ldr	r3, [sp, #28]
 800cd60:	9a03      	ldr	r2, [sp, #12]
 800cd62:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800cd66:	88ef      	ldrh	r7, [r5, #6]
 800cd68:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800cd6c:	fb13 f302 	smulbb	r3, r3, r2
 800cd70:	b29b      	uxth	r3, r3
 800cd72:	9304      	str	r3, [sp, #16]
 800cd74:	9b07      	ldr	r3, [sp, #28]
 800cd76:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800cd7a:	a80a      	add	r0, sp, #40	; 0x28
 800cd7c:	685b      	ldr	r3, [r3, #4]
 800cd7e:	fb13 f302 	smulbb	r3, r3, r2
 800cd82:	b29b      	uxth	r3, r3
 800cd84:	9305      	str	r3, [sp, #20]
 800cd86:	9b04      	ldr	r3, [sp, #16]
 800cd88:	441f      	add	r7, r3
 800cd8a:	9b05      	ldr	r3, [sp, #20]
 800cd8c:	4498      	add	r8, r3
 800cd8e:	b23f      	sxth	r7, r7
 800cd90:	fa0f f888 	sxth.w	r8, r8
 800cd94:	4642      	mov	r2, r8
 800cd96:	4639      	mov	r1, r7
 800cd98:	f7ff ff16 	bl	800cbc8 <_ZNK8touchgfx4Rect9intersectEss>
 800cd9c:	b380      	cbz	r0, 800ce00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cd9e:	4639      	mov	r1, r7
 800cda0:	ab09      	add	r3, sp, #36	; 0x24
 800cda2:	4642      	mov	r2, r8
 800cda4:	1d20      	adds	r0, r4, #4
 800cda6:	f7fb fd5f 	bl	8008868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cdaa:	9909      	ldr	r1, [sp, #36]	; 0x24
 800cdac:	b341      	cbz	r1, 800ce00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cdae:	4549      	cmp	r1, r9
 800cdb0:	d026      	beq.n	800ce00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cdb2:	a80c      	add	r0, sp, #48	; 0x30
 800cdb4:	f7ff fdf0 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cdb8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800cdbc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cdc0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800cdc4:	2002      	movs	r0, #2
 800cdc6:	fb92 f2f0 	sdiv	r2, r2, r0
 800cdca:	440a      	add	r2, r1
 800cdcc:	1a99      	subs	r1, r3, r2
 800cdce:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800cdd2:	fb93 f3f0 	sdiv	r3, r3, r0
 800cdd6:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800cdda:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cdde:	4403      	add	r3, r0
 800cde0:	1ad3      	subs	r3, r2, r3
 800cde2:	435b      	muls	r3, r3
 800cde4:	9a06      	ldr	r2, [sp, #24]
 800cde6:	fb01 3301 	mla	r3, r1, r1, r3
 800cdea:	4293      	cmp	r3, r2
 800cdec:	d208      	bcs.n	800ce00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cdee:	9a04      	ldr	r2, [sp, #16]
 800cdf0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800cdf4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800cdf6:	9a05      	ldr	r2, [sp, #20]
 800cdf8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800cdfc:	86e2      	strh	r2, [r4, #54]	; 0x36
 800cdfe:	9306      	str	r3, [sp, #24]
 800ce00:	f10b 0b02 	add.w	fp, fp, #2
 800ce04:	f1bb 0f08 	cmp.w	fp, #8
 800ce08:	dda7      	ble.n	800cd5a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800ce0a:	9b02      	ldr	r3, [sp, #8]
 800ce0c:	4453      	add	r3, sl
 800ce0e:	9302      	str	r3, [sp, #8]
 800ce10:	9b01      	ldr	r3, [sp, #4]
 800ce12:	3601      	adds	r6, #1
 800ce14:	42b3      	cmp	r3, r6
 800ce16:	d199      	bne.n	800cd4c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800ce18:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ce1a:	2900      	cmp	r1, #0
 800ce1c:	f43f af5c 	beq.w	800ccd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ce20:	a80c      	add	r0, sp, #48	; 0x30
 800ce22:	f7ff fdb9 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ce26:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800ce2a:	88ea      	ldrh	r2, [r5, #6]
 800ce2c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800ce30:	7929      	ldrb	r1, [r5, #4]
 800ce32:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800ce36:	1ad2      	subs	r2, r2, r3
 800ce38:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ce3a:	441a      	add	r2, r3
 800ce3c:	892b      	ldrh	r3, [r5, #8]
 800ce3e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800ce42:	1a1b      	subs	r3, r3, r0
 800ce44:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800ce46:	4403      	add	r3, r0
 800ce48:	480d      	ldr	r0, [pc, #52]	; (800ce80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800ce4a:	900e      	str	r0, [sp, #56]	; 0x38
 800ce4c:	2600      	movs	r6, #0
 800ce4e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ce50:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800ce54:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800ce58:	6803      	ldr	r3, [r0, #0]
 800ce5a:	a90e      	add	r1, sp, #56	; 0x38
 800ce5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ce5e:	4798      	blx	r3
 800ce60:	792b      	ldrb	r3, [r5, #4]
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	f43f af38 	beq.w	800ccd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ce68:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800ce6c:	e734      	b.n	800ccd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800ce6e:	bf00      	nop
 800ce70:	200120ac 	.word	0x200120ac
 800ce74:	200120a0 	.word	0x200120a0
 800ce78:	0801b398 	.word	0x0801b398
 800ce7c:	200120a2 	.word	0x200120a2
 800ce80:	0801d360 	.word	0x0801d360

0800ce84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800ce84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ce86:	4604      	mov	r4, r0
 800ce88:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800ce8c:	3201      	adds	r2, #1
 800ce8e:	d112      	bne.n	800ceb6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ce90:	6803      	ldr	r3, [r0, #0]
 800ce92:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ce96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ce9a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ce9e:	2500      	movs	r5, #0
 800cea0:	9500      	str	r5, [sp, #0]
 800cea2:	466d      	mov	r5, sp
 800cea4:	4629      	mov	r1, r5
 800cea6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ceaa:	6a1b      	ldr	r3, [r3, #32]
 800ceac:	4798      	blx	r3
 800ceae:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ceb2:	e884 0003 	stmia.w	r4, {r0, r1}
 800ceb6:	4620      	mov	r0, r4
 800ceb8:	b003      	add	sp, #12
 800ceba:	bd30      	pop	{r4, r5, pc}

0800cebc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800cebc:	b513      	push	{r0, r1, r4, lr}
 800cebe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800cec2:	3301      	adds	r3, #1
 800cec4:	4604      	mov	r4, r0
 800cec6:	d109      	bne.n	800cedc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800cec8:	4601      	mov	r1, r0
 800ceca:	4668      	mov	r0, sp
 800cecc:	f7ff fd64 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ced0:	f8bd 3000 	ldrh.w	r3, [sp]
 800ced4:	8423      	strh	r3, [r4, #32]
 800ced6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ceda:	8463      	strh	r3, [r4, #34]	; 0x22
 800cedc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800cee0:	b002      	add	sp, #8
 800cee2:	bd10      	pop	{r4, pc}

0800cee4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800cee4:	b513      	push	{r0, r1, r4, lr}
 800cee6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ceea:	3301      	adds	r3, #1
 800ceec:	4604      	mov	r4, r0
 800ceee:	d109      	bne.n	800cf04 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800cef0:	4601      	mov	r1, r0
 800cef2:	4668      	mov	r0, sp
 800cef4:	f7ff fd50 	bl	800c998 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cef8:	f8bd 3000 	ldrh.w	r3, [sp]
 800cefc:	8423      	strh	r3, [r4, #32]
 800cefe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cf02:	8463      	strh	r3, [r4, #34]	; 0x22
 800cf04:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800cf08:	b002      	add	sp, #8
 800cf0a:	bd10      	pop	{r4, pc}

0800cf0c <_ZN8touchgfx6ScreenC1Ev>:
 800cf0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf0e:	4605      	mov	r5, r0
 800cf10:	4b17      	ldr	r3, [pc, #92]	; (800cf70 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800cf12:	f845 3b04 	str.w	r3, [r5], #4
 800cf16:	2301      	movs	r3, #1
 800cf18:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800cf1c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800cf20:	4b14      	ldr	r3, [pc, #80]	; (800cf74 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800cf22:	4915      	ldr	r1, [pc, #84]	; (800cf78 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800cf24:	f9b3 7000 	ldrsh.w	r7, [r3]
 800cf28:	4b14      	ldr	r3, [pc, #80]	; (800cf7c <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800cf2a:	6041      	str	r1, [r0, #4]
 800cf2c:	2200      	movs	r2, #0
 800cf2e:	8102      	strh	r2, [r0, #8]
 800cf30:	8142      	strh	r2, [r0, #10]
 800cf32:	8182      	strh	r2, [r0, #12]
 800cf34:	81c2      	strh	r2, [r0, #14]
 800cf36:	8202      	strh	r2, [r0, #16]
 800cf38:	8242      	strh	r2, [r0, #18]
 800cf3a:	8282      	strh	r2, [r0, #20]
 800cf3c:	82c2      	strh	r2, [r0, #22]
 800cf3e:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800cf42:	6202      	str	r2, [r0, #32]
 800cf44:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800cf48:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800cf4c:	6342      	str	r2, [r0, #52]	; 0x34
 800cf4e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800cf52:	4611      	mov	r1, r2
 800cf54:	4604      	mov	r4, r0
 800cf56:	4628      	mov	r0, r5
 800cf58:	f7f5 fb2e 	bl	80025b8 <_ZN8touchgfx8Drawable5setXYEss>
 800cf5c:	4639      	mov	r1, r7
 800cf5e:	4628      	mov	r0, r5
 800cf60:	f7f5 fb37 	bl	80025d2 <_ZN8touchgfx8Drawable8setWidthEs>
 800cf64:	4628      	mov	r0, r5
 800cf66:	4631      	mov	r1, r6
 800cf68:	f7f5 fb35 	bl	80025d6 <_ZN8touchgfx8Drawable9setHeightEs>
 800cf6c:	4620      	mov	r0, r4
 800cf6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cf70:	0801d39c 	.word	0x0801d39c
 800cf74:	200120a0 	.word	0x200120a0
 800cf78:	0801c710 	.word	0x0801c710
 800cf7c:	200120a2 	.word	0x200120a2

0800cf80 <_ZN8touchgfx6Screen4drawEv>:
 800cf80:	b507      	push	{r0, r1, r2, lr}
 800cf82:	4b09      	ldr	r3, [pc, #36]	; (800cfa8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800cf84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cf88:	4b08      	ldr	r3, [pc, #32]	; (800cfac <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800cf8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cf8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cf92:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cf96:	6803      	ldr	r3, [r0, #0]
 800cf98:	2100      	movs	r1, #0
 800cf9a:	9100      	str	r1, [sp, #0]
 800cf9c:	689b      	ldr	r3, [r3, #8]
 800cf9e:	4669      	mov	r1, sp
 800cfa0:	4798      	blx	r3
 800cfa2:	b003      	add	sp, #12
 800cfa4:	f85d fb04 	ldr.w	pc, [sp], #4
 800cfa8:	200120a0 	.word	0x200120a0
 800cfac:	200120a2 	.word	0x200120a2

0800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800cfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfb4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cfb8:	2b00      	cmp	r3, #0
 800cfba:	b089      	sub	sp, #36	; 0x24
 800cfbc:	4680      	mov	r8, r0
 800cfbe:	460c      	mov	r4, r1
 800cfc0:	4615      	mov	r5, r2
 800cfc2:	dd0e      	ble.n	800cfe2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cfc4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cfc8:	2b00      	cmp	r3, #0
 800cfca:	dd0a      	ble.n	800cfe2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cfcc:	4628      	mov	r0, r5
 800cfce:	f7ff ff59 	bl	800ce84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cfd2:	4621      	mov	r1, r4
 800cfd4:	f7fe fede 	bl	800bd94 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cfd8:	69eb      	ldr	r3, [r5, #28]
 800cfda:	b928      	cbnz	r0, 800cfe8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800cfdc:	461d      	mov	r5, r3
 800cfde:	2b00      	cmp	r3, #0
 800cfe0:	d1f4      	bne.n	800cfcc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800cfe2:	b009      	add	sp, #36	; 0x24
 800cfe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfe8:	ae04      	add	r6, sp, #16
 800cfea:	2b00      	cmp	r3, #0
 800cfec:	d051      	beq.n	800d092 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cfee:	682b      	ldr	r3, [r5, #0]
 800cff0:	4629      	mov	r1, r5
 800cff2:	68db      	ldr	r3, [r3, #12]
 800cff4:	a802      	add	r0, sp, #8
 800cff6:	4798      	blx	r3
 800cff8:	4628      	mov	r0, r5
 800cffa:	f7ff ff5f 	bl	800cebc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cffe:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800d002:	4407      	add	r7, r0
 800d004:	4628      	mov	r0, r5
 800d006:	f7ff ff6d 	bl	800cee4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d00a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d00e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d012:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d016:	4418      	add	r0, r3
 800d018:	4621      	mov	r1, r4
 800d01a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d01e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d022:	b23f      	sxth	r7, r7
 800d024:	4630      	mov	r0, r6
 800d026:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d02a:	f8ad 7010 	strh.w	r7, [sp, #16]
 800d02e:	f7fb fcd5 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800d032:	4628      	mov	r0, r5
 800d034:	f7ff ff26 	bl	800ce84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d038:	4602      	mov	r2, r0
 800d03a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d03e:	ab06      	add	r3, sp, #24
 800d040:	e883 0003 	stmia.w	r3, {r0, r1}
 800d044:	4611      	mov	r1, r2
 800d046:	4618      	mov	r0, r3
 800d048:	f7fb fcc8 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800d04c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d050:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d054:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800d058:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800d05c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800d060:	4299      	cmp	r1, r3
 800d062:	d10b      	bne.n	800d07c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800d064:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d068:	4552      	cmp	r2, sl
 800d06a:	d107      	bne.n	800d07c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800d06c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800d070:	455a      	cmp	r2, fp
 800d072:	d103      	bne.n	800d07c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800d074:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d078:	454a      	cmp	r2, r9
 800d07a:	d00a      	beq.n	800d092 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800d07c:	f1bb 0f00 	cmp.w	fp, #0
 800d080:	d002      	beq.n	800d088 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800d082:	f1b9 0f00 	cmp.w	r9, #0
 800d086:	d12e      	bne.n	800d0e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800d088:	69ea      	ldr	r2, [r5, #28]
 800d08a:	4621      	mov	r1, r4
 800d08c:	4640      	mov	r0, r8
 800d08e:	f7ff ff8f 	bl	800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d092:	4628      	mov	r0, r5
 800d094:	f7ff fef6 	bl	800ce84 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d098:	6861      	ldr	r1, [r4, #4]
 800d09a:	4602      	mov	r2, r0
 800d09c:	6820      	ldr	r0, [r4, #0]
 800d09e:	4633      	mov	r3, r6
 800d0a0:	c303      	stmia	r3!, {r0, r1}
 800d0a2:	4611      	mov	r1, r2
 800d0a4:	4630      	mov	r0, r6
 800d0a6:	f7fb fc99 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800d0aa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d0ae:	2b00      	cmp	r3, #0
 800d0b0:	dd97      	ble.n	800cfe2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d0b2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d0b6:	2b00      	cmp	r3, #0
 800d0b8:	dd93      	ble.n	800cfe2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d0ba:	4628      	mov	r0, r5
 800d0bc:	f7ff fefe 	bl	800cebc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d0c0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d0c4:	1a18      	subs	r0, r3, r0
 800d0c6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d0ca:	4628      	mov	r0, r5
 800d0cc:	f7ff ff0a 	bl	800cee4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d0d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d0d4:	1a18      	subs	r0, r3, r0
 800d0d6:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d0da:	682b      	ldr	r3, [r5, #0]
 800d0dc:	4631      	mov	r1, r6
 800d0de:	689b      	ldr	r3, [r3, #8]
 800d0e0:	4628      	mov	r0, r5
 800d0e2:	4798      	blx	r3
 800d0e4:	e77d      	b.n	800cfe2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d0e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d0ea:	fa1f f08a 	uxth.w	r0, sl
 800d0ee:	4552      	cmp	r2, sl
 800d0f0:	9000      	str	r0, [sp, #0]
 800d0f2:	da12      	bge.n	800d11a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800d0f4:	9301      	str	r3, [sp, #4]
 800d0f6:	9b00      	ldr	r3, [sp, #0]
 800d0f8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d0fc:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d100:	1a9a      	subs	r2, r3, r2
 800d102:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d106:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d10a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800d10e:	69ea      	ldr	r2, [r5, #28]
 800d110:	4631      	mov	r1, r6
 800d112:	4640      	mov	r0, r8
 800d114:	f7ff ff4c 	bl	800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d118:	9b01      	ldr	r3, [sp, #4]
 800d11a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800d11e:	429a      	cmp	r2, r3
 800d120:	b29f      	uxth	r7, r3
 800d122:	da0d      	bge.n	800d140 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800d124:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d128:	1aba      	subs	r2, r7, r2
 800d12a:	f8ad a012 	strh.w	sl, [sp, #18]
 800d12e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d132:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d136:	69ea      	ldr	r2, [r5, #28]
 800d138:	4631      	mov	r1, r6
 800d13a:	4640      	mov	r0, r8
 800d13c:	f7ff ff38 	bl	800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d140:	8822      	ldrh	r2, [r4, #0]
 800d142:	88a3      	ldrh	r3, [r4, #4]
 800d144:	445f      	add	r7, fp
 800d146:	4413      	add	r3, r2
 800d148:	b29b      	uxth	r3, r3
 800d14a:	b2bf      	uxth	r7, r7
 800d14c:	b23a      	sxth	r2, r7
 800d14e:	b219      	sxth	r1, r3
 800d150:	4291      	cmp	r1, r2
 800d152:	dd0d      	ble.n	800d170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800d154:	1bdb      	subs	r3, r3, r7
 800d156:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d15a:	f8ad a012 	strh.w	sl, [sp, #18]
 800d15e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d162:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d166:	69ea      	ldr	r2, [r5, #28]
 800d168:	4631      	mov	r1, r6
 800d16a:	4640      	mov	r0, r8
 800d16c:	f7ff ff20 	bl	800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d170:	88e2      	ldrh	r2, [r4, #6]
 800d172:	8863      	ldrh	r3, [r4, #2]
 800d174:	4413      	add	r3, r2
 800d176:	9a00      	ldr	r2, [sp, #0]
 800d178:	444a      	add	r2, r9
 800d17a:	b29b      	uxth	r3, r3
 800d17c:	fa1f f982 	uxth.w	r9, r2
 800d180:	fa0f f289 	sxth.w	r2, r9
 800d184:	b219      	sxth	r1, r3
 800d186:	428a      	cmp	r2, r1
 800d188:	da83      	bge.n	800d092 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800d18a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d18e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d192:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d196:	eba3 0309 	sub.w	r3, r3, r9
 800d19a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d19e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d1a2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d1a6:	69ea      	ldr	r2, [r5, #28]
 800d1a8:	4631      	mov	r1, r6
 800d1aa:	e76f      	b.n	800d08c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800d1ac <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800d1ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d1ae:	aa02      	add	r2, sp, #8
 800d1b0:	2300      	movs	r3, #0
 800d1b2:	f842 3d04 	str.w	r3, [r2, #-4]!
 800d1b6:	4604      	mov	r4, r0
 800d1b8:	3004      	adds	r0, #4
 800d1ba:	460d      	mov	r5, r1
 800d1bc:	f7fb fce6 	bl	8008b8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800d1c0:	9a01      	ldr	r2, [sp, #4]
 800d1c2:	b11a      	cbz	r2, 800d1cc <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800d1c4:	4629      	mov	r1, r5
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	f7ff fef2 	bl	800cfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d1cc:	b003      	add	sp, #12
 800d1ce:	bd30      	pop	{r4, r5, pc}

0800d1d0 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800d1d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d1d2:	4602      	mov	r2, r0
 800d1d4:	4604      	mov	r4, r0
 800d1d6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800d1da:	460d      	mov	r5, r1
 800d1dc:	6851      	ldr	r1, [r2, #4]
 800d1de:	466b      	mov	r3, sp
 800d1e0:	c303      	stmia	r3!, {r0, r1}
 800d1e2:	4629      	mov	r1, r5
 800d1e4:	4668      	mov	r0, sp
 800d1e6:	f7fb fbf9 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 800d1ea:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d1ee:	4669      	mov	r1, sp
 800d1f0:	b123      	cbz	r3, 800d1fc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800d1f2:	4620      	mov	r0, r4
 800d1f4:	f7ff ffda 	bl	800d1ac <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800d1f8:	b003      	add	sp, #12
 800d1fa:	bd30      	pop	{r4, r5, pc}
 800d1fc:	1d20      	adds	r0, r4, #4
 800d1fe:	f7fb fc8c 	bl	8008b1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800d202:	e7f9      	b.n	800d1f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800d204 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800d204:	680a      	ldr	r2, [r1, #0]
 800d206:	460b      	mov	r3, r1
 800d208:	6992      	ldr	r2, [r2, #24]
 800d20a:	1d01      	adds	r1, r0, #4
 800d20c:	4618      	mov	r0, r3
 800d20e:	4710      	bx	r2

0800d210 <_ZN8touchgfx12TextProviderC1Ev>:
 800d210:	b510      	push	{r4, lr}
 800d212:	2300      	movs	r3, #0
 800d214:	2201      	movs	r2, #1
 800d216:	4604      	mov	r4, r0
 800d218:	e9c0 3300 	strd	r3, r3, [r0]
 800d21c:	60c3      	str	r3, [r0, #12]
 800d21e:	7403      	strb	r3, [r0, #16]
 800d220:	82c3      	strh	r3, [r0, #22]
 800d222:	8303      	strh	r3, [r0, #24]
 800d224:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d226:	8603      	strh	r3, [r0, #48]	; 0x30
 800d228:	86c3      	strh	r3, [r0, #54]	; 0x36
 800d22a:	8703      	strh	r3, [r0, #56]	; 0x38
 800d22c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d22e:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d232:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d236:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800d23a:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800d23e:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800d242:	f7f5 fe71 	bl	8002f28 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800d246:	4620      	mov	r0, r4
 800d248:	bd10      	pop	{r4, pc}

0800d24a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800d24a:	b530      	push	{r4, r5, lr}
 800d24c:	2500      	movs	r5, #0
 800d24e:	2401      	movs	r4, #1
 800d250:	6843      	ldr	r3, [r0, #4]
 800d252:	b913      	cbnz	r3, 800d25a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800d254:	6803      	ldr	r3, [r0, #0]
 800d256:	b1f3      	cbz	r3, 800d296 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d258:	6043      	str	r3, [r0, #4]
 800d25a:	7c03      	ldrb	r3, [r0, #16]
 800d25c:	b143      	cbz	r3, 800d270 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800d25e:	68c3      	ldr	r3, [r0, #12]
 800d260:	b12b      	cbz	r3, 800d26e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d262:	881a      	ldrh	r2, [r3, #0]
 800d264:	b11a      	cbz	r2, 800d26e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d266:	1c9a      	adds	r2, r3, #2
 800d268:	60c2      	str	r2, [r0, #12]
 800d26a:	8818      	ldrh	r0, [r3, #0]
 800d26c:	bd30      	pop	{r4, r5, pc}
 800d26e:	7405      	strb	r5, [r0, #16]
 800d270:	6843      	ldr	r3, [r0, #4]
 800d272:	8819      	ldrh	r1, [r3, #0]
 800d274:	b179      	cbz	r1, 800d296 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d276:	1c9a      	adds	r2, r3, #2
 800d278:	2902      	cmp	r1, #2
 800d27a:	6042      	str	r2, [r0, #4]
 800d27c:	d1f5      	bne.n	800d26a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800d27e:	6883      	ldr	r3, [r0, #8]
 800d280:	1d1a      	adds	r2, r3, #4
 800d282:	6082      	str	r2, [r0, #8]
 800d284:	681b      	ldr	r3, [r3, #0]
 800d286:	60c3      	str	r3, [r0, #12]
 800d288:	2b00      	cmp	r3, #0
 800d28a:	d0e1      	beq.n	800d250 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d28c:	881b      	ldrh	r3, [r3, #0]
 800d28e:	2b00      	cmp	r3, #0
 800d290:	d0de      	beq.n	800d250 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d292:	7404      	strb	r4, [r0, #16]
 800d294:	e7dc      	b.n	800d250 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d296:	2000      	movs	r0, #0
 800d298:	e7e8      	b.n	800d26c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800d29a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800d29a:	b410      	push	{r4}
 800d29c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d29e:	2300      	movs	r3, #0
 800d2a0:	6082      	str	r2, [r0, #8]
 800d2a2:	6001      	str	r1, [r0, #0]
 800d2a4:	6043      	str	r3, [r0, #4]
 800d2a6:	60c3      	str	r3, [r0, #12]
 800d2a8:	7403      	strb	r3, [r0, #16]
 800d2aa:	8603      	strh	r3, [r0, #48]	; 0x30
 800d2ac:	8303      	strh	r3, [r0, #24]
 800d2ae:	8703      	strh	r3, [r0, #56]	; 0x38
 800d2b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d2b4:	f7f5 be38 	b.w	8002f28 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800d2b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800d2b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d2ba:	4605      	mov	r5, r0
 800d2bc:	4608      	mov	r0, r1
 800d2be:	b1e9      	cbz	r1, 800d2fc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800d2c0:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800d2c4:	460b      	mov	r3, r1
 800d2c6:	f101 0708 	add.w	r7, r1, #8
 800d2ca:	4622      	mov	r2, r4
 800d2cc:	6818      	ldr	r0, [r3, #0]
 800d2ce:	6859      	ldr	r1, [r3, #4]
 800d2d0:	4626      	mov	r6, r4
 800d2d2:	c603      	stmia	r6!, {r0, r1}
 800d2d4:	3308      	adds	r3, #8
 800d2d6:	42bb      	cmp	r3, r7
 800d2d8:	4634      	mov	r4, r6
 800d2da:	d1f7      	bne.n	800d2cc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800d2dc:	6818      	ldr	r0, [r3, #0]
 800d2de:	6030      	str	r0, [r6, #0]
 800d2e0:	889b      	ldrh	r3, [r3, #4]
 800d2e2:	80b3      	strh	r3, [r6, #4]
 800d2e4:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800d2e8:	015b      	lsls	r3, r3, #5
 800d2ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d2ee:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800d2f2:	430b      	orrs	r3, r1
 800d2f4:	425b      	negs	r3, r3
 800d2f6:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800d2fa:	4610      	mov	r0, r2
 800d2fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d2fe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800d2fe:	b538      	push	{r3, r4, r5, lr}
 800d300:	460c      	mov	r4, r1
 800d302:	6811      	ldr	r1, [r2, #0]
 800d304:	4610      	mov	r0, r2
 800d306:	68cd      	ldr	r5, [r1, #12]
 800d308:	4619      	mov	r1, r3
 800d30a:	47a8      	blx	r5
 800d30c:	2800      	cmp	r0, #0
 800d30e:	bf08      	it	eq
 800d310:	4620      	moveq	r0, r4
 800d312:	bd38      	pop	{r3, r4, r5, pc}

0800d314 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800d314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d316:	4604      	mov	r4, r0
 800d318:	4615      	mov	r5, r2
 800d31a:	4608      	mov	r0, r1
 800d31c:	b93a      	cbnz	r2, 800d32e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800d31e:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d322:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800d326:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800d32a:	4628      	mov	r0, r5
 800d32c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d32e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800d332:	8893      	ldrh	r3, [r2, #4]
 800d334:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800d338:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d33c:	79ee      	ldrb	r6, [r5, #7]
 800d33e:	4316      	orrs	r6, r2
 800d340:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800d344:	189a      	adds	r2, r3, r2
 800d346:	b291      	uxth	r1, r2
 800d348:	291d      	cmp	r1, #29
 800d34a:	b2b7      	uxth	r7, r6
 800d34c:	f200 8083 	bhi.w	800d456 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d350:	2201      	movs	r2, #1
 800d352:	408a      	lsls	r2, r1
 800d354:	4978      	ldr	r1, [pc, #480]	; (800d538 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800d356:	420a      	tst	r2, r1
 800d358:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800d35c:	d12d      	bne.n	800d3ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800d35e:	f412 7f60 	tst.w	r2, #896	; 0x380
 800d362:	d078      	beq.n	800d456 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d364:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800d368:	462b      	mov	r3, r5
 800d36a:	f105 0e08 	add.w	lr, r5, #8
 800d36e:	4615      	mov	r5, r2
 800d370:	6818      	ldr	r0, [r3, #0]
 800d372:	6859      	ldr	r1, [r3, #4]
 800d374:	4694      	mov	ip, r2
 800d376:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d37a:	3308      	adds	r3, #8
 800d37c:	4573      	cmp	r3, lr
 800d37e:	4662      	mov	r2, ip
 800d380:	d1f6      	bne.n	800d370 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800d382:	6818      	ldr	r0, [r3, #0]
 800d384:	f8cc 0000 	str.w	r0, [ip]
 800d388:	889b      	ldrh	r3, [r3, #4]
 800d38a:	f8ac 3004 	strh.w	r3, [ip, #4]
 800d38e:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800d392:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800d396:	b2b3      	uxth	r3, r6
 800d398:	1aca      	subs	r2, r1, r3
 800d39a:	b292      	uxth	r2, r2
 800d39c:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800d3a0:	10d2      	asrs	r2, r2, #3
 800d3a2:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800d3a6:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800d3aa:	4302      	orrs	r2, r0
 800d3ac:	1bcf      	subs	r7, r1, r7
 800d3ae:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800d3b2:	1afb      	subs	r3, r7, r3
 800d3b4:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800d3b8:	e7b7      	b.n	800d32a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d3ba:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d3bc:	b92b      	cbnz	r3, 800d3ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800d3be:	4b5f      	ldr	r3, [pc, #380]	; (800d53c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800d3c0:	4a5f      	ldr	r2, [pc, #380]	; (800d540 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800d3c2:	4860      	ldr	r0, [pc, #384]	; (800d544 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800d3c4:	21c0      	movs	r1, #192	; 0xc0
 800d3c6:	f00c ffd5 	bl	801a374 <__assert_func>
 800d3ca:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d3cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d3d0:	8b59      	ldrh	r1, [r3, #26]
 800d3d2:	f640 6333 	movw	r3, #3635	; 0xe33
 800d3d6:	4299      	cmp	r1, r3
 800d3d8:	d110      	bne.n	800d3fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800d3da:	6803      	ldr	r3, [r0, #0]
 800d3dc:	68db      	ldr	r3, [r3, #12]
 800d3de:	4798      	blx	r3
 800d3e0:	7b41      	ldrb	r1, [r0, #13]
 800d3e2:	00cb      	lsls	r3, r1, #3
 800d3e4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3e8:	7a03      	ldrb	r3, [r0, #8]
 800d3ea:	0648      	lsls	r0, r1, #25
 800d3ec:	ea43 0302 	orr.w	r3, r3, r2
 800d3f0:	bf44      	itt	mi
 800d3f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d3f6:	b21b      	sxthmi	r3, r3
 800d3f8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d3fc:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800d400:	443b      	add	r3, r7
 800d402:	4433      	add	r3, r6
 800d404:	b29b      	uxth	r3, r3
 800d406:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800d40a:	462a      	mov	r2, r5
 800d40c:	f105 0c08 	add.w	ip, r5, #8
 800d410:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d414:	4635      	mov	r5, r6
 800d416:	6810      	ldr	r0, [r2, #0]
 800d418:	6851      	ldr	r1, [r2, #4]
 800d41a:	4637      	mov	r7, r6
 800d41c:	c703      	stmia	r7!, {r0, r1}
 800d41e:	3208      	adds	r2, #8
 800d420:	4562      	cmp	r2, ip
 800d422:	463e      	mov	r6, r7
 800d424:	d1f7      	bne.n	800d416 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800d426:	6810      	ldr	r0, [r2, #0]
 800d428:	6038      	str	r0, [r7, #0]
 800d42a:	8892      	ldrh	r2, [r2, #4]
 800d42c:	80ba      	strh	r2, [r7, #4]
 800d42e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d432:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d436:	10db      	asrs	r3, r3, #3
 800d438:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d43c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d440:	4313      	orrs	r3, r2
 800d442:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d446:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800d44a:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800d44e:	1a9b      	subs	r3, r3, r2
 800d450:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800d454:	e769      	b.n	800d32a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d456:	f023 0204 	bic.w	r2, r3, #4
 800d45a:	f640 611b 	movw	r1, #3611	; 0xe1b
 800d45e:	428a      	cmp	r2, r1
 800d460:	d003      	beq.n	800d46a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800d462:	f640 621d 	movw	r2, #3613	; 0xe1d
 800d466:	4293      	cmp	r3, r2
 800d468:	d120      	bne.n	800d4ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800d46a:	3b01      	subs	r3, #1
 800d46c:	4602      	mov	r2, r0
 800d46e:	b29b      	uxth	r3, r3
 800d470:	4629      	mov	r1, r5
 800d472:	4620      	mov	r0, r4
 800d474:	f7ff ff43 	bl	800d2fe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d478:	7b41      	ldrb	r1, [r0, #13]
 800d47a:	00cb      	lsls	r3, r1, #3
 800d47c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d480:	7a03      	ldrb	r3, [r0, #8]
 800d482:	0649      	lsls	r1, r1, #25
 800d484:	ea43 0302 	orr.w	r3, r3, r2
 800d488:	bf44      	itt	mi
 800d48a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d48e:	b21b      	sxthmi	r3, r3
 800d490:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d494:	7b6b      	ldrb	r3, [r5, #13]
 800d496:	7aaa      	ldrb	r2, [r5, #10]
 800d498:	005b      	lsls	r3, r3, #1
 800d49a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d49e:	4313      	orrs	r3, r2
 800d4a0:	115a      	asrs	r2, r3, #5
 800d4a2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d4a6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d4aa:	e036      	b.n	800d51a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d4ac:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d4b0:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d4b4:	7a2a      	ldrb	r2, [r5, #8]
 800d4b6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d4ba:	ea42 0201 	orr.w	r2, r2, r1
 800d4be:	bf1c      	itt	ne
 800d4c0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d4c4:	b212      	sxthne	r2, r2
 800d4c6:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d4ca:	f640 6109 	movw	r1, #3593	; 0xe09
 800d4ce:	f023 0210 	bic.w	r2, r3, #16
 800d4d2:	428a      	cmp	r2, r1
 800d4d4:	d003      	beq.n	800d4de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d4d6:	f640 6213 	movw	r2, #3603	; 0xe13
 800d4da:	4293      	cmp	r3, r2
 800d4dc:	d12a      	bne.n	800d534 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d4de:	7b6e      	ldrb	r6, [r5, #13]
 800d4e0:	0076      	lsls	r6, r6, #1
 800d4e2:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d4e6:	7aae      	ldrb	r6, [r5, #10]
 800d4e8:	4316      	orrs	r6, r2
 800d4ea:	f640 6213 	movw	r2, #3603	; 0xe13
 800d4ee:	4293      	cmp	r3, r2
 800d4f0:	bf18      	it	ne
 800d4f2:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d4f6:	4602      	mov	r2, r0
 800d4f8:	bf14      	ite	ne
 800d4fa:	b29b      	uxthne	r3, r3
 800d4fc:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d500:	4629      	mov	r1, r5
 800d502:	4620      	mov	r0, r4
 800d504:	f7ff fefb 	bl	800d2fe <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d508:	7b43      	ldrb	r3, [r0, #13]
 800d50a:	7a82      	ldrb	r2, [r0, #10]
 800d50c:	005b      	lsls	r3, r3, #1
 800d50e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d512:	4313      	orrs	r3, r2
 800d514:	1af6      	subs	r6, r6, r3
 800d516:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800d51a:	7b69      	ldrb	r1, [r5, #13]
 800d51c:	00cb      	lsls	r3, r1, #3
 800d51e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d522:	7a2b      	ldrb	r3, [r5, #8]
 800d524:	4313      	orrs	r3, r2
 800d526:	064a      	lsls	r2, r1, #25
 800d528:	bf44      	itt	mi
 800d52a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d52e:	b21b      	sxthmi	r3, r3
 800d530:	1bdb      	subs	r3, r3, r7
 800d532:	e73f      	b.n	800d3b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d534:	2300      	movs	r3, #0
 800d536:	e7b6      	b.n	800d4a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d538:	3fc00079 	.word	0x3fc00079
 800d53c:	0801c144 	.word	0x0801c144
 800d540:	0801d5f7 	.word	0x0801d5f7
 800d544:	0801c16b 	.word	0x0801c16b

0800d548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d548:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d54c:	4604      	mov	r4, r0
 800d54e:	b942      	cbnz	r2, 800d562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d550:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d554:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d558:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d55c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d560:	e046      	b.n	800d5f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d562:	7b51      	ldrb	r1, [r2, #13]
 800d564:	8893      	ldrh	r3, [r2, #4]
 800d566:	010f      	lsls	r7, r1, #4
 800d568:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d56c:	79d7      	ldrb	r7, [r2, #7]
 800d56e:	4307      	orrs	r7, r0
 800d570:	2f04      	cmp	r7, #4
 800d572:	b2bd      	uxth	r5, r7
 800d574:	bfcc      	ite	gt
 800d576:	08bf      	lsrgt	r7, r7, #2
 800d578:	2701      	movle	r7, #1
 800d57a:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d57e:	f200 80ab 	bhi.w	800d6d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d582:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d586:	4283      	cmp	r3, r0
 800d588:	d216      	bcs.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d58a:	f240 605b 	movw	r0, #1627	; 0x65b
 800d58e:	4283      	cmp	r3, r0
 800d590:	d859      	bhi.n	800d646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d592:	f240 6057 	movw	r0, #1623	; 0x657
 800d596:	4283      	cmp	r3, r0
 800d598:	d20e      	bcs.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d59a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d59e:	d24a      	bcs.n	800d636 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d5a0:	f240 604e 	movw	r0, #1614	; 0x64e
 800d5a4:	4283      	cmp	r3, r0
 800d5a6:	d207      	bcs.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d5a8:	f240 601a 	movw	r0, #1562	; 0x61a
 800d5ac:	4283      	cmp	r3, r0
 800d5ae:	d02a      	beq.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d5b0:	d821      	bhi.n	800d5f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d5b2:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d5b6:	d35b      	bcc.n	800d670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d5b8:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800d5bc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d5c0:	f040 80d0 	bne.w	800d764 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d5c4:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800d5c8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d5cc:	f040 80ca 	bne.w	800d764 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d5d0:	00cb      	lsls	r3, r1, #3
 800d5d2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d5d6:	7a13      	ldrb	r3, [r2, #8]
 800d5d8:	0649      	lsls	r1, r1, #25
 800d5da:	ea43 0300 	orr.w	r3, r3, r0
 800d5de:	bf44      	itt	mi
 800d5e0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d5e4:	b21b      	sxthmi	r3, r3
 800d5e6:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d5ea:	1b5d      	subs	r5, r3, r5
 800d5ec:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d5f0:	4610      	mov	r0, r2
 800d5f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5f6:	f240 604b 	movw	r0, #1611	; 0x64b
 800d5fa:	4283      	cmp	r3, r0
 800d5fc:	d338      	bcc.n	800d670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d5fe:	f240 604c 	movw	r0, #1612	; 0x64c
 800d602:	4283      	cmp	r3, r0
 800d604:	d9d8      	bls.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d606:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800d60a:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800d60e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d612:	f040 80f1 	bne.w	800d7f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d616:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d61a:	f040 80ed 	bne.w	800d7f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d61e:	00cb      	lsls	r3, r1, #3
 800d620:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d624:	7a13      	ldrb	r3, [r2, #8]
 800d626:	064e      	lsls	r6, r1, #25
 800d628:	ea43 0300 	orr.w	r3, r3, r0
 800d62c:	bf44      	itt	mi
 800d62e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d632:	b21b      	sxthmi	r3, r3
 800d634:	e7d9      	b.n	800d5ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d636:	f240 6054 	movw	r0, #1620	; 0x654
 800d63a:	4283      	cmp	r3, r0
 800d63c:	d8e3      	bhi.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d63e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d642:	d9e0      	bls.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d644:	e7b8      	b.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d646:	f240 6074 	movw	r0, #1652	; 0x674
 800d64a:	4283      	cmp	r3, r0
 800d64c:	d0b4      	beq.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d64e:	d82d      	bhi.n	800d6ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d650:	f240 605e 	movw	r0, #1630	; 0x65e
 800d654:	4283      	cmp	r3, r0
 800d656:	d804      	bhi.n	800d662 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d658:	f240 605d 	movw	r0, #1629	; 0x65d
 800d65c:	4283      	cmp	r3, r0
 800d65e:	d3d2      	bcc.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d660:	e7aa      	b.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d662:	f240 605f 	movw	r0, #1631	; 0x65f
 800d666:	4283      	cmp	r3, r0
 800d668:	d0cd      	beq.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d66a:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d66e:	d0a3      	beq.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d670:	00cb      	lsls	r3, r1, #3
 800d672:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d676:	7a13      	ldrb	r3, [r2, #8]
 800d678:	0649      	lsls	r1, r1, #25
 800d67a:	ea43 0300 	orr.w	r3, r3, r0
 800d67e:	bf44      	itt	mi
 800d680:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d684:	b21b      	sxthmi	r3, r3
 800d686:	1b5d      	subs	r5, r3, r5
 800d688:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d68c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d690:	7b53      	ldrb	r3, [r2, #13]
 800d692:	015b      	lsls	r3, r3, #5
 800d694:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d698:	7993      	ldrb	r3, [r2, #6]
 800d69a:	430b      	orrs	r3, r1
 800d69c:	005b      	lsls	r3, r3, #1
 800d69e:	2105      	movs	r1, #5
 800d6a0:	fb93 f3f1 	sdiv	r3, r3, r1
 800d6a4:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d6a8:	440b      	add	r3, r1
 800d6aa:	e757      	b.n	800d55c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d6ac:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d6b0:	4283      	cmp	r3, r0
 800d6b2:	d809      	bhi.n	800d6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d6b4:	f240 60df 	movw	r0, #1759	; 0x6df
 800d6b8:	4283      	cmp	r3, r0
 800d6ba:	f4bf af7d 	bcs.w	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d6be:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d6c2:	2b05      	cmp	r3, #5
 800d6c4:	d8d4      	bhi.n	800d670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d6c6:	e777      	b.n	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d6c8:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d6cc:	4283      	cmp	r3, r0
 800d6ce:	d09a      	beq.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d6d0:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d6d4:	4283      	cmp	r3, r0
 800d6d6:	e7ca      	b.n	800d66e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d6d8:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d6dc:	d22b      	bcs.n	800d736 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d6de:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d6e2:	4283      	cmp	r3, r0
 800d6e4:	d28f      	bcs.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d6e6:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d6ea:	4283      	cmp	r3, r0
 800d6ec:	d816      	bhi.n	800d71c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d6ee:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d6f2:	4283      	cmp	r3, r0
 800d6f4:	f4bf af60 	bcs.w	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d6f8:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d6fc:	4283      	cmp	r3, r0
 800d6fe:	d80a      	bhi.n	800d716 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d700:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d704:	4283      	cmp	r3, r0
 800d706:	f4bf af57 	bcs.w	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d70a:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d70e:	4283      	cmp	r3, r0
 800d710:	f43f af79 	beq.w	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d714:	e7ac      	b.n	800d670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d716:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d71a:	e7f8      	b.n	800d70e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d71c:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d720:	4283      	cmp	r3, r0
 800d722:	d802      	bhi.n	800d72a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d724:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d728:	e798      	b.n	800d65c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d72a:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d72e:	4283      	cmp	r3, r0
 800d730:	f47f af42 	bne.w	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d734:	e767      	b.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d736:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d73a:	4283      	cmp	r3, r0
 800d73c:	f43f af63 	beq.w	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d740:	d802      	bhi.n	800d748 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d742:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d746:	e7f2      	b.n	800d72e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d748:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d74c:	4283      	cmp	r3, r0
 800d74e:	d805      	bhi.n	800d75c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d750:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d754:	4283      	cmp	r3, r0
 800d756:	f4ff af2f 	bcc.w	800d5b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d75a:	e754      	b.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d75c:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d760:	4283      	cmp	r3, r0
 800d762:	e7af      	b.n	800d6c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d764:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800d768:	4617      	mov	r7, r2
 800d76a:	f102 0808 	add.w	r8, r2, #8
 800d76e:	4666      	mov	r6, ip
 800d770:	6838      	ldr	r0, [r7, #0]
 800d772:	6879      	ldr	r1, [r7, #4]
 800d774:	46e6      	mov	lr, ip
 800d776:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d77a:	3708      	adds	r7, #8
 800d77c:	4547      	cmp	r7, r8
 800d77e:	46f4      	mov	ip, lr
 800d780:	d1f6      	bne.n	800d770 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d782:	6838      	ldr	r0, [r7, #0]
 800d784:	f8ce 0000 	str.w	r0, [lr]
 800d788:	88b9      	ldrh	r1, [r7, #4]
 800d78a:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d78e:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d792:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d796:	d009      	beq.n	800d7ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d798:	7b51      	ldrb	r1, [r2, #13]
 800d79a:	7992      	ldrb	r2, [r2, #6]
 800d79c:	0149      	lsls	r1, r1, #5
 800d79e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d7a2:	4311      	orrs	r1, r2
 800d7a4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d7a8:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d7ac:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d7b0:	d00d      	beq.n	800d7ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d7b2:	442b      	add	r3, r5
 800d7b4:	b29b      	uxth	r3, r3
 800d7b6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d7ba:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d7be:	10db      	asrs	r3, r3, #3
 800d7c0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d7c4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d7c8:	4313      	orrs	r3, r2
 800d7ca:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d7ce:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d7d2:	00cb      	lsls	r3, r1, #3
 800d7d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d7d8:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d7dc:	064f      	lsls	r7, r1, #25
 800d7de:	ea43 0302 	orr.w	r3, r3, r2
 800d7e2:	bf44      	itt	mi
 800d7e4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d7e8:	b21b      	sxthmi	r3, r3
 800d7ea:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d7ee:	1b5d      	subs	r5, r3, r5
 800d7f0:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d7f4:	4632      	mov	r2, r6
 800d7f6:	e6fb      	b.n	800d5f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d7f8:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800d7fc:	4694      	mov	ip, r2
 800d7fe:	f102 0908 	add.w	r9, r2, #8
 800d802:	4676      	mov	r6, lr
 800d804:	f8dc 0000 	ldr.w	r0, [ip]
 800d808:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d80c:	46f0      	mov	r8, lr
 800d80e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d812:	f10c 0c08 	add.w	ip, ip, #8
 800d816:	45cc      	cmp	ip, r9
 800d818:	46c6      	mov	lr, r8
 800d81a:	d1f3      	bne.n	800d804 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d81c:	f8dc 0000 	ldr.w	r0, [ip]
 800d820:	f8c8 0000 	str.w	r0, [r8]
 800d824:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d828:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d82c:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d830:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d834:	d009      	beq.n	800d84a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d836:	7b51      	ldrb	r1, [r2, #13]
 800d838:	7992      	ldrb	r2, [r2, #6]
 800d83a:	0149      	lsls	r1, r1, #5
 800d83c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d840:	4311      	orrs	r1, r2
 800d842:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d846:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d84a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d84e:	d00d      	beq.n	800d86c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d850:	1bdb      	subs	r3, r3, r7
 800d852:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d856:	b29b      	uxth	r3, r3
 800d858:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d85c:	10db      	asrs	r3, r3, #3
 800d85e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d862:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d866:	4313      	orrs	r3, r2
 800d868:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d86c:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d870:	00cb      	lsls	r3, r1, #3
 800d872:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d876:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d87a:	0648      	lsls	r0, r1, #25
 800d87c:	ea43 0302 	orr.w	r3, r3, r2
 800d880:	bf44      	itt	mi
 800d882:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d886:	b21b      	sxthmi	r3, r3
 800d888:	e7b1      	b.n	800d7ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d88c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d890:	461e      	mov	r6, r3
 800d892:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d894:	4604      	mov	r4, r0
 800d896:	4617      	mov	r7, r2
 800d898:	b92b      	cbnz	r3, 800d8a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d89a:	4b25      	ldr	r3, [pc, #148]	; (800d930 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d89c:	4a25      	ldr	r2, [pc, #148]	; (800d934 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d89e:	4826      	ldr	r0, [pc, #152]	; (800d938 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d8a0:	21c0      	movs	r1, #192	; 0xc0
 800d8a2:	f00c fd67 	bl	801a374 <__assert_func>
 800d8a6:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d8a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d8ac:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d8b0:	f7f5 faf8 	bl	8002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d8b4:	4605      	mov	r5, r0
 800d8b6:	b918      	cbnz	r0, 800d8c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d8b8:	6030      	str	r0, [r6, #0]
 800d8ba:	4628      	mov	r0, r5
 800d8bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8c0:	683b      	ldr	r3, [r7, #0]
 800d8c2:	4601      	mov	r1, r0
 800d8c4:	68db      	ldr	r3, [r3, #12]
 800d8c6:	4638      	mov	r0, r7
 800d8c8:	4798      	blx	r3
 800d8ca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d8ce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d8d2:	4602      	mov	r2, r0
 800d8d4:	6030      	str	r0, [r6, #0]
 800d8d6:	d213      	bcs.n	800d900 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d8d8:	4643      	mov	r3, r8
 800d8da:	4639      	mov	r1, r7
 800d8dc:	4620      	mov	r0, r4
 800d8de:	f7ff fe33 	bl	800d548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d8e2:	6030      	str	r0, [r6, #0]
 800d8e4:	6833      	ldr	r3, [r6, #0]
 800d8e6:	b143      	cbz	r3, 800d8fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d8e8:	7b5a      	ldrb	r2, [r3, #13]
 800d8ea:	7a9b      	ldrb	r3, [r3, #10]
 800d8ec:	0052      	lsls	r2, r2, #1
 800d8ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d8f2:	4313      	orrs	r3, r2
 800d8f4:	bf0c      	ite	eq
 800d8f6:	2301      	moveq	r3, #1
 800d8f8:	2300      	movne	r3, #0
 800d8fa:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d8fe:	e7dc      	b.n	800d8ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d900:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d904:	b29b      	uxth	r3, r3
 800d906:	2b7f      	cmp	r3, #127	; 0x7f
 800d908:	d804      	bhi.n	800d914 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d90a:	4639      	mov	r1, r7
 800d90c:	4620      	mov	r0, r4
 800d90e:	f7ff fd01 	bl	800d314 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d912:	e7e6      	b.n	800d8e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d914:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d918:	2b00      	cmp	r3, #0
 800d91a:	d0e3      	beq.n	800d8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d91c:	f640 1302 	movw	r3, #2306	; 0x902
 800d920:	429d      	cmp	r5, r3
 800d922:	d1df      	bne.n	800d8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d924:	4601      	mov	r1, r0
 800d926:	4620      	mov	r0, r4
 800d928:	f7ff fcc6 	bl	800d2b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d92c:	e7d9      	b.n	800d8e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d92e:	bf00      	nop
 800d930:	0801c144 	.word	0x0801c144
 800d934:	0801d5f7 	.word	0x0801d5f7
 800d938:	0801c16b 	.word	0x0801c16b

0800d93c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800d93c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d940:	461e      	mov	r6, r3
 800d942:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d944:	4604      	mov	r4, r0
 800d946:	4617      	mov	r7, r2
 800d948:	b92b      	cbnz	r3, 800d956 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800d94a:	4b26      	ldr	r3, [pc, #152]	; (800d9e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800d94c:	4a26      	ldr	r2, [pc, #152]	; (800d9e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800d94e:	4827      	ldr	r0, [pc, #156]	; (800d9ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800d950:	21c0      	movs	r1, #192	; 0xc0
 800d952:	f00c fd0f 	bl	801a374 <__assert_func>
 800d956:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d958:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d95c:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d960:	f7f5 faa0 	bl	8002ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d964:	4605      	mov	r5, r0
 800d966:	b918      	cbnz	r0, 800d970 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800d968:	6030      	str	r0, [r6, #0]
 800d96a:	4628      	mov	r0, r5
 800d96c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d970:	683b      	ldr	r3, [r7, #0]
 800d972:	4601      	mov	r1, r0
 800d974:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800d978:	4638      	mov	r0, r7
 800d97a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d97e:	47c8      	blx	r9
 800d980:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d984:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d988:	4602      	mov	r2, r0
 800d98a:	6030      	str	r0, [r6, #0]
 800d98c:	d213      	bcs.n	800d9b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800d98e:	4643      	mov	r3, r8
 800d990:	4639      	mov	r1, r7
 800d992:	4620      	mov	r0, r4
 800d994:	f7ff fdd8 	bl	800d548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d998:	6030      	str	r0, [r6, #0]
 800d99a:	6833      	ldr	r3, [r6, #0]
 800d99c:	b143      	cbz	r3, 800d9b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800d99e:	7b5a      	ldrb	r2, [r3, #13]
 800d9a0:	7a9b      	ldrb	r3, [r3, #10]
 800d9a2:	0052      	lsls	r2, r2, #1
 800d9a4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d9a8:	4313      	orrs	r3, r2
 800d9aa:	bf0c      	ite	eq
 800d9ac:	2301      	moveq	r3, #1
 800d9ae:	2300      	movne	r3, #0
 800d9b0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d9b4:	e7d9      	b.n	800d96a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800d9b6:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d9ba:	b29b      	uxth	r3, r3
 800d9bc:	2b7f      	cmp	r3, #127	; 0x7f
 800d9be:	d804      	bhi.n	800d9ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800d9c0:	4639      	mov	r1, r7
 800d9c2:	4620      	mov	r0, r4
 800d9c4:	f7ff fca6 	bl	800d314 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d9c8:	e7e6      	b.n	800d998 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d9ca:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d9ce:	2b00      	cmp	r3, #0
 800d9d0:	d0e3      	beq.n	800d99a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d9d2:	f640 1302 	movw	r3, #2306	; 0x902
 800d9d6:	429d      	cmp	r5, r3
 800d9d8:	d1df      	bne.n	800d99a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d9da:	4601      	mov	r1, r0
 800d9dc:	4620      	mov	r0, r4
 800d9de:	f7ff fc6b 	bl	800d2b8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d9e2:	e7d9      	b.n	800d998 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d9e4:	0801c144 	.word	0x0801c144
 800d9e8:	0801d5f7 	.word	0x0801d5f7
 800d9ec:	0801c16b 	.word	0x0801c16b

0800d9f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d9f0:	b510      	push	{r4, lr}
 800d9f2:	4604      	mov	r4, r0
 800d9f4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d9f6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d9f8:	b9d9      	cbnz	r1, 800da32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d9fa:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d9fc:	2b0a      	cmp	r3, #10
 800d9fe:	d036      	beq.n	800da6e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800da00:	4620      	mov	r0, r4
 800da02:	f7ff fc22 	bl	800d24a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800da06:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800da08:	2b09      	cmp	r3, #9
 800da0a:	d906      	bls.n	800da1a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800da0c:	4b18      	ldr	r3, [pc, #96]	; (800da70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800da0e:	4a19      	ldr	r2, [pc, #100]	; (800da74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800da10:	4819      	ldr	r0, [pc, #100]	; (800da78 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800da12:	f44f 7182 	mov.w	r1, #260	; 0x104
 800da16:	f00c fcad 	bl	801a374 <__assert_func>
 800da1a:	1c5a      	adds	r2, r3, #1
 800da1c:	8622      	strh	r2, [r4, #48]	; 0x30
 800da1e:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800da20:	4413      	add	r3, r2
 800da22:	b29b      	uxth	r3, r3
 800da24:	2b09      	cmp	r3, #9
 800da26:	bf88      	it	hi
 800da28:	3b0a      	subhi	r3, #10
 800da2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800da2e:	8358      	strh	r0, [r3, #26]
 800da30:	e7e3      	b.n	800d9fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800da32:	2b0a      	cmp	r3, #10
 800da34:	d01b      	beq.n	800da6e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800da36:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800da38:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800da3c:	3901      	subs	r1, #1
 800da3e:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800da40:	8721      	strh	r1, [r4, #56]	; 0x38
 800da42:	1c51      	adds	r1, r2, #1
 800da44:	b289      	uxth	r1, r1
 800da46:	2901      	cmp	r1, #1
 800da48:	bf8a      	itet	hi
 800da4a:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800da4e:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800da50:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800da52:	2b09      	cmp	r3, #9
 800da54:	d8da      	bhi.n	800da0c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800da56:	1c5a      	adds	r2, r3, #1
 800da58:	8622      	strh	r2, [r4, #48]	; 0x30
 800da5a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800da5c:	4413      	add	r3, r2
 800da5e:	b29b      	uxth	r3, r3
 800da60:	2b09      	cmp	r3, #9
 800da62:	bf88      	it	hi
 800da64:	3b0a      	subhi	r3, #10
 800da66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800da6a:	8358      	strh	r0, [r3, #26]
 800da6c:	e7c2      	b.n	800d9f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800da6e:	bd10      	pop	{r4, pc}
 800da70:	0801d3c8 	.word	0x0801d3c8
 800da74:	0801d74d 	.word	0x0801d74d
 800da78:	0801c16b 	.word	0x0801c16b

0800da7c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800da7c:	b538      	push	{r3, r4, r5, lr}
 800da7e:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800da80:	4604      	mov	r4, r0
 800da82:	b92a      	cbnz	r2, 800da90 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800da84:	4b13      	ldr	r3, [pc, #76]	; (800dad4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800da86:	4a14      	ldr	r2, [pc, #80]	; (800dad8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800da88:	4814      	ldr	r0, [pc, #80]	; (800dadc <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800da8a:	21d5      	movs	r1, #213	; 0xd5
 800da8c:	f00c fc72 	bl	801a374 <__assert_func>
 800da90:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800da92:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800da96:	3a01      	subs	r2, #1
 800da98:	8b4d      	ldrh	r5, [r1, #26]
 800da9a:	8602      	strh	r2, [r0, #48]	; 0x30
 800da9c:	1c5a      	adds	r2, r3, #1
 800da9e:	b292      	uxth	r2, r2
 800daa0:	2a09      	cmp	r2, #9
 800daa2:	bf86      	itte	hi
 800daa4:	3b09      	subhi	r3, #9
 800daa6:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800daa8:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800daaa:	f7ff ffa1 	bl	800d9f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800daae:	8b23      	ldrh	r3, [r4, #24]
 800dab0:	2b01      	cmp	r3, #1
 800dab2:	bf9c      	itt	ls
 800dab4:	3301      	addls	r3, #1
 800dab6:	8323      	strhls	r3, [r4, #24]
 800dab8:	8ae3      	ldrh	r3, [r4, #22]
 800daba:	b90b      	cbnz	r3, 800dac0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800dabc:	2302      	movs	r3, #2
 800dabe:	82e3      	strh	r3, [r4, #22]
 800dac0:	8ae3      	ldrh	r3, [r4, #22]
 800dac2:	3b01      	subs	r3, #1
 800dac4:	b29b      	uxth	r3, r3
 800dac6:	82e3      	strh	r3, [r4, #22]
 800dac8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800dacc:	4628      	mov	r0, r5
 800dace:	8265      	strh	r5, [r4, #18]
 800dad0:	bd38      	pop	{r3, r4, r5, pc}
 800dad2:	bf00      	nop
 800dad4:	0801c144 	.word	0x0801c144
 800dad8:	0801d6a2 	.word	0x0801d6a2
 800dadc:	0801c16b 	.word	0x0801c16b

0800dae0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800dae0:	b538      	push	{r3, r4, r5, lr}
 800dae2:	428a      	cmp	r2, r1
 800dae4:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800dae6:	d90c      	bls.n	800db02 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800dae8:	b92c      	cbnz	r4, 800daf6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800daea:	4b1c      	ldr	r3, [pc, #112]	; (800db5c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800daec:	4a1c      	ldr	r2, [pc, #112]	; (800db60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800daee:	21e1      	movs	r1, #225	; 0xe1
 800daf0:	481c      	ldr	r0, [pc, #112]	; (800db64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800daf2:	f00c fc3f 	bl	801a374 <__assert_func>
 800daf6:	3c01      	subs	r4, #1
 800daf8:	8604      	strh	r4, [r0, #48]	; 0x30
 800dafa:	4b1b      	ldr	r3, [pc, #108]	; (800db68 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800dafc:	4a1b      	ldr	r2, [pc, #108]	; (800db6c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800dafe:	21c5      	movs	r1, #197	; 0xc5
 800db00:	e7f6      	b.n	800daf0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800db02:	428c      	cmp	r4, r1
 800db04:	d203      	bcs.n	800db0e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800db06:	4b1a      	ldr	r3, [pc, #104]	; (800db70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800db08:	4a1a      	ldr	r2, [pc, #104]	; (800db74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800db0a:	21cb      	movs	r1, #203	; 0xcb
 800db0c:	e7f0      	b.n	800daf0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800db0e:	1a64      	subs	r4, r4, r1
 800db10:	8604      	strh	r4, [r0, #48]	; 0x30
 800db12:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800db14:	4421      	add	r1, r4
 800db16:	b289      	uxth	r1, r1
 800db18:	2909      	cmp	r1, #9
 800db1a:	bf88      	it	hi
 800db1c:	390a      	subhi	r1, #10
 800db1e:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800db20:	250a      	movs	r5, #10
 800db22:	b1ba      	cbz	r2, 800db54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800db24:	3a01      	subs	r2, #1
 800db26:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800db28:	b292      	uxth	r2, r2
 800db2a:	2909      	cmp	r1, #9
 800db2c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800db30:	d903      	bls.n	800db3a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800db32:	4b11      	ldr	r3, [pc, #68]	; (800db78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800db34:	4a11      	ldr	r2, [pc, #68]	; (800db7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800db36:	21e6      	movs	r1, #230	; 0xe6
 800db38:	e7da      	b.n	800daf0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800db3a:	3101      	adds	r1, #1
 800db3c:	8601      	strh	r1, [r0, #48]	; 0x30
 800db3e:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800db40:	b901      	cbnz	r1, 800db44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800db42:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800db44:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800db46:	3901      	subs	r1, #1
 800db48:	b289      	uxth	r1, r1
 800db4a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800db4c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800db50:	834c      	strh	r4, [r1, #26]
 800db52:	e7e6      	b.n	800db22 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800db54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db58:	f7ff bf4a 	b.w	800d9f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800db5c:	0801c144 	.word	0x0801c144
 800db60:	0801d47b 	.word	0x0801d47b
 800db64:	0801c16b 	.word	0x0801c16b
 800db68:	0801c197 	.word	0x0801c197
 800db6c:	0801d525 	.word	0x0801d525
 800db70:	0801d3d4 	.word	0x0801d3d4
 800db74:	0801d7fc 	.word	0x0801d7fc
 800db78:	0801d3e0 	.word	0x0801d3e0
 800db7c:	0801d3f3 	.word	0x0801d3f3

0800db80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800db80:	3a01      	subs	r2, #1
 800db82:	b570      	push	{r4, r5, r6, lr}
 800db84:	b292      	uxth	r2, r2
 800db86:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800db8a:	42b2      	cmp	r2, r6
 800db8c:	d019      	beq.n	800dbc2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800db8e:	8b04      	ldrh	r4, [r0, #24]
 800db90:	f831 5b02 	ldrh.w	r5, [r1], #2
 800db94:	4294      	cmp	r4, r2
 800db96:	d805      	bhi.n	800dba4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800db98:	4b19      	ldr	r3, [pc, #100]	; (800dc00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800db9a:	4a1a      	ldr	r2, [pc, #104]	; (800dc04 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800db9c:	481a      	ldr	r0, [pc, #104]	; (800dc08 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800db9e:	21c5      	movs	r1, #197	; 0xc5
 800dba0:	f00c fbe8 	bl	801a374 <__assert_func>
 800dba4:	8ac4      	ldrh	r4, [r0, #22]
 800dba6:	4414      	add	r4, r2
 800dba8:	b2a4      	uxth	r4, r4
 800dbaa:	2c01      	cmp	r4, #1
 800dbac:	bf88      	it	hi
 800dbae:	3c02      	subhi	r4, #2
 800dbb0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800dbb4:	3a01      	subs	r2, #1
 800dbb6:	8a64      	ldrh	r4, [r4, #18]
 800dbb8:	42ac      	cmp	r4, r5
 800dbba:	b292      	uxth	r2, r2
 800dbbc:	d0e5      	beq.n	800db8a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800dbbe:	2000      	movs	r0, #0
 800dbc0:	bd70      	pop	{r4, r5, r6, pc}
 800dbc2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800dbc6:	2400      	movs	r4, #0
 800dbc8:	4413      	add	r3, r2
 800dbca:	b2a2      	uxth	r2, r4
 800dbcc:	429a      	cmp	r2, r3
 800dbce:	da14      	bge.n	800dbfa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800dbd0:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800dbd2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800dbd6:	4296      	cmp	r6, r2
 800dbd8:	d802      	bhi.n	800dbe0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800dbda:	4b09      	ldr	r3, [pc, #36]	; (800dc00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800dbdc:	4a0b      	ldr	r2, [pc, #44]	; (800dc0c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800dbde:	e7dd      	b.n	800db9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800dbe0:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800dbe2:	4432      	add	r2, r6
 800dbe4:	b292      	uxth	r2, r2
 800dbe6:	2a09      	cmp	r2, #9
 800dbe8:	bf88      	it	hi
 800dbea:	3a0a      	subhi	r2, #10
 800dbec:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800dbf0:	3401      	adds	r4, #1
 800dbf2:	8b52      	ldrh	r2, [r2, #26]
 800dbf4:	42aa      	cmp	r2, r5
 800dbf6:	d0e8      	beq.n	800dbca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800dbf8:	e7e1      	b.n	800dbbe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800dbfa:	2001      	movs	r0, #1
 800dbfc:	e7e0      	b.n	800dbc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800dbfe:	bf00      	nop
 800dc00:	0801c197 	.word	0x0801c197
 800dc04:	0801d880 	.word	0x0801d880
 800dc08:	0801c16b 	.word	0x0801c16b
 800dc0c:	0801d525 	.word	0x0801d525

0800dc10 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800dc10:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc14:	4605      	mov	r5, r0
 800dc16:	4616      	mov	r6, r2
 800dc18:	1c8c      	adds	r4, r1, #2
 800dc1a:	8809      	ldrh	r1, [r1, #0]
 800dc1c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800dc20:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800dc24:	42b3      	cmp	r3, r6
 800dc26:	d124      	bne.n	800dc72 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800dc28:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800dc2c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800dc30:	f001 070f 	and.w	r7, r1, #15
 800dc34:	f8cd 8000 	str.w	r8, [sp]
 800dc38:	464b      	mov	r3, r9
 800dc3a:	4652      	mov	r2, sl
 800dc3c:	4621      	mov	r1, r4
 800dc3e:	4628      	mov	r0, r5
 800dc40:	f7ff ff9e 	bl	800db80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800dc44:	4683      	mov	fp, r0
 800dc46:	b168      	cbz	r0, 800dc64 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800dc48:	eb0a 0109 	add.w	r1, sl, r9
 800dc4c:	4441      	add	r1, r8
 800dc4e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800dc52:	463a      	mov	r2, r7
 800dc54:	4649      	mov	r1, r9
 800dc56:	4628      	mov	r0, r5
 800dc58:	f7ff ff42 	bl	800dae0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800dc5c:	4658      	mov	r0, fp
 800dc5e:	b003      	add	sp, #12
 800dc60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc64:	eb07 010a 	add.w	r1, r7, sl
 800dc68:	4449      	add	r1, r9
 800dc6a:	4441      	add	r1, r8
 800dc6c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800dc70:	e7d2      	b.n	800dc18 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800dc72:	f04f 0b00 	mov.w	fp, #0
 800dc76:	e7f1      	b.n	800dc5c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800dc78 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800dc78:	b570      	push	{r4, r5, r6, lr}
 800dc7a:	8810      	ldrh	r0, [r2, #0]
 800dc7c:	4298      	cmp	r0, r3
 800dc7e:	d817      	bhi.n	800dcb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dc80:	1e48      	subs	r0, r1, #1
 800dc82:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800dc86:	4298      	cmp	r0, r3
 800dc88:	d312      	bcc.n	800dcb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dc8a:	2400      	movs	r4, #0
 800dc8c:	428c      	cmp	r4, r1
 800dc8e:	d20f      	bcs.n	800dcb0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dc90:	1860      	adds	r0, r4, r1
 800dc92:	1040      	asrs	r0, r0, #1
 800dc94:	0085      	lsls	r5, r0, #2
 800dc96:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800dc9a:	42b3      	cmp	r3, r6
 800dc9c:	d902      	bls.n	800dca4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800dc9e:	3001      	adds	r0, #1
 800dca0:	b284      	uxth	r4, r0
 800dca2:	e7f3      	b.n	800dc8c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dca4:	d201      	bcs.n	800dcaa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800dca6:	b281      	uxth	r1, r0
 800dca8:	e7f0      	b.n	800dc8c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dcaa:	442a      	add	r2, r5
 800dcac:	8850      	ldrh	r0, [r2, #2]
 800dcae:	bd70      	pop	{r4, r5, r6, pc}
 800dcb0:	2000      	movs	r0, #0
 800dcb2:	e7fc      	b.n	800dcae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800dcb4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800dcb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcb8:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800dcba:	886f      	ldrh	r7, [r5, #2]
 800dcbc:	4604      	mov	r4, r0
 800dcbe:	087f      	lsrs	r7, r7, #1
 800dcc0:	260b      	movs	r6, #11
 800dcc2:	3e01      	subs	r6, #1
 800dcc4:	d01b      	beq.n	800dcfe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800dcc6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dcc8:	b92b      	cbnz	r3, 800dcd6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800dcca:	4b0e      	ldr	r3, [pc, #56]	; (800dd04 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800dccc:	4a0e      	ldr	r2, [pc, #56]	; (800dd08 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800dcce:	480f      	ldr	r0, [pc, #60]	; (800dd0c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800dcd0:	21c0      	movs	r1, #192	; 0xc0
 800dcd2:	f00c fb4f 	bl	801a374 <__assert_func>
 800dcd6:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800dcd8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800dcdc:	462a      	mov	r2, r5
 800dcde:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800dce2:	4639      	mov	r1, r7
 800dce4:	4643      	mov	r3, r8
 800dce6:	4620      	mov	r0, r4
 800dce8:	f7ff ffc6 	bl	800dc78 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800dcec:	b138      	cbz	r0, 800dcfe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800dcee:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800dcf2:	4642      	mov	r2, r8
 800dcf4:	4620      	mov	r0, r4
 800dcf6:	f7ff ff8b 	bl	800dc10 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800dcfa:	2800      	cmp	r0, #0
 800dcfc:	d1e1      	bne.n	800dcc2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800dcfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd02:	bf00      	nop
 800dd04:	0801c144 	.word	0x0801c144
 800dd08:	0801d5f7 	.word	0x0801d5f7
 800dd0c:	0801c16b 	.word	0x0801c16b

0800dd10 <_ZN8touchgfx8ceil28_4El>:
 800dd10:	f110 030f 	adds.w	r3, r0, #15
 800dd14:	d401      	bmi.n	800dd1a <_ZN8touchgfx8ceil28_4El+0xa>
 800dd16:	1118      	asrs	r0, r3, #4
 800dd18:	4770      	bx	lr
 800dd1a:	f1c0 0001 	rsb	r0, r0, #1
 800dd1e:	f010 000f 	ands.w	r0, r0, #15
 800dd22:	bf18      	it	ne
 800dd24:	2001      	movne	r0, #1
 800dd26:	2210      	movs	r2, #16
 800dd28:	fb93 f3f2 	sdiv	r3, r3, r2
 800dd2c:	1a18      	subs	r0, r3, r0
 800dd2e:	4770      	bx	lr

0800dd30 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800dd30:	2900      	cmp	r1, #0
 800dd32:	b538      	push	{r3, r4, r5, lr}
 800dd34:	dc05      	bgt.n	800dd42 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800dd36:	4b0f      	ldr	r3, [pc, #60]	; (800dd74 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800dd38:	4a0f      	ldr	r2, [pc, #60]	; (800dd78 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800dd3a:	4810      	ldr	r0, [pc, #64]	; (800dd7c <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800dd3c:	21fa      	movs	r1, #250	; 0xfa
 800dd3e:	f00c fb19 	bl	801a374 <__assert_func>
 800dd42:	2800      	cmp	r0, #0
 800dd44:	db06      	blt.n	800dd54 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800dd46:	fb90 f4f1 	sdiv	r4, r0, r1
 800dd4a:	6014      	str	r4, [r2, #0]
 800dd4c:	fb01 0114 	mls	r1, r1, r4, r0
 800dd50:	6019      	str	r1, [r3, #0]
 800dd52:	bd38      	pop	{r3, r4, r5, pc}
 800dd54:	4240      	negs	r0, r0
 800dd56:	fb90 f4f1 	sdiv	r4, r0, r1
 800dd5a:	4265      	negs	r5, r4
 800dd5c:	fb01 0014 	mls	r0, r1, r4, r0
 800dd60:	6015      	str	r5, [r2, #0]
 800dd62:	6018      	str	r0, [r3, #0]
 800dd64:	2800      	cmp	r0, #0
 800dd66:	d0f4      	beq.n	800dd52 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800dd68:	6810      	ldr	r0, [r2, #0]
 800dd6a:	3801      	subs	r0, #1
 800dd6c:	6010      	str	r0, [r2, #0]
 800dd6e:	6818      	ldr	r0, [r3, #0]
 800dd70:	1a09      	subs	r1, r1, r0
 800dd72:	e7ed      	b.n	800dd50 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800dd74:	0801d951 	.word	0x0801d951
 800dd78:	0801d990 	.word	0x0801d990
 800dd7c:	0801d961 	.word	0x0801d961

0800dd80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800dd80:	b570      	push	{r4, r5, r6, lr}
 800dd82:	694a      	ldr	r2, [r1, #20]
 800dd84:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800dd86:	684b      	ldr	r3, [r1, #4]
 800dd88:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800dd8a:	1b54      	subs	r4, r2, r5
 800dd8c:	f000 8106 	beq.w	800df9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800dd90:	1b9b      	subs	r3, r3, r6
 800dd92:	d003      	beq.n	800dd9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800dd94:	4363      	muls	r3, r4
 800dd96:	2210      	movs	r2, #16
 800dd98:	fb93 f3f2 	sdiv	r3, r3, r2
 800dd9c:	680c      	ldr	r4, [r1, #0]
 800dd9e:	698a      	ldr	r2, [r1, #24]
 800dda0:	1b65      	subs	r5, r4, r5
 800dda2:	f000 80fd 	beq.w	800dfa0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800dda6:	1b92      	subs	r2, r2, r6
 800dda8:	d003      	beq.n	800ddb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ddaa:	436a      	muls	r2, r5
 800ddac:	2410      	movs	r4, #16
 800ddae:	fb92 f2f4 	sdiv	r2, r2, r4
 800ddb2:	1a9b      	subs	r3, r3, r2
 800ddb4:	ee07 3a90 	vmov	s15, r3
 800ddb8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800dfdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ddbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ddc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ddc4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ddc8:	460a      	mov	r2, r1
 800ddca:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ddce:	4603      	mov	r3, r0
 800ddd0:	f100 040c 	add.w	r4, r0, #12
 800ddd4:	eeb1 6a43 	vneg.f32	s12, s6
 800ddd8:	edd2 7a02 	vldr	s15, [r2, #8]
 800dddc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800dde0:	3214      	adds	r2, #20
 800dde2:	ece3 6a01 	vstmia	r3!, {s13}
 800dde6:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ddea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ddee:	429c      	cmp	r4, r3
 800ddf0:	edc3 7a02 	vstr	s15, [r3, #8]
 800ddf4:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ddf8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ddfc:	edc3 7a05 	vstr	s15, [r3, #20]
 800de00:	d1ea      	bne.n	800ddd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800de02:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800de04:	698b      	ldr	r3, [r1, #24]
 800de06:	edd0 4a02 	vldr	s9, [r0, #8]
 800de0a:	edd0 3a00 	vldr	s7, [r0]
 800de0e:	edd0 6a01 	vldr	s13, [r0, #4]
 800de12:	ed90 5a05 	vldr	s10, [r0, #20]
 800de16:	ed90 2a03 	vldr	s4, [r0, #12]
 800de1a:	edd0 5a04 	vldr	s11, [r0, #16]
 800de1e:	ed90 1a07 	vldr	s2, [r0, #28]
 800de22:	edd0 2a06 	vldr	s5, [r0, #24]
 800de26:	1a9b      	subs	r3, r3, r2
 800de28:	ee07 3a90 	vmov	s15, r3
 800de2c:	684b      	ldr	r3, [r1, #4]
 800de2e:	1a9b      	subs	r3, r3, r2
 800de30:	ee07 3a10 	vmov	s14, r3
 800de34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800de38:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800de3c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800de40:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800de44:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800de48:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800de4c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800de50:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800de54:	eee6 7a87 	vfma.f32	s15, s13, s14
 800de58:	ee32 5a45 	vsub.f32	s10, s4, s10
 800de5c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800de60:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800de64:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800de66:	694a      	ldr	r2, [r1, #20]
 800de68:	1b13      	subs	r3, r2, r4
 800de6a:	ee07 3a10 	vmov	s14, r3
 800de6e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800de72:	680b      	ldr	r3, [r1, #0]
 800de74:	ee27 7a04 	vmul.f32	s14, s14, s8
 800de78:	1b1b      	subs	r3, r3, r4
 800de7a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800de7e:	ee07 3a10 	vmov	s14, r3
 800de82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800de86:	ee27 7a04 	vmul.f32	s14, s14, s8
 800de8a:	eee6 4a87 	vfma.f32	s9, s13, s14
 800de8e:	ee64 4a86 	vmul.f32	s9, s9, s12
 800de92:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800de96:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800de98:	698b      	ldr	r3, [r1, #24]
 800de9a:	1a9b      	subs	r3, r3, r2
 800de9c:	ee06 3a90 	vmov	s13, r3
 800dea0:	684b      	ldr	r3, [r1, #4]
 800dea2:	1a9b      	subs	r3, r3, r2
 800dea4:	ee07 3a10 	vmov	s14, r3
 800dea8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800deac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800deb0:	ee66 6a84 	vmul.f32	s13, s13, s8
 800deb4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800deb8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800debc:	eee5 6a87 	vfma.f32	s13, s11, s14
 800dec0:	ee66 6a83 	vmul.f32	s13, s13, s6
 800dec4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800dec8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800deca:	694a      	ldr	r2, [r1, #20]
 800decc:	1b13      	subs	r3, r2, r4
 800dece:	ee07 3a10 	vmov	s14, r3
 800ded2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ded6:	680b      	ldr	r3, [r1, #0]
 800ded8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dedc:	1b1b      	subs	r3, r3, r4
 800dede:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800dee2:	ee07 3a10 	vmov	s14, r3
 800dee6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800deea:	ee27 7a04 	vmul.f32	s14, s14, s8
 800deee:	eea5 5a87 	vfma.f32	s10, s11, s14
 800def2:	edd0 5a08 	vldr	s11, [r0, #32]
 800def6:	ee25 5a06 	vmul.f32	s10, s10, s12
 800defa:	ee31 1a65 	vsub.f32	s2, s2, s11
 800defe:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800df02:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800df04:	698b      	ldr	r3, [r1, #24]
 800df06:	1a9b      	subs	r3, r3, r2
 800df08:	ee07 3a10 	vmov	s14, r3
 800df0c:	684b      	ldr	r3, [r1, #4]
 800df0e:	1a9b      	subs	r3, r3, r2
 800df10:	ee01 3a90 	vmov	s3, r3
 800df14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800df18:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800df1c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800df20:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800df24:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800df28:	ee61 1a84 	vmul.f32	s3, s3, s8
 800df2c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800df30:	ee27 7a03 	vmul.f32	s14, s14, s6
 800df34:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800df38:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800df3a:	694a      	ldr	r2, [r1, #20]
 800df3c:	1b13      	subs	r3, r2, r4
 800df3e:	ee03 3a10 	vmov	s6, r3
 800df42:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800df46:	680b      	ldr	r3, [r1, #0]
 800df48:	ee23 3a04 	vmul.f32	s6, s6, s8
 800df4c:	1b1b      	subs	r3, r3, r4
 800df4e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800df52:	ee03 3a10 	vmov	s6, r3
 800df56:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800df5a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800df5e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800df62:	ee25 6a86 	vmul.f32	s12, s11, s12
 800df66:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800df6a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800df6e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800df72:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800df76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df7a:	dd13      	ble.n	800dfa4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800df7c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800df80:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800df84:	63c3      	str	r3, [r0, #60]	; 0x3c
 800df86:	eee3 7a87 	vfma.f32	s15, s7, s14
 800df8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800df8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800df92:	dd15      	ble.n	800dfc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800df94:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800df98:	6403      	str	r3, [r0, #64]	; 0x40
 800df9a:	bd70      	pop	{r4, r5, r6, pc}
 800df9c:	4623      	mov	r3, r4
 800df9e:	e6fd      	b.n	800dd9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800dfa0:	462a      	mov	r2, r5
 800dfa2:	e706      	b.n	800ddb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800dfa4:	d502      	bpl.n	800dfac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800dfa6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800dfaa:	e7e9      	b.n	800df80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800dfac:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800dfb0:	eea3 2a85 	vfma.f32	s4, s7, s10
 800dfb4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800dfb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfbc:	dade      	bge.n	800df7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800dfbe:	e7f2      	b.n	800dfa6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800dfc0:	d502      	bpl.n	800dfc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800dfc2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800dfc6:	e7e7      	b.n	800df98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800dfc8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800dfcc:	eee3 4a86 	vfma.f32	s9, s7, s12
 800dfd0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800dfd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dfd8:	dadc      	bge.n	800df94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800dfda:	e7f2      	b.n	800dfc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800dfdc:	3d800000 	.word	0x3d800000

0800dfe0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800dfe0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfe4:	f04f 0814 	mov.w	r8, #20
 800dfe8:	fb08 f903 	mul.w	r9, r8, r3
 800dfec:	eb02 0a09 	add.w	sl, r2, r9
 800dff0:	4604      	mov	r4, r0
 800dff2:	f8da 0004 	ldr.w	r0, [sl, #4]
 800dff6:	4617      	mov	r7, r2
 800dff8:	460d      	mov	r5, r1
 800dffa:	461e      	mov	r6, r3
 800dffc:	f7ff fe88 	bl	800dd10 <_ZN8touchgfx8ceil28_4El>
 800e000:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e002:	6160      	str	r0, [r4, #20]
 800e004:	fb08 f803 	mul.w	r8, r8, r3
 800e008:	eb07 0b08 	add.w	fp, r7, r8
 800e00c:	9001      	str	r0, [sp, #4]
 800e00e:	f8db 0004 	ldr.w	r0, [fp, #4]
 800e012:	f7ff fe7d 	bl	800dd10 <_ZN8touchgfx8ceil28_4El>
 800e016:	9a01      	ldr	r2, [sp, #4]
 800e018:	1a80      	subs	r0, r0, r2
 800e01a:	61a0      	str	r0, [r4, #24]
 800e01c:	2800      	cmp	r0, #0
 800e01e:	f000 8088 	beq.w	800e132 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800e022:	f857 3009 	ldr.w	r3, [r7, r9]
 800e026:	f857 c008 	ldr.w	ip, [r7, r8]
 800e02a:	f8da 1004 	ldr.w	r1, [sl, #4]
 800e02e:	f8db 0004 	ldr.w	r0, [fp, #4]
 800e032:	ebac 0c03 	sub.w	ip, ip, r3
 800e036:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800e03a:	fb0b f202 	mul.w	r2, fp, r2
 800e03e:	fb0c 2211 	mls	r2, ip, r1, r2
 800e042:	1a40      	subs	r0, r0, r1
 800e044:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800e048:	fb00 2003 	mla	r0, r0, r3, r2
 800e04c:	3801      	subs	r0, #1
 800e04e:	f104 0310 	add.w	r3, r4, #16
 800e052:	4622      	mov	r2, r4
 800e054:	4641      	mov	r1, r8
 800e056:	4440      	add	r0, r8
 800e058:	f7ff fe6a 	bl	800dd30 <_ZN8touchgfx11floorDivModEllRlS0_>
 800e05c:	f104 0308 	add.w	r3, r4, #8
 800e060:	1d22      	adds	r2, r4, #4
 800e062:	4641      	mov	r1, r8
 800e064:	4658      	mov	r0, fp
 800e066:	f7ff fe63 	bl	800dd30 <_ZN8touchgfx11floorDivModEllRlS0_>
 800e06a:	f8c4 800c 	str.w	r8, [r4, #12]
 800e06e:	f8da 3004 	ldr.w	r3, [sl, #4]
 800e072:	6962      	ldr	r2, [r4, #20]
 800e074:	eddf 6a31 	vldr	s13, [pc, #196]	; 800e13c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800e078:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800e07c:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800e080:	ee07 3a10 	vmov	s14, r3
 800e084:	6822      	ldr	r2, [r4, #0]
 800e086:	f857 3009 	ldr.w	r3, [r7, r9]
 800e08a:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800e08e:	ee07 3a90 	vmov	s15, r3
 800e092:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e096:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e09a:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800e09e:	ee27 7a26 	vmul.f32	s14, s14, s13
 800e0a2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e0a6:	edd3 6a00 	vldr	s13, [r3]
 800e0aa:	eee6 6a07 	vfma.f32	s13, s12, s14
 800e0ae:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e0b2:	eee6 6a27 	vfma.f32	s13, s12, s15
 800e0b6:	edc4 6a07 	vstr	s13, [r4, #28]
 800e0ba:	edd4 6a01 	vldr	s13, [r4, #4]
 800e0be:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800e0c2:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800e0c6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e0ca:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e0ce:	ed84 6a08 	vstr	s12, [r4, #32]
 800e0d2:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800e0d4:	6262      	str	r2, [r4, #36]	; 0x24
 800e0d6:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800e0da:	ed93 6a03 	vldr	s12, [r3, #12]
 800e0de:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e0e2:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e0e6:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800e0ea:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800e0ee:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e0f2:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800e0f6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e0fa:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800e0fe:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800e100:	6322      	str	r2, [r4, #48]	; 0x30
 800e102:	ed93 6a06 	vldr	s12, [r3, #24]
 800e106:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800e10a:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e10e:	eeb0 7a46 	vmov.f32	s14, s12
 800e112:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800e116:	eea6 7a27 	vfma.f32	s14, s12, s15
 800e11a:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800e11e:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800e122:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800e126:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e12a:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800e12e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800e130:	63e3      	str	r3, [r4, #60]	; 0x3c
 800e132:	4620      	mov	r0, r4
 800e134:	b003      	add	sp, #12
 800e136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e13a:	bf00      	nop
 800e13c:	3d800000 	.word	0x3d800000

0800e140 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800e140:	4602      	mov	r2, r0
 800e142:	b148      	cbz	r0, 800e158 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800e144:	2300      	movs	r3, #0
 800e146:	b298      	uxth	r0, r3
 800e148:	3301      	adds	r3, #1
 800e14a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800e14e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800e152:	2900      	cmp	r1, #0
 800e154:	d1f7      	bne.n	800e146 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800e156:	4770      	bx	lr
 800e158:	4770      	bx	lr

0800e15a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800e15a:	b530      	push	{r4, r5, lr}
 800e15c:	4604      	mov	r4, r0
 800e15e:	b159      	cbz	r1, 800e178 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800e160:	b148      	cbz	r0, 800e176 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800e162:	2300      	movs	r3, #0
 800e164:	b298      	uxth	r0, r3
 800e166:	4282      	cmp	r2, r0
 800e168:	d905      	bls.n	800e176 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800e16a:	5ccd      	ldrb	r5, [r1, r3]
 800e16c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800e170:	3301      	adds	r3, #1
 800e172:	2d00      	cmp	r5, #0
 800e174:	d1f6      	bne.n	800e164 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800e176:	bd30      	pop	{r4, r5, pc}
 800e178:	4608      	mov	r0, r1
 800e17a:	e7fc      	b.n	800e176 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800e17c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800e17c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e17e:	b08b      	sub	sp, #44	; 0x2c
 800e180:	468c      	mov	ip, r1
 800e182:	2100      	movs	r1, #0
 800e184:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e188:	ae01      	add	r6, sp, #4
 800e18a:	211f      	movs	r1, #31
 800e18c:	fbb0 f7f3 	udiv	r7, r0, r3
 800e190:	fb03 0517 	mls	r5, r3, r7, r0
 800e194:	b2ec      	uxtb	r4, r5
 800e196:	2d09      	cmp	r5, #9
 800e198:	bfd4      	ite	le
 800e19a:	3430      	addle	r4, #48	; 0x30
 800e19c:	3457      	addgt	r4, #87	; 0x57
 800e19e:	b2e4      	uxtb	r4, r4
 800e1a0:	558c      	strb	r4, [r1, r6]
 800e1a2:	4638      	mov	r0, r7
 800e1a4:	1e4c      	subs	r4, r1, #1
 800e1a6:	b92f      	cbnz	r7, 800e1b4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800e1a8:	4431      	add	r1, r6
 800e1aa:	4660      	mov	r0, ip
 800e1ac:	f7ff ffd5 	bl	800e15a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800e1b0:	b00b      	add	sp, #44	; 0x2c
 800e1b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e1b4:	4621      	mov	r1, r4
 800e1b6:	e7e9      	b.n	800e18c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800e1b8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800e1b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1ba:	4607      	mov	r7, r0
 800e1bc:	b08b      	sub	sp, #44	; 0x2c
 800e1be:	4608      	mov	r0, r1
 800e1c0:	b341      	cbz	r1, 800e214 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800e1c2:	1e99      	subs	r1, r3, #2
 800e1c4:	290e      	cmp	r1, #14
 800e1c6:	d825      	bhi.n	800e214 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800e1c8:	2100      	movs	r1, #0
 800e1ca:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e1ce:	463c      	mov	r4, r7
 800e1d0:	261f      	movs	r6, #31
 800e1d2:	f10d 0c04 	add.w	ip, sp, #4
 800e1d6:	fb94 fef3 	sdiv	lr, r4, r3
 800e1da:	fb03 441e 	mls	r4, r3, lr, r4
 800e1de:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800e1e2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800e1e6:	b2ec      	uxtb	r4, r5
 800e1e8:	2d09      	cmp	r5, #9
 800e1ea:	bfd4      	ite	le
 800e1ec:	3430      	addle	r4, #48	; 0x30
 800e1ee:	3457      	addgt	r4, #87	; 0x57
 800e1f0:	b2e4      	uxtb	r4, r4
 800e1f2:	f80c 4006 	strb.w	r4, [ip, r6]
 800e1f6:	4674      	mov	r4, lr
 800e1f8:	1e71      	subs	r1, r6, #1
 800e1fa:	b96c      	cbnz	r4, 800e218 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800e1fc:	2f00      	cmp	r7, #0
 800e1fe:	da05      	bge.n	800e20c <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800e200:	ab0a      	add	r3, sp, #40	; 0x28
 800e202:	4419      	add	r1, r3
 800e204:	232d      	movs	r3, #45	; 0x2d
 800e206:	f801 3c24 	strb.w	r3, [r1, #-36]
 800e20a:	1eb1      	subs	r1, r6, #2
 800e20c:	3101      	adds	r1, #1
 800e20e:	4461      	add	r1, ip
 800e210:	f7ff ffa3 	bl	800e15a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800e214:	b00b      	add	sp, #44	; 0x2c
 800e216:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e218:	460e      	mov	r6, r1
 800e21a:	e7dc      	b.n	800e1d6 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800e21c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800e21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e220:	4691      	mov	r9, r2
 800e222:	b085      	sub	sp, #20
 800e224:	6802      	ldr	r2, [r0, #0]
 800e226:	9201      	str	r2, [sp, #4]
 800e228:	4688      	mov	r8, r1
 800e22a:	4683      	mov	fp, r0
 800e22c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800e230:	9103      	str	r1, [sp, #12]
 800e232:	4610      	mov	r0, r2
 800e234:	461c      	mov	r4, r3
 800e236:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800e23a:	9302      	str	r3, [sp, #8]
 800e23c:	f7ff ff80 	bl	800e140 <_ZN8touchgfx7Unicode6strlenEPKt>
 800e240:	f1b8 0f00 	cmp.w	r8, #0
 800e244:	bf0c      	ite	eq
 800e246:	4684      	moveq	ip, r0
 800e248:	f100 0c01 	addne.w	ip, r0, #1
 800e24c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800e250:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800e254:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e256:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e258:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800e25c:	9903      	ldr	r1, [sp, #12]
 800e25e:	fa1f fc8c 	uxth.w	ip, ip
 800e262:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e266:	d041      	beq.n	800e2ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800e268:	d834      	bhi.n	800e2d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800e26a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800e26e:	d059      	beq.n	800e324 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800e270:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800e274:	d03a      	beq.n	800e2ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800e276:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800e27a:	d034      	beq.n	800e2e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800e27c:	2400      	movs	r4, #0
 800e27e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800e282:	3a01      	subs	r2, #1
 800e284:	b169      	cbz	r1, 800e2a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800e286:	9911      	ldr	r1, [sp, #68]	; 0x44
 800e288:	458c      	cmp	ip, r1
 800e28a:	da09      	bge.n	800e2a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800e28c:	eba1 010c 	sub.w	r1, r1, ip
 800e290:	b289      	uxth	r1, r1
 800e292:	b933      	cbnz	r3, 800e2a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800e294:	2e00      	cmp	r6, #0
 800e296:	d051      	beq.n	800e33c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800e298:	2800      	cmp	r0, #0
 800e29a:	d04f      	beq.n	800e33c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800e29c:	440c      	add	r4, r1
 800e29e:	b2a4      	uxth	r4, r4
 800e2a0:	2100      	movs	r1, #0
 800e2a2:	682b      	ldr	r3, [r5, #0]
 800e2a4:	4293      	cmp	r3, r2
 800e2a6:	da07      	bge.n	800e2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800e2a8:	f1b8 0f00 	cmp.w	r8, #0
 800e2ac:	d004      	beq.n	800e2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800e2ae:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800e2b2:	682b      	ldr	r3, [r5, #0]
 800e2b4:	3301      	adds	r3, #1
 800e2b6:	602b      	str	r3, [r5, #0]
 800e2b8:	2730      	movs	r7, #48	; 0x30
 800e2ba:	2c00      	cmp	r4, #0
 800e2bc:	d04e      	beq.n	800e35c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800e2be:	682e      	ldr	r6, [r5, #0]
 800e2c0:	3c01      	subs	r4, #1
 800e2c2:	42b2      	cmp	r2, r6
 800e2c4:	b2a4      	uxth	r4, r4
 800e2c6:	dd49      	ble.n	800e35c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800e2c8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800e2cc:	682b      	ldr	r3, [r5, #0]
 800e2ce:	3301      	adds	r3, #1
 800e2d0:	602b      	str	r3, [r5, #0]
 800e2d2:	e7f2      	b.n	800e2ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800e2d4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800e2d8:	d01d      	beq.n	800e316 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800e2da:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800e2de:	d002      	beq.n	800e2e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800e2e0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800e2e4:	e7c9      	b.n	800e27a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800e2e6:	4684      	mov	ip, r0
 800e2e8:	f04f 0800 	mov.w	r8, #0
 800e2ec:	2c00      	cmp	r4, #0
 800e2ee:	d0c6      	beq.n	800e27e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800e2f0:	b947      	cbnz	r7, 800e304 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800e2f2:	2801      	cmp	r0, #1
 800e2f4:	d106      	bne.n	800e304 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800e2f6:	8814      	ldrh	r4, [r2, #0]
 800e2f8:	2c30      	cmp	r4, #48	; 0x30
 800e2fa:	bf02      	ittt	eq
 800e2fc:	3202      	addeq	r2, #2
 800e2fe:	f8cb 2000 	streq.w	r2, [fp]
 800e302:	4638      	moveq	r0, r7
 800e304:	45bc      	cmp	ip, r7
 800e306:	da14      	bge.n	800e332 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800e308:	b2bf      	uxth	r7, r7
 800e30a:	eba7 040c 	sub.w	r4, r7, ip
 800e30e:	b2a4      	uxth	r4, r4
 800e310:	46bc      	mov	ip, r7
 800e312:	2600      	movs	r6, #0
 800e314:	e7b3      	b.n	800e27e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800e316:	4684      	mov	ip, r0
 800e318:	b16c      	cbz	r4, 800e336 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800e31a:	42b8      	cmp	r0, r7
 800e31c:	dd00      	ble.n	800e320 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800e31e:	b2b8      	uxth	r0, r7
 800e320:	2400      	movs	r4, #0
 800e322:	e003      	b.n	800e32c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800e324:	f04f 0c01 	mov.w	ip, #1
 800e328:	2400      	movs	r4, #0
 800e32a:	4660      	mov	r0, ip
 800e32c:	4626      	mov	r6, r4
 800e32e:	46a0      	mov	r8, r4
 800e330:	e7a5      	b.n	800e27e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800e332:	2400      	movs	r4, #0
 800e334:	e7ed      	b.n	800e312 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800e336:	4626      	mov	r6, r4
 800e338:	46a0      	mov	r8, r4
 800e33a:	e7a0      	b.n	800e27e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800e33c:	2900      	cmp	r1, #0
 800e33e:	d0b0      	beq.n	800e2a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800e340:	2720      	movs	r7, #32
 800e342:	682e      	ldr	r6, [r5, #0]
 800e344:	2900      	cmp	r1, #0
 800e346:	d0ac      	beq.n	800e2a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800e348:	3901      	subs	r1, #1
 800e34a:	4296      	cmp	r6, r2
 800e34c:	b289      	uxth	r1, r1
 800e34e:	daa7      	bge.n	800e2a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800e350:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800e354:	682b      	ldr	r3, [r5, #0]
 800e356:	3301      	adds	r3, #1
 800e358:	602b      	str	r3, [r5, #0]
 800e35a:	e7f2      	b.n	800e342 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800e35c:	b188      	cbz	r0, 800e382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800e35e:	682b      	ldr	r3, [r5, #0]
 800e360:	3801      	subs	r0, #1
 800e362:	429a      	cmp	r2, r3
 800e364:	b280      	uxth	r0, r0
 800e366:	dd0c      	ble.n	800e382 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800e368:	f8db 3000 	ldr.w	r3, [fp]
 800e36c:	1c9c      	adds	r4, r3, #2
 800e36e:	f8cb 4000 	str.w	r4, [fp]
 800e372:	881c      	ldrh	r4, [r3, #0]
 800e374:	682b      	ldr	r3, [r5, #0]
 800e376:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800e37a:	682b      	ldr	r3, [r5, #0]
 800e37c:	3301      	adds	r3, #1
 800e37e:	602b      	str	r3, [r5, #0]
 800e380:	e7ec      	b.n	800e35c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800e382:	2620      	movs	r6, #32
 800e384:	b151      	cbz	r1, 800e39c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800e386:	6828      	ldr	r0, [r5, #0]
 800e388:	3901      	subs	r1, #1
 800e38a:	4282      	cmp	r2, r0
 800e38c:	b289      	uxth	r1, r1
 800e38e:	dd05      	ble.n	800e39c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800e390:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800e394:	682b      	ldr	r3, [r5, #0]
 800e396:	3301      	adds	r3, #1
 800e398:	602b      	str	r3, [r5, #0]
 800e39a:	e7f3      	b.n	800e384 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800e39c:	b005      	add	sp, #20
 800e39e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e3a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800e3a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e3a6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800e3aa:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800e3ae:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800e3b2:	2400      	movs	r4, #0
 800e3b4:	8014      	strh	r4, [r2, #0]
 800e3b6:	701c      	strb	r4, [r3, #0]
 800e3b8:	f888 4000 	strb.w	r4, [r8]
 800e3bc:	f88c 4000 	strb.w	r4, [ip]
 800e3c0:	f88e 4000 	strb.w	r4, [lr]
 800e3c4:	703c      	strb	r4, [r7, #0]
 800e3c6:	6804      	ldr	r4, [r0, #0]
 800e3c8:	b1a4      	cbz	r4, 800e3f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800e3ca:	8824      	ldrh	r4, [r4, #0]
 800e3cc:	f04f 0901 	mov.w	r9, #1
 800e3d0:	b314      	cbz	r4, 800e418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800e3d2:	2c2b      	cmp	r4, #43	; 0x2b
 800e3d4:	d001      	beq.n	800e3da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800e3d6:	2c20      	cmp	r4, #32
 800e3d8:	d110      	bne.n	800e3fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800e3da:	8014      	strh	r4, [r2, #0]
 800e3dc:	6804      	ldr	r4, [r0, #0]
 800e3de:	b10c      	cbz	r4, 800e3e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800e3e0:	3402      	adds	r4, #2
 800e3e2:	6004      	str	r4, [r0, #0]
 800e3e4:	680c      	ldr	r4, [r1, #0]
 800e3e6:	b10c      	cbz	r4, 800e3ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800e3e8:	3401      	adds	r4, #1
 800e3ea:	600c      	str	r4, [r1, #0]
 800e3ec:	6804      	ldr	r4, [r0, #0]
 800e3ee:	b17c      	cbz	r4, 800e410 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800e3f0:	8824      	ldrh	r4, [r4, #0]
 800e3f2:	e7ed      	b.n	800e3d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800e3f4:	680c      	ldr	r4, [r1, #0]
 800e3f6:	b17c      	cbz	r4, 800e418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800e3f8:	7824      	ldrb	r4, [r4, #0]
 800e3fa:	e7e7      	b.n	800e3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800e3fc:	2c2d      	cmp	r4, #45	; 0x2d
 800e3fe:	d102      	bne.n	800e406 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800e400:	f883 9000 	strb.w	r9, [r3]
 800e404:	e7ea      	b.n	800e3dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800e406:	2c23      	cmp	r4, #35	; 0x23
 800e408:	d107      	bne.n	800e41a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800e40a:	f888 9000 	strb.w	r9, [r8]
 800e40e:	e7e5      	b.n	800e3dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800e410:	680c      	ldr	r4, [r1, #0]
 800e412:	b10c      	cbz	r4, 800e418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800e414:	7824      	ldrb	r4, [r4, #0]
 800e416:	e7db      	b.n	800e3d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800e418:	2400      	movs	r4, #0
 800e41a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800e41e:	2b09      	cmp	r3, #9
 800e420:	d901      	bls.n	800e426 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800e422:	2c2a      	cmp	r4, #42	; 0x2a
 800e424:	d122      	bne.n	800e46c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800e426:	2301      	movs	r3, #1
 800e428:	2c30      	cmp	r4, #48	; 0x30
 800e42a:	f88e 3000 	strb.w	r3, [lr]
 800e42e:	d10d      	bne.n	800e44c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800e430:	f88c 3000 	strb.w	r3, [ip]
 800e434:	6803      	ldr	r3, [r0, #0]
 800e436:	b10b      	cbz	r3, 800e43c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800e438:	3302      	adds	r3, #2
 800e43a:	6003      	str	r3, [r0, #0]
 800e43c:	680b      	ldr	r3, [r1, #0]
 800e43e:	b10b      	cbz	r3, 800e444 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800e440:	3301      	adds	r3, #1
 800e442:	600b      	str	r3, [r1, #0]
 800e444:	6803      	ldr	r3, [r0, #0]
 800e446:	2b00      	cmp	r3, #0
 800e448:	d02f      	beq.n	800e4aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800e44a:	881c      	ldrh	r4, [r3, #0]
 800e44c:	2c2a      	cmp	r4, #42	; 0x2a
 800e44e:	d135      	bne.n	800e4bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800e450:	f04f 33ff 	mov.w	r3, #4294967295
 800e454:	6033      	str	r3, [r6, #0]
 800e456:	6803      	ldr	r3, [r0, #0]
 800e458:	b10b      	cbz	r3, 800e45e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800e45a:	3302      	adds	r3, #2
 800e45c:	6003      	str	r3, [r0, #0]
 800e45e:	680b      	ldr	r3, [r1, #0]
 800e460:	b10b      	cbz	r3, 800e466 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800e462:	3301      	adds	r3, #1
 800e464:	600b      	str	r3, [r1, #0]
 800e466:	6803      	ldr	r3, [r0, #0]
 800e468:	b31b      	cbz	r3, 800e4b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800e46a:	881c      	ldrh	r4, [r3, #0]
 800e46c:	2c2e      	cmp	r4, #46	; 0x2e
 800e46e:	d11a      	bne.n	800e4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800e470:	2301      	movs	r3, #1
 800e472:	703b      	strb	r3, [r7, #0]
 800e474:	6803      	ldr	r3, [r0, #0]
 800e476:	b10b      	cbz	r3, 800e47c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800e478:	3302      	adds	r3, #2
 800e47a:	6003      	str	r3, [r0, #0]
 800e47c:	680b      	ldr	r3, [r1, #0]
 800e47e:	b10b      	cbz	r3, 800e484 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800e480:	3301      	adds	r3, #1
 800e482:	600b      	str	r3, [r1, #0]
 800e484:	6803      	ldr	r3, [r0, #0]
 800e486:	2b00      	cmp	r3, #0
 800e488:	d036      	beq.n	800e4f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800e48a:	881b      	ldrh	r3, [r3, #0]
 800e48c:	2b2a      	cmp	r3, #42	; 0x2a
 800e48e:	d137      	bne.n	800e500 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800e490:	f04f 33ff 	mov.w	r3, #4294967295
 800e494:	602b      	str	r3, [r5, #0]
 800e496:	6803      	ldr	r3, [r0, #0]
 800e498:	b10b      	cbz	r3, 800e49e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800e49a:	3302      	adds	r3, #2
 800e49c:	6003      	str	r3, [r0, #0]
 800e49e:	680b      	ldr	r3, [r1, #0]
 800e4a0:	b10b      	cbz	r3, 800e4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800e4a2:	3301      	adds	r3, #1
 800e4a4:	600b      	str	r3, [r1, #0]
 800e4a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e4aa:	680c      	ldr	r4, [r1, #0]
 800e4ac:	b134      	cbz	r4, 800e4bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800e4ae:	7824      	ldrb	r4, [r4, #0]
 800e4b0:	e7cc      	b.n	800e44c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800e4b2:	680b      	ldr	r3, [r1, #0]
 800e4b4:	2b00      	cmp	r3, #0
 800e4b6:	d0f6      	beq.n	800e4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800e4b8:	781c      	ldrb	r4, [r3, #0]
 800e4ba:	e7d7      	b.n	800e46c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800e4bc:	2300      	movs	r3, #0
 800e4be:	6033      	str	r3, [r6, #0]
 800e4c0:	220a      	movs	r2, #10
 800e4c2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800e4c6:	fa1f f38c 	uxth.w	r3, ip
 800e4ca:	2b09      	cmp	r3, #9
 800e4cc:	d8ce      	bhi.n	800e46c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800e4ce:	6833      	ldr	r3, [r6, #0]
 800e4d0:	fb02 c303 	mla	r3, r2, r3, ip
 800e4d4:	6033      	str	r3, [r6, #0]
 800e4d6:	6803      	ldr	r3, [r0, #0]
 800e4d8:	b10b      	cbz	r3, 800e4de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800e4da:	3302      	adds	r3, #2
 800e4dc:	6003      	str	r3, [r0, #0]
 800e4de:	680b      	ldr	r3, [r1, #0]
 800e4e0:	b10b      	cbz	r3, 800e4e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800e4e2:	3301      	adds	r3, #1
 800e4e4:	600b      	str	r3, [r1, #0]
 800e4e6:	6803      	ldr	r3, [r0, #0]
 800e4e8:	b10b      	cbz	r3, 800e4ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800e4ea:	881c      	ldrh	r4, [r3, #0]
 800e4ec:	e7e9      	b.n	800e4c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800e4ee:	680c      	ldr	r4, [r1, #0]
 800e4f0:	2c00      	cmp	r4, #0
 800e4f2:	d0e6      	beq.n	800e4c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800e4f4:	7824      	ldrb	r4, [r4, #0]
 800e4f6:	e7e4      	b.n	800e4c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800e4f8:	680b      	ldr	r3, [r1, #0]
 800e4fa:	b10b      	cbz	r3, 800e500 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800e4fc:	781b      	ldrb	r3, [r3, #0]
 800e4fe:	e7c5      	b.n	800e48c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800e500:	2200      	movs	r2, #0
 800e502:	602a      	str	r2, [r5, #0]
 800e504:	240a      	movs	r4, #10
 800e506:	3b30      	subs	r3, #48	; 0x30
 800e508:	b29e      	uxth	r6, r3
 800e50a:	2e09      	cmp	r6, #9
 800e50c:	682a      	ldr	r2, [r5, #0]
 800e50e:	d813      	bhi.n	800e538 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800e510:	fb04 3302 	mla	r3, r4, r2, r3
 800e514:	602b      	str	r3, [r5, #0]
 800e516:	6803      	ldr	r3, [r0, #0]
 800e518:	b10b      	cbz	r3, 800e51e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800e51a:	3302      	adds	r3, #2
 800e51c:	6003      	str	r3, [r0, #0]
 800e51e:	680b      	ldr	r3, [r1, #0]
 800e520:	b10b      	cbz	r3, 800e526 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800e522:	3301      	adds	r3, #1
 800e524:	600b      	str	r3, [r1, #0]
 800e526:	6803      	ldr	r3, [r0, #0]
 800e528:	b10b      	cbz	r3, 800e52e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800e52a:	881b      	ldrh	r3, [r3, #0]
 800e52c:	e7eb      	b.n	800e506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800e52e:	680b      	ldr	r3, [r1, #0]
 800e530:	2b00      	cmp	r3, #0
 800e532:	d0e8      	beq.n	800e506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800e534:	781b      	ldrb	r3, [r3, #0]
 800e536:	e7e6      	b.n	800e506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800e538:	2a06      	cmp	r2, #6
 800e53a:	bfa8      	it	ge
 800e53c:	2206      	movge	r2, #6
 800e53e:	602a      	str	r2, [r5, #0]
 800e540:	e7b1      	b.n	800e4a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800e542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800e542:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e546:	b0a3      	sub	sp, #140	; 0x8c
 800e548:	2600      	movs	r6, #0
 800e54a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800e54e:	4607      	mov	r7, r0
 800e550:	4688      	mov	r8, r1
 800e552:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800e556:	4631      	mov	r1, r6
 800e558:	2242      	movs	r2, #66	; 0x42
 800e55a:	4648      	mov	r0, r9
 800e55c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800e55e:	960d      	str	r6, [sp, #52]	; 0x34
 800e560:	f7fe fab7 	bl	800cad2 <_ZN8touchgfx6memsetEPvhm>
 800e564:	b15f      	cbz	r7, 800e57e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800e566:	f108 3aff 	add.w	sl, r8, #4294967295
 800e56a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e56c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e56e:	b152      	cbz	r2, 800e586 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800e570:	8812      	ldrh	r2, [r2, #0]
 800e572:	b10a      	cbz	r2, 800e578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800e574:	459a      	cmp	sl, r3
 800e576:	dc2e      	bgt.n	800e5d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800e578:	2200      	movs	r2, #0
 800e57a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800e57e:	4638      	mov	r0, r7
 800e580:	b023      	add	sp, #140	; 0x8c
 800e582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e586:	9a08      	ldr	r2, [sp, #32]
 800e588:	2a00      	cmp	r2, #0
 800e58a:	d0f5      	beq.n	800e578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800e58c:	7812      	ldrb	r2, [r2, #0]
 800e58e:	e7f0      	b.n	800e572 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800e590:	2d00      	cmp	r5, #0
 800e592:	d0ea      	beq.n	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e594:	782a      	ldrb	r2, [r5, #0]
 800e596:	b142      	cbz	r2, 800e5aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800e598:	2a25      	cmp	r2, #37	; 0x25
 800e59a:	d001      	beq.n	800e5a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800e59c:	459a      	cmp	sl, r3
 800e59e:	dc08      	bgt.n	800e5b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800e5a0:	f1bb 0f00 	cmp.w	fp, #0
 800e5a4:	d121      	bne.n	800e5ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800e5a6:	2d00      	cmp	r5, #0
 800e5a8:	d0df      	beq.n	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e5aa:	782a      	ldrb	r2, [r5, #0]
 800e5ac:	f04f 0b00 	mov.w	fp, #0
 800e5b0:	e01d      	b.n	800e5ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800e5b2:	f1bb 0f00 	cmp.w	fp, #0
 800e5b6:	d078      	beq.n	800e6aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800e5b8:	f8bb 2000 	ldrh.w	r2, [fp]
 800e5bc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800e5c0:	f1bb 0f00 	cmp.w	fp, #0
 800e5c4:	d002      	beq.n	800e5cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800e5c6:	f10b 0202 	add.w	r2, fp, #2
 800e5ca:	9209      	str	r2, [sp, #36]	; 0x24
 800e5cc:	b10d      	cbz	r5, 800e5d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800e5ce:	3501      	adds	r5, #1
 800e5d0:	9508      	str	r5, [sp, #32]
 800e5d2:	3301      	adds	r3, #1
 800e5d4:	930d      	str	r3, [sp, #52]	; 0x34
 800e5d6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800e5da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e5dc:	f1bb 0f00 	cmp.w	fp, #0
 800e5e0:	d0d6      	beq.n	800e590 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800e5e2:	f8bb 2000 	ldrh.w	r2, [fp]
 800e5e6:	2a00      	cmp	r2, #0
 800e5e8:	d1d6      	bne.n	800e598 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800e5ea:	f8bb 2000 	ldrh.w	r2, [fp]
 800e5ee:	2a00      	cmp	r2, #0
 800e5f0:	d0bb      	beq.n	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e5f2:	459a      	cmp	sl, r3
 800e5f4:	ddb9      	ble.n	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e5f6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800e5fa:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800e5fe:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800e602:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800e606:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800e60a:	960e      	str	r6, [sp, #56]	; 0x38
 800e60c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800e610:	960f      	str	r6, [sp, #60]	; 0x3c
 800e612:	f1bb 0f00 	cmp.w	fp, #0
 800e616:	d002      	beq.n	800e61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800e618:	f10b 0302 	add.w	r3, fp, #2
 800e61c:	9309      	str	r3, [sp, #36]	; 0x24
 800e61e:	b10d      	cbz	r5, 800e624 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800e620:	1c6b      	adds	r3, r5, #1
 800e622:	9308      	str	r3, [sp, #32]
 800e624:	ab0f      	add	r3, sp, #60	; 0x3c
 800e626:	9305      	str	r3, [sp, #20]
 800e628:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800e62c:	9304      	str	r3, [sp, #16]
 800e62e:	ab0e      	add	r3, sp, #56	; 0x38
 800e630:	9303      	str	r3, [sp, #12]
 800e632:	ab0c      	add	r3, sp, #48	; 0x30
 800e634:	9302      	str	r3, [sp, #8]
 800e636:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800e63a:	9301      	str	r3, [sp, #4]
 800e63c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800e640:	9300      	str	r3, [sp, #0]
 800e642:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800e646:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800e64a:	a908      	add	r1, sp, #32
 800e64c:	a809      	add	r0, sp, #36	; 0x24
 800e64e:	f7ff fea8 	bl	800e3a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800e652:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e654:	2b00      	cmp	r3, #0
 800e656:	bfbe      	ittt	lt
 800e658:	6823      	ldrlt	r3, [r4, #0]
 800e65a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800e65e:	930e      	strlt	r3, [sp, #56]	; 0x38
 800e660:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e662:	bfb8      	it	lt
 800e664:	3404      	addlt	r4, #4
 800e666:	2b00      	cmp	r3, #0
 800e668:	bfb8      	it	lt
 800e66a:	6823      	ldrlt	r3, [r4, #0]
 800e66c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800e670:	bfbe      	ittt	lt
 800e672:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800e676:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800e678:	3404      	addlt	r4, #4
 800e67a:	b1d9      	cbz	r1, 800e6b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800e67c:	880b      	ldrh	r3, [r1, #0]
 800e67e:	2b69      	cmp	r3, #105	; 0x69
 800e680:	d01f      	beq.n	800e6c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800e682:	d82f      	bhi.n	800e6e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800e684:	2b58      	cmp	r3, #88	; 0x58
 800e686:	d01c      	beq.n	800e6c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800e688:	d818      	bhi.n	800e6bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800e68a:	2b25      	cmp	r3, #37	; 0x25
 800e68c:	d034      	beq.n	800e6f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800e68e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800e692:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e694:	f1bb 0f00 	cmp.w	fp, #0
 800e698:	f000 80b8 	beq.w	800e80c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800e69c:	f8bb 5000 	ldrh.w	r5, [fp]
 800e6a0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800e6a4:	3301      	adds	r3, #1
 800e6a6:	930d      	str	r3, [sp, #52]	; 0x34
 800e6a8:	e029      	b.n	800e6fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800e6aa:	b10d      	cbz	r5, 800e6b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800e6ac:	782a      	ldrb	r2, [r5, #0]
 800e6ae:	e785      	b.n	800e5bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800e6b0:	462a      	mov	r2, r5
 800e6b2:	e783      	b.n	800e5bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800e6b4:	2a00      	cmp	r2, #0
 800e6b6:	d0ea      	beq.n	800e68e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800e6b8:	7813      	ldrb	r3, [r2, #0]
 800e6ba:	e7e0      	b.n	800e67e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800e6bc:	3b63      	subs	r3, #99	; 0x63
 800e6be:	2b01      	cmp	r3, #1
 800e6c0:	d8e5      	bhi.n	800e68e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800e6c2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800e6c6:	b329      	cbz	r1, 800e714 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800e6c8:	880b      	ldrh	r3, [r1, #0]
 800e6ca:	2b69      	cmp	r3, #105	; 0x69
 800e6cc:	d063      	beq.n	800e796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800e6ce:	d825      	bhi.n	800e71c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800e6d0:	2b63      	cmp	r3, #99	; 0x63
 800e6d2:	d038      	beq.n	800e746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800e6d4:	2b64      	cmp	r3, #100	; 0x64
 800e6d6:	d05e      	beq.n	800e796 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800e6d8:	2b58      	cmp	r3, #88	; 0x58
 800e6da:	d07b      	beq.n	800e7d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800e6dc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800e6e0:	4625      	mov	r5, r4
 800e6e2:	e036      	b.n	800e752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800e6e4:	2b73      	cmp	r3, #115	; 0x73
 800e6e6:	d0ec      	beq.n	800e6c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800e6e8:	d802      	bhi.n	800e6f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800e6ea:	2b6f      	cmp	r3, #111	; 0x6f
 800e6ec:	d1cf      	bne.n	800e68e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800e6ee:	e7e8      	b.n	800e6c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800e6f0:	2b75      	cmp	r3, #117	; 0x75
 800e6f2:	d0e6      	beq.n	800e6c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800e6f4:	2b78      	cmp	r3, #120	; 0x78
 800e6f6:	e7f9      	b.n	800e6ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800e6f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e6fa:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800e6fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e700:	b10b      	cbz	r3, 800e706 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800e702:	3302      	adds	r3, #2
 800e704:	9309      	str	r3, [sp, #36]	; 0x24
 800e706:	9b08      	ldr	r3, [sp, #32]
 800e708:	2b00      	cmp	r3, #0
 800e70a:	f43f af2e 	beq.w	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e70e:	3301      	adds	r3, #1
 800e710:	9308      	str	r3, [sp, #32]
 800e712:	e72a      	b.n	800e56a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800e714:	2a00      	cmp	r2, #0
 800e716:	d0e1      	beq.n	800e6dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800e718:	7813      	ldrb	r3, [r2, #0]
 800e71a:	e7d6      	b.n	800e6ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800e71c:	2b73      	cmp	r3, #115	; 0x73
 800e71e:	d036      	beq.n	800e78e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800e720:	d807      	bhi.n	800e732 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800e722:	2b6f      	cmp	r3, #111	; 0x6f
 800e724:	d1da      	bne.n	800e6dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800e726:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e728:	1d25      	adds	r5, r4, #4
 800e72a:	eba8 0202 	sub.w	r2, r8, r2
 800e72e:	2308      	movs	r3, #8
 800e730:	e04a      	b.n	800e7c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800e732:	2b75      	cmp	r3, #117	; 0x75
 800e734:	d043      	beq.n	800e7be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800e736:	2b78      	cmp	r3, #120	; 0x78
 800e738:	d1d0      	bne.n	800e6dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800e73a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e73c:	1d25      	adds	r5, r4, #4
 800e73e:	eba8 0202 	sub.w	r2, r8, r2
 800e742:	2310      	movs	r3, #16
 800e744:	e040      	b.n	800e7c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800e746:	7823      	ldrb	r3, [r4, #0]
 800e748:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800e74c:	1d25      	adds	r5, r4, #4
 800e74e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800e752:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e754:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800e758:	2b00      	cmp	r3, #0
 800e75a:	d052      	beq.n	800e802 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800e75c:	881a      	ldrh	r2, [r3, #0]
 800e75e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800e762:	a80d      	add	r0, sp, #52	; 0x34
 800e764:	9005      	str	r0, [sp, #20]
 800e766:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800e76a:	9004      	str	r0, [sp, #16]
 800e76c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800e76e:	9003      	str	r0, [sp, #12]
 800e770:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800e774:	9002      	str	r0, [sp, #8]
 800e776:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e778:	9001      	str	r0, [sp, #4]
 800e77a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800e77e:	9000      	str	r0, [sp, #0]
 800e780:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800e784:	a810      	add	r0, sp, #64	; 0x40
 800e786:	f7ff fd49 	bl	800e21c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800e78a:	462c      	mov	r4, r5
 800e78c:	e7b7      	b.n	800e6fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800e78e:	6823      	ldr	r3, [r4, #0]
 800e790:	1d25      	adds	r5, r4, #4
 800e792:	9310      	str	r3, [sp, #64]	; 0x40
 800e794:	e7dd      	b.n	800e752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800e796:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e798:	6820      	ldr	r0, [r4, #0]
 800e79a:	eba8 0202 	sub.w	r2, r8, r2
 800e79e:	230a      	movs	r3, #10
 800e7a0:	b292      	uxth	r2, r2
 800e7a2:	4649      	mov	r1, r9
 800e7a4:	f7ff fd08 	bl	800e1b8 <_ZN8touchgfx7Unicode4itoaElPtti>
 800e7a8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800e7ac:	2b2d      	cmp	r3, #45	; 0x2d
 800e7ae:	f104 0504 	add.w	r5, r4, #4
 800e7b2:	d1ce      	bne.n	800e752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800e7b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e7b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e7ba:	3302      	adds	r3, #2
 800e7bc:	e7e9      	b.n	800e792 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800e7be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e7c0:	1d25      	adds	r5, r4, #4
 800e7c2:	eba8 0202 	sub.w	r2, r8, r2
 800e7c6:	230a      	movs	r3, #10
 800e7c8:	b292      	uxth	r2, r2
 800e7ca:	4649      	mov	r1, r9
 800e7cc:	6820      	ldr	r0, [r4, #0]
 800e7ce:	f7ff fcd5 	bl	800e17c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800e7d2:	e7be      	b.n	800e752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800e7d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e7d6:	6820      	ldr	r0, [r4, #0]
 800e7d8:	eba8 0202 	sub.w	r2, r8, r2
 800e7dc:	b292      	uxth	r2, r2
 800e7de:	2310      	movs	r3, #16
 800e7e0:	4649      	mov	r1, r9
 800e7e2:	f7ff fccb 	bl	800e17c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800e7e6:	1d25      	adds	r5, r4, #4
 800e7e8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800e7ec:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800e7f0:	2b00      	cmp	r3, #0
 800e7f2:	d0ae      	beq.n	800e752 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800e7f4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800e7f8:	2919      	cmp	r1, #25
 800e7fa:	d8f7      	bhi.n	800e7ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800e7fc:	3b20      	subs	r3, #32
 800e7fe:	8013      	strh	r3, [r2, #0]
 800e800:	e7f4      	b.n	800e7ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800e802:	9a08      	ldr	r2, [sp, #32]
 800e804:	2a00      	cmp	r2, #0
 800e806:	d0aa      	beq.n	800e75e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e808:	7812      	ldrb	r2, [r2, #0]
 800e80a:	e7a8      	b.n	800e75e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800e80c:	2d00      	cmp	r5, #0
 800e80e:	f43f af47 	beq.w	800e6a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800e812:	782d      	ldrb	r5, [r5, #0]
 800e814:	e744      	b.n	800e6a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800e816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800e816:	b507      	push	{r0, r1, r2, lr}
 800e818:	9300      	str	r3, [sp, #0]
 800e81a:	4613      	mov	r3, r2
 800e81c:	2200      	movs	r2, #0
 800e81e:	f7ff fe90 	bl	800e542 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800e822:	b003      	add	sp, #12
 800e824:	f85d fb04 	ldr.w	pc, [sp], #4

0800e828 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800e828:	b40c      	push	{r2, r3}
 800e82a:	b507      	push	{r0, r1, r2, lr}
 800e82c:	ab04      	add	r3, sp, #16
 800e82e:	f853 2b04 	ldr.w	r2, [r3], #4
 800e832:	9301      	str	r3, [sp, #4]
 800e834:	f7ff ffef 	bl	800e816 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800e838:	b003      	add	sp, #12
 800e83a:	f85d eb04 	ldr.w	lr, [sp], #4
 800e83e:	b002      	add	sp, #8
 800e840:	4770      	bx	lr
	...

0800e844 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800e844:	4b01      	ldr	r3, [pc, #4]	; (800e84c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800e846:	6018      	str	r0, [r3, #0]
 800e848:	4770      	bx	lr
 800e84a:	bf00      	nop
 800e84c:	2001212c 	.word	0x2001212c

0800e850 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800e850:	4b07      	ldr	r3, [pc, #28]	; (800e870 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800e852:	881a      	ldrh	r2, [r3, #0]
 800e854:	4282      	cmp	r2, r0
 800e856:	d809      	bhi.n	800e86c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800e858:	4b06      	ldr	r3, [pc, #24]	; (800e874 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800e85a:	881b      	ldrh	r3, [r3, #0]
 800e85c:	4413      	add	r3, r2
 800e85e:	4298      	cmp	r0, r3
 800e860:	da04      	bge.n	800e86c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800e862:	4b05      	ldr	r3, [pc, #20]	; (800e878 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800e864:	681b      	ldr	r3, [r3, #0]
 800e866:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800e86a:	4770      	bx	lr
 800e86c:	2000      	movs	r0, #0
 800e86e:	4770      	bx	lr
 800e870:	2001214c 	.word	0x2001214c
 800e874:	20012150 	.word	0x20012150
 800e878:	20012130 	.word	0x20012130

0800e87c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800e87c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e880:	4d28      	ldr	r5, [pc, #160]	; (800e924 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800e882:	682b      	ldr	r3, [r5, #0]
 800e884:	2b00      	cmp	r3, #0
 800e886:	d04a      	beq.n	800e91e <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e888:	4a27      	ldr	r2, [pc, #156]	; (800e928 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800e88a:	4e28      	ldr	r6, [pc, #160]	; (800e92c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800e88c:	8810      	ldrh	r0, [r2, #0]
 800e88e:	f8b6 8000 	ldrh.w	r8, [r6]
 800e892:	4c27      	ldr	r4, [pc, #156]	; (800e930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800e894:	4f27      	ldr	r7, [pc, #156]	; (800e934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800e896:	4440      	add	r0, r8
 800e898:	1c41      	adds	r1, r0, #1
 800e89a:	f021 0101 	bic.w	r1, r1, #1
 800e89e:	0409      	lsls	r1, r1, #16
 800e8a0:	0c09      	lsrs	r1, r1, #16
 800e8a2:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800e8a6:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800e8aa:	eb03 020e 	add.w	r2, r3, lr
 800e8ae:	eb0e 010c 	add.w	r1, lr, ip
 800e8b2:	6022      	str	r2, [r4, #0]
 800e8b4:	185a      	adds	r2, r3, r1
 800e8b6:	603a      	str	r2, [r7, #0]
 800e8b8:	220e      	movs	r2, #14
 800e8ba:	fb02 f208 	mul.w	r2, r2, r8
 800e8be:	3203      	adds	r2, #3
 800e8c0:	f022 0203 	bic.w	r2, r2, #3
 800e8c4:	4411      	add	r1, r2
 800e8c6:	440b      	add	r3, r1
 800e8c8:	491b      	ldr	r1, [pc, #108]	; (800e938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800e8ca:	600b      	str	r3, [r1, #0]
 800e8cc:	491b      	ldr	r1, [pc, #108]	; (800e93c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800e8ce:	2300      	movs	r3, #0
 800e8d0:	800b      	strh	r3, [r1, #0]
 800e8d2:	491b      	ldr	r1, [pc, #108]	; (800e940 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800e8d4:	6809      	ldr	r1, [r1, #0]
 800e8d6:	eba1 010e 	sub.w	r1, r1, lr
 800e8da:	eba1 010c 	sub.w	r1, r1, ip
 800e8de:	1a8a      	subs	r2, r1, r2
 800e8e0:	4918      	ldr	r1, [pc, #96]	; (800e944 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800e8e2:	600a      	str	r2, [r1, #0]
 800e8e4:	4a18      	ldr	r2, [pc, #96]	; (800e948 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800e8e6:	469c      	mov	ip, r3
 800e8e8:	8013      	strh	r3, [r2, #0]
 800e8ea:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e8ee:	4283      	cmp	r3, r0
 800e8f0:	d10d      	bne.n	800e90e <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800e8f2:	8835      	ldrh	r5, [r6, #0]
 800e8f4:	6838      	ldr	r0, [r7, #0]
 800e8f6:	2300      	movs	r3, #0
 800e8f8:	240e      	movs	r4, #14
 800e8fa:	429d      	cmp	r5, r3
 800e8fc:	d90f      	bls.n	800e91e <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e8fe:	fb04 0203 	mla	r2, r4, r3, r0
 800e902:	3301      	adds	r3, #1
 800e904:	7b11      	ldrb	r1, [r2, #12]
 800e906:	f36f 1145 	bfc	r1, #5, #1
 800e90a:	7311      	strb	r1, [r2, #12]
 800e90c:	e7f5      	b.n	800e8fa <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800e90e:	682a      	ldr	r2, [r5, #0]
 800e910:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800e914:	6822      	ldr	r2, [r4, #0]
 800e916:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800e91a:	3301      	adds	r3, #1
 800e91c:	e7e7      	b.n	800e8ee <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800e91e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e922:	bf00      	nop
 800e924:	20012130 	.word	0x20012130
 800e928:	2001214c 	.word	0x2001214c
 800e92c:	20012150 	.word	0x20012150
 800e930:	20012144 	.word	0x20012144
 800e934:	20012134 	.word	0x20012134
 800e938:	2001213c 	.word	0x2001213c
 800e93c:	2001214e 	.word	0x2001214e
 800e940:	20012138 	.word	0x20012138
 800e944:	20012148 	.word	0x20012148
 800e948:	20012140 	.word	0x20012140

0800e94c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e94c:	b510      	push	{r4, lr}
 800e94e:	4b10      	ldr	r3, [pc, #64]	; (800e990 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800e950:	681b      	ldr	r3, [r3, #0]
 800e952:	b9db      	cbnz	r3, 800e98c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e954:	b1d1      	cbz	r1, 800e98c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e956:	4b0f      	ldr	r3, [pc, #60]	; (800e994 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800e958:	801a      	strh	r2, [r3, #0]
 800e95a:	4b0f      	ldr	r3, [pc, #60]	; (800e998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800e95c:	881b      	ldrh	r3, [r3, #0]
 800e95e:	b292      	uxth	r2, r2
 800e960:	240e      	movs	r4, #14
 800e962:	4413      	add	r3, r2
 800e964:	4362      	muls	r2, r4
 800e966:	2406      	movs	r4, #6
 800e968:	fb04 2203 	mla	r2, r4, r3, r2
 800e96c:	428a      	cmp	r2, r1
 800e96e:	d305      	bcc.n	800e97c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800e970:	4b0a      	ldr	r3, [pc, #40]	; (800e99c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800e972:	4a0b      	ldr	r2, [pc, #44]	; (800e9a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800e974:	480b      	ldr	r0, [pc, #44]	; (800e9a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800e976:	2137      	movs	r1, #55	; 0x37
 800e978:	f00b fcfc 	bl	801a374 <__assert_func>
 800e97c:	4b0a      	ldr	r3, [pc, #40]	; (800e9a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800e97e:	6019      	str	r1, [r3, #0]
 800e980:	4b0a      	ldr	r3, [pc, #40]	; (800e9ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800e982:	6018      	str	r0, [r3, #0]
 800e984:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e988:	f7ff bf78 	b.w	800e87c <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e98c:	bd10      	pop	{r4, pc}
 800e98e:	bf00      	nop
 800e990:	2001213c 	.word	0x2001213c
 800e994:	20012150 	.word	0x20012150
 800e998:	2001214c 	.word	0x2001214c
 800e99c:	0801da2e 	.word	0x0801da2e
 800e9a0:	0801da87 	.word	0x0801da87
 800e9a4:	0801da09 	.word	0x0801da09
 800e9a8:	20012138 	.word	0x20012138
 800e9ac:	20012130 	.word	0x20012130

0800e9b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e9b0:	b470      	push	{r4, r5, r6}
 800e9b2:	4c07      	ldr	r4, [pc, #28]	; (800e9d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e9b4:	6826      	ldr	r6, [r4, #0]
 800e9b6:	4605      	mov	r5, r0
 800e9b8:	4610      	mov	r0, r2
 800e9ba:	9a03      	ldr	r2, [sp, #12]
 800e9bc:	b936      	cbnz	r6, 800e9cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e9be:	6025      	str	r5, [r4, #0]
 800e9c0:	4c04      	ldr	r4, [pc, #16]	; (800e9d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e9c2:	8021      	strh	r1, [r4, #0]
 800e9c4:	bc70      	pop	{r4, r5, r6}
 800e9c6:	4619      	mov	r1, r3
 800e9c8:	f7ff bfc0 	b.w	800e94c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e9cc:	bc70      	pop	{r4, r5, r6}
 800e9ce:	4770      	bx	lr
 800e9d0:	20012154 	.word	0x20012154
 800e9d4:	2001214c 	.word	0x2001214c

0800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e9d8:	b508      	push	{r3, lr}
 800e9da:	4b14      	ldr	r3, [pc, #80]	; (800ea2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800e9dc:	6819      	ldr	r1, [r3, #0]
 800e9de:	b931      	cbnz	r1, 800e9ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800e9e0:	4b13      	ldr	r3, [pc, #76]	; (800ea30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800e9e2:	4a14      	ldr	r2, [pc, #80]	; (800ea34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800e9e4:	4814      	ldr	r0, [pc, #80]	; (800ea38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e9e6:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800e9ea:	f00b fcc3 	bl	801a374 <__assert_func>
 800e9ee:	4a13      	ldr	r2, [pc, #76]	; (800ea3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e9f0:	8803      	ldrh	r3, [r0, #0]
 800e9f2:	8812      	ldrh	r2, [r2, #0]
 800e9f4:	4293      	cmp	r3, r2
 800e9f6:	d204      	bcs.n	800ea02 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800e9f8:	2214      	movs	r2, #20
 800e9fa:	fb02 1303 	mla	r3, r2, r3, r1
 800e9fe:	8918      	ldrh	r0, [r3, #8]
 800ea00:	bd08      	pop	{r3, pc}
 800ea02:	490f      	ldr	r1, [pc, #60]	; (800ea40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800ea04:	8809      	ldrh	r1, [r1, #0]
 800ea06:	4411      	add	r1, r2
 800ea08:	428b      	cmp	r3, r1
 800ea0a:	da06      	bge.n	800ea1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800ea0c:	1a9b      	subs	r3, r3, r2
 800ea0e:	4a0d      	ldr	r2, [pc, #52]	; (800ea44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800ea10:	6812      	ldr	r2, [r2, #0]
 800ea12:	210e      	movs	r1, #14
 800ea14:	fb01 2303 	mla	r3, r1, r3, r2
 800ea18:	e7f1      	b.n	800e9fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800ea1a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ea1e:	4293      	cmp	r3, r2
 800ea20:	bf0a      	itet	eq
 800ea22:	4b09      	ldreq	r3, [pc, #36]	; (800ea48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800ea24:	2000      	movne	r0, #0
 800ea26:	8818      	ldrheq	r0, [r3, #0]
 800ea28:	e7ea      	b.n	800ea00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800ea2a:	bf00      	nop
 800ea2c:	20012154 	.word	0x20012154
 800ea30:	0801cfa4 	.word	0x0801cfa4
 800ea34:	0801db34 	.word	0x0801db34
 800ea38:	0801da09 	.word	0x0801da09
 800ea3c:	2001214c 	.word	0x2001214c
 800ea40:	20012150 	.word	0x20012150
 800ea44:	20012134 	.word	0x20012134
 800ea48:	200120a0 	.word	0x200120a0

0800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800ea4c:	b508      	push	{r3, lr}
 800ea4e:	4b14      	ldr	r3, [pc, #80]	; (800eaa0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800ea50:	6819      	ldr	r1, [r3, #0]
 800ea52:	b931      	cbnz	r1, 800ea62 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800ea54:	4b13      	ldr	r3, [pc, #76]	; (800eaa4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800ea56:	4a14      	ldr	r2, [pc, #80]	; (800eaa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800ea58:	4814      	ldr	r0, [pc, #80]	; (800eaac <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800ea5a:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800ea5e:	f00b fc89 	bl	801a374 <__assert_func>
 800ea62:	4a13      	ldr	r2, [pc, #76]	; (800eab0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800ea64:	8803      	ldrh	r3, [r0, #0]
 800ea66:	8812      	ldrh	r2, [r2, #0]
 800ea68:	4293      	cmp	r3, r2
 800ea6a:	d204      	bcs.n	800ea76 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800ea6c:	2214      	movs	r2, #20
 800ea6e:	fb02 1303 	mla	r3, r2, r3, r1
 800ea72:	8958      	ldrh	r0, [r3, #10]
 800ea74:	bd08      	pop	{r3, pc}
 800ea76:	490f      	ldr	r1, [pc, #60]	; (800eab4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800ea78:	8809      	ldrh	r1, [r1, #0]
 800ea7a:	4411      	add	r1, r2
 800ea7c:	428b      	cmp	r3, r1
 800ea7e:	da06      	bge.n	800ea8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800ea80:	1a9b      	subs	r3, r3, r2
 800ea82:	4a0d      	ldr	r2, [pc, #52]	; (800eab8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800ea84:	6812      	ldr	r2, [r2, #0]
 800ea86:	210e      	movs	r1, #14
 800ea88:	fb01 2303 	mla	r3, r1, r3, r2
 800ea8c:	e7f1      	b.n	800ea72 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800ea8e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ea92:	4293      	cmp	r3, r2
 800ea94:	bf0a      	itet	eq
 800ea96:	4b09      	ldreq	r3, [pc, #36]	; (800eabc <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800ea98:	2000      	movne	r0, #0
 800ea9a:	8818      	ldrheq	r0, [r3, #0]
 800ea9c:	e7ea      	b.n	800ea74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800ea9e:	bf00      	nop
 800eaa0:	20012154 	.word	0x20012154
 800eaa4:	0801cfa4 	.word	0x0801cfa4
 800eaa8:	0801db60 	.word	0x0801db60
 800eaac:	0801da09 	.word	0x0801da09
 800eab0:	2001214c 	.word	0x2001214c
 800eab4:	20012150 	.word	0x20012150
 800eab8:	20012134 	.word	0x20012134
 800eabc:	200120a2 	.word	0x200120a2

0800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800eac0:	b510      	push	{r4, lr}
 800eac2:	4b23      	ldr	r3, [pc, #140]	; (800eb50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800eac4:	681c      	ldr	r4, [r3, #0]
 800eac6:	b934      	cbnz	r4, 800ead6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800eac8:	4b22      	ldr	r3, [pc, #136]	; (800eb54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800eaca:	4a23      	ldr	r2, [pc, #140]	; (800eb58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800eacc:	4823      	ldr	r0, [pc, #140]	; (800eb5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800eace:	f44f 7148 	mov.w	r1, #800	; 0x320
 800ead2:	f00b fc4f 	bl	801a374 <__assert_func>
 800ead6:	4a22      	ldr	r2, [pc, #136]	; (800eb60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800ead8:	880b      	ldrh	r3, [r1, #0]
 800eada:	8812      	ldrh	r2, [r2, #0]
 800eadc:	4293      	cmp	r3, r2
 800eade:	d211      	bcs.n	800eb04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800eae0:	2214      	movs	r2, #20
 800eae2:	fb02 4303 	mla	r3, r2, r3, r4
 800eae6:	8a1a      	ldrh	r2, [r3, #16]
 800eae8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800eaec:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800eaf0:	8a5b      	ldrh	r3, [r3, #18]
 800eaf2:	8004      	strh	r4, [r0, #0]
 800eaf4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800eaf8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800eafc:	8041      	strh	r1, [r0, #2]
 800eafe:	8082      	strh	r2, [r0, #4]
 800eb00:	80c3      	strh	r3, [r0, #6]
 800eb02:	e00e      	b.n	800eb22 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800eb04:	4917      	ldr	r1, [pc, #92]	; (800eb64 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800eb06:	8809      	ldrh	r1, [r1, #0]
 800eb08:	4411      	add	r1, r2
 800eb0a:	428b      	cmp	r3, r1
 800eb0c:	da0a      	bge.n	800eb24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800eb0e:	1a9b      	subs	r3, r3, r2
 800eb10:	4a15      	ldr	r2, [pc, #84]	; (800eb68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800eb12:	6812      	ldr	r2, [r2, #0]
 800eb14:	210e      	movs	r1, #14
 800eb16:	fb01 2303 	mla	r3, r1, r3, r2
 800eb1a:	681a      	ldr	r2, [r3, #0]
 800eb1c:	6002      	str	r2, [r0, #0]
 800eb1e:	685a      	ldr	r2, [r3, #4]
 800eb20:	6042      	str	r2, [r0, #4]
 800eb22:	bd10      	pop	{r4, pc}
 800eb24:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800eb28:	4293      	cmp	r3, r2
 800eb2a:	d10b      	bne.n	800eb44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800eb2c:	4b0f      	ldr	r3, [pc, #60]	; (800eb6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800eb2e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800eb32:	4b0f      	ldr	r3, [pc, #60]	; (800eb70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800eb34:	8081      	strh	r1, [r0, #4]
 800eb36:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb3a:	80c2      	strh	r2, [r0, #6]
 800eb3c:	2300      	movs	r3, #0
 800eb3e:	8003      	strh	r3, [r0, #0]
 800eb40:	8043      	strh	r3, [r0, #2]
 800eb42:	e7ee      	b.n	800eb22 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800eb44:	2300      	movs	r3, #0
 800eb46:	8003      	strh	r3, [r0, #0]
 800eb48:	8043      	strh	r3, [r0, #2]
 800eb4a:	8083      	strh	r3, [r0, #4]
 800eb4c:	e7d8      	b.n	800eb00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800eb4e:	bf00      	nop
 800eb50:	20012154 	.word	0x20012154
 800eb54:	0801cfa4 	.word	0x0801cfa4
 800eb58:	0801dacd 	.word	0x0801dacd
 800eb5c:	0801da09 	.word	0x0801da09
 800eb60:	2001214c 	.word	0x2001214c
 800eb64:	20012150 	.word	0x20012150
 800eb68:	20012134 	.word	0x20012134
 800eb6c:	200120a0 	.word	0x200120a0
 800eb70:	200120a2 	.word	0x200120a2

0800eb74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800eb74:	4b18      	ldr	r3, [pc, #96]	; (800ebd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800eb76:	681b      	ldr	r3, [r3, #0]
 800eb78:	b34b      	cbz	r3, 800ebce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800eb7a:	4a18      	ldr	r2, [pc, #96]	; (800ebdc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800eb7c:	8800      	ldrh	r0, [r0, #0]
 800eb7e:	8812      	ldrh	r2, [r2, #0]
 800eb80:	4290      	cmp	r0, r2
 800eb82:	d211      	bcs.n	800eba8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800eb84:	2214      	movs	r2, #20
 800eb86:	fb02 3300 	mla	r3, r2, r0, r3
 800eb8a:	8a1a      	ldrh	r2, [r3, #16]
 800eb8c:	8919      	ldrh	r1, [r3, #8]
 800eb8e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800eb92:	428a      	cmp	r2, r1
 800eb94:	db1d      	blt.n	800ebd2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800eb96:	8a58      	ldrh	r0, [r3, #18]
 800eb98:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800eb9c:	895b      	ldrh	r3, [r3, #10]
 800eb9e:	4298      	cmp	r0, r3
 800eba0:	bfac      	ite	ge
 800eba2:	2000      	movge	r0, #0
 800eba4:	2001      	movlt	r0, #1
 800eba6:	4770      	bx	lr
 800eba8:	4b0d      	ldr	r3, [pc, #52]	; (800ebe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800ebaa:	881b      	ldrh	r3, [r3, #0]
 800ebac:	4413      	add	r3, r2
 800ebae:	4298      	cmp	r0, r3
 800ebb0:	da0d      	bge.n	800ebce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800ebb2:	4b0c      	ldr	r3, [pc, #48]	; (800ebe4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800ebb4:	681b      	ldr	r3, [r3, #0]
 800ebb6:	1a80      	subs	r0, r0, r2
 800ebb8:	220e      	movs	r2, #14
 800ebba:	fb02 3300 	mla	r3, r2, r0, r3
 800ebbe:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800ebc2:	891a      	ldrh	r2, [r3, #8]
 800ebc4:	4291      	cmp	r1, r2
 800ebc6:	db04      	blt.n	800ebd2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800ebc8:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800ebcc:	e7e6      	b.n	800eb9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800ebce:	2000      	movs	r0, #0
 800ebd0:	4770      	bx	lr
 800ebd2:	2001      	movs	r0, #1
 800ebd4:	4770      	bx	lr
 800ebd6:	bf00      	nop
 800ebd8:	20012154 	.word	0x20012154
 800ebdc:	2001214c 	.word	0x2001214c
 800ebe0:	20012150 	.word	0x20012150
 800ebe4:	20012134 	.word	0x20012134

0800ebe8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800ebe8:	b508      	push	{r3, lr}
 800ebea:	4b12      	ldr	r3, [pc, #72]	; (800ec34 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800ebec:	6819      	ldr	r1, [r3, #0]
 800ebee:	b931      	cbnz	r1, 800ebfe <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800ebf0:	4b11      	ldr	r3, [pc, #68]	; (800ec38 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ebf2:	4a12      	ldr	r2, [pc, #72]	; (800ec3c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800ebf4:	4812      	ldr	r0, [pc, #72]	; (800ec40 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800ebf6:	f44f 7151 	mov.w	r1, #836	; 0x344
 800ebfa:	f00b fbbb 	bl	801a374 <__assert_func>
 800ebfe:	8803      	ldrh	r3, [r0, #0]
 800ec00:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ec04:	4293      	cmp	r3, r2
 800ec06:	d012      	beq.n	800ec2e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800ec08:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ec0c:	4293      	cmp	r3, r2
 800ec0e:	d103      	bne.n	800ec18 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800ec10:	4b0c      	ldr	r3, [pc, #48]	; (800ec44 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800ec12:	681b      	ldr	r3, [r3, #0]
 800ec14:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800ec16:	bd08      	pop	{r3, pc}
 800ec18:	4a0b      	ldr	r2, [pc, #44]	; (800ec48 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800ec1a:	6812      	ldr	r2, [r2, #0]
 800ec1c:	b11a      	cbz	r2, 800ec26 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800ec1e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800ec22:	2800      	cmp	r0, #0
 800ec24:	d1f7      	bne.n	800ec16 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec26:	2214      	movs	r2, #20
 800ec28:	4353      	muls	r3, r2
 800ec2a:	58c8      	ldr	r0, [r1, r3]
 800ec2c:	e7f3      	b.n	800ec16 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec2e:	2000      	movs	r0, #0
 800ec30:	e7f1      	b.n	800ec16 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec32:	bf00      	nop
 800ec34:	20012154 	.word	0x20012154
 800ec38:	0801cfa4 	.word	0x0801cfa4
 800ec3c:	0801db03 	.word	0x0801db03
 800ec40:	0801da09 	.word	0x0801da09
 800ec44:	200120ac 	.word	0x200120ac
 800ec48:	20012130 	.word	0x20012130

0800ec4c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800ec4c:	8802      	ldrh	r2, [r0, #0]
 800ec4e:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800ec52:	429a      	cmp	r2, r3
 800ec54:	d840      	bhi.n	800ecd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800ec56:	4b21      	ldr	r3, [pc, #132]	; (800ecdc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800ec58:	881b      	ldrh	r3, [r3, #0]
 800ec5a:	429a      	cmp	r2, r3
 800ec5c:	d220      	bcs.n	800eca0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800ec5e:	4b20      	ldr	r3, [pc, #128]	; (800ece0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800ec60:	6819      	ldr	r1, [r3, #0]
 800ec62:	2314      	movs	r3, #20
 800ec64:	fb03 1302 	mla	r3, r3, r2, r1
 800ec68:	6858      	ldr	r0, [r3, #4]
 800ec6a:	2800      	cmp	r0, #0
 800ec6c:	d035      	beq.n	800ecda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ec6e:	491d      	ldr	r1, [pc, #116]	; (800ece4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800ec70:	6809      	ldr	r1, [r1, #0]
 800ec72:	2900      	cmp	r1, #0
 800ec74:	d031      	beq.n	800ecda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ec76:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800ec7a:	b371      	cbz	r1, 800ecda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ec7c:	895a      	ldrh	r2, [r3, #10]
 800ec7e:	8918      	ldrh	r0, [r3, #8]
 800ec80:	4350      	muls	r0, r2
 800ec82:	7c5a      	ldrb	r2, [r3, #17]
 800ec84:	7cdb      	ldrb	r3, [r3, #19]
 800ec86:	0952      	lsrs	r2, r2, #5
 800ec88:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800ec8c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ec90:	2b0b      	cmp	r3, #11
 800ec92:	bf18      	it	ne
 800ec94:	0040      	lslne	r0, r0, #1
 800ec96:	3003      	adds	r0, #3
 800ec98:	f020 0003 	bic.w	r0, r0, #3
 800ec9c:	4408      	add	r0, r1
 800ec9e:	4770      	bx	lr
 800eca0:	4911      	ldr	r1, [pc, #68]	; (800ece8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800eca2:	8809      	ldrh	r1, [r1, #0]
 800eca4:	4419      	add	r1, r3
 800eca6:	428a      	cmp	r2, r1
 800eca8:	da16      	bge.n	800ecd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800ecaa:	4910      	ldr	r1, [pc, #64]	; (800ecec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800ecac:	6809      	ldr	r1, [r1, #0]
 800ecae:	1ad3      	subs	r3, r2, r3
 800ecb0:	200e      	movs	r0, #14
 800ecb2:	fb00 1303 	mla	r3, r0, r3, r1
 800ecb6:	7b19      	ldrb	r1, [r3, #12]
 800ecb8:	f001 011f 	and.w	r1, r1, #31
 800ecbc:	290b      	cmp	r1, #11
 800ecbe:	d10b      	bne.n	800ecd8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800ecc0:	8919      	ldrh	r1, [r3, #8]
 800ecc2:	8958      	ldrh	r0, [r3, #10]
 800ecc4:	4b07      	ldr	r3, [pc, #28]	; (800ece4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800ecc6:	4348      	muls	r0, r1
 800ecc8:	6819      	ldr	r1, [r3, #0]
 800ecca:	3003      	adds	r0, #3
 800eccc:	f020 0303 	bic.w	r3, r0, #3
 800ecd0:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800ecd4:	4418      	add	r0, r3
 800ecd6:	4770      	bx	lr
 800ecd8:	2000      	movs	r0, #0
 800ecda:	4770      	bx	lr
 800ecdc:	2001214c 	.word	0x2001214c
 800ece0:	20012154 	.word	0x20012154
 800ece4:	20012130 	.word	0x20012130
 800ece8:	20012150 	.word	0x20012150
 800ecec:	20012134 	.word	0x20012134

0800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800ecf0:	4b19      	ldr	r3, [pc, #100]	; (800ed58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800ecf2:	6819      	ldr	r1, [r3, #0]
 800ecf4:	8803      	ldrh	r3, [r0, #0]
 800ecf6:	b1e9      	cbz	r1, 800ed34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800ecf8:	4a18      	ldr	r2, [pc, #96]	; (800ed5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800ecfa:	8812      	ldrh	r2, [r2, #0]
 800ecfc:	429a      	cmp	r2, r3
 800ecfe:	d90a      	bls.n	800ed16 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800ed00:	2214      	movs	r2, #20
 800ed02:	fb02 1303 	mla	r3, r2, r3, r1
 800ed06:	7c58      	ldrb	r0, [r3, #17]
 800ed08:	0942      	lsrs	r2, r0, #5
 800ed0a:	7cd8      	ldrb	r0, [r3, #19]
 800ed0c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800ed10:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800ed14:	4770      	bx	lr
 800ed16:	4912      	ldr	r1, [pc, #72]	; (800ed60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800ed18:	8809      	ldrh	r1, [r1, #0]
 800ed1a:	4411      	add	r1, r2
 800ed1c:	428b      	cmp	r3, r1
 800ed1e:	da09      	bge.n	800ed34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800ed20:	1a9b      	subs	r3, r3, r2
 800ed22:	4a10      	ldr	r2, [pc, #64]	; (800ed64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800ed24:	6812      	ldr	r2, [r2, #0]
 800ed26:	210e      	movs	r1, #14
 800ed28:	fb01 2303 	mla	r3, r1, r3, r2
 800ed2c:	7b18      	ldrb	r0, [r3, #12]
 800ed2e:	f000 001f 	and.w	r0, r0, #31
 800ed32:	4770      	bx	lr
 800ed34:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ed38:	4293      	cmp	r3, r2
 800ed3a:	d10a      	bne.n	800ed52 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800ed3c:	4b0a      	ldr	r3, [pc, #40]	; (800ed68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800ed3e:	681b      	ldr	r3, [r3, #0]
 800ed40:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ed44:	b10a      	cbz	r2, 800ed4a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800ed46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ed48:	b900      	cbnz	r0, 800ed4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800ed4a:	6898      	ldr	r0, [r3, #8]
 800ed4c:	6803      	ldr	r3, [r0, #0]
 800ed4e:	6a1b      	ldr	r3, [r3, #32]
 800ed50:	4718      	bx	r3
 800ed52:	2000      	movs	r0, #0
 800ed54:	4770      	bx	lr
 800ed56:	bf00      	nop
 800ed58:	20012154 	.word	0x20012154
 800ed5c:	2001214c 	.word	0x2001214c
 800ed60:	20012150 	.word	0x20012150
 800ed64:	20012134 	.word	0x20012134
 800ed68:	200120ac 	.word	0x200120ac

0800ed6c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800ed6c:	2010      	movs	r0, #16
 800ed6e:	4770      	bx	lr

0800ed70 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800ed70:	2000      	movs	r0, #0
 800ed72:	4770      	bx	lr

0800ed74 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800ed74:	00d2      	lsls	r2, r2, #3
 800ed76:	0209      	lsls	r1, r1, #8
 800ed78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800ed7c:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800ed80:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800ed84:	4310      	orrs	r0, r2
 800ed86:	4770      	bx	lr

0800ed88 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800ed88:	0a09      	lsrs	r1, r1, #8
 800ed8a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800ed8e:	4770      	bx	lr

0800ed90 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800ed90:	08c9      	lsrs	r1, r1, #3
 800ed92:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800ed96:	4770      	bx	lr

0800ed98 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800ed98:	00c9      	lsls	r1, r1, #3
 800ed9a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800ed9e:	4770      	bx	lr

0800eda0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800eda0:	2bff      	cmp	r3, #255	; 0xff
 800eda2:	d050      	beq.n	800ee46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800eda4:	2a0b      	cmp	r2, #11
 800eda6:	d04a      	beq.n	800ee3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800eda8:	d80e      	bhi.n	800edc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800edaa:	2a03      	cmp	r2, #3
 800edac:	d03f      	beq.n	800ee2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800edae:	d804      	bhi.n	800edba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800edb0:	2a01      	cmp	r2, #1
 800edb2:	d03e      	beq.n	800ee32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800edb4:	d93f      	bls.n	800ee36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800edb6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800edb8:	4770      	bx	lr
 800edba:	2a09      	cmp	r2, #9
 800edbc:	d03f      	beq.n	800ee3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800edbe:	d83c      	bhi.n	800ee3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800edc0:	2a08      	cmp	r2, #8
 800edc2:	d03a      	beq.n	800ee3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800edc4:	2000      	movs	r0, #0
 800edc6:	4770      	bx	lr
 800edc8:	2a2f      	cmp	r2, #47	; 0x2f
 800edca:	d024      	beq.n	800ee16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800edcc:	d80d      	bhi.n	800edea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800edce:	2a2d      	cmp	r2, #45	; 0x2d
 800edd0:	d014      	beq.n	800edfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800edd2:	d826      	bhi.n	800ee22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800edd4:	2a2c      	cmp	r2, #44	; 0x2c
 800edd6:	d1f5      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800edd8:	684b      	ldr	r3, [r1, #4]
 800edda:	781b      	ldrb	r3, [r3, #0]
 800eddc:	2b01      	cmp	r3, #1
 800edde:	d018      	beq.n	800ee12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800ede0:	d323      	bcc.n	800ee2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800ede2:	2b02      	cmp	r3, #2
 800ede4:	d1ee      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ede6:	6880      	ldr	r0, [r0, #8]
 800ede8:	4770      	bx	lr
 800edea:	2a31      	cmp	r2, #49	; 0x31
 800edec:	d004      	beq.n	800edf8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800edee:	d328      	bcc.n	800ee42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800edf0:	2a32      	cmp	r2, #50	; 0x32
 800edf2:	d026      	beq.n	800ee42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800edf4:	2a33      	cmp	r2, #51	; 0x33
 800edf6:	d1e5      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800edf8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800edfa:	4770      	bx	lr
 800edfc:	684b      	ldr	r3, [r1, #4]
 800edfe:	781b      	ldrb	r3, [r3, #0]
 800ee00:	2b01      	cmp	r3, #1
 800ee02:	d004      	beq.n	800ee0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800ee04:	d30b      	bcc.n	800ee1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800ee06:	2b02      	cmp	r3, #2
 800ee08:	d1dc      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee0a:	6900      	ldr	r0, [r0, #16]
 800ee0c:	4770      	bx	lr
 800ee0e:	6a00      	ldr	r0, [r0, #32]
 800ee10:	4770      	bx	lr
 800ee12:	6980      	ldr	r0, [r0, #24]
 800ee14:	4770      	bx	lr
 800ee16:	684b      	ldr	r3, [r1, #4]
 800ee18:	781b      	ldrb	r3, [r3, #0]
 800ee1a:	2b00      	cmp	r3, #0
 800ee1c:	d1d2      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee1e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ee20:	4770      	bx	lr
 800ee22:	684b      	ldr	r3, [r1, #4]
 800ee24:	781b      	ldrb	r3, [r3, #0]
 800ee26:	2b00      	cmp	r3, #0
 800ee28:	d1cc      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee2a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ee2c:	4770      	bx	lr
 800ee2e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ee30:	4770      	bx	lr
 800ee32:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ee34:	4770      	bx	lr
 800ee36:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800ee38:	4770      	bx	lr
 800ee3a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800ee3c:	4770      	bx	lr
 800ee3e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800ee40:	4770      	bx	lr
 800ee42:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800ee44:	4770      	bx	lr
 800ee46:	2a0b      	cmp	r2, #11
 800ee48:	d049      	beq.n	800eede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ee4a:	d80e      	bhi.n	800ee6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800ee4c:	2a03      	cmp	r2, #3
 800ee4e:	d040      	beq.n	800eed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800ee50:	d804      	bhi.n	800ee5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800ee52:	2a01      	cmp	r2, #1
 800ee54:	d03f      	beq.n	800eed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800ee56:	d940      	bls.n	800eeda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800ee58:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ee5a:	4770      	bx	lr
 800ee5c:	2a09      	cmp	r2, #9
 800ee5e:	d03e      	beq.n	800eede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ee60:	d801      	bhi.n	800ee66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800ee62:	2a08      	cmp	r2, #8
 800ee64:	d1ae      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee66:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800ee68:	4770      	bx	lr
 800ee6a:	2a2f      	cmp	r2, #47	; 0x2f
 800ee6c:	d024      	beq.n	800eeb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800ee6e:	d80d      	bhi.n	800ee8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800ee70:	2a2d      	cmp	r2, #45	; 0x2d
 800ee72:	d014      	beq.n	800ee9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800ee74:	d826      	bhi.n	800eec4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800ee76:	2a2c      	cmp	r2, #44	; 0x2c
 800ee78:	d1a4      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee7a:	684b      	ldr	r3, [r1, #4]
 800ee7c:	781b      	ldrb	r3, [r3, #0]
 800ee7e:	2b01      	cmp	r3, #1
 800ee80:	d018      	beq.n	800eeb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800ee82:	d324      	bcc.n	800eece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800ee84:	2b02      	cmp	r3, #2
 800ee86:	d19d      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee88:	68c0      	ldr	r0, [r0, #12]
 800ee8a:	4770      	bx	lr
 800ee8c:	2a31      	cmp	r2, #49	; 0x31
 800ee8e:	d004      	beq.n	800ee9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800ee90:	d327      	bcc.n	800eee2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ee92:	2a32      	cmp	r2, #50	; 0x32
 800ee94:	d025      	beq.n	800eee2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ee96:	2a33      	cmp	r2, #51	; 0x33
 800ee98:	d194      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee9a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800ee9c:	4770      	bx	lr
 800ee9e:	684b      	ldr	r3, [r1, #4]
 800eea0:	781b      	ldrb	r3, [r3, #0]
 800eea2:	2b01      	cmp	r3, #1
 800eea4:	d004      	beq.n	800eeb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800eea6:	d30b      	bcc.n	800eec0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800eea8:	2b02      	cmp	r3, #2
 800eeaa:	d18b      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eeac:	6940      	ldr	r0, [r0, #20]
 800eeae:	4770      	bx	lr
 800eeb0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800eeb2:	4770      	bx	lr
 800eeb4:	69c0      	ldr	r0, [r0, #28]
 800eeb6:	4770      	bx	lr
 800eeb8:	684b      	ldr	r3, [r1, #4]
 800eeba:	781b      	ldrb	r3, [r3, #0]
 800eebc:	2b00      	cmp	r3, #0
 800eebe:	d181      	bne.n	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eec0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800eec2:	4770      	bx	lr
 800eec4:	684b      	ldr	r3, [r1, #4]
 800eec6:	781b      	ldrb	r3, [r3, #0]
 800eec8:	2b00      	cmp	r3, #0
 800eeca:	f47f af7b 	bne.w	800edc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eece:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800eed0:	4770      	bx	lr
 800eed2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800eed4:	4770      	bx	lr
 800eed6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800eed8:	4770      	bx	lr
 800eeda:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800eedc:	4770      	bx	lr
 800eede:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800eee0:	4770      	bx	lr
 800eee2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800eee4:	4770      	bx	lr

0800eee6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800eee6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeea:	b087      	sub	sp, #28
 800eeec:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800eeee:	9205      	str	r2, [sp, #20]
 800eef0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800eef4:	9202      	str	r2, [sp, #8]
 800eef6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800eefa:	9101      	str	r1, [sp, #4]
 800eefc:	6871      	ldr	r1, [r6, #4]
 800eefe:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ef00:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800ef04:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800ef08:	fb01 2505 	mla	r5, r1, r5, r2
 800ef0c:	6832      	ldr	r2, [r6, #0]
 800ef0e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800ef12:	6802      	ldr	r2, [r0, #0]
 800ef14:	9203      	str	r2, [sp, #12]
 800ef16:	6842      	ldr	r2, [r0, #4]
 800ef18:	fa1f fe84 	uxth.w	lr, r4
 800ef1c:	3204      	adds	r2, #4
 800ef1e:	43e4      	mvns	r4, r4
 800ef20:	9204      	str	r2, [sp, #16]
 800ef22:	b2e4      	uxtb	r4, r4
 800ef24:	9a01      	ldr	r2, [sp, #4]
 800ef26:	2a00      	cmp	r2, #0
 800ef28:	dc03      	bgt.n	800ef32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800ef2a:	9a05      	ldr	r2, [sp, #20]
 800ef2c:	2a00      	cmp	r2, #0
 800ef2e:	f340 8119 	ble.w	800f164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800ef32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef38:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef3a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ef3e:	2b00      	cmp	r3, #0
 800ef40:	dd0f      	ble.n	800ef62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800ef42:	1408      	asrs	r0, r1, #16
 800ef44:	d406      	bmi.n	800ef54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ef46:	4540      	cmp	r0, r8
 800ef48:	da04      	bge.n	800ef54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ef4a:	1410      	asrs	r0, r2, #16
 800ef4c:	d402      	bmi.n	800ef54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ef4e:	9e02      	ldr	r6, [sp, #8]
 800ef50:	42b0      	cmp	r0, r6
 800ef52:	db07      	blt.n	800ef64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800ef54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef56:	4401      	add	r1, r0
 800ef58:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef5a:	3b01      	subs	r3, #1
 800ef5c:	4402      	add	r2, r0
 800ef5e:	3502      	adds	r5, #2
 800ef60:	e7ed      	b.n	800ef3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800ef62:	d00f      	beq.n	800ef84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800ef64:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ef66:	1e58      	subs	r0, r3, #1
 800ef68:	fb06 1600 	mla	r6, r6, r0, r1
 800ef6c:	1436      	asrs	r6, r6, #16
 800ef6e:	d547      	bpl.n	800f000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800ef70:	469b      	mov	fp, r3
 800ef72:	46aa      	mov	sl, r5
 800ef74:	f1bb 0f00 	cmp.w	fp, #0
 800ef78:	f300 809e 	bgt.w	800f0b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800ef7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ef80:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800ef84:	9b01      	ldr	r3, [sp, #4]
 800ef86:	2b00      	cmp	r3, #0
 800ef88:	f340 80ec 	ble.w	800f164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800ef8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ef90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ef94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800ef98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ef9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800efa2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800efa6:	eef0 6a62 	vmov.f32	s13, s5
 800efaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 800efae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800efb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800efb6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800efba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800efbe:	eef0 6a43 	vmov.f32	s13, s6
 800efc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800efc6:	ee12 2a90 	vmov	r2, s5
 800efca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800efce:	fb92 f3f3 	sdiv	r3, r2, r3
 800efd2:	ee13 2a10 	vmov	r2, s6
 800efd6:	9313      	str	r3, [sp, #76]	; 0x4c
 800efd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efda:	fb92 f3f3 	sdiv	r3, r2, r3
 800efde:	9314      	str	r3, [sp, #80]	; 0x50
 800efe0:	9b01      	ldr	r3, [sp, #4]
 800efe2:	9a05      	ldr	r2, [sp, #20]
 800efe4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800efe8:	3b01      	subs	r3, #1
 800efea:	9301      	str	r3, [sp, #4]
 800efec:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800eff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eff2:	eeb0 3a67 	vmov.f32	s6, s15
 800eff6:	bf08      	it	eq
 800eff8:	4613      	moveq	r3, r2
 800effa:	eef0 2a47 	vmov.f32	s5, s14
 800effe:	e791      	b.n	800ef24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f000:	4546      	cmp	r6, r8
 800f002:	dab5      	bge.n	800ef70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f004:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f006:	fb06 2000 	mla	r0, r6, r0, r2
 800f00a:	1400      	asrs	r0, r0, #16
 800f00c:	d4b0      	bmi.n	800ef70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f00e:	9e02      	ldr	r6, [sp, #8]
 800f010:	42b0      	cmp	r0, r6
 800f012:	daad      	bge.n	800ef70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f014:	469a      	mov	sl, r3
 800f016:	46ab      	mov	fp, r5
 800f018:	f1ba 0f00 	cmp.w	sl, #0
 800f01c:	ddae      	ble.n	800ef7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f01e:	9f03      	ldr	r7, [sp, #12]
 800f020:	1410      	asrs	r0, r2, #16
 800f022:	140e      	asrs	r6, r1, #16
 800f024:	fb08 7000 	mla	r0, r8, r0, r7
 800f028:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f02c:	5d80      	ldrb	r0, [r0, r6]
 800f02e:	9e04      	ldr	r6, [sp, #16]
 800f030:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f034:	f8bb 6000 	ldrh.w	r6, [fp]
 800f038:	1237      	asrs	r7, r6, #8
 800f03a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f03e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f042:	fb17 f704 	smulbb	r7, r7, r4
 800f046:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f04a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f04e:	00f6      	lsls	r6, r6, #3
 800f050:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f054:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f058:	10c7      	asrs	r7, r0, #3
 800f05a:	b2f6      	uxtb	r6, r6
 800f05c:	00c0      	lsls	r0, r0, #3
 800f05e:	fb19 f904 	smulbb	r9, r9, r4
 800f062:	fb16 f604 	smulbb	r6, r6, r4
 800f066:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f06a:	b2c0      	uxtb	r0, r0
 800f06c:	fa1f fc8c 	uxth.w	ip, ip
 800f070:	fb07 970e 	mla	r7, r7, lr, r9
 800f074:	fb00 600e 	mla	r0, r0, lr, r6
 800f078:	b280      	uxth	r0, r0
 800f07a:	b2bf      	uxth	r7, r7
 800f07c:	f10c 0601 	add.w	r6, ip, #1
 800f080:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f084:	f107 0901 	add.w	r9, r7, #1
 800f088:	1c46      	adds	r6, r0, #1
 800f08a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f08e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f092:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f094:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f098:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f09c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f0a0:	ea4c 0c06 	orr.w	ip, ip, r6
 800f0a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f0a8:	4401      	add	r1, r0
 800f0aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f0ac:	ea4c 0c09 	orr.w	ip, ip, r9
 800f0b0:	f82b cb02 	strh.w	ip, [fp], #2
 800f0b4:	4402      	add	r2, r0
 800f0b6:	e7af      	b.n	800f018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f0b8:	140e      	asrs	r6, r1, #16
 800f0ba:	d44a      	bmi.n	800f152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f0bc:	4546      	cmp	r6, r8
 800f0be:	da48      	bge.n	800f152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f0c0:	1410      	asrs	r0, r2, #16
 800f0c2:	d446      	bmi.n	800f152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f0c4:	9f02      	ldr	r7, [sp, #8]
 800f0c6:	42b8      	cmp	r0, r7
 800f0c8:	da43      	bge.n	800f152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f0ca:	9f03      	ldr	r7, [sp, #12]
 800f0cc:	fb08 7000 	mla	r0, r8, r0, r7
 800f0d0:	5d80      	ldrb	r0, [r0, r6]
 800f0d2:	9e04      	ldr	r6, [sp, #16]
 800f0d4:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f0d8:	f8ba 6000 	ldrh.w	r6, [sl]
 800f0dc:	1237      	asrs	r7, r6, #8
 800f0de:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f0e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f0e6:	fb17 f704 	smulbb	r7, r7, r4
 800f0ea:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f0ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f0f2:	00f6      	lsls	r6, r6, #3
 800f0f4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f0f8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f0fc:	10c7      	asrs	r7, r0, #3
 800f0fe:	b2f6      	uxtb	r6, r6
 800f100:	00c0      	lsls	r0, r0, #3
 800f102:	fb19 f904 	smulbb	r9, r9, r4
 800f106:	fb16 f604 	smulbb	r6, r6, r4
 800f10a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f10e:	b2c0      	uxtb	r0, r0
 800f110:	fa1f fc8c 	uxth.w	ip, ip
 800f114:	fb07 970e 	mla	r7, r7, lr, r9
 800f118:	fb00 600e 	mla	r0, r0, lr, r6
 800f11c:	b2bf      	uxth	r7, r7
 800f11e:	b280      	uxth	r0, r0
 800f120:	f10c 0601 	add.w	r6, ip, #1
 800f124:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f128:	f107 0901 	add.w	r9, r7, #1
 800f12c:	1c46      	adds	r6, r0, #1
 800f12e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f132:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f136:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f13a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f13e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f142:	ea4c 0c06 	orr.w	ip, ip, r6
 800f146:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f14a:	ea4c 0c09 	orr.w	ip, ip, r9
 800f14e:	f8aa c000 	strh.w	ip, [sl]
 800f152:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f154:	4401      	add	r1, r0
 800f156:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f158:	f10a 0a02 	add.w	sl, sl, #2
 800f15c:	4402      	add	r2, r0
 800f15e:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f162:	e707      	b.n	800ef74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f164:	b007      	add	sp, #28
 800f166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f16a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f16a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f16e:	b085      	sub	sp, #20
 800f170:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800f174:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f176:	9203      	str	r2, [sp, #12]
 800f178:	6842      	ldr	r2, [r0, #4]
 800f17a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f17c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800f17e:	6800      	ldr	r0, [r0, #0]
 800f180:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800f184:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f188:	4696      	mov	lr, r2
 800f18a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f18c:	fb0e 2505 	mla	r5, lr, r5, r2
 800f190:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f194:	6860      	ldr	r0, [r4, #4]
 800f196:	6822      	ldr	r2, [r4, #0]
 800f198:	9201      	str	r2, [sp, #4]
 800f19a:	1d02      	adds	r2, r0, #4
 800f19c:	9202      	str	r2, [sp, #8]
 800f19e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f1a2:	2900      	cmp	r1, #0
 800f1a4:	dc03      	bgt.n	800f1ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f1a6:	9a03      	ldr	r2, [sp, #12]
 800f1a8:	2a00      	cmp	r2, #0
 800f1aa:	f340 809b 	ble.w	800f2e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f1ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f1b0:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f1b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f1b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f1ba:	2b00      	cmp	r3, #0
 800f1bc:	dd0e      	ble.n	800f1dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f1be:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800f1c2:	d406      	bmi.n	800f1d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f1c4:	45e6      	cmp	lr, ip
 800f1c6:	da04      	bge.n	800f1d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f1c8:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800f1cc:	d401      	bmi.n	800f1d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f1ce:	45c6      	cmp	lr, r8
 800f1d0:	db05      	blt.n	800f1de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f1d2:	443c      	add	r4, r7
 800f1d4:	4430      	add	r0, r6
 800f1d6:	3b01      	subs	r3, #1
 800f1d8:	3502      	adds	r5, #2
 800f1da:	e7ee      	b.n	800f1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f1dc:	d010      	beq.n	800f200 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f1de:	f103 3eff 	add.w	lr, r3, #4294967295
 800f1e2:	fb07 490e 	mla	r9, r7, lr, r4
 800f1e6:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f1ea:	d53d      	bpl.n	800f268 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800f1ec:	469e      	mov	lr, r3
 800f1ee:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f1f2:	f1be 0f00 	cmp.w	lr, #0
 800f1f6:	dc58      	bgt.n	800f2aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800f1f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f1fc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f200:	2900      	cmp	r1, #0
 800f202:	dd6f      	ble.n	800f2e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f204:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f208:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f20c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f210:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f212:	3901      	subs	r1, #1
 800f214:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f218:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f21c:	eeb0 6a62 	vmov.f32	s12, s5
 800f220:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f228:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f22c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f230:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f234:	eeb0 6a43 	vmov.f32	s12, s6
 800f238:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f23c:	ee12 2a90 	vmov	r2, s5
 800f240:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f244:	fb92 f7f3 	sdiv	r7, r2, r3
 800f248:	ee13 2a10 	vmov	r2, s6
 800f24c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f250:	fb92 f6f3 	sdiv	r6, r2, r3
 800f254:	9a03      	ldr	r2, [sp, #12]
 800f256:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f25a:	bf08      	it	eq
 800f25c:	4613      	moveq	r3, r2
 800f25e:	eeb0 3a67 	vmov.f32	s6, s15
 800f262:	eef0 2a47 	vmov.f32	s5, s14
 800f266:	e79c      	b.n	800f1a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f268:	45e1      	cmp	r9, ip
 800f26a:	dabf      	bge.n	800f1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f26c:	fb06 0e0e 	mla	lr, r6, lr, r0
 800f270:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f274:	d4ba      	bmi.n	800f1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f276:	45c6      	cmp	lr, r8
 800f278:	dab8      	bge.n	800f1ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f27a:	469e      	mov	lr, r3
 800f27c:	46aa      	mov	sl, r5
 800f27e:	f1be 0f00 	cmp.w	lr, #0
 800f282:	ddb9      	ble.n	800f1f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f284:	9a01      	ldr	r2, [sp, #4]
 800f286:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f28a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f28e:	fb0c 2909 	mla	r9, ip, r9, r2
 800f292:	9a02      	ldr	r2, [sp, #8]
 800f294:	f819 900b 	ldrb.w	r9, [r9, fp]
 800f298:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f29c:	f82a 9b02 	strh.w	r9, [sl], #2
 800f2a0:	443c      	add	r4, r7
 800f2a2:	4430      	add	r0, r6
 800f2a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f2a8:	e7e9      	b.n	800f27e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800f2aa:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f2ae:	d414      	bmi.n	800f2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f2b0:	45e2      	cmp	sl, ip
 800f2b2:	da12      	bge.n	800f2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f2b4:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f2b8:	d40f      	bmi.n	800f2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f2ba:	45c1      	cmp	r9, r8
 800f2bc:	da0d      	bge.n	800f2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f2be:	9a01      	ldr	r2, [sp, #4]
 800f2c0:	fb0c 2909 	mla	r9, ip, r9, r2
 800f2c4:	9a02      	ldr	r2, [sp, #8]
 800f2c6:	f819 900a 	ldrb.w	r9, [r9, sl]
 800f2ca:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f2ce:	f06f 0201 	mvn.w	r2, #1
 800f2d2:	fb02 f90e 	mul.w	r9, r2, lr
 800f2d6:	f82b a009 	strh.w	sl, [fp, r9]
 800f2da:	443c      	add	r4, r7
 800f2dc:	4430      	add	r0, r6
 800f2de:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f2e2:	e786      	b.n	800f1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f2e4:	b005      	add	sp, #20
 800f2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f2ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f2ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2ee:	b087      	sub	sp, #28
 800f2f0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f2f2:	9205      	str	r2, [sp, #20]
 800f2f4:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f2f8:	9202      	str	r2, [sp, #8]
 800f2fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f2fe:	9101      	str	r1, [sp, #4]
 800f300:	6871      	ldr	r1, [r6, #4]
 800f302:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f304:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800f308:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800f30c:	fb01 2404 	mla	r4, r1, r4, r2
 800f310:	6832      	ldr	r2, [r6, #0]
 800f312:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f316:	682a      	ldr	r2, [r5, #0]
 800f318:	9203      	str	r2, [sp, #12]
 800f31a:	686a      	ldr	r2, [r5, #4]
 800f31c:	fa1f fc80 	uxth.w	ip, r0
 800f320:	3204      	adds	r2, #4
 800f322:	43c0      	mvns	r0, r0
 800f324:	9200      	str	r2, [sp, #0]
 800f326:	b2c0      	uxtb	r0, r0
 800f328:	9a01      	ldr	r2, [sp, #4]
 800f32a:	2a00      	cmp	r2, #0
 800f32c:	dc03      	bgt.n	800f336 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f32e:	9a05      	ldr	r2, [sp, #20]
 800f330:	2a00      	cmp	r2, #0
 800f332:	f340 811b 	ble.w	800f56c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f336:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f338:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f33c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f33e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f342:	2b00      	cmp	r3, #0
 800f344:	dd0f      	ble.n	800f366 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f346:	140d      	asrs	r5, r1, #16
 800f348:	d406      	bmi.n	800f358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f34a:	4575      	cmp	r5, lr
 800f34c:	da04      	bge.n	800f358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f34e:	1415      	asrs	r5, r2, #16
 800f350:	d402      	bmi.n	800f358 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f352:	9e02      	ldr	r6, [sp, #8]
 800f354:	42b5      	cmp	r5, r6
 800f356:	db07      	blt.n	800f368 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f358:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f35a:	4429      	add	r1, r5
 800f35c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f35e:	3b01      	subs	r3, #1
 800f360:	442a      	add	r2, r5
 800f362:	3402      	adds	r4, #2
 800f364:	e7ed      	b.n	800f342 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f366:	d00f      	beq.n	800f388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f368:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f36a:	1e5d      	subs	r5, r3, #1
 800f36c:	fb06 1605 	mla	r6, r6, r5, r1
 800f370:	1436      	asrs	r6, r6, #16
 800f372:	d547      	bpl.n	800f404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f374:	469a      	mov	sl, r3
 800f376:	46a1      	mov	r9, r4
 800f378:	f1ba 0f00 	cmp.w	sl, #0
 800f37c:	f300 809f 	bgt.w	800f4be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800f380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f384:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f388:	9b01      	ldr	r3, [sp, #4]
 800f38a:	2b00      	cmp	r3, #0
 800f38c:	f340 80ee 	ble.w	800f56c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f390:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f394:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f398:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f39c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f39e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f3a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f3a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f3aa:	eef0 6a62 	vmov.f32	s13, s5
 800f3ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f3b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f3b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f3ba:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f3be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f3c2:	eef0 6a43 	vmov.f32	s13, s6
 800f3c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f3ca:	ee12 2a90 	vmov	r2, s5
 800f3ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f3d2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f3d6:	ee13 2a10 	vmov	r2, s6
 800f3da:	9313      	str	r3, [sp, #76]	; 0x4c
 800f3dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f3de:	fb92 f3f3 	sdiv	r3, r2, r3
 800f3e2:	9314      	str	r3, [sp, #80]	; 0x50
 800f3e4:	9b01      	ldr	r3, [sp, #4]
 800f3e6:	9a05      	ldr	r2, [sp, #20]
 800f3e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f3ec:	3b01      	subs	r3, #1
 800f3ee:	9301      	str	r3, [sp, #4]
 800f3f0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f3f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f3f6:	eeb0 3a67 	vmov.f32	s6, s15
 800f3fa:	bf08      	it	eq
 800f3fc:	4613      	moveq	r3, r2
 800f3fe:	eef0 2a47 	vmov.f32	s5, s14
 800f402:	e791      	b.n	800f328 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f404:	4576      	cmp	r6, lr
 800f406:	dab5      	bge.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f408:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f40a:	fb06 2505 	mla	r5, r6, r5, r2
 800f40e:	142d      	asrs	r5, r5, #16
 800f410:	d4b0      	bmi.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f412:	9e02      	ldr	r6, [sp, #8]
 800f414:	42b5      	cmp	r5, r6
 800f416:	daad      	bge.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f418:	4699      	mov	r9, r3
 800f41a:	46a2      	mov	sl, r4
 800f41c:	f1b9 0f00 	cmp.w	r9, #0
 800f420:	ddae      	ble.n	800f380 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f422:	9f03      	ldr	r7, [sp, #12]
 800f424:	1415      	asrs	r5, r2, #16
 800f426:	140e      	asrs	r6, r1, #16
 800f428:	fb0e 7505 	mla	r5, lr, r5, r7
 800f42c:	f109 39ff 	add.w	r9, r9, #4294967295
 800f430:	f815 8006 	ldrb.w	r8, [r5, r6]
 800f434:	9d00      	ldr	r5, [sp, #0]
 800f436:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f43a:	eb05 0b08 	add.w	fp, r5, r8
 800f43e:	f8ba 5000 	ldrh.w	r5, [sl]
 800f442:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f446:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f44a:	122f      	asrs	r7, r5, #8
 800f44c:	fb16 f60c 	smulbb	r6, r6, ip
 800f450:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f454:	fb07 6700 	mla	r7, r7, r0, r6
 800f458:	10ee      	asrs	r6, r5, #3
 800f45a:	fb1b fb0c 	smulbb	fp, fp, ip
 800f45e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f462:	fb06 b600 	mla	r6, r6, r0, fp
 800f466:	b2b6      	uxth	r6, r6
 800f468:	9604      	str	r6, [sp, #16]
 800f46a:	9e00      	ldr	r6, [sp, #0]
 800f46c:	00ed      	lsls	r5, r5, #3
 800f46e:	f816 8008 	ldrb.w	r8, [r6, r8]
 800f472:	b2ed      	uxtb	r5, r5
 800f474:	fb15 f500 	smulbb	r5, r5, r0
 800f478:	b2bf      	uxth	r7, r7
 800f47a:	fb08 580c 	mla	r8, r8, ip, r5
 800f47e:	fa1f f888 	uxth.w	r8, r8
 800f482:	1c7d      	adds	r5, r7, #1
 800f484:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f488:	f108 0501 	add.w	r5, r8, #1
 800f48c:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800f490:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f494:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f498:	432f      	orrs	r7, r5
 800f49a:	9d04      	ldr	r5, [sp, #16]
 800f49c:	f105 0b01 	add.w	fp, r5, #1
 800f4a0:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f4a4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f4a6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f4aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f4ae:	4429      	add	r1, r5
 800f4b0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f4b2:	ea47 070b 	orr.w	r7, r7, fp
 800f4b6:	f82a 7b02 	strh.w	r7, [sl], #2
 800f4ba:	442a      	add	r2, r5
 800f4bc:	e7ae      	b.n	800f41c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f4be:	140e      	asrs	r6, r1, #16
 800f4c0:	d44b      	bmi.n	800f55a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f4c2:	4576      	cmp	r6, lr
 800f4c4:	da49      	bge.n	800f55a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f4c6:	1415      	asrs	r5, r2, #16
 800f4c8:	d447      	bmi.n	800f55a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f4ca:	9f02      	ldr	r7, [sp, #8]
 800f4cc:	42bd      	cmp	r5, r7
 800f4ce:	da44      	bge.n	800f55a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800f4d0:	9f03      	ldr	r7, [sp, #12]
 800f4d2:	fb0e 7505 	mla	r5, lr, r5, r7
 800f4d6:	f815 8006 	ldrb.w	r8, [r5, r6]
 800f4da:	9d00      	ldr	r5, [sp, #0]
 800f4dc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f4e0:	eb05 0b08 	add.w	fp, r5, r8
 800f4e4:	f8b9 5000 	ldrh.w	r5, [r9]
 800f4e8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f4ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f4f0:	122f      	asrs	r7, r5, #8
 800f4f2:	fb16 f60c 	smulbb	r6, r6, ip
 800f4f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f4fa:	fb07 6700 	mla	r7, r7, r0, r6
 800f4fe:	10ee      	asrs	r6, r5, #3
 800f500:	fb1b fb0c 	smulbb	fp, fp, ip
 800f504:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f508:	fb06 b600 	mla	r6, r6, r0, fp
 800f50c:	b2b6      	uxth	r6, r6
 800f50e:	9604      	str	r6, [sp, #16]
 800f510:	9e00      	ldr	r6, [sp, #0]
 800f512:	00ed      	lsls	r5, r5, #3
 800f514:	f816 8008 	ldrb.w	r8, [r6, r8]
 800f518:	b2ed      	uxtb	r5, r5
 800f51a:	fb15 f500 	smulbb	r5, r5, r0
 800f51e:	b2bf      	uxth	r7, r7
 800f520:	fb08 580c 	mla	r8, r8, ip, r5
 800f524:	fa1f f888 	uxth.w	r8, r8
 800f528:	1c7d      	adds	r5, r7, #1
 800f52a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f52e:	f108 0501 	add.w	r5, r8, #1
 800f532:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800f536:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f53a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f53e:	432f      	orrs	r7, r5
 800f540:	9d04      	ldr	r5, [sp, #16]
 800f542:	f105 0b01 	add.w	fp, r5, #1
 800f546:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f54a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f54e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f552:	ea47 070b 	orr.w	r7, r7, fp
 800f556:	f8a9 7000 	strh.w	r7, [r9]
 800f55a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f55c:	4429      	add	r1, r5
 800f55e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f560:	f109 0902 	add.w	r9, r9, #2
 800f564:	442a      	add	r2, r5
 800f566:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f56a:	e705      	b.n	800f378 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f56c:	b007      	add	sp, #28
 800f56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f574 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f578:	b085      	sub	sp, #20
 800f57a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f57e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f580:	9203      	str	r2, [sp, #12]
 800f582:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f586:	6870      	ldr	r0, [r6, #4]
 800f588:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800f58a:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800f58e:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f592:	9101      	str	r1, [sp, #4]
 800f594:	fb00 2404 	mla	r4, r0, r4, r2
 800f598:	6832      	ldr	r2, [r6, #0]
 800f59a:	686e      	ldr	r6, [r5, #4]
 800f59c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f5a0:	682a      	ldr	r2, [r5, #0]
 800f5a2:	9202      	str	r2, [sp, #8]
 800f5a4:	3604      	adds	r6, #4
 800f5a6:	9a01      	ldr	r2, [sp, #4]
 800f5a8:	2a00      	cmp	r2, #0
 800f5aa:	dc03      	bgt.n	800f5b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800f5ac:	9a03      	ldr	r2, [sp, #12]
 800f5ae:	2a00      	cmp	r2, #0
 800f5b0:	f340 80c7 	ble.w	800f742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800f5b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f5b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f5ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f5bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f5c0:	2b00      	cmp	r3, #0
 800f5c2:	dd0e      	ble.n	800f5e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f5c4:	1405      	asrs	r5, r0, #16
 800f5c6:	d405      	bmi.n	800f5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f5c8:	42bd      	cmp	r5, r7
 800f5ca:	da03      	bge.n	800f5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f5cc:	1415      	asrs	r5, r2, #16
 800f5ce:	d401      	bmi.n	800f5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800f5d0:	4545      	cmp	r5, r8
 800f5d2:	db07      	blt.n	800f5e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800f5d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f5d6:	4428      	add	r0, r5
 800f5d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f5da:	3b01      	subs	r3, #1
 800f5dc:	442a      	add	r2, r5
 800f5de:	3402      	adds	r4, #2
 800f5e0:	e7ee      	b.n	800f5c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f5e2:	d010      	beq.n	800f606 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f5e4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f5e6:	1e5d      	subs	r5, r3, #1
 800f5e8:	fb01 0c05 	mla	ip, r1, r5, r0
 800f5ec:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800f5f0:	d545      	bpl.n	800f67e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800f5f2:	469e      	mov	lr, r3
 800f5f4:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800f5f8:	f1be 0f00 	cmp.w	lr, #0
 800f5fc:	dc72      	bgt.n	800f6e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f5fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f602:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f606:	9b01      	ldr	r3, [sp, #4]
 800f608:	2b00      	cmp	r3, #0
 800f60a:	f340 809a 	ble.w	800f742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800f60e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f612:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f616:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f61a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f61c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f620:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f624:	eeb0 6a62 	vmov.f32	s12, s5
 800f628:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f62c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f630:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f634:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f638:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f63c:	eeb0 6a43 	vmov.f32	s12, s6
 800f640:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f644:	ee12 2a90 	vmov	r2, s5
 800f648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f64c:	fb92 f3f3 	sdiv	r3, r2, r3
 800f650:	ee13 2a10 	vmov	r2, s6
 800f654:	9311      	str	r3, [sp, #68]	; 0x44
 800f656:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f658:	fb92 f3f3 	sdiv	r3, r2, r3
 800f65c:	9312      	str	r3, [sp, #72]	; 0x48
 800f65e:	9b01      	ldr	r3, [sp, #4]
 800f660:	9a03      	ldr	r2, [sp, #12]
 800f662:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f666:	3b01      	subs	r3, #1
 800f668:	9301      	str	r3, [sp, #4]
 800f66a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f66e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f670:	eeb0 3a67 	vmov.f32	s6, s15
 800f674:	bf08      	it	eq
 800f676:	4613      	moveq	r3, r2
 800f678:	eef0 2a47 	vmov.f32	s5, s14
 800f67c:	e793      	b.n	800f5a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800f67e:	45bc      	cmp	ip, r7
 800f680:	dab7      	bge.n	800f5f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f682:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f684:	fb01 2505 	mla	r5, r1, r5, r2
 800f688:	142d      	asrs	r5, r5, #16
 800f68a:	d4b2      	bmi.n	800f5f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f68c:	4545      	cmp	r5, r8
 800f68e:	dab0      	bge.n	800f5f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f690:	469e      	mov	lr, r3
 800f692:	46a2      	mov	sl, r4
 800f694:	f1be 0f00 	cmp.w	lr, #0
 800f698:	ddb1      	ble.n	800f5fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f69a:	9902      	ldr	r1, [sp, #8]
 800f69c:	1415      	asrs	r5, r2, #16
 800f69e:	fb07 1505 	mla	r5, r7, r5, r1
 800f6a2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800f6a6:	4928      	ldr	r1, [pc, #160]	; (800f748 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800f6a8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800f6ac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800f6b0:	eb06 0b0c 	add.w	fp, r6, ip
 800f6b4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f6b8:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800f6bc:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800f6c0:	00ed      	lsls	r5, r5, #3
 800f6c2:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800f6c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f6ca:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f6cc:	ea49 0505 	orr.w	r5, r9, r5
 800f6d0:	f816 900c 	ldrb.w	r9, [r6, ip]
 800f6d4:	4408      	add	r0, r1
 800f6d6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f6d8:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800f6dc:	f82a 5b02 	strh.w	r5, [sl], #2
 800f6e0:	440a      	add	r2, r1
 800f6e2:	e7d7      	b.n	800f694 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800f6e4:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800f6e8:	d424      	bmi.n	800f734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800f6ea:	45bc      	cmp	ip, r7
 800f6ec:	da22      	bge.n	800f734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800f6ee:	1415      	asrs	r5, r2, #16
 800f6f0:	d420      	bmi.n	800f734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800f6f2:	4545      	cmp	r5, r8
 800f6f4:	da1e      	bge.n	800f734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800f6f6:	9902      	ldr	r1, [sp, #8]
 800f6f8:	fb07 1505 	mla	r5, r7, r5, r1
 800f6fc:	f06f 0101 	mvn.w	r1, #1
 800f700:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800f704:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800f708:	eb06 050c 	add.w	r5, r6, ip
 800f70c:	fb01 f90e 	mul.w	r9, r1, lr
 800f710:	f895 a002 	ldrb.w	sl, [r5, #2]
 800f714:	786d      	ldrb	r5, [r5, #1]
 800f716:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800f71a:	00ed      	lsls	r5, r5, #3
 800f71c:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800f720:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f724:	ea4a 0505 	orr.w	r5, sl, r5
 800f728:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800f72c:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800f730:	f82b 5009 	strh.w	r5, [fp, r9]
 800f734:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f736:	4408      	add	r0, r1
 800f738:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f73a:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f73e:	440a      	add	r2, r1
 800f740:	e75a      	b.n	800f5f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800f742:	b005      	add	sp, #20
 800f744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f748:	fffff800 	.word	0xfffff800

0800f74c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f750:	b087      	sub	sp, #28
 800f752:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f756:	9204      	str	r2, [sp, #16]
 800f758:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f75c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f75e:	9201      	str	r2, [sp, #4]
 800f760:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800f764:	9205      	str	r2, [sp, #20]
 800f766:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f76a:	9100      	str	r1, [sp, #0]
 800f76c:	6869      	ldr	r1, [r5, #4]
 800f76e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f770:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800f774:	fb01 2404 	mla	r4, r1, r4, r2
 800f778:	682a      	ldr	r2, [r5, #0]
 800f77a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f77e:	6802      	ldr	r2, [r0, #0]
 800f780:	9202      	str	r2, [sp, #8]
 800f782:	6842      	ldr	r2, [r0, #4]
 800f784:	3204      	adds	r2, #4
 800f786:	9203      	str	r2, [sp, #12]
 800f788:	9a00      	ldr	r2, [sp, #0]
 800f78a:	2a00      	cmp	r2, #0
 800f78c:	dc03      	bgt.n	800f796 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800f78e:	9a04      	ldr	r2, [sp, #16]
 800f790:	2a00      	cmp	r2, #0
 800f792:	f340 812c 	ble.w	800f9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f796:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f798:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f79c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f79e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f7a2:	2b00      	cmp	r3, #0
 800f7a4:	dd0f      	ble.n	800f7c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800f7a6:	1402      	asrs	r2, r0, #16
 800f7a8:	d406      	bmi.n	800f7b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800f7aa:	4572      	cmp	r2, lr
 800f7ac:	da04      	bge.n	800f7b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800f7ae:	140a      	asrs	r2, r1, #16
 800f7b0:	d402      	bmi.n	800f7b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800f7b2:	9d01      	ldr	r5, [sp, #4]
 800f7b4:	42aa      	cmp	r2, r5
 800f7b6:	db07      	blt.n	800f7c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f7b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f7ba:	4410      	add	r0, r2
 800f7bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f7be:	3b01      	subs	r3, #1
 800f7c0:	4411      	add	r1, r2
 800f7c2:	3402      	adds	r4, #2
 800f7c4:	e7ed      	b.n	800f7a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800f7c6:	d00f      	beq.n	800f7e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800f7c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f7ca:	1e5a      	subs	r2, r3, #1
 800f7cc:	fb05 0502 	mla	r5, r5, r2, r0
 800f7d0:	142d      	asrs	r5, r5, #16
 800f7d2:	d545      	bpl.n	800f860 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800f7d4:	4699      	mov	r9, r3
 800f7d6:	46a0      	mov	r8, r4
 800f7d8:	f1b9 0f00 	cmp.w	r9, #0
 800f7dc:	f300 80a7 	bgt.w	800f92e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f7e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f7e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f7e8:	9b00      	ldr	r3, [sp, #0]
 800f7ea:	2b00      	cmp	r3, #0
 800f7ec:	f340 80ff 	ble.w	800f9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f7f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f7f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f7f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f7fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f802:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f806:	eeb0 6a62 	vmov.f32	s12, s5
 800f80a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f80e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f812:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f816:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f81a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f81e:	eeb0 6a43 	vmov.f32	s12, s6
 800f822:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f826:	ee12 2a90 	vmov	r2, s5
 800f82a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f82e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f832:	ee13 2a10 	vmov	r2, s6
 800f836:	9313      	str	r3, [sp, #76]	; 0x4c
 800f838:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f83a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f83e:	9314      	str	r3, [sp, #80]	; 0x50
 800f840:	9b00      	ldr	r3, [sp, #0]
 800f842:	9a04      	ldr	r2, [sp, #16]
 800f844:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f848:	3b01      	subs	r3, #1
 800f84a:	9300      	str	r3, [sp, #0]
 800f84c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f850:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f852:	eeb0 3a67 	vmov.f32	s6, s15
 800f856:	bf08      	it	eq
 800f858:	4613      	moveq	r3, r2
 800f85a:	eef0 2a47 	vmov.f32	s5, s14
 800f85e:	e793      	b.n	800f788 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800f860:	4575      	cmp	r5, lr
 800f862:	dab7      	bge.n	800f7d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f864:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f866:	fb05 1202 	mla	r2, r5, r2, r1
 800f86a:	1412      	asrs	r2, r2, #16
 800f86c:	d4b2      	bmi.n	800f7d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f86e:	9d01      	ldr	r5, [sp, #4]
 800f870:	42aa      	cmp	r2, r5
 800f872:	daaf      	bge.n	800f7d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f874:	f04f 0800 	mov.w	r8, #0
 800f878:	eba3 0208 	sub.w	r2, r3, r8
 800f87c:	2a00      	cmp	r2, #0
 800f87e:	ddaf      	ble.n	800f7e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800f880:	9e02      	ldr	r6, [sp, #8]
 800f882:	140a      	asrs	r2, r1, #16
 800f884:	1405      	asrs	r5, r0, #16
 800f886:	fb0e 6202 	mla	r2, lr, r2, r6
 800f88a:	5d52      	ldrb	r2, [r2, r5]
 800f88c:	9d03      	ldr	r5, [sp, #12]
 800f88e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f892:	0e2e      	lsrs	r6, r5, #24
 800f894:	d044      	beq.n	800f920 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800f896:	9a05      	ldr	r2, [sp, #20]
 800f898:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800f89c:	4356      	muls	r6, r2
 800f89e:	1c72      	adds	r2, r6, #1
 800f8a0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f8a4:	1212      	asrs	r2, r2, #8
 800f8a6:	fa1f f982 	uxth.w	r9, r2
 800f8aa:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f8ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f8b2:	43d2      	mvns	r2, r2
 800f8b4:	b2d2      	uxtb	r2, r2
 800f8b6:	fb16 f609 	smulbb	r6, r6, r9
 800f8ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f8be:	fb07 6702 	mla	r7, r7, r2, r6
 800f8c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f8c6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f8ca:	b2ed      	uxtb	r5, r5
 800f8cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f8d0:	fa5f fc8c 	uxtb.w	ip, ip
 800f8d4:	fb15 f509 	smulbb	r5, r5, r9
 800f8d8:	fb0c 5502 	mla	r5, ip, r2, r5
 800f8dc:	b2bf      	uxth	r7, r7
 800f8de:	fb1a fa09 	smulbb	sl, sl, r9
 800f8e2:	b2ad      	uxth	r5, r5
 800f8e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f8e8:	fb06 a602 	mla	r6, r6, r2, sl
 800f8ec:	1c7a      	adds	r2, r7, #1
 800f8ee:	f105 0a01 	add.w	sl, r5, #1
 800f8f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f8f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f8fa:	b2b6      	uxth	r6, r6
 800f8fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f900:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f904:	ea47 070a 	orr.w	r7, r7, sl
 800f908:	f106 0a01 	add.w	sl, r6, #1
 800f90c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f910:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f914:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f918:	ea47 070a 	orr.w	r7, r7, sl
 800f91c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f920:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f922:	4410      	add	r0, r2
 800f924:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f926:	f108 0801 	add.w	r8, r8, #1
 800f92a:	4411      	add	r1, r2
 800f92c:	e7a4      	b.n	800f878 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800f92e:	1405      	asrs	r5, r0, #16
 800f930:	d454      	bmi.n	800f9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f932:	4575      	cmp	r5, lr
 800f934:	da52      	bge.n	800f9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f936:	140a      	asrs	r2, r1, #16
 800f938:	d450      	bmi.n	800f9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f93a:	9e01      	ldr	r6, [sp, #4]
 800f93c:	42b2      	cmp	r2, r6
 800f93e:	da4d      	bge.n	800f9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f940:	9e02      	ldr	r6, [sp, #8]
 800f942:	fb0e 6202 	mla	r2, lr, r2, r6
 800f946:	5d52      	ldrb	r2, [r2, r5]
 800f948:	9d03      	ldr	r5, [sp, #12]
 800f94a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f94e:	0e2e      	lsrs	r6, r5, #24
 800f950:	d044      	beq.n	800f9dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f952:	9a05      	ldr	r2, [sp, #20]
 800f954:	f8b8 c000 	ldrh.w	ip, [r8]
 800f958:	4356      	muls	r6, r2
 800f95a:	1c72      	adds	r2, r6, #1
 800f95c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f960:	1212      	asrs	r2, r2, #8
 800f962:	fa1f fa82 	uxth.w	sl, r2
 800f966:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f96a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f96e:	43d2      	mvns	r2, r2
 800f970:	b2d2      	uxtb	r2, r2
 800f972:	fb16 f60a 	smulbb	r6, r6, sl
 800f976:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f97a:	fb07 6702 	mla	r7, r7, r2, r6
 800f97e:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800f982:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f986:	b2ed      	uxtb	r5, r5
 800f988:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f98c:	fa5f fc8c 	uxtb.w	ip, ip
 800f990:	fb15 f50a 	smulbb	r5, r5, sl
 800f994:	fb0c 5502 	mla	r5, ip, r2, r5
 800f998:	b2bf      	uxth	r7, r7
 800f99a:	fb1b fb0a 	smulbb	fp, fp, sl
 800f99e:	b2ad      	uxth	r5, r5
 800f9a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f9a4:	fb06 b602 	mla	r6, r6, r2, fp
 800f9a8:	1c7a      	adds	r2, r7, #1
 800f9aa:	f105 0b01 	add.w	fp, r5, #1
 800f9ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f9b2:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f9b6:	b2b6      	uxth	r6, r6
 800f9b8:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800f9bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f9c0:	ea47 070b 	orr.w	r7, r7, fp
 800f9c4:	f106 0b01 	add.w	fp, r6, #1
 800f9c8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f9cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f9d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f9d4:	ea47 070b 	orr.w	r7, r7, fp
 800f9d8:	f8a8 7000 	strh.w	r7, [r8]
 800f9dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f9de:	4410      	add	r0, r2
 800f9e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f9e2:	f108 0802 	add.w	r8, r8, #2
 800f9e6:	4411      	add	r1, r2
 800f9e8:	f109 39ff 	add.w	r9, r9, #4294967295
 800f9ec:	e6f4      	b.n	800f7d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f9ee:	b007      	add	sp, #28
 800f9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f9f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9f8:	b087      	sub	sp, #28
 800f9fa:	468b      	mov	fp, r1
 800f9fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f9fe:	9205      	str	r2, [sp, #20]
 800fa00:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fa04:	9201      	str	r2, [sp, #4]
 800fa06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fa0a:	6869      	ldr	r1, [r5, #4]
 800fa0c:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fa0e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fa12:	fb01 2404 	mla	r4, r1, r4, r2
 800fa16:	682a      	ldr	r2, [r5, #0]
 800fa18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fa1c:	6802      	ldr	r2, [r0, #0]
 800fa1e:	9203      	str	r2, [sp, #12]
 800fa20:	6842      	ldr	r2, [r0, #4]
 800fa22:	3204      	adds	r2, #4
 800fa24:	9204      	str	r2, [sp, #16]
 800fa26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fa2a:	f1bb 0f00 	cmp.w	fp, #0
 800fa2e:	dc03      	bgt.n	800fa38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800fa30:	9a05      	ldr	r2, [sp, #20]
 800fa32:	2a00      	cmp	r2, #0
 800fa34:	f340 814a 	ble.w	800fccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800fa38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fa3a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fa3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fa40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fa44:	2b00      	cmp	r3, #0
 800fa46:	dd0f      	ble.n	800fa68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800fa48:	1408      	asrs	r0, r1, #16
 800fa4a:	d406      	bmi.n	800fa5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fa4c:	4540      	cmp	r0, r8
 800fa4e:	da04      	bge.n	800fa5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fa50:	1410      	asrs	r0, r2, #16
 800fa52:	d402      	bmi.n	800fa5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fa54:	9d01      	ldr	r5, [sp, #4]
 800fa56:	42a8      	cmp	r0, r5
 800fa58:	db07      	blt.n	800fa6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800fa5a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fa5c:	4401      	add	r1, r0
 800fa5e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fa60:	3b01      	subs	r3, #1
 800fa62:	4402      	add	r2, r0
 800fa64:	3402      	adds	r4, #2
 800fa66:	e7ed      	b.n	800fa44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800fa68:	d018      	beq.n	800fa9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800fa6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fa6c:	1e58      	subs	r0, r3, #1
 800fa6e:	fb05 1500 	mla	r5, r5, r0, r1
 800fa72:	142d      	asrs	r5, r5, #16
 800fa74:	d40a      	bmi.n	800fa8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fa76:	4545      	cmp	r5, r8
 800fa78:	da08      	bge.n	800fa8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fa7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fa7c:	fb05 2000 	mla	r0, r5, r0, r2
 800fa80:	1400      	asrs	r0, r0, #16
 800fa82:	d403      	bmi.n	800fa8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fa84:	9d01      	ldr	r5, [sp, #4]
 800fa86:	42a8      	cmp	r0, r5
 800fa88:	f2c0 80b7 	blt.w	800fbfa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800fa8c:	2600      	movs	r6, #0
 800fa8e:	1998      	adds	r0, r3, r6
 800fa90:	2800      	cmp	r0, #0
 800fa92:	dc3e      	bgt.n	800fb12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800fa94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fa9c:	f1bb 0f00 	cmp.w	fp, #0
 800faa0:	f340 8114 	ble.w	800fccc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800faa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800faa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800faac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fab0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fab2:	f1bb 0b01 	subs.w	fp, fp, #1
 800fab6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800faba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fabe:	eeb0 6a62 	vmov.f32	s12, s5
 800fac2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fac6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800faca:	ee77 2a62 	vsub.f32	s5, s14, s5
 800face:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fad2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fad6:	eeb0 6a43 	vmov.f32	s12, s6
 800fada:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fade:	ee12 2a90 	vmov	r2, s5
 800fae2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fae6:	fb92 f3f3 	sdiv	r3, r2, r3
 800faea:	ee13 2a10 	vmov	r2, s6
 800faee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800faf2:	9313      	str	r3, [sp, #76]	; 0x4c
 800faf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800faf6:	fb92 f3f3 	sdiv	r3, r2, r3
 800fafa:	9a05      	ldr	r2, [sp, #20]
 800fafc:	9314      	str	r3, [sp, #80]	; 0x50
 800fafe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fb02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fb04:	eeb0 3a67 	vmov.f32	s6, s15
 800fb08:	bf08      	it	eq
 800fb0a:	4613      	moveq	r3, r2
 800fb0c:	eef0 2a47 	vmov.f32	s5, s14
 800fb10:	e78b      	b.n	800fa2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800fb12:	140d      	asrs	r5, r1, #16
 800fb14:	d459      	bmi.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb16:	4545      	cmp	r5, r8
 800fb18:	da57      	bge.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb1a:	1410      	asrs	r0, r2, #16
 800fb1c:	d455      	bmi.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb1e:	9f01      	ldr	r7, [sp, #4]
 800fb20:	42b8      	cmp	r0, r7
 800fb22:	da52      	bge.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb24:	9f03      	ldr	r7, [sp, #12]
 800fb26:	fb08 7000 	mla	r0, r8, r0, r7
 800fb2a:	5d40      	ldrb	r0, [r0, r5]
 800fb2c:	9d04      	ldr	r5, [sp, #16]
 800fb2e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800fb32:	0e07      	lsrs	r7, r0, #24
 800fb34:	2fff      	cmp	r7, #255	; 0xff
 800fb36:	d04e      	beq.n	800fbd6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fb38:	b2fd      	uxtb	r5, r7
 800fb3a:	2f00      	cmp	r7, #0
 800fb3c:	d045      	beq.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fb3e:	f06f 0701 	mvn.w	r7, #1
 800fb42:	4377      	muls	r7, r6
 800fb44:	fa1f f985 	uxth.w	r9, r5
 800fb48:	f834 e007 	ldrh.w	lr, [r4, r7]
 800fb4c:	9702      	str	r7, [sp, #8]
 800fb4e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fb52:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800fb56:	43ed      	mvns	r5, r5
 800fb58:	b2ed      	uxtb	r5, r5
 800fb5a:	fb17 f709 	smulbb	r7, r7, r9
 800fb5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fb62:	fb0c 7c05 	mla	ip, ip, r5, r7
 800fb66:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800fb6a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800fb6e:	b2c0      	uxtb	r0, r0
 800fb70:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fb74:	fa5f fe8e 	uxtb.w	lr, lr
 800fb78:	fb10 f009 	smulbb	r0, r0, r9
 800fb7c:	fb0e 0005 	mla	r0, lr, r5, r0
 800fb80:	b280      	uxth	r0, r0
 800fb82:	fa1f fc8c 	uxth.w	ip, ip
 800fb86:	fb1a fa09 	smulbb	sl, sl, r9
 800fb8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fb8e:	fb07 a705 	mla	r7, r7, r5, sl
 800fb92:	f100 0a01 	add.w	sl, r0, #1
 800fb96:	f10c 0501 	add.w	r5, ip, #1
 800fb9a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800fb9e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fba2:	b2bf      	uxth	r7, r7
 800fba4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fba8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fbac:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fbb0:	f107 0a01 	add.w	sl, r7, #1
 800fbb4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fbb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fbbc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fbc0:	9802      	ldr	r0, [sp, #8]
 800fbc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fbc6:	f824 c000 	strh.w	ip, [r4, r0]
 800fbca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fbcc:	4401      	add	r1, r0
 800fbce:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fbd0:	3e01      	subs	r6, #1
 800fbd2:	4402      	add	r2, r0
 800fbd4:	e75b      	b.n	800fa8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800fbd6:	f06f 0501 	mvn.w	r5, #1
 800fbda:	fb05 f706 	mul.w	r7, r5, r6
 800fbde:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800fbe2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800fbe6:	0945      	lsrs	r5, r0, #5
 800fbe8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fbec:	ea4c 0505 	orr.w	r5, ip, r5
 800fbf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800fbf4:	4305      	orrs	r5, r0
 800fbf6:	53e5      	strh	r5, [r4, r7]
 800fbf8:	e7e7      	b.n	800fbca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fbfa:	f04f 0e00 	mov.w	lr, #0
 800fbfe:	eba3 000e 	sub.w	r0, r3, lr
 800fc02:	2800      	cmp	r0, #0
 800fc04:	f77f af46 	ble.w	800fa94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800fc08:	9e03      	ldr	r6, [sp, #12]
 800fc0a:	1410      	asrs	r0, r2, #16
 800fc0c:	140d      	asrs	r5, r1, #16
 800fc0e:	fb08 6000 	mla	r0, r8, r0, r6
 800fc12:	5d40      	ldrb	r0, [r0, r5]
 800fc14:	9d04      	ldr	r5, [sp, #16]
 800fc16:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800fc1a:	0e06      	lsrs	r6, r0, #24
 800fc1c:	2eff      	cmp	r6, #255	; 0xff
 800fc1e:	d048      	beq.n	800fcb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800fc20:	b2f5      	uxtb	r5, r6
 800fc22:	2e00      	cmp	r6, #0
 800fc24:	d03e      	beq.n	800fca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800fc26:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800fc2a:	fa1f f985 	uxth.w	r9, r5
 800fc2e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fc32:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800fc36:	43ed      	mvns	r5, r5
 800fc38:	b2ed      	uxtb	r5, r5
 800fc3a:	fb16 f609 	smulbb	r6, r6, r9
 800fc3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fc42:	fb07 6705 	mla	r7, r7, r5, r6
 800fc46:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800fc4a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fc4e:	b2c0      	uxtb	r0, r0
 800fc50:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fc54:	fa5f fc8c 	uxtb.w	ip, ip
 800fc58:	fb10 f009 	smulbb	r0, r0, r9
 800fc5c:	fb0c 0005 	mla	r0, ip, r5, r0
 800fc60:	b2bf      	uxth	r7, r7
 800fc62:	fb1a fa09 	smulbb	sl, sl, r9
 800fc66:	b280      	uxth	r0, r0
 800fc68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fc6c:	fb06 a605 	mla	r6, r6, r5, sl
 800fc70:	1c7d      	adds	r5, r7, #1
 800fc72:	f100 0a01 	add.w	sl, r0, #1
 800fc76:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fc7a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800fc7e:	b2b6      	uxth	r6, r6
 800fc80:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fc84:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fc88:	ea47 070a 	orr.w	r7, r7, sl
 800fc8c:	f106 0a01 	add.w	sl, r6, #1
 800fc90:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fc94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fc98:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fc9c:	ea47 070a 	orr.w	r7, r7, sl
 800fca0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800fca4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fca6:	4401      	add	r1, r0
 800fca8:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fcaa:	f10e 0e01 	add.w	lr, lr, #1
 800fcae:	4402      	add	r2, r0
 800fcb0:	e7a5      	b.n	800fbfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800fcb2:	4d08      	ldr	r5, [pc, #32]	; (800fcd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800fcb4:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800fcb8:	0945      	lsrs	r5, r0, #5
 800fcba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fcbe:	4335      	orrs	r5, r6
 800fcc0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800fcc4:	4305      	orrs	r5, r0
 800fcc6:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800fcca:	e7eb      	b.n	800fca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800fccc:	b007      	add	sp, #28
 800fcce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcd2:	bf00      	nop
 800fcd4:	fffff800 	.word	0xfffff800

0800fcd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fcd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcdc:	b087      	sub	sp, #28
 800fcde:	468b      	mov	fp, r1
 800fce0:	9204      	str	r2, [sp, #16]
 800fce2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fce6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fce8:	9201      	str	r2, [sp, #4]
 800fcea:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fcee:	9205      	str	r2, [sp, #20]
 800fcf0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fcf4:	6869      	ldr	r1, [r5, #4]
 800fcf6:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fcf8:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fcfc:	fb01 2404 	mla	r4, r1, r4, r2
 800fd00:	682a      	ldr	r2, [r5, #0]
 800fd02:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fd06:	6802      	ldr	r2, [r0, #0]
 800fd08:	9202      	str	r2, [sp, #8]
 800fd0a:	6842      	ldr	r2, [r0, #4]
 800fd0c:	9203      	str	r2, [sp, #12]
 800fd0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fd12:	f1bb 0f00 	cmp.w	fp, #0
 800fd16:	dc03      	bgt.n	800fd20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800fd18:	9a04      	ldr	r2, [sp, #16]
 800fd1a:	2a00      	cmp	r2, #0
 800fd1c:	f340 8136 	ble.w	800ff8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800fd20:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fd22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fd2c:	2b00      	cmp	r3, #0
 800fd2e:	dd0f      	ble.n	800fd50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800fd30:	1408      	asrs	r0, r1, #16
 800fd32:	d406      	bmi.n	800fd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800fd34:	4540      	cmp	r0, r8
 800fd36:	da04      	bge.n	800fd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800fd38:	1410      	asrs	r0, r2, #16
 800fd3a:	d402      	bmi.n	800fd42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800fd3c:	9d01      	ldr	r5, [sp, #4]
 800fd3e:	42a8      	cmp	r0, r5
 800fd40:	db07      	blt.n	800fd52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800fd42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fd44:	4401      	add	r1, r0
 800fd46:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fd48:	3b01      	subs	r3, #1
 800fd4a:	4402      	add	r2, r0
 800fd4c:	3402      	adds	r4, #2
 800fd4e:	e7ed      	b.n	800fd2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800fd50:	d00f      	beq.n	800fd72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800fd52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fd54:	1e58      	subs	r0, r3, #1
 800fd56:	fb05 1500 	mla	r5, r5, r0, r1
 800fd5a:	142d      	asrs	r5, r5, #16
 800fd5c:	d544      	bpl.n	800fde8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800fd5e:	9300      	str	r3, [sp, #0]
 800fd60:	46a2      	mov	sl, r4
 800fd62:	9800      	ldr	r0, [sp, #0]
 800fd64:	2800      	cmp	r0, #0
 800fd66:	f300 80ab 	bgt.w	800fec0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800fd6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fd6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fd72:	f1bb 0f00 	cmp.w	fp, #0
 800fd76:	f340 8109 	ble.w	800ff8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800fd7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fd7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fd82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fd86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fd88:	f1bb 0b01 	subs.w	fp, fp, #1
 800fd8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fd90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fd94:	eeb0 6a62 	vmov.f32	s12, s5
 800fd98:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fd9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fda0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fda4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fda8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fdac:	eeb0 6a43 	vmov.f32	s12, s6
 800fdb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fdb4:	ee12 2a90 	vmov	r2, s5
 800fdb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fdbc:	fb92 f3f3 	sdiv	r3, r2, r3
 800fdc0:	ee13 2a10 	vmov	r2, s6
 800fdc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fdc8:	9313      	str	r3, [sp, #76]	; 0x4c
 800fdca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdcc:	fb92 f3f3 	sdiv	r3, r2, r3
 800fdd0:	9a04      	ldr	r2, [sp, #16]
 800fdd2:	9314      	str	r3, [sp, #80]	; 0x50
 800fdd4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fdd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdda:	eeb0 3a67 	vmov.f32	s6, s15
 800fdde:	bf08      	it	eq
 800fde0:	4613      	moveq	r3, r2
 800fde2:	eef0 2a47 	vmov.f32	s5, s14
 800fde6:	e794      	b.n	800fd12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800fde8:	4545      	cmp	r5, r8
 800fdea:	dab8      	bge.n	800fd5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800fdec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fdee:	fb05 2000 	mla	r0, r5, r0, r2
 800fdf2:	1400      	asrs	r0, r0, #16
 800fdf4:	d4b3      	bmi.n	800fd5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800fdf6:	9d01      	ldr	r5, [sp, #4]
 800fdf8:	42a8      	cmp	r0, r5
 800fdfa:	dab0      	bge.n	800fd5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800fdfc:	f04f 0900 	mov.w	r9, #0
 800fe00:	eba3 0009 	sub.w	r0, r3, r9
 800fe04:	2800      	cmp	r0, #0
 800fe06:	ddb0      	ble.n	800fd6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fe08:	140d      	asrs	r5, r1, #16
 800fe0a:	1410      	asrs	r0, r2, #16
 800fe0c:	fb08 5000 	mla	r0, r8, r0, r5
 800fe10:	9d03      	ldr	r5, [sp, #12]
 800fe12:	5c2e      	ldrb	r6, [r5, r0]
 800fe14:	2e00      	cmp	r6, #0
 800fe16:	d04c      	beq.n	800feb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800fe18:	9d02      	ldr	r5, [sp, #8]
 800fe1a:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800fe1e:	9805      	ldr	r0, [sp, #20]
 800fe20:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800fe24:	4346      	muls	r6, r0
 800fe26:	1c70      	adds	r0, r6, #1
 800fe28:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800fe2c:	1200      	asrs	r0, r0, #8
 800fe2e:	b287      	uxth	r7, r0
 800fe30:	122e      	asrs	r6, r5, #8
 800fe32:	43c0      	mvns	r0, r0
 800fe34:	b2c0      	uxtb	r0, r0
 800fe36:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fe3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fe3e:	fb16 f600 	smulbb	r6, r6, r0
 800fe42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fe46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fe4a:	00ed      	lsls	r5, r5, #3
 800fe4c:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fe50:	b2ed      	uxtb	r5, r5
 800fe52:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800fe56:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fe5a:	fb15 f500 	smulbb	r5, r5, r0
 800fe5e:	fa5f fe8e 	uxtb.w	lr, lr
 800fe62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fe66:	fb0e 5507 	mla	r5, lr, r7, r5
 800fe6a:	fb1a fa00 	smulbb	sl, sl, r0
 800fe6e:	fa1f fc8c 	uxth.w	ip, ip
 800fe72:	b2ad      	uxth	r5, r5
 800fe74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fe78:	fb06 a607 	mla	r6, r6, r7, sl
 800fe7c:	f10c 0001 	add.w	r0, ip, #1
 800fe80:	f105 0a01 	add.w	sl, r5, #1
 800fe84:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800fe88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fe8c:	b2b6      	uxth	r6, r6
 800fe8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fe92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fe96:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fe9a:	f106 0a01 	add.w	sl, r6, #1
 800fe9e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fea2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fea6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800feaa:	ea4c 0c0a 	orr.w	ip, ip, sl
 800feae:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800feb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800feb4:	4401      	add	r1, r0
 800feb6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800feb8:	f109 0901 	add.w	r9, r9, #1
 800febc:	4402      	add	r2, r0
 800febe:	e79f      	b.n	800fe00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800fec0:	1408      	asrs	r0, r1, #16
 800fec2:	d459      	bmi.n	800ff78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800fec4:	4540      	cmp	r0, r8
 800fec6:	da57      	bge.n	800ff78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800fec8:	1415      	asrs	r5, r2, #16
 800feca:	d455      	bmi.n	800ff78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800fecc:	9e01      	ldr	r6, [sp, #4]
 800fece:	42b5      	cmp	r5, r6
 800fed0:	da52      	bge.n	800ff78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800fed2:	fb08 0005 	mla	r0, r8, r5, r0
 800fed6:	9d03      	ldr	r5, [sp, #12]
 800fed8:	5c2e      	ldrb	r6, [r5, r0]
 800feda:	2e00      	cmp	r6, #0
 800fedc:	d04c      	beq.n	800ff78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800fede:	9d02      	ldr	r5, [sp, #8]
 800fee0:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800fee4:	9805      	ldr	r0, [sp, #20]
 800fee6:	f8ba 5000 	ldrh.w	r5, [sl]
 800feea:	4346      	muls	r6, r0
 800feec:	1c70      	adds	r0, r6, #1
 800feee:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800fef2:	1200      	asrs	r0, r0, #8
 800fef4:	b287      	uxth	r7, r0
 800fef6:	122e      	asrs	r6, r5, #8
 800fef8:	43c0      	mvns	r0, r0
 800fefa:	b2c0      	uxtb	r0, r0
 800fefc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800ff00:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ff04:	fb16 f600 	smulbb	r6, r6, r0
 800ff08:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800ff0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff10:	00ed      	lsls	r5, r5, #3
 800ff12:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ff16:	b2ed      	uxtb	r5, r5
 800ff18:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800ff1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ff20:	fb15 f500 	smulbb	r5, r5, r0
 800ff24:	fa5f fe8e 	uxtb.w	lr, lr
 800ff28:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ff2c:	fb0e 5507 	mla	r5, lr, r7, r5
 800ff30:	fb19 f900 	smulbb	r9, r9, r0
 800ff34:	fa1f fc8c 	uxth.w	ip, ip
 800ff38:	b2ad      	uxth	r5, r5
 800ff3a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ff3e:	fb06 9607 	mla	r6, r6, r7, r9
 800ff42:	f10c 0001 	add.w	r0, ip, #1
 800ff46:	f105 0901 	add.w	r9, r5, #1
 800ff4a:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800ff4e:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800ff52:	b2b6      	uxth	r6, r6
 800ff54:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800ff58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff5c:	ea4c 0c09 	orr.w	ip, ip, r9
 800ff60:	f106 0901 	add.w	r9, r6, #1
 800ff64:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800ff68:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ff6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ff70:	ea4c 0c09 	orr.w	ip, ip, r9
 800ff74:	f8aa c000 	strh.w	ip, [sl]
 800ff78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff7a:	4401      	add	r1, r0
 800ff7c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff7e:	4402      	add	r2, r0
 800ff80:	9800      	ldr	r0, [sp, #0]
 800ff82:	3801      	subs	r0, #1
 800ff84:	f10a 0a02 	add.w	sl, sl, #2
 800ff88:	9000      	str	r0, [sp, #0]
 800ff8a:	e6ea      	b.n	800fd62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800ff8c:	b007      	add	sp, #28
 800ff8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ff92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff96:	b087      	sub	sp, #28
 800ff98:	468b      	mov	fp, r1
 800ff9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ff9c:	9205      	str	r2, [sp, #20]
 800ff9e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ffa2:	9202      	str	r2, [sp, #8]
 800ffa4:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800ffa8:	6869      	ldr	r1, [r5, #4]
 800ffaa:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800ffac:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800ffb0:	fb01 2000 	mla	r0, r1, r0, r2
 800ffb4:	682a      	ldr	r2, [r5, #0]
 800ffb6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800ffba:	6822      	ldr	r2, [r4, #0]
 800ffbc:	9201      	str	r2, [sp, #4]
 800ffbe:	6862      	ldr	r2, [r4, #4]
 800ffc0:	9204      	str	r2, [sp, #16]
 800ffc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ffc6:	f1bb 0f00 	cmp.w	fp, #0
 800ffca:	dc03      	bgt.n	800ffd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800ffcc:	9a05      	ldr	r2, [sp, #20]
 800ffce:	2a00      	cmp	r2, #0
 800ffd0:	f340 813d 	ble.w	801024e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800ffd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ffd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ffda:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ffdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ffe0:	2b00      	cmp	r3, #0
 800ffe2:	dd0f      	ble.n	8010004 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800ffe4:	140c      	asrs	r4, r1, #16
 800ffe6:	d406      	bmi.n	800fff6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800ffe8:	454c      	cmp	r4, r9
 800ffea:	da04      	bge.n	800fff6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800ffec:	1414      	asrs	r4, r2, #16
 800ffee:	d402      	bmi.n	800fff6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800fff0:	9d02      	ldr	r5, [sp, #8]
 800fff2:	42ac      	cmp	r4, r5
 800fff4:	db07      	blt.n	8010006 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800fff6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fff8:	4421      	add	r1, r4
 800fffa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fffc:	3b01      	subs	r3, #1
 800fffe:	4422      	add	r2, r4
 8010000:	3002      	adds	r0, #2
 8010002:	e7ed      	b.n	800ffe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8010004:	d018      	beq.n	8010038 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8010006:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010008:	1e5c      	subs	r4, r3, #1
 801000a:	fb05 1504 	mla	r5, r5, r4, r1
 801000e:	142d      	asrs	r5, r5, #16
 8010010:	d40a      	bmi.n	8010028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010012:	454d      	cmp	r5, r9
 8010014:	da08      	bge.n	8010028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010016:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010018:	fb05 2404 	mla	r4, r5, r4, r2
 801001c:	1424      	asrs	r4, r4, #16
 801001e:	d403      	bmi.n	8010028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010020:	9d02      	ldr	r5, [sp, #8]
 8010022:	42ac      	cmp	r4, r5
 8010024:	f2c0 80ae 	blt.w	8010184 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8010028:	2600      	movs	r6, #0
 801002a:	199c      	adds	r4, r3, r6
 801002c:	2c00      	cmp	r4, #0
 801002e:	dc3e      	bgt.n	80100ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8010030:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010034:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010038:	f1bb 0f00 	cmp.w	fp, #0
 801003c:	f340 8107 	ble.w	801024e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010040:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010044:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010048:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801004c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801004e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010052:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010056:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801005a:	eeb0 6a62 	vmov.f32	s12, s5
 801005e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010062:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010066:	ee77 2a62 	vsub.f32	s5, s14, s5
 801006a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801006e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010072:	eeb0 6a43 	vmov.f32	s12, s6
 8010076:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801007a:	ee12 2a90 	vmov	r2, s5
 801007e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010082:	fb92 f3f3 	sdiv	r3, r2, r3
 8010086:	ee13 2a10 	vmov	r2, s6
 801008a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801008e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010090:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010092:	fb92 f3f3 	sdiv	r3, r2, r3
 8010096:	9a05      	ldr	r2, [sp, #20]
 8010098:	9314      	str	r3, [sp, #80]	; 0x50
 801009a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801009e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100a0:	eeb0 3a67 	vmov.f32	s6, s15
 80100a4:	bf08      	it	eq
 80100a6:	4613      	moveq	r3, r2
 80100a8:	eef0 2a47 	vmov.f32	s5, s14
 80100ac:	e78b      	b.n	800ffc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 80100ae:	140c      	asrs	r4, r1, #16
 80100b0:	d45a      	bmi.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100b2:	454c      	cmp	r4, r9
 80100b4:	da58      	bge.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100b6:	1415      	asrs	r5, r2, #16
 80100b8:	d456      	bmi.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100ba:	9f02      	ldr	r7, [sp, #8]
 80100bc:	42bd      	cmp	r5, r7
 80100be:	da53      	bge.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100c0:	fb09 4505 	mla	r5, r9, r5, r4
 80100c4:	9c04      	ldr	r4, [sp, #16]
 80100c6:	5d64      	ldrb	r4, [r4, r5]
 80100c8:	2cff      	cmp	r4, #255	; 0xff
 80100ca:	d053      	beq.n	8010174 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80100cc:	2c00      	cmp	r4, #0
 80100ce:	d04b      	beq.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100d0:	9f01      	ldr	r7, [sp, #4]
 80100d2:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 80100d6:	f06f 0501 	mvn.w	r5, #1
 80100da:	4375      	muls	r5, r6
 80100dc:	9503      	str	r5, [sp, #12]
 80100de:	5b45      	ldrh	r5, [r0, r5]
 80100e0:	fa1f fc84 	uxth.w	ip, r4
 80100e4:	122f      	asrs	r7, r5, #8
 80100e6:	43e4      	mvns	r4, r4
 80100e8:	b2e4      	uxtb	r4, r4
 80100ea:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80100ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100f2:	fb17 f704 	smulbb	r7, r7, r4
 80100f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80100fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80100fe:	00ed      	lsls	r5, r5, #3
 8010100:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010104:	b2ed      	uxtb	r5, r5
 8010106:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801010a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801010e:	fb15 f504 	smulbb	r5, r5, r4
 8010112:	fa5f f888 	uxtb.w	r8, r8
 8010116:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801011a:	fb08 550c 	mla	r5, r8, ip, r5
 801011e:	fb1a fa04 	smulbb	sl, sl, r4
 8010122:	fa1f fe8e 	uxth.w	lr, lr
 8010126:	b2ad      	uxth	r5, r5
 8010128:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801012c:	fb07 a70c 	mla	r7, r7, ip, sl
 8010130:	f10e 0401 	add.w	r4, lr, #1
 8010134:	f105 0a01 	add.w	sl, r5, #1
 8010138:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801013c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010140:	b2bf      	uxth	r7, r7
 8010142:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010146:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801014a:	ea4e 0e0a 	orr.w	lr, lr, sl
 801014e:	f107 0a01 	add.w	sl, r7, #1
 8010152:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010156:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801015a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801015e:	9c03      	ldr	r4, [sp, #12]
 8010160:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010164:	f820 e004 	strh.w	lr, [r0, r4]
 8010168:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801016a:	4421      	add	r1, r4
 801016c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801016e:	3e01      	subs	r6, #1
 8010170:	4422      	add	r2, r4
 8010172:	e75a      	b.n	801002a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010174:	9c01      	ldr	r4, [sp, #4]
 8010176:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801017a:	f06f 0401 	mvn.w	r4, #1
 801017e:	4374      	muls	r4, r6
 8010180:	5305      	strh	r5, [r0, r4]
 8010182:	e7f1      	b.n	8010168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010184:	f04f 0800 	mov.w	r8, #0
 8010188:	eba3 0408 	sub.w	r4, r3, r8
 801018c:	2c00      	cmp	r4, #0
 801018e:	f77f af4f 	ble.w	8010030 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010192:	140c      	asrs	r4, r1, #16
 8010194:	1415      	asrs	r5, r2, #16
 8010196:	fb09 4505 	mla	r5, r9, r5, r4
 801019a:	9c04      	ldr	r4, [sp, #16]
 801019c:	5d64      	ldrb	r4, [r4, r5]
 801019e:	2cff      	cmp	r4, #255	; 0xff
 80101a0:	d04f      	beq.n	8010242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80101a2:	2c00      	cmp	r4, #0
 80101a4:	d046      	beq.n	8010234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80101a6:	9e01      	ldr	r6, [sp, #4]
 80101a8:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80101ac:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 80101b0:	b2a7      	uxth	r7, r4
 80101b2:	122e      	asrs	r6, r5, #8
 80101b4:	43e4      	mvns	r4, r4
 80101b6:	b2e4      	uxtb	r4, r4
 80101b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80101bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80101c0:	fb16 f604 	smulbb	r6, r6, r4
 80101c4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80101c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80101cc:	00ed      	lsls	r5, r5, #3
 80101ce:	fb0c 6c07 	mla	ip, ip, r7, r6
 80101d2:	b2ed      	uxtb	r5, r5
 80101d4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80101d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80101dc:	fb15 f504 	smulbb	r5, r5, r4
 80101e0:	fa5f fe8e 	uxtb.w	lr, lr
 80101e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80101e8:	fb0e 5507 	mla	r5, lr, r7, r5
 80101ec:	fb1a fa04 	smulbb	sl, sl, r4
 80101f0:	fa1f fc8c 	uxth.w	ip, ip
 80101f4:	b2ad      	uxth	r5, r5
 80101f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80101fa:	fb06 a607 	mla	r6, r6, r7, sl
 80101fe:	f10c 0401 	add.w	r4, ip, #1
 8010202:	f105 0a01 	add.w	sl, r5, #1
 8010206:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801020a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801020e:	b2b6      	uxth	r6, r6
 8010210:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010214:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010218:	ea4c 0c0a 	orr.w	ip, ip, sl
 801021c:	f106 0a01 	add.w	sl, r6, #1
 8010220:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010224:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010228:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801022c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010230:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 8010234:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010236:	4421      	add	r1, r4
 8010238:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801023a:	f108 0801 	add.w	r8, r8, #1
 801023e:	4422      	add	r2, r4
 8010240:	e7a2      	b.n	8010188 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010242:	9c01      	ldr	r4, [sp, #4]
 8010244:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8010248:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 801024c:	e7f2      	b.n	8010234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801024e:	b007      	add	sp, #28
 8010250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010254 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010258:	b085      	sub	sp, #20
 801025a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801025c:	9203      	str	r2, [sp, #12]
 801025e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8010262:	9201      	str	r2, [sp, #4]
 8010264:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010268:	9100      	str	r1, [sp, #0]
 801026a:	6841      	ldr	r1, [r0, #4]
 801026c:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8010270:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 8010274:	fb01 2404 	mla	r4, r1, r4, r2
 8010278:	6802      	ldr	r2, [r0, #0]
 801027a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801027e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010280:	fa1f fe85 	uxth.w	lr, r5
 8010284:	6812      	ldr	r2, [r2, #0]
 8010286:	9202      	str	r2, [sp, #8]
 8010288:	43ed      	mvns	r5, r5
 801028a:	b2ed      	uxtb	r5, r5
 801028c:	9a00      	ldr	r2, [sp, #0]
 801028e:	2a00      	cmp	r2, #0
 8010290:	dc03      	bgt.n	801029a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010292:	9a03      	ldr	r2, [sp, #12]
 8010294:	2a00      	cmp	r2, #0
 8010296:	f340 8117 	ble.w	80104c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801029a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801029c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80102a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80102a2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80102a6:	2b00      	cmp	r3, #0
 80102a8:	dd0f      	ble.n	80102ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80102aa:	1408      	asrs	r0, r1, #16
 80102ac:	d406      	bmi.n	80102bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80102ae:	4540      	cmp	r0, r8
 80102b0:	da04      	bge.n	80102bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80102b2:	1410      	asrs	r0, r2, #16
 80102b4:	d402      	bmi.n	80102bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80102b6:	9e01      	ldr	r6, [sp, #4]
 80102b8:	42b0      	cmp	r0, r6
 80102ba:	db07      	blt.n	80102cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80102bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80102be:	4401      	add	r1, r0
 80102c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80102c2:	3b01      	subs	r3, #1
 80102c4:	4402      	add	r2, r0
 80102c6:	3402      	adds	r4, #2
 80102c8:	e7ed      	b.n	80102a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 80102ca:	d069      	beq.n	80103a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 80102cc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80102ce:	1e58      	subs	r0, r3, #1
 80102d0:	fb06 1600 	mla	r6, r6, r0, r1
 80102d4:	1436      	asrs	r6, r6, #16
 80102d6:	d459      	bmi.n	801038c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80102d8:	4546      	cmp	r6, r8
 80102da:	da57      	bge.n	801038c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80102dc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80102de:	fb06 2000 	mla	r0, r6, r0, r2
 80102e2:	1400      	asrs	r0, r0, #16
 80102e4:	d452      	bmi.n	801038c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80102e6:	9e01      	ldr	r6, [sp, #4]
 80102e8:	42b0      	cmp	r0, r6
 80102ea:	da4f      	bge.n	801038c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80102ec:	469a      	mov	sl, r3
 80102ee:	46a3      	mov	fp, r4
 80102f0:	f1ba 0f00 	cmp.w	sl, #0
 80102f4:	dd50      	ble.n	8010398 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 80102f6:	140e      	asrs	r6, r1, #16
 80102f8:	1410      	asrs	r0, r2, #16
 80102fa:	fb08 6000 	mla	r0, r8, r0, r6
 80102fe:	9e02      	ldr	r6, [sp, #8]
 8010300:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010304:	f8bb 6000 	ldrh.w	r6, [fp]
 8010308:	1237      	asrs	r7, r6, #8
 801030a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801030e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010312:	fb17 f705 	smulbb	r7, r7, r5
 8010316:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801031a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801031e:	00f6      	lsls	r6, r6, #3
 8010320:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010324:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010328:	10c7      	asrs	r7, r0, #3
 801032a:	b2f6      	uxtb	r6, r6
 801032c:	00c0      	lsls	r0, r0, #3
 801032e:	fb19 f905 	smulbb	r9, r9, r5
 8010332:	fb16 f605 	smulbb	r6, r6, r5
 8010336:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801033a:	b2c0      	uxtb	r0, r0
 801033c:	fa1f fc8c 	uxth.w	ip, ip
 8010340:	fb07 970e 	mla	r7, r7, lr, r9
 8010344:	fb00 600e 	mla	r0, r0, lr, r6
 8010348:	b280      	uxth	r0, r0
 801034a:	b2bf      	uxth	r7, r7
 801034c:	f10c 0601 	add.w	r6, ip, #1
 8010350:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010354:	f107 0901 	add.w	r9, r7, #1
 8010358:	1c46      	adds	r6, r0, #1
 801035a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801035e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010362:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010364:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010368:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801036c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010370:	ea4c 0c06 	orr.w	ip, ip, r6
 8010374:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010378:	4401      	add	r1, r0
 801037a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801037c:	ea4c 0c09 	orr.w	ip, ip, r9
 8010380:	f82b cb02 	strh.w	ip, [fp], #2
 8010384:	4402      	add	r2, r0
 8010386:	f10a 3aff 	add.w	sl, sl, #4294967295
 801038a:	e7b1      	b.n	80102f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801038c:	f04f 0900 	mov.w	r9, #0
 8010390:	eb03 0009 	add.w	r0, r3, r9
 8010394:	2800      	cmp	r0, #0
 8010396:	dc41      	bgt.n	801041c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8010398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801039c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80103a0:	9b00      	ldr	r3, [sp, #0]
 80103a2:	2b00      	cmp	r3, #0
 80103a4:	f340 8090 	ble.w	80104c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80103a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80103ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80103b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80103b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80103ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80103be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80103c2:	eef0 6a62 	vmov.f32	s13, s5
 80103c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80103ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80103ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80103d2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80103d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80103da:	eef0 6a43 	vmov.f32	s13, s6
 80103de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80103e2:	ee12 2a90 	vmov	r2, s5
 80103e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80103ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80103ee:	ee13 2a10 	vmov	r2, s6
 80103f2:	9311      	str	r3, [sp, #68]	; 0x44
 80103f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80103f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80103fa:	9312      	str	r3, [sp, #72]	; 0x48
 80103fc:	9b00      	ldr	r3, [sp, #0]
 80103fe:	9a03      	ldr	r2, [sp, #12]
 8010400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010404:	3b01      	subs	r3, #1
 8010406:	9300      	str	r3, [sp, #0]
 8010408:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801040c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801040e:	eeb0 3a67 	vmov.f32	s6, s15
 8010412:	bf08      	it	eq
 8010414:	4613      	moveq	r3, r2
 8010416:	eef0 2a47 	vmov.f32	s5, s14
 801041a:	e737      	b.n	801028c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 801041c:	140e      	asrs	r6, r1, #16
 801041e:	d44c      	bmi.n	80104ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010420:	4546      	cmp	r6, r8
 8010422:	da4a      	bge.n	80104ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010424:	1410      	asrs	r0, r2, #16
 8010426:	d448      	bmi.n	80104ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010428:	9f01      	ldr	r7, [sp, #4]
 801042a:	42b8      	cmp	r0, r7
 801042c:	da45      	bge.n	80104ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801042e:	fb08 6000 	mla	r0, r8, r0, r6
 8010432:	9e02      	ldr	r6, [sp, #8]
 8010434:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010438:	f06f 0601 	mvn.w	r6, #1
 801043c:	fb06 fb09 	mul.w	fp, r6, r9
 8010440:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010444:	f834 600b 	ldrh.w	r6, [r4, fp]
 8010448:	1237      	asrs	r7, r6, #8
 801044a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801044e:	fb17 f705 	smulbb	r7, r7, r5
 8010452:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8010456:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801045a:	00f6      	lsls	r6, r6, #3
 801045c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010460:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010464:	10c7      	asrs	r7, r0, #3
 8010466:	b2f6      	uxtb	r6, r6
 8010468:	00c0      	lsls	r0, r0, #3
 801046a:	fb1a fa05 	smulbb	sl, sl, r5
 801046e:	fb16 f605 	smulbb	r6, r6, r5
 8010472:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010476:	b2c0      	uxtb	r0, r0
 8010478:	fa1f fc8c 	uxth.w	ip, ip
 801047c:	fb07 a70e 	mla	r7, r7, lr, sl
 8010480:	fb00 600e 	mla	r0, r0, lr, r6
 8010484:	b2bf      	uxth	r7, r7
 8010486:	b280      	uxth	r0, r0
 8010488:	f10c 0601 	add.w	r6, ip, #1
 801048c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010490:	f107 0a01 	add.w	sl, r7, #1
 8010494:	1c46      	adds	r6, r0, #1
 8010496:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801049a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801049e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80104a2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80104a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80104aa:	ea4c 0c06 	orr.w	ip, ip, r6
 80104ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80104b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80104b6:	f824 c00b 	strh.w	ip, [r4, fp]
 80104ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80104bc:	4401      	add	r1, r0
 80104be:	9812      	ldr	r0, [sp, #72]	; 0x48
 80104c0:	f109 39ff 	add.w	r9, r9, #4294967295
 80104c4:	4402      	add	r2, r0
 80104c6:	e763      	b.n	8010390 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 80104c8:	b005      	add	sp, #20
 80104ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080104ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80104ce:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80104d4:	9201      	str	r2, [sp, #4]
 80104d6:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 80104da:	6844      	ldr	r4, [r0, #4]
 80104dc:	6800      	ldr	r0, [r0, #0]
 80104de:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 80104e2:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 80104e6:	fb04 2505 	mla	r5, r4, r5, r2
 80104ea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80104ee:	9816      	ldr	r0, [sp, #88]	; 0x58
 80104f0:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 80104f4:	6802      	ldr	r2, [r0, #0]
 80104f6:	9200      	str	r2, [sp, #0]
 80104f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80104fc:	2900      	cmp	r1, #0
 80104fe:	dc03      	bgt.n	8010508 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010500:	9a01      	ldr	r2, [sp, #4]
 8010502:	2a00      	cmp	r2, #0
 8010504:	f340 8095 	ble.w	8010632 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010508:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801050a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801050e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010510:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010514:	2b00      	cmp	r3, #0
 8010516:	dd0e      	ble.n	8010536 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010518:	ea5f 4824 	movs.w	r8, r4, asr #16
 801051c:	d406      	bmi.n	801052c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801051e:	45e0      	cmp	r8, ip
 8010520:	da04      	bge.n	801052c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010522:	ea5f 4820 	movs.w	r8, r0, asr #16
 8010526:	d401      	bmi.n	801052c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010528:	45f0      	cmp	r8, lr
 801052a:	db05      	blt.n	8010538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801052c:	443c      	add	r4, r7
 801052e:	4430      	add	r0, r6
 8010530:	3b01      	subs	r3, #1
 8010532:	3502      	adds	r5, #2
 8010534:	e7ee      	b.n	8010514 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010536:	d010      	beq.n	801055a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010538:	f103 38ff 	add.w	r8, r3, #4294967295
 801053c:	fb07 4908 	mla	r9, r7, r8, r4
 8010540:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010544:	d53d      	bpl.n	80105c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8010546:	4698      	mov	r8, r3
 8010548:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 801054c:	f1b8 0f00 	cmp.w	r8, #0
 8010550:	dc55      	bgt.n	80105fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8010552:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010556:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801055a:	2900      	cmp	r1, #0
 801055c:	dd69      	ble.n	8010632 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 801055e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010562:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010566:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801056a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801056c:	3901      	subs	r1, #1
 801056e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010572:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010576:	eeb0 6a62 	vmov.f32	s12, s5
 801057a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801057e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010582:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010586:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 801058a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801058e:	eeb0 6a43 	vmov.f32	s12, s6
 8010592:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010596:	ee12 2a90 	vmov	r2, s5
 801059a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801059e:	fb92 f7f3 	sdiv	r7, r2, r3
 80105a2:	ee13 2a10 	vmov	r2, s6
 80105a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105aa:	fb92 f6f3 	sdiv	r6, r2, r3
 80105ae:	9a01      	ldr	r2, [sp, #4]
 80105b0:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 80105b4:	bf08      	it	eq
 80105b6:	4613      	moveq	r3, r2
 80105b8:	eeb0 3a67 	vmov.f32	s6, s15
 80105bc:	eef0 2a47 	vmov.f32	s5, s14
 80105c0:	e79c      	b.n	80104fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 80105c2:	45e1      	cmp	r9, ip
 80105c4:	dabf      	bge.n	8010546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80105c6:	fb06 0808 	mla	r8, r6, r8, r0
 80105ca:	ea5f 4828 	movs.w	r8, r8, asr #16
 80105ce:	d4ba      	bmi.n	8010546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80105d0:	45f0      	cmp	r8, lr
 80105d2:	dab8      	bge.n	8010546 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80105d4:	4698      	mov	r8, r3
 80105d6:	46aa      	mov	sl, r5
 80105d8:	f1b8 0f00 	cmp.w	r8, #0
 80105dc:	ddb9      	ble.n	8010552 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 80105de:	ea4f 4920 	mov.w	r9, r0, asr #16
 80105e2:	ea4f 4b24 	mov.w	fp, r4, asr #16
 80105e6:	fb0c b909 	mla	r9, ip, r9, fp
 80105ea:	9a00      	ldr	r2, [sp, #0]
 80105ec:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 80105f0:	f82a 9b02 	strh.w	r9, [sl], #2
 80105f4:	443c      	add	r4, r7
 80105f6:	4430      	add	r0, r6
 80105f8:	f108 38ff 	add.w	r8, r8, #4294967295
 80105fc:	e7ec      	b.n	80105d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 80105fe:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8010602:	d411      	bmi.n	8010628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010604:	45e2      	cmp	sl, ip
 8010606:	da0f      	bge.n	8010628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010608:	ea5f 4920 	movs.w	r9, r0, asr #16
 801060c:	d40c      	bmi.n	8010628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801060e:	45f1      	cmp	r9, lr
 8010610:	da0a      	bge.n	8010628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010612:	fb0c a909 	mla	r9, ip, r9, sl
 8010616:	9a00      	ldr	r2, [sp, #0]
 8010618:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 801061c:	f06f 0201 	mvn.w	r2, #1
 8010620:	fb02 f908 	mul.w	r9, r2, r8
 8010624:	f82b a009 	strh.w	sl, [fp, r9]
 8010628:	443c      	add	r4, r7
 801062a:	4430      	add	r0, r6
 801062c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010630:	e78c      	b.n	801054c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010632:	b003      	add	sp, #12
 8010634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010638 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801063c:	b087      	sub	sp, #28
 801063e:	468b      	mov	fp, r1
 8010640:	9204      	str	r2, [sp, #16]
 8010642:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010646:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010648:	9201      	str	r2, [sp, #4]
 801064a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 801064e:	9205      	str	r2, [sp, #20]
 8010650:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010654:	6841      	ldr	r1, [r0, #4]
 8010656:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 801065a:	fb01 2404 	mla	r4, r1, r4, r2
 801065e:	6802      	ldr	r2, [r0, #0]
 8010660:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010664:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010666:	6812      	ldr	r2, [r2, #0]
 8010668:	9203      	str	r2, [sp, #12]
 801066a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801066e:	f1bb 0f00 	cmp.w	fp, #0
 8010672:	dc03      	bgt.n	801067c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010674:	9a04      	ldr	r2, [sp, #16]
 8010676:	2a00      	cmp	r2, #0
 8010678:	f340 812c 	ble.w	80108d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801067c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801067e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010682:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010684:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010688:	2b00      	cmp	r3, #0
 801068a:	dd0f      	ble.n	80106ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801068c:	1402      	asrs	r2, r0, #16
 801068e:	d406      	bmi.n	801069e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010690:	4542      	cmp	r2, r8
 8010692:	da04      	bge.n	801069e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010694:	140a      	asrs	r2, r1, #16
 8010696:	d402      	bmi.n	801069e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010698:	9d01      	ldr	r5, [sp, #4]
 801069a:	42aa      	cmp	r2, r5
 801069c:	db07      	blt.n	80106ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801069e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80106a0:	4410      	add	r0, r2
 80106a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80106a4:	3b01      	subs	r3, #1
 80106a6:	4411      	add	r1, r2
 80106a8:	3402      	adds	r4, #2
 80106aa:	e7ed      	b.n	8010688 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80106ac:	d01a      	beq.n	80106e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 80106ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80106b0:	1e5a      	subs	r2, r3, #1
 80106b2:	fb05 0502 	mla	r5, r5, r2, r0
 80106b6:	142d      	asrs	r5, r5, #16
 80106b8:	d40a      	bmi.n	80106d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80106ba:	4545      	cmp	r5, r8
 80106bc:	da08      	bge.n	80106d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80106be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80106c0:	fb05 1202 	mla	r2, r5, r2, r1
 80106c4:	1412      	asrs	r2, r2, #16
 80106c6:	d403      	bmi.n	80106d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80106c8:	9d01      	ldr	r5, [sp, #4]
 80106ca:	42aa      	cmp	r2, r5
 80106cc:	f2c0 80a6 	blt.w	801081c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80106d0:	f04f 0c00 	mov.w	ip, #0
 80106d4:	eb03 020c 	add.w	r2, r3, ip
 80106d8:	2a00      	cmp	r2, #0
 80106da:	dc3e      	bgt.n	801075a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 80106dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80106e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80106e4:	f1bb 0f00 	cmp.w	fp, #0
 80106e8:	f340 80f4 	ble.w	80108d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 80106ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80106f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80106f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80106f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80106fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010702:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010706:	eeb0 6a62 	vmov.f32	s12, s5
 801070a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801070e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010712:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010716:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801071a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801071e:	eeb0 6a43 	vmov.f32	s12, s6
 8010722:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010726:	ee12 2a90 	vmov	r2, s5
 801072a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801072e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010732:	ee13 2a10 	vmov	r2, s6
 8010736:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801073a:	9313      	str	r3, [sp, #76]	; 0x4c
 801073c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801073e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010742:	9a04      	ldr	r2, [sp, #16]
 8010744:	9314      	str	r3, [sp, #80]	; 0x50
 8010746:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801074a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801074c:	eeb0 3a67 	vmov.f32	s6, s15
 8010750:	bf08      	it	eq
 8010752:	4613      	moveq	r3, r2
 8010754:	eef0 2a47 	vmov.f32	s5, s14
 8010758:	e789      	b.n	801066e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 801075a:	1405      	asrs	r5, r0, #16
 801075c:	d457      	bmi.n	801080e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801075e:	4545      	cmp	r5, r8
 8010760:	da55      	bge.n	801080e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010762:	140a      	asrs	r2, r1, #16
 8010764:	d453      	bmi.n	801080e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010766:	9e01      	ldr	r6, [sp, #4]
 8010768:	42b2      	cmp	r2, r6
 801076a:	da50      	bge.n	801080e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801076c:	fb08 5202 	mla	r2, r8, r2, r5
 8010770:	9d03      	ldr	r5, [sp, #12]
 8010772:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010776:	0e2e      	lsrs	r6, r5, #24
 8010778:	d049      	beq.n	801080e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801077a:	f06f 0201 	mvn.w	r2, #1
 801077e:	fb02 f20c 	mul.w	r2, r2, ip
 8010782:	9202      	str	r2, [sp, #8]
 8010784:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010788:	9a05      	ldr	r2, [sp, #20]
 801078a:	4356      	muls	r6, r2
 801078c:	1c72      	adds	r2, r6, #1
 801078e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010792:	1212      	asrs	r2, r2, #8
 8010794:	fa1f f982 	uxth.w	r9, r2
 8010798:	ea4f 272e 	mov.w	r7, lr, asr #8
 801079c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80107a0:	43d2      	mvns	r2, r2
 80107a2:	b2d2      	uxtb	r2, r2
 80107a4:	fb16 f609 	smulbb	r6, r6, r9
 80107a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107ac:	fb07 6702 	mla	r7, r7, r2, r6
 80107b0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80107b4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80107b8:	b2ed      	uxtb	r5, r5
 80107ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80107be:	fa5f fe8e 	uxtb.w	lr, lr
 80107c2:	fb15 f509 	smulbb	r5, r5, r9
 80107c6:	fb0e 5502 	mla	r5, lr, r2, r5
 80107ca:	b2bf      	uxth	r7, r7
 80107cc:	fb1a fa09 	smulbb	sl, sl, r9
 80107d0:	b2ad      	uxth	r5, r5
 80107d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107d6:	fb06 a602 	mla	r6, r6, r2, sl
 80107da:	1c7a      	adds	r2, r7, #1
 80107dc:	f105 0a01 	add.w	sl, r5, #1
 80107e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80107e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107e8:	b2b6      	uxth	r6, r6
 80107ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80107f2:	ea47 070a 	orr.w	r7, r7, sl
 80107f6:	f106 0a01 	add.w	sl, r6, #1
 80107fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80107fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010802:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010806:	9a02      	ldr	r2, [sp, #8]
 8010808:	ea47 070a 	orr.w	r7, r7, sl
 801080c:	52a7      	strh	r7, [r4, r2]
 801080e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010810:	4410      	add	r0, r2
 8010812:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010814:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010818:	4411      	add	r1, r2
 801081a:	e75b      	b.n	80106d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801081c:	f04f 0e00 	mov.w	lr, #0
 8010820:	eba3 020e 	sub.w	r2, r3, lr
 8010824:	2a00      	cmp	r2, #0
 8010826:	f77f af59 	ble.w	80106dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 801082a:	1405      	asrs	r5, r0, #16
 801082c:	140a      	asrs	r2, r1, #16
 801082e:	fb08 5202 	mla	r2, r8, r2, r5
 8010832:	9d03      	ldr	r5, [sp, #12]
 8010834:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010838:	0e2e      	lsrs	r6, r5, #24
 801083a:	d044      	beq.n	80108c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 801083c:	9a05      	ldr	r2, [sp, #20]
 801083e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010842:	4356      	muls	r6, r2
 8010844:	1c72      	adds	r2, r6, #1
 8010846:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801084a:	1212      	asrs	r2, r2, #8
 801084c:	fa1f f982 	uxth.w	r9, r2
 8010850:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010854:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010858:	43d2      	mvns	r2, r2
 801085a:	b2d2      	uxtb	r2, r2
 801085c:	fb16 f609 	smulbb	r6, r6, r9
 8010860:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010864:	fb07 6702 	mla	r7, r7, r2, r6
 8010868:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801086c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010870:	b2ed      	uxtb	r5, r5
 8010872:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010876:	fa5f fc8c 	uxtb.w	ip, ip
 801087a:	fb15 f509 	smulbb	r5, r5, r9
 801087e:	fb0c 5502 	mla	r5, ip, r2, r5
 8010882:	b2bf      	uxth	r7, r7
 8010884:	fb1a fa09 	smulbb	sl, sl, r9
 8010888:	b2ad      	uxth	r5, r5
 801088a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801088e:	fb06 a602 	mla	r6, r6, r2, sl
 8010892:	1c7a      	adds	r2, r7, #1
 8010894:	f105 0a01 	add.w	sl, r5, #1
 8010898:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801089c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80108a0:	b2b6      	uxth	r6, r6
 80108a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80108a6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80108aa:	ea47 070a 	orr.w	r7, r7, sl
 80108ae:	f106 0a01 	add.w	sl, r6, #1
 80108b2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80108b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80108ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80108be:	ea47 070a 	orr.w	r7, r7, sl
 80108c2:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80108c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80108c8:	4410      	add	r0, r2
 80108ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80108cc:	f10e 0e01 	add.w	lr, lr, #1
 80108d0:	4411      	add	r1, r2
 80108d2:	e7a5      	b.n	8010820 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80108d4:	b007      	add	sp, #28
 80108d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080108dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80108dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108e0:	b087      	sub	sp, #28
 80108e2:	468b      	mov	fp, r1
 80108e4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80108e6:	9205      	str	r2, [sp, #20]
 80108e8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80108ec:	9201      	str	r2, [sp, #4]
 80108ee:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80108f2:	6861      	ldr	r1, [r4, #4]
 80108f4:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 80108f8:	fb01 2000 	mla	r0, r1, r0, r2
 80108fc:	6822      	ldr	r2, [r4, #0]
 80108fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010902:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010904:	6812      	ldr	r2, [r2, #0]
 8010906:	9203      	str	r2, [sp, #12]
 8010908:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801090c:	f1bb 0f00 	cmp.w	fp, #0
 8010910:	dc03      	bgt.n	801091a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010912:	9a05      	ldr	r2, [sp, #20]
 8010914:	2a00      	cmp	r2, #0
 8010916:	f340 814b 	ble.w	8010bb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 801091a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801091c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010920:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010922:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010926:	2b00      	cmp	r3, #0
 8010928:	dd0f      	ble.n	801094a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801092a:	140c      	asrs	r4, r1, #16
 801092c:	d406      	bmi.n	801093c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801092e:	454c      	cmp	r4, r9
 8010930:	da04      	bge.n	801093c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010932:	1414      	asrs	r4, r2, #16
 8010934:	d402      	bmi.n	801093c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010936:	9d01      	ldr	r5, [sp, #4]
 8010938:	42ac      	cmp	r4, r5
 801093a:	db07      	blt.n	801094c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801093c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801093e:	4421      	add	r1, r4
 8010940:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010942:	3b01      	subs	r3, #1
 8010944:	4422      	add	r2, r4
 8010946:	3002      	adds	r0, #2
 8010948:	e7ed      	b.n	8010926 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 801094a:	d018      	beq.n	801097e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 801094c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801094e:	1e5c      	subs	r4, r3, #1
 8010950:	fb05 1504 	mla	r5, r5, r4, r1
 8010954:	142d      	asrs	r5, r5, #16
 8010956:	d40a      	bmi.n	801096e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010958:	454d      	cmp	r5, r9
 801095a:	da08      	bge.n	801096e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801095c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801095e:	fb05 2404 	mla	r4, r5, r4, r2
 8010962:	1424      	asrs	r4, r4, #16
 8010964:	d403      	bmi.n	801096e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010966:	9d01      	ldr	r5, [sp, #4]
 8010968:	42ac      	cmp	r4, r5
 801096a:	f2c0 80bb 	blt.w	8010ae4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 801096e:	2700      	movs	r7, #0
 8010970:	19dc      	adds	r4, r3, r7
 8010972:	2c00      	cmp	r4, #0
 8010974:	dc3e      	bgt.n	80109f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8010976:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801097a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801097e:	f1bb 0f00 	cmp.w	fp, #0
 8010982:	f340 8115 	ble.w	8010bb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010986:	ee30 0a04 	vadd.f32	s0, s0, s8
 801098a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801098e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010992:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010994:	f1bb 0b01 	subs.w	fp, fp, #1
 8010998:	ee31 1a05 	vadd.f32	s2, s2, s10
 801099c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80109a0:	eeb0 6a62 	vmov.f32	s12, s5
 80109a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80109ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80109b0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80109b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80109b8:	eeb0 6a43 	vmov.f32	s12, s6
 80109bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80109c0:	ee12 2a90 	vmov	r2, s5
 80109c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80109c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80109cc:	ee13 2a10 	vmov	r2, s6
 80109d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80109d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80109d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80109dc:	9a05      	ldr	r2, [sp, #20]
 80109de:	9314      	str	r3, [sp, #80]	; 0x50
 80109e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80109e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109e6:	eeb0 3a67 	vmov.f32	s6, s15
 80109ea:	bf08      	it	eq
 80109ec:	4613      	moveq	r3, r2
 80109ee:	eef0 2a47 	vmov.f32	s5, s14
 80109f2:	e78b      	b.n	801090c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 80109f4:	140d      	asrs	r5, r1, #16
 80109f6:	d45c      	bmi.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80109f8:	454d      	cmp	r5, r9
 80109fa:	da5a      	bge.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80109fc:	1414      	asrs	r4, r2, #16
 80109fe:	d458      	bmi.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a00:	9e01      	ldr	r6, [sp, #4]
 8010a02:	42b4      	cmp	r4, r6
 8010a04:	da55      	bge.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a06:	fb09 5404 	mla	r4, r9, r4, r5
 8010a0a:	9d03      	ldr	r5, [sp, #12]
 8010a0c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8010a10:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8010a14:	d04d      	beq.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a16:	0a26      	lsrs	r6, r4, #8
 8010a18:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8010a1c:	fa5f f58e 	uxtb.w	r5, lr
 8010a20:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010a24:	9604      	str	r6, [sp, #16]
 8010a26:	d04a      	beq.n	8010abe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010a28:	f06f 0601 	mvn.w	r6, #1
 8010a2c:	437e      	muls	r6, r7
 8010a2e:	fa1f fa85 	uxth.w	sl, r5
 8010a32:	f830 8006 	ldrh.w	r8, [r0, r6]
 8010a36:	9602      	str	r6, [sp, #8]
 8010a38:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010a3c:	43ed      	mvns	r5, r5
 8010a3e:	fa5f fc8c 	uxtb.w	ip, ip
 8010a42:	b2ed      	uxtb	r5, r5
 8010a44:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010a48:	fb1c fc0a 	smulbb	ip, ip, sl
 8010a4c:	fb0e cc05 	mla	ip, lr, r5, ip
 8010a50:	b2e4      	uxtb	r4, r4
 8010a52:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8010a56:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010a5a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8010a5e:	fa5f f888 	uxtb.w	r8, r8
 8010a62:	fb14 f40a 	smulbb	r4, r4, sl
 8010a66:	fb08 4405 	mla	r4, r8, r5, r4
 8010a6a:	b2a4      	uxth	r4, r4
 8010a6c:	fa1f fc8c 	uxth.w	ip, ip
 8010a70:	fb16 f60a 	smulbb	r6, r6, sl
 8010a74:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8010a78:	fb0e 6e05 	mla	lr, lr, r5, r6
 8010a7c:	1c66      	adds	r6, r4, #1
 8010a7e:	f10c 0501 	add.w	r5, ip, #1
 8010a82:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010a86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010a8a:	fa1f fe8e 	uxth.w	lr, lr
 8010a8e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010a92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010a96:	ea4c 0c06 	orr.w	ip, ip, r6
 8010a9a:	f10e 0601 	add.w	r6, lr, #1
 8010a9e:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8010aa2:	0976      	lsrs	r6, r6, #5
 8010aa4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010aa8:	9c02      	ldr	r4, [sp, #8]
 8010aaa:	ea4c 0c06 	orr.w	ip, ip, r6
 8010aae:	f820 c004 	strh.w	ip, [r0, r4]
 8010ab2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010ab4:	4421      	add	r1, r4
 8010ab6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010ab8:	3f01      	subs	r7, #1
 8010aba:	4422      	add	r2, r4
 8010abc:	e758      	b.n	8010970 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8010abe:	4e3e      	ldr	r6, [pc, #248]	; (8010bb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8010ac0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010ac4:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8010ac8:	ea4c 0c04 	orr.w	ip, ip, r4
 8010acc:	9c04      	ldr	r4, [sp, #16]
 8010ace:	f06f 0501 	mvn.w	r5, #1
 8010ad2:	00e6      	lsls	r6, r4, #3
 8010ad4:	437d      	muls	r5, r7
 8010ad6:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8010ada:	ea4c 0c04 	orr.w	ip, ip, r4
 8010ade:	f820 c005 	strh.w	ip, [r0, r5]
 8010ae2:	e7e6      	b.n	8010ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010ae4:	f04f 0800 	mov.w	r8, #0
 8010ae8:	eba3 0408 	sub.w	r4, r3, r8
 8010aec:	2c00      	cmp	r4, #0
 8010aee:	f77f af42 	ble.w	8010976 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010af2:	140d      	asrs	r5, r1, #16
 8010af4:	1414      	asrs	r4, r2, #16
 8010af6:	fb09 5404 	mla	r4, r9, r4, r5
 8010afa:	9d03      	ldr	r5, [sp, #12]
 8010afc:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8010b00:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8010b04:	d042      	beq.n	8010b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010b06:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8010b0a:	fa5f f58c 	uxtb.w	r5, ip
 8010b0e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8010b12:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8010b16:	d040      	beq.n	8010b9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010b18:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8010b1c:	fa1f fa85 	uxth.w	sl, r5
 8010b20:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010b24:	43ed      	mvns	r5, r5
 8010b26:	b2ff      	uxtb	r7, r7
 8010b28:	b2ed      	uxtb	r5, r5
 8010b2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010b2e:	fb17 f70a 	smulbb	r7, r7, sl
 8010b32:	fb0c 7705 	mla	r7, ip, r5, r7
 8010b36:	b2e4      	uxtb	r4, r4
 8010b38:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010b3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010b40:	fa5f fe8e 	uxtb.w	lr, lr
 8010b44:	fb14 f40a 	smulbb	r4, r4, sl
 8010b48:	fb0e 4405 	mla	r4, lr, r5, r4
 8010b4c:	b2f6      	uxtb	r6, r6
 8010b4e:	b2bf      	uxth	r7, r7
 8010b50:	fb16 f60a 	smulbb	r6, r6, sl
 8010b54:	b2a4      	uxth	r4, r4
 8010b56:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010b5a:	fb0c 6c05 	mla	ip, ip, r5, r6
 8010b5e:	1c7d      	adds	r5, r7, #1
 8010b60:	1c66      	adds	r6, r4, #1
 8010b62:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010b66:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010b6a:	fa1f fc8c 	uxth.w	ip, ip
 8010b6e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010b72:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010b76:	4337      	orrs	r7, r6
 8010b78:	f10c 0601 	add.w	r6, ip, #1
 8010b7c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010b80:	0976      	lsrs	r6, r6, #5
 8010b82:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010b86:	4337      	orrs	r7, r6
 8010b88:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8010b8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010b8e:	4421      	add	r1, r4
 8010b90:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010b92:	f108 0801 	add.w	r8, r8, #1
 8010b96:	4422      	add	r2, r4
 8010b98:	e7a6      	b.n	8010ae8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 8010b9a:	4d07      	ldr	r5, [pc, #28]	; (8010bb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8010b9c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010ba0:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8010ba4:	00f6      	lsls	r6, r6, #3
 8010ba6:	4327      	orrs	r7, r4
 8010ba8:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8010bac:	4327      	orrs	r7, r4
 8010bae:	e7eb      	b.n	8010b88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8010bb0:	b007      	add	sp, #28
 8010bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bb6:	bf00      	nop
 8010bb8:	fffff800 	.word	0xfffff800

08010bbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc0:	b087      	sub	sp, #28
 8010bc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010bc6:	9204      	str	r2, [sp, #16]
 8010bc8:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 8010bcc:	9200      	str	r2, [sp, #0]
 8010bce:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010bd2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010bd4:	9201      	str	r2, [sp, #4]
 8010bd6:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010bda:	9205      	str	r2, [sp, #20]
 8010bdc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8010be0:	6860      	ldr	r0, [r4, #4]
 8010be2:	fb00 2505 	mla	r5, r0, r5, r2
 8010be6:	6822      	ldr	r2, [r4, #0]
 8010be8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010bec:	9a00      	ldr	r2, [sp, #0]
 8010bee:	3201      	adds	r2, #1
 8010bf0:	f022 0201 	bic.w	r2, r2, #1
 8010bf4:	9202      	str	r2, [sp, #8]
 8010bf6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010bf8:	6812      	ldr	r2, [r2, #0]
 8010bfa:	9203      	str	r2, [sp, #12]
 8010bfc:	2900      	cmp	r1, #0
 8010bfe:	dc03      	bgt.n	8010c08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010c00:	9a04      	ldr	r2, [sp, #16]
 8010c02:	2a00      	cmp	r2, #0
 8010c04:	f340 814c 	ble.w	8010ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8010c08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c0a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010c0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010c10:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010c14:	2b00      	cmp	r3, #0
 8010c16:	dd10      	ble.n	8010c3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010c18:	1422      	asrs	r2, r4, #16
 8010c1a:	d407      	bmi.n	8010c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010c1c:	9e00      	ldr	r6, [sp, #0]
 8010c1e:	4296      	cmp	r6, r2
 8010c20:	dd04      	ble.n	8010c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010c22:	1402      	asrs	r2, r0, #16
 8010c24:	d402      	bmi.n	8010c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010c26:	9e01      	ldr	r6, [sp, #4]
 8010c28:	42b2      	cmp	r2, r6
 8010c2a:	db07      	blt.n	8010c3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 8010c2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010c2e:	4414      	add	r4, r2
 8010c30:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010c32:	3b01      	subs	r3, #1
 8010c34:	4410      	add	r0, r2
 8010c36:	3502      	adds	r5, #2
 8010c38:	e7ec      	b.n	8010c14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010c3a:	d00f      	beq.n	8010c5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8010c3c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010c3e:	1e5a      	subs	r2, r3, #1
 8010c40:	fb06 4602 	mla	r6, r6, r2, r4
 8010c44:	1436      	asrs	r6, r6, #16
 8010c46:	d542      	bpl.n	8010cce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 8010c48:	469a      	mov	sl, r3
 8010c4a:	46a9      	mov	r9, r5
 8010c4c:	f1ba 0f00 	cmp.w	sl, #0
 8010c50:	f300 80b5 	bgt.w	8010dbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8010c54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c58:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010c5c:	2900      	cmp	r1, #0
 8010c5e:	f340 811f 	ble.w	8010ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8010c62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c70:	3901      	subs	r1, #1
 8010c72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c7a:	eeb0 6a62 	vmov.f32	s12, s5
 8010c7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010c8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c92:	eeb0 6a43 	vmov.f32	s12, s6
 8010c96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c9a:	ee12 2a90 	vmov	r2, s5
 8010c9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ca2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ca6:	ee13 2a10 	vmov	r2, s6
 8010caa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cae:	9313      	str	r3, [sp, #76]	; 0x4c
 8010cb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010cb6:	9a04      	ldr	r2, [sp, #16]
 8010cb8:	9314      	str	r3, [sp, #80]	; 0x50
 8010cba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010cbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cc0:	eeb0 3a67 	vmov.f32	s6, s15
 8010cc4:	bf08      	it	eq
 8010cc6:	4613      	moveq	r3, r2
 8010cc8:	eef0 2a47 	vmov.f32	s5, s14
 8010ccc:	e796      	b.n	8010bfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8010cce:	9f00      	ldr	r7, [sp, #0]
 8010cd0:	42b7      	cmp	r7, r6
 8010cd2:	ddb9      	ble.n	8010c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010cd4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010cd6:	fb06 0202 	mla	r2, r6, r2, r0
 8010cda:	1412      	asrs	r2, r2, #16
 8010cdc:	d4b4      	bmi.n	8010c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010cde:	9e01      	ldr	r6, [sp, #4]
 8010ce0:	42b2      	cmp	r2, r6
 8010ce2:	dab1      	bge.n	8010c48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010ce4:	f04f 0800 	mov.w	r8, #0
 8010ce8:	eba3 0208 	sub.w	r2, r3, r8
 8010cec:	2a00      	cmp	r2, #0
 8010cee:	ddb1      	ble.n	8010c54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010cf0:	9f02      	ldr	r7, [sp, #8]
 8010cf2:	1422      	asrs	r2, r4, #16
 8010cf4:	1406      	asrs	r6, r0, #16
 8010cf6:	fb07 2606 	mla	r6, r7, r6, r2
 8010cfa:	0872      	lsrs	r2, r6, #1
 8010cfc:	9f03      	ldr	r7, [sp, #12]
 8010cfe:	5cba      	ldrb	r2, [r7, r2]
 8010d00:	07f6      	lsls	r6, r6, #31
 8010d02:	bf54      	ite	pl
 8010d04:	f002 020f 	andpl.w	r2, r2, #15
 8010d08:	1112      	asrmi	r2, r2, #4
 8010d0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010d0e:	b2d2      	uxtb	r2, r2
 8010d10:	2a00      	cmp	r2, #0
 8010d12:	d04d      	beq.n	8010db0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8010d14:	9f05      	ldr	r7, [sp, #20]
 8010d16:	4e64      	ldr	r6, [pc, #400]	; (8010ea8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010d18:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8010d1c:	6836      	ldr	r6, [r6, #0]
 8010d1e:	437a      	muls	r2, r7
 8010d20:	1c57      	adds	r7, r2, #1
 8010d22:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8010d26:	1212      	asrs	r2, r2, #8
 8010d28:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8010d2c:	fa1f fa82 	uxth.w	sl, r2
 8010d30:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010d34:	43d2      	mvns	r2, r2
 8010d36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010d3a:	b2d2      	uxtb	r2, r2
 8010d3c:	fb1c fc0a 	smulbb	ip, ip, sl
 8010d40:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 8010d44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010d48:	fb07 c702 	mla	r7, r7, r2, ip
 8010d4c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010d50:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010d54:	fb19 f90a 	smulbb	r9, r9, sl
 8010d58:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010d5c:	00f6      	lsls	r6, r6, #3
 8010d5e:	fb0c 9c02 	mla	ip, ip, r2, r9
 8010d62:	b2f6      	uxtb	r6, r6
 8010d64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010d68:	fa1f fc8c 	uxth.w	ip, ip
 8010d6c:	fa5f fe8e 	uxtb.w	lr, lr
 8010d70:	fb16 f60a 	smulbb	r6, r6, sl
 8010d74:	b2bf      	uxth	r7, r7
 8010d76:	fb0e 6602 	mla	r6, lr, r2, r6
 8010d7a:	f10c 0901 	add.w	r9, ip, #1
 8010d7e:	b2b6      	uxth	r6, r6
 8010d80:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010d84:	f107 0b01 	add.w	fp, r7, #1
 8010d88:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8010d8c:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8010d90:	f106 0e01 	add.w	lr, r6, #1
 8010d94:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8010d98:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d9c:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8010da0:	ea4c 0c07 	orr.w	ip, ip, r7
 8010da4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8010da8:	ea4c 0c0e 	orr.w	ip, ip, lr
 8010dac:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8010db0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010db2:	4414      	add	r4, r2
 8010db4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010db6:	f108 0801 	add.w	r8, r8, #1
 8010dba:	4410      	add	r0, r2
 8010dbc:	e794      	b.n	8010ce8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8010dbe:	1422      	asrs	r2, r4, #16
 8010dc0:	d465      	bmi.n	8010e8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8010dc2:	9e00      	ldr	r6, [sp, #0]
 8010dc4:	4296      	cmp	r6, r2
 8010dc6:	dd62      	ble.n	8010e8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8010dc8:	1406      	asrs	r6, r0, #16
 8010dca:	d460      	bmi.n	8010e8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8010dcc:	9f01      	ldr	r7, [sp, #4]
 8010dce:	42be      	cmp	r6, r7
 8010dd0:	da5d      	bge.n	8010e8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8010dd2:	9f02      	ldr	r7, [sp, #8]
 8010dd4:	fb06 2607 	mla	r6, r6, r7, r2
 8010dd8:	0872      	lsrs	r2, r6, #1
 8010dda:	9f03      	ldr	r7, [sp, #12]
 8010ddc:	5cba      	ldrb	r2, [r7, r2]
 8010dde:	07f7      	lsls	r7, r6, #31
 8010de0:	bf54      	ite	pl
 8010de2:	f002 020f 	andpl.w	r2, r2, #15
 8010de6:	1112      	asrmi	r2, r2, #4
 8010de8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010dec:	b2d2      	uxtb	r2, r2
 8010dee:	2a00      	cmp	r2, #0
 8010df0:	d04d      	beq.n	8010e8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8010df2:	9f05      	ldr	r7, [sp, #20]
 8010df4:	4e2c      	ldr	r6, [pc, #176]	; (8010ea8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010df6:	f8b9 e000 	ldrh.w	lr, [r9]
 8010dfa:	6836      	ldr	r6, [r6, #0]
 8010dfc:	437a      	muls	r2, r7
 8010dfe:	1c57      	adds	r7, r2, #1
 8010e00:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8010e04:	1212      	asrs	r2, r2, #8
 8010e06:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8010e0a:	fa1f fb82 	uxth.w	fp, r2
 8010e0e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010e12:	43d2      	mvns	r2, r2
 8010e14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e18:	b2d2      	uxtb	r2, r2
 8010e1a:	fb1c fc0b 	smulbb	ip, ip, fp
 8010e1e:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 8010e22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010e26:	fb07 c702 	mla	r7, r7, r2, ip
 8010e2a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010e2e:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010e32:	fb18 f80b 	smulbb	r8, r8, fp
 8010e36:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010e3a:	00f6      	lsls	r6, r6, #3
 8010e3c:	fb0c 8c02 	mla	ip, ip, r2, r8
 8010e40:	b2f6      	uxtb	r6, r6
 8010e42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010e46:	fa1f fc8c 	uxth.w	ip, ip
 8010e4a:	fa5f fe8e 	uxtb.w	lr, lr
 8010e4e:	fb16 f60b 	smulbb	r6, r6, fp
 8010e52:	b2bf      	uxth	r7, r7
 8010e54:	fb0e 6602 	mla	r6, lr, r2, r6
 8010e58:	f10c 0801 	add.w	r8, ip, #1
 8010e5c:	b2b6      	uxth	r6, r6
 8010e5e:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8010e62:	f107 0801 	add.w	r8, r7, #1
 8010e66:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8010e6a:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8010e6e:	f106 0e01 	add.w	lr, r6, #1
 8010e72:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8010e76:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010e7a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8010e7e:	ea4c 0c07 	orr.w	ip, ip, r7
 8010e82:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8010e86:	ea4c 0c0e 	orr.w	ip, ip, lr
 8010e8a:	f8a9 c000 	strh.w	ip, [r9]
 8010e8e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010e90:	4414      	add	r4, r2
 8010e92:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010e94:	f109 0902 	add.w	r9, r9, #2
 8010e98:	4410      	add	r0, r2
 8010e9a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010e9e:	e6d5      	b.n	8010c4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8010ea0:	b007      	add	sp, #28
 8010ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ea6:	bf00      	nop
 8010ea8:	200120b4 	.word	0x200120b4

08010eac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010eb0:	b087      	sub	sp, #28
 8010eb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010eb6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010eb8:	9205      	str	r2, [sp, #20]
 8010eba:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010ebe:	9201      	str	r2, [sp, #4]
 8010ec0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8010ec4:	6860      	ldr	r0, [r4, #4]
 8010ec6:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 8010eca:	9100      	str	r1, [sp, #0]
 8010ecc:	fb00 2505 	mla	r5, r0, r5, r2
 8010ed0:	6822      	ldr	r2, [r4, #0]
 8010ed2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010ed6:	f10b 0201 	add.w	r2, fp, #1
 8010eda:	f022 0201 	bic.w	r2, r2, #1
 8010ede:	9203      	str	r2, [sp, #12]
 8010ee0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010ee2:	6812      	ldr	r2, [r2, #0]
 8010ee4:	9204      	str	r2, [sp, #16]
 8010ee6:	9a00      	ldr	r2, [sp, #0]
 8010ee8:	2a00      	cmp	r2, #0
 8010eea:	dc03      	bgt.n	8010ef4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8010eec:	9a05      	ldr	r2, [sp, #20]
 8010eee:	2a00      	cmp	r2, #0
 8010ef0:	f340 8157 	ble.w	80111a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8010ef4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010ef6:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010efa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010efc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010f00:	2b00      	cmp	r3, #0
 8010f02:	dd0f      	ble.n	8010f24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010f04:	1422      	asrs	r2, r4, #16
 8010f06:	d406      	bmi.n	8010f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010f08:	4593      	cmp	fp, r2
 8010f0a:	dd04      	ble.n	8010f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010f0c:	1402      	asrs	r2, r0, #16
 8010f0e:	d402      	bmi.n	8010f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010f10:	9e01      	ldr	r6, [sp, #4]
 8010f12:	42b2      	cmp	r2, r6
 8010f14:	db07      	blt.n	8010f26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010f16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f18:	4414      	add	r4, r2
 8010f1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f1c:	3b01      	subs	r3, #1
 8010f1e:	4410      	add	r0, r2
 8010f20:	3502      	adds	r5, #2
 8010f22:	e7ed      	b.n	8010f00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010f24:	d018      	beq.n	8010f58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010f26:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010f28:	1e5a      	subs	r2, r3, #1
 8010f2a:	fb06 4602 	mla	r6, r6, r2, r4
 8010f2e:	1436      	asrs	r6, r6, #16
 8010f30:	d40a      	bmi.n	8010f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010f32:	45b3      	cmp	fp, r6
 8010f34:	dd08      	ble.n	8010f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010f36:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010f38:	fb06 0202 	mla	r2, r6, r2, r0
 8010f3c:	1412      	asrs	r2, r2, #16
 8010f3e:	d403      	bmi.n	8010f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010f40:	9e01      	ldr	r6, [sp, #4]
 8010f42:	42b2      	cmp	r2, r6
 8010f44:	f2c0 80bf 	blt.w	80110c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8010f48:	2700      	movs	r7, #0
 8010f4a:	19da      	adds	r2, r3, r7
 8010f4c:	2a00      	cmp	r2, #0
 8010f4e:	dc3f      	bgt.n	8010fd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8010f50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f54:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010f58:	9b00      	ldr	r3, [sp, #0]
 8010f5a:	2b00      	cmp	r3, #0
 8010f5c:	f340 8121 	ble.w	80111a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8010f60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f76:	eeb0 6a62 	vmov.f32	s12, s5
 8010f7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f86:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010f8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f8e:	eeb0 6a43 	vmov.f32	s12, s6
 8010f92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f96:	ee12 2a90 	vmov	r2, s5
 8010f9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010f9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fa2:	ee13 2a10 	vmov	r2, s6
 8010fa6:	9313      	str	r3, [sp, #76]	; 0x4c
 8010fa8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010faa:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fae:	9314      	str	r3, [sp, #80]	; 0x50
 8010fb0:	9b00      	ldr	r3, [sp, #0]
 8010fb2:	9a05      	ldr	r2, [sp, #20]
 8010fb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010fb8:	3b01      	subs	r3, #1
 8010fba:	9300      	str	r3, [sp, #0]
 8010fbc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010fc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fc2:	eeb0 3a67 	vmov.f32	s6, s15
 8010fc6:	bf08      	it	eq
 8010fc8:	4613      	moveq	r3, r2
 8010fca:	eef0 2a47 	vmov.f32	s5, s14
 8010fce:	e78a      	b.n	8010ee6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010fd0:	1422      	asrs	r2, r4, #16
 8010fd2:	d466      	bmi.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010fd4:	4593      	cmp	fp, r2
 8010fd6:	dd64      	ble.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010fd8:	1406      	asrs	r6, r0, #16
 8010fda:	d462      	bmi.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010fdc:	9901      	ldr	r1, [sp, #4]
 8010fde:	428e      	cmp	r6, r1
 8010fe0:	da5f      	bge.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010fe2:	9903      	ldr	r1, [sp, #12]
 8010fe4:	fb06 2601 	mla	r6, r6, r1, r2
 8010fe8:	0872      	lsrs	r2, r6, #1
 8010fea:	9904      	ldr	r1, [sp, #16]
 8010fec:	5c8a      	ldrb	r2, [r1, r2]
 8010fee:	07f6      	lsls	r6, r6, #31
 8010ff0:	bf54      	ite	pl
 8010ff2:	f002 020f 	andpl.w	r2, r2, #15
 8010ff6:	1112      	asrmi	r2, r2, #4
 8010ff8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010ffc:	b2d2      	uxtb	r2, r2
 8010ffe:	2a00      	cmp	r2, #0
 8011000:	d04f      	beq.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011002:	4969      	ldr	r1, [pc, #420]	; (80111a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011004:	f8d1 c000 	ldr.w	ip, [r1]
 8011008:	2aff      	cmp	r2, #255	; 0xff
 801100a:	ea4f 291c 	mov.w	r9, ip, lsr #8
 801100e:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 8011012:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011016:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801101a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801101e:	fa5f fc8c 	uxtb.w	ip, ip
 8011022:	d044      	beq.n	80110ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011024:	f06f 0101 	mvn.w	r1, #1
 8011028:	4379      	muls	r1, r7
 801102a:	fa1f fa82 	uxth.w	sl, r2
 801102e:	f835 8001 	ldrh.w	r8, [r5, r1]
 8011032:	9102      	str	r1, [sp, #8]
 8011034:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011038:	43d2      	mvns	r2, r2
 801103a:	b2d2      	uxtb	r2, r2
 801103c:	fb19 f90a 	smulbb	r9, r9, sl
 8011040:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011044:	fb0e 9e02 	mla	lr, lr, r2, r9
 8011048:	ea4f 09e8 	mov.w	r9, r8, asr #3
 801104c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011050:	fb16 f60a 	smulbb	r6, r6, sl
 8011054:	fb09 6602 	mla	r6, r9, r2, r6
 8011058:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801105c:	b2b6      	uxth	r6, r6
 801105e:	fa5f f888 	uxtb.w	r8, r8
 8011062:	fb1c fc0a 	smulbb	ip, ip, sl
 8011066:	fa1f fe8e 	uxth.w	lr, lr
 801106a:	fb08 cc02 	mla	ip, r8, r2, ip
 801106e:	f106 0901 	add.w	r9, r6, #1
 8011072:	fa1f fc8c 	uxth.w	ip, ip
 8011076:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801107a:	f10e 0901 	add.w	r9, lr, #1
 801107e:	0976      	lsrs	r6, r6, #5
 8011080:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 8011084:	f10c 0201 	add.w	r2, ip, #1
 8011088:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801108c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011090:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011094:	ea46 060e 	orr.w	r6, r6, lr
 8011098:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801109c:	ea46 060c 	orr.w	r6, r6, ip
 80110a0:	526e      	strh	r6, [r5, r1]
 80110a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80110a4:	4414      	add	r4, r2
 80110a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80110a8:	3f01      	subs	r7, #1
 80110aa:	4410      	add	r0, r2
 80110ac:	e74d      	b.n	8010f4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80110ae:	f06f 0201 	mvn.w	r2, #1
 80110b2:	00f6      	lsls	r6, r6, #3
 80110b4:	fb02 f807 	mul.w	r8, r2, r7
 80110b8:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80110bc:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 80110c0:	f825 6008 	strh.w	r6, [r5, r8]
 80110c4:	e7ed      	b.n	80110a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80110c6:	f04f 0800 	mov.w	r8, #0
 80110ca:	eba3 0208 	sub.w	r2, r3, r8
 80110ce:	2a00      	cmp	r2, #0
 80110d0:	f77f af3e 	ble.w	8010f50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80110d4:	9903      	ldr	r1, [sp, #12]
 80110d6:	1422      	asrs	r2, r4, #16
 80110d8:	1406      	asrs	r6, r0, #16
 80110da:	fb01 2606 	mla	r6, r1, r6, r2
 80110de:	0872      	lsrs	r2, r6, #1
 80110e0:	9904      	ldr	r1, [sp, #16]
 80110e2:	5c8a      	ldrb	r2, [r1, r2]
 80110e4:	07f1      	lsls	r1, r6, #31
 80110e6:	bf54      	ite	pl
 80110e8:	f002 020f 	andpl.w	r2, r2, #15
 80110ec:	1112      	asrmi	r2, r2, #4
 80110ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80110f2:	b2d2      	uxtb	r2, r2
 80110f4:	2a00      	cmp	r2, #0
 80110f6:	d047      	beq.n	8011188 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 80110f8:	492b      	ldr	r1, [pc, #172]	; (80111a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80110fa:	680f      	ldr	r7, [r1, #0]
 80110fc:	2aff      	cmp	r2, #255	; 0xff
 80110fe:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8011102:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 8011106:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 801110a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801110e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011112:	b2ff      	uxtb	r7, r7
 8011114:	d03f      	beq.n	8011196 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 8011116:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801111a:	fa1f fa82 	uxth.w	sl, r2
 801111e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011122:	43d2      	mvns	r2, r2
 8011124:	b2d2      	uxtb	r2, r2
 8011126:	fb19 f90a 	smulbb	r9, r9, sl
 801112a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801112e:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011132:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8011136:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801113a:	fb16 f60a 	smulbb	r6, r6, sl
 801113e:	fb09 6602 	mla	r6, r9, r2, r6
 8011142:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011146:	b2b6      	uxth	r6, r6
 8011148:	fa5f fe8e 	uxtb.w	lr, lr
 801114c:	fb17 f70a 	smulbb	r7, r7, sl
 8011150:	fa1f fc8c 	uxth.w	ip, ip
 8011154:	fb0e 7702 	mla	r7, lr, r2, r7
 8011158:	f106 0901 	add.w	r9, r6, #1
 801115c:	b2bf      	uxth	r7, r7
 801115e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011162:	f10c 0901 	add.w	r9, ip, #1
 8011166:	0976      	lsrs	r6, r6, #5
 8011168:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801116c:	1c7a      	adds	r2, r7, #1
 801116e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011172:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011176:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801117a:	ea46 060c 	orr.w	r6, r6, ip
 801117e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011182:	433e      	orrs	r6, r7
 8011184:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011188:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801118a:	4414      	add	r4, r2
 801118c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801118e:	f108 0801 	add.w	r8, r8, #1
 8011192:	4410      	add	r0, r2
 8011194:	e799      	b.n	80110ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 8011196:	00f6      	lsls	r6, r6, #3
 8011198:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 801119c:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 80111a0:	e7f0      	b.n	8011184 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80111a2:	b007      	add	sp, #28
 80111a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111a8:	200120b4 	.word	0x200120b4

080111ac <_ZN8touchgfx8LCD16bppD1Ev>:
 80111ac:	4770      	bx	lr

080111ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80111ae:	4770      	bx	lr

080111b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80111b0:	4770      	bx	lr

080111b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80111b2:	4770      	bx	lr

080111b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80111b4:	4770      	bx	lr

080111b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80111b6:	4770      	bx	lr

080111b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80111b8:	4770      	bx	lr

080111ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80111ba:	4770      	bx	lr

080111bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80111bc:	4770      	bx	lr

080111be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80111be:	4770      	bx	lr

080111c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80111c0:	4770      	bx	lr

080111c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80111c2:	4770      	bx	lr

080111c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80111c4:	4770      	bx	lr

080111c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80111c6:	4770      	bx	lr

080111c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80111c8:	4770      	bx	lr

080111ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80111ca:	4770      	bx	lr

080111cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80111cc:	4770      	bx	lr

080111ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80111ce:	4770      	bx	lr

080111d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80111d0:	4770      	bx	lr

080111d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80111d2:	4770      	bx	lr

080111d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80111d4:	4770      	bx	lr

080111d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80111d6:	4770      	bx	lr

080111d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80111d8:	4770      	bx	lr

080111da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80111da:	4770      	bx	lr

080111dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80111dc:	4770      	bx	lr

080111de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80111de:	4770      	bx	lr

080111e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80111e0:	4770      	bx	lr

080111e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80111e2:	4770      	bx	lr

080111e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80111e4:	4770      	bx	lr
	...

080111e8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80111e8:	b508      	push	{r3, lr}
 80111ea:	4b06      	ldr	r3, [pc, #24]	; (8011204 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80111ec:	8818      	ldrh	r0, [r3, #0]
 80111ee:	b928      	cbnz	r0, 80111fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80111f0:	4b05      	ldr	r3, [pc, #20]	; (8011208 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80111f2:	4a06      	ldr	r2, [pc, #24]	; (801120c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80111f4:	4806      	ldr	r0, [pc, #24]	; (8011210 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80111f6:	2154      	movs	r1, #84	; 0x54
 80111f8:	f009 f8bc 	bl	801a374 <__assert_func>
 80111fc:	0040      	lsls	r0, r0, #1
 80111fe:	b280      	uxth	r0, r0
 8011200:	bd08      	pop	{r3, pc}
 8011202:	bf00      	nop
 8011204:	200120a6 	.word	0x200120a6
 8011208:	0801df2b 	.word	0x0801df2b
 801120c:	0801e4ab 	.word	0x0801e4ab
 8011210:	0801df6d 	.word	0x0801df6d

08011214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8011214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011218:	b08d      	sub	sp, #52	; 0x34
 801121a:	460f      	mov	r7, r1
 801121c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011220:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8011224:	4616      	mov	r6, r2
 8011226:	f1b9 0f00 	cmp.w	r9, #0
 801122a:	d046      	beq.n	80112ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801122c:	6810      	ldr	r0, [r2, #0]
 801122e:	6851      	ldr	r1, [r2, #4]
 8011230:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80113f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 8011234:	ad08      	add	r5, sp, #32
 8011236:	c503      	stmia	r5!, {r0, r1}
 8011238:	6818      	ldr	r0, [r3, #0]
 801123a:	6859      	ldr	r1, [r3, #4]
 801123c:	ad0a      	add	r5, sp, #40	; 0x28
 801123e:	c503      	stmia	r5!, {r0, r1}
 8011240:	a808      	add	r0, sp, #32
 8011242:	f7fa fc9d 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011246:	4631      	mov	r1, r6
 8011248:	a80a      	add	r0, sp, #40	; 0x28
 801124a:	f7fa fc81 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801124e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011252:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011256:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801125a:	f8d8 0000 	ldr.w	r0, [r8]
 801125e:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 8011262:	fb16 2103 	smlabb	r1, r6, r3, r2
 8011266:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801126a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801126e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8011272:	440a      	add	r2, r1
 8011274:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011278:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801127c:	4413      	add	r3, r2
 801127e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011282:	6803      	ldr	r3, [r0, #0]
 8011284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011286:	4798      	blx	r3
 8011288:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801128c:	d018      	beq.n	80112c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801128e:	f010 0f04 	tst.w	r0, #4
 8011292:	d019      	beq.n	80112c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011294:	f8d8 0000 	ldr.w	r0, [r8]
 8011298:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801129c:	6801      	ldr	r1, [r0, #0]
 801129e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80112a2:	e9cd 9403 	strd	r9, r4, [sp, #12]
 80112a6:	b2bf      	uxth	r7, r7
 80112a8:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80112ac:	9402      	str	r4, [sp, #8]
 80112ae:	b2ad      	uxth	r5, r5
 80112b0:	9701      	str	r7, [sp, #4]
 80112b2:	9500      	str	r5, [sp, #0]
 80112b4:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80112b6:	4631      	mov	r1, r6
 80112b8:	47a0      	blx	r4
 80112ba:	b00d      	add	sp, #52	; 0x34
 80112bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112c0:	b914      	cbnz	r4, 80112c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80112c2:	f010 0f01 	tst.w	r0, #1
 80112c6:	e7e4      	b.n	8011292 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80112c8:	f8d8 0000 	ldr.w	r0, [r8]
 80112cc:	6803      	ldr	r3, [r0, #0]
 80112ce:	6a1b      	ldr	r3, [r3, #32]
 80112d0:	4798      	blx	r3
 80112d2:	4a48      	ldr	r2, [pc, #288]	; (80113f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 80112d4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80112d8:	8814      	ldrh	r4, [r2, #0]
 80112da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80112de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80112e2:	fb01 3404 	mla	r4, r1, r4, r3
 80112e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80112ea:	4692      	mov	sl, r2
 80112ec:	d118      	bne.n	8011320 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 80112ee:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 80112f2:	f04f 0900 	mov.w	r9, #0
 80112f6:	f8d8 0000 	ldr.w	r0, [r8]
 80112fa:	45b9      	cmp	r9, r7
 80112fc:	6803      	ldr	r3, [r0, #0]
 80112fe:	da73      	bge.n	80113e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8011300:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011302:	4632      	mov	r2, r6
 8011304:	465b      	mov	r3, fp
 8011306:	4621      	mov	r1, r4
 8011308:	47a8      	blx	r5
 801130a:	f8ba 3000 	ldrh.w	r3, [sl]
 801130e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011312:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011316:	f109 0901 	add.w	r9, r9, #1
 801131a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801131e:	e7ea      	b.n	80112f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8011320:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8011324:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8011328:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 801132c:	f04f 0b00 	mov.w	fp, #0
 8011330:	fa1f f389 	uxth.w	r3, r9
 8011334:	fa1f f888 	uxth.w	r8, r8
 8011338:	9207      	str	r2, [sp, #28]
 801133a:	45bb      	cmp	fp, r7
 801133c:	da54      	bge.n	80113e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 801133e:	f04f 0e00 	mov.w	lr, #0
 8011342:	45ae      	cmp	lr, r5
 8011344:	da41      	bge.n	80113ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8011346:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 801134a:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 801134e:	1208      	asrs	r0, r1, #8
 8011350:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8011354:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011358:	fb10 f008 	smulbb	r0, r0, r8
 801135c:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8011360:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011364:	00c9      	lsls	r1, r1, #3
 8011366:	fb0c 0c03 	mla	ip, ip, r3, r0
 801136a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801136e:	10d0      	asrs	r0, r2, #3
 8011370:	b2c9      	uxtb	r1, r1
 8011372:	00d2      	lsls	r2, r2, #3
 8011374:	fa1f fc8c 	uxth.w	ip, ip
 8011378:	fb19 f908 	smulbb	r9, r9, r8
 801137c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8011380:	b2d2      	uxtb	r2, r2
 8011382:	fb11 f108 	smulbb	r1, r1, r8
 8011386:	fb00 9003 	mla	r0, r0, r3, r9
 801138a:	fb02 1203 	mla	r2, r2, r3, r1
 801138e:	f10c 0901 	add.w	r9, ip, #1
 8011392:	b292      	uxth	r2, r2
 8011394:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011398:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801139c:	f102 0c01 	add.w	ip, r2, #1
 80113a0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80113a4:	b280      	uxth	r0, r0
 80113a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80113aa:	ea49 0c02 	orr.w	ip, r9, r2
 80113ae:	f100 0901 	add.w	r9, r0, #1
 80113b2:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80113b6:	0940      	lsrs	r0, r0, #5
 80113b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80113bc:	ea4c 0c00 	orr.w	ip, ip, r0
 80113c0:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 80113c4:	f10e 0e01 	add.w	lr, lr, #1
 80113c8:	e7bb      	b.n	8011342 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 80113ca:	9a07      	ldr	r2, [sp, #28]
 80113cc:	8812      	ldrh	r2, [r2, #0]
 80113ce:	1b52      	subs	r2, r2, r5
 80113d0:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80113d4:	4414      	add	r4, r2
 80113d6:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 80113da:	1b52      	subs	r2, r2, r5
 80113dc:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80113e0:	4416      	add	r6, r2
 80113e2:	f10b 0b01 	add.w	fp, fp, #1
 80113e6:	e7a8      	b.n	801133a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 80113e8:	4b03      	ldr	r3, [pc, #12]	; (80113f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 80113ea:	6818      	ldr	r0, [r3, #0]
 80113ec:	6803      	ldr	r3, [r0, #0]
 80113ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80113f0:	4798      	blx	r3
 80113f2:	e762      	b.n	80112ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80113f4:	200120a6 	.word	0x200120a6
 80113f8:	200120ac 	.word	0x200120ac

080113fc <_ZN8touchgfx8LCD16bppD0Ev>:
 80113fc:	b510      	push	{r4, lr}
 80113fe:	2178      	movs	r1, #120	; 0x78
 8011400:	4604      	mov	r4, r0
 8011402:	f008 ff8b 	bl	801a31c <_ZdlPvj>
 8011406:	4620      	mov	r0, r4
 8011408:	bd10      	pop	{r4, pc}

0801140a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801140a:	b510      	push	{r4, lr}
 801140c:	2104      	movs	r1, #4
 801140e:	4604      	mov	r4, r0
 8011410:	f008 ff84 	bl	801a31c <_ZdlPvj>
 8011414:	4620      	mov	r0, r4
 8011416:	bd10      	pop	{r4, pc}

08011418 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011418:	b510      	push	{r4, lr}
 801141a:	2104      	movs	r1, #4
 801141c:	4604      	mov	r4, r0
 801141e:	f008 ff7d 	bl	801a31c <_ZdlPvj>
 8011422:	4620      	mov	r0, r4
 8011424:	bd10      	pop	{r4, pc}

08011426 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011426:	b510      	push	{r4, lr}
 8011428:	2104      	movs	r1, #4
 801142a:	4604      	mov	r4, r0
 801142c:	f008 ff76 	bl	801a31c <_ZdlPvj>
 8011430:	4620      	mov	r0, r4
 8011432:	bd10      	pop	{r4, pc}

08011434 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011434:	b510      	push	{r4, lr}
 8011436:	2104      	movs	r1, #4
 8011438:	4604      	mov	r4, r0
 801143a:	f008 ff6f 	bl	801a31c <_ZdlPvj>
 801143e:	4620      	mov	r0, r4
 8011440:	bd10      	pop	{r4, pc}

08011442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011442:	b510      	push	{r4, lr}
 8011444:	2104      	movs	r1, #4
 8011446:	4604      	mov	r4, r0
 8011448:	f008 ff68 	bl	801a31c <_ZdlPvj>
 801144c:	4620      	mov	r0, r4
 801144e:	bd10      	pop	{r4, pc}

08011450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8011450:	b510      	push	{r4, lr}
 8011452:	2104      	movs	r1, #4
 8011454:	4604      	mov	r4, r0
 8011456:	f008 ff61 	bl	801a31c <_ZdlPvj>
 801145a:	4620      	mov	r0, r4
 801145c:	bd10      	pop	{r4, pc}

0801145e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801145e:	b510      	push	{r4, lr}
 8011460:	2104      	movs	r1, #4
 8011462:	4604      	mov	r4, r0
 8011464:	f008 ff5a 	bl	801a31c <_ZdlPvj>
 8011468:	4620      	mov	r0, r4
 801146a:	bd10      	pop	{r4, pc}

0801146c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801146c:	b510      	push	{r4, lr}
 801146e:	2104      	movs	r1, #4
 8011470:	4604      	mov	r4, r0
 8011472:	f008 ff53 	bl	801a31c <_ZdlPvj>
 8011476:	4620      	mov	r0, r4
 8011478:	bd10      	pop	{r4, pc}

0801147a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801147a:	b510      	push	{r4, lr}
 801147c:	2104      	movs	r1, #4
 801147e:	4604      	mov	r4, r0
 8011480:	f008 ff4c 	bl	801a31c <_ZdlPvj>
 8011484:	4620      	mov	r0, r4
 8011486:	bd10      	pop	{r4, pc}

08011488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011488:	b510      	push	{r4, lr}
 801148a:	2104      	movs	r1, #4
 801148c:	4604      	mov	r4, r0
 801148e:	f008 ff45 	bl	801a31c <_ZdlPvj>
 8011492:	4620      	mov	r0, r4
 8011494:	bd10      	pop	{r4, pc}

08011496 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011496:	b510      	push	{r4, lr}
 8011498:	2104      	movs	r1, #4
 801149a:	4604      	mov	r4, r0
 801149c:	f008 ff3e 	bl	801a31c <_ZdlPvj>
 80114a0:	4620      	mov	r0, r4
 80114a2:	bd10      	pop	{r4, pc}

080114a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80114a4:	b510      	push	{r4, lr}
 80114a6:	2104      	movs	r1, #4
 80114a8:	4604      	mov	r4, r0
 80114aa:	f008 ff37 	bl	801a31c <_ZdlPvj>
 80114ae:	4620      	mov	r0, r4
 80114b0:	bd10      	pop	{r4, pc}

080114b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80114b2:	b510      	push	{r4, lr}
 80114b4:	2104      	movs	r1, #4
 80114b6:	4604      	mov	r4, r0
 80114b8:	f008 ff30 	bl	801a31c <_ZdlPvj>
 80114bc:	4620      	mov	r0, r4
 80114be:	bd10      	pop	{r4, pc}

080114c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80114c0:	b510      	push	{r4, lr}
 80114c2:	2104      	movs	r1, #4
 80114c4:	4604      	mov	r4, r0
 80114c6:	f008 ff29 	bl	801a31c <_ZdlPvj>
 80114ca:	4620      	mov	r0, r4
 80114cc:	bd10      	pop	{r4, pc}

080114ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80114ce:	b510      	push	{r4, lr}
 80114d0:	2104      	movs	r1, #4
 80114d2:	4604      	mov	r4, r0
 80114d4:	f008 ff22 	bl	801a31c <_ZdlPvj>
 80114d8:	4620      	mov	r0, r4
 80114da:	bd10      	pop	{r4, pc}

080114dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80114dc:	b510      	push	{r4, lr}
 80114de:	2104      	movs	r1, #4
 80114e0:	4604      	mov	r4, r0
 80114e2:	f008 ff1b 	bl	801a31c <_ZdlPvj>
 80114e6:	4620      	mov	r0, r4
 80114e8:	bd10      	pop	{r4, pc}

080114ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80114ea:	b510      	push	{r4, lr}
 80114ec:	2104      	movs	r1, #4
 80114ee:	4604      	mov	r4, r0
 80114f0:	f008 ff14 	bl	801a31c <_ZdlPvj>
 80114f4:	4620      	mov	r0, r4
 80114f6:	bd10      	pop	{r4, pc}

080114f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80114f8:	b510      	push	{r4, lr}
 80114fa:	2104      	movs	r1, #4
 80114fc:	4604      	mov	r4, r0
 80114fe:	f008 ff0d 	bl	801a31c <_ZdlPvj>
 8011502:	4620      	mov	r0, r4
 8011504:	bd10      	pop	{r4, pc}

08011506 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011506:	b510      	push	{r4, lr}
 8011508:	2104      	movs	r1, #4
 801150a:	4604      	mov	r4, r0
 801150c:	f008 ff06 	bl	801a31c <_ZdlPvj>
 8011510:	4620      	mov	r0, r4
 8011512:	bd10      	pop	{r4, pc}

08011514 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011514:	b510      	push	{r4, lr}
 8011516:	2104      	movs	r1, #4
 8011518:	4604      	mov	r4, r0
 801151a:	f008 feff 	bl	801a31c <_ZdlPvj>
 801151e:	4620      	mov	r0, r4
 8011520:	bd10      	pop	{r4, pc}

08011522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011522:	b510      	push	{r4, lr}
 8011524:	2104      	movs	r1, #4
 8011526:	4604      	mov	r4, r0
 8011528:	f008 fef8 	bl	801a31c <_ZdlPvj>
 801152c:	4620      	mov	r0, r4
 801152e:	bd10      	pop	{r4, pc}

08011530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011530:	b510      	push	{r4, lr}
 8011532:	2104      	movs	r1, #4
 8011534:	4604      	mov	r4, r0
 8011536:	f008 fef1 	bl	801a31c <_ZdlPvj>
 801153a:	4620      	mov	r0, r4
 801153c:	bd10      	pop	{r4, pc}

0801153e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801153e:	b510      	push	{r4, lr}
 8011540:	2104      	movs	r1, #4
 8011542:	4604      	mov	r4, r0
 8011544:	f008 feea 	bl	801a31c <_ZdlPvj>
 8011548:	4620      	mov	r0, r4
 801154a:	bd10      	pop	{r4, pc}

0801154c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801154c:	b510      	push	{r4, lr}
 801154e:	2104      	movs	r1, #4
 8011550:	4604      	mov	r4, r0
 8011552:	f008 fee3 	bl	801a31c <_ZdlPvj>
 8011556:	4620      	mov	r0, r4
 8011558:	bd10      	pop	{r4, pc}

0801155a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801155a:	b510      	push	{r4, lr}
 801155c:	2104      	movs	r1, #4
 801155e:	4604      	mov	r4, r0
 8011560:	f008 fedc 	bl	801a31c <_ZdlPvj>
 8011564:	4620      	mov	r0, r4
 8011566:	bd10      	pop	{r4, pc}

08011568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8011568:	b510      	push	{r4, lr}
 801156a:	2104      	movs	r1, #4
 801156c:	4604      	mov	r4, r0
 801156e:	f008 fed5 	bl	801a31c <_ZdlPvj>
 8011572:	4620      	mov	r0, r4
 8011574:	bd10      	pop	{r4, pc}

08011576 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8011576:	b510      	push	{r4, lr}
 8011578:	2104      	movs	r1, #4
 801157a:	4604      	mov	r4, r0
 801157c:	f008 fece 	bl	801a31c <_ZdlPvj>
 8011580:	4620      	mov	r0, r4
 8011582:	bd10      	pop	{r4, pc}

08011584 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011584:	b510      	push	{r4, lr}
 8011586:	2104      	movs	r1, #4
 8011588:	4604      	mov	r4, r0
 801158a:	f008 fec7 	bl	801a31c <_ZdlPvj>
 801158e:	4620      	mov	r0, r4
 8011590:	bd10      	pop	{r4, pc}
	...

08011594 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011598:	460e      	mov	r6, r1
 801159a:	b08b      	sub	sp, #44	; 0x2c
 801159c:	4615      	mov	r5, r2
 801159e:	461c      	mov	r4, r3
 80115a0:	b323      	cbz	r3, 80115ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80115a2:	4608      	mov	r0, r1
 80115a4:	f7f7 fa5d 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80115a8:	bb00      	cbnz	r0, 80115ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 80115aa:	6830      	ldr	r0, [r6, #0]
 80115ac:	6871      	ldr	r1, [r6, #4]
 80115ae:	4e55      	ldr	r6, [pc, #340]	; (8011704 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 80115b0:	ab08      	add	r3, sp, #32
 80115b2:	c303      	stmia	r3!, {r0, r1}
 80115b4:	a808      	add	r0, sp, #32
 80115b6:	f7fa fae3 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80115ba:	6830      	ldr	r0, [r6, #0]
 80115bc:	6803      	ldr	r3, [r0, #0]
 80115be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115c0:	4798      	blx	r3
 80115c2:	2cff      	cmp	r4, #255	; 0xff
 80115c4:	d015      	beq.n	80115f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 80115c6:	f010 0f08 	tst.w	r0, #8
 80115ca:	d015      	beq.n	80115f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 80115cc:	6830      	ldr	r0, [r6, #0]
 80115ce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80115d2:	6801      	ldr	r1, [r0, #0]
 80115d4:	9402      	str	r4, [sp, #8]
 80115d6:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 80115da:	9401      	str	r4, [sp, #4]
 80115dc:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80115e0:	9400      	str	r4, [sp, #0]
 80115e2:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 80115e4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80115e8:	4629      	mov	r1, r5
 80115ea:	47a0      	blx	r4
 80115ec:	b00b      	add	sp, #44	; 0x2c
 80115ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115f2:	f010 0f02 	tst.w	r0, #2
 80115f6:	e7e8      	b.n	80115ca <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80115f8:	6830      	ldr	r0, [r6, #0]
 80115fa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80115fe:	6803      	ldr	r3, [r0, #0]
 8011600:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8011604:	6a1b      	ldr	r3, [r3, #32]
 8011606:	4798      	blx	r3
 8011608:	4a3f      	ldr	r2, [pc, #252]	; (8011708 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 801160a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801160e:	8816      	ldrh	r6, [r2, #0]
 8011610:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011614:	2cff      	cmp	r4, #255	; 0xff
 8011616:	fb06 1303 	mla	r3, r6, r3, r1
 801161a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801161e:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8011622:	4616      	mov	r6, r2
 8011624:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8011628:	d10a      	bne.n	8011640 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 801162a:	0049      	lsls	r1, r1, #1
 801162c:	2200      	movs	r2, #0
 801162e:	454a      	cmp	r2, r9
 8011630:	da61      	bge.n	80116f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8011632:	2300      	movs	r3, #0
 8011634:	4543      	cmp	r3, r8
 8011636:	da57      	bge.n	80116e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 8011638:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 801163c:	3301      	adds	r3, #1
 801163e:	e7f9      	b.n	8011634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8011640:	0a2b      	lsrs	r3, r5, #8
 8011642:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8011646:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801164a:	b2a4      	uxth	r4, r4
 801164c:	4363      	muls	r3, r4
 801164e:	9305      	str	r3, [sp, #20]
 8011650:	08ee      	lsrs	r6, r5, #3
 8011652:	00eb      	lsls	r3, r5, #3
 8011654:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011658:	b2db      	uxtb	r3, r3
 801165a:	0049      	lsls	r1, r1, #1
 801165c:	4366      	muls	r6, r4
 801165e:	4363      	muls	r3, r4
 8011660:	9106      	str	r1, [sp, #24]
 8011662:	f04f 0c00 	mov.w	ip, #0
 8011666:	b2bf      	uxth	r7, r7
 8011668:	9207      	str	r2, [sp, #28]
 801166a:	45cc      	cmp	ip, r9
 801166c:	da43      	bge.n	80116f6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 801166e:	4682      	mov	sl, r0
 8011670:	f04f 0e00 	mov.w	lr, #0
 8011674:	45c6      	cmp	lr, r8
 8011676:	da2d      	bge.n	80116d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8011678:	f8ba 2000 	ldrh.w	r2, [sl]
 801167c:	9905      	ldr	r1, [sp, #20]
 801167e:	1214      	asrs	r4, r2, #8
 8011680:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011684:	fb14 f407 	smulbb	r4, r4, r7
 8011688:	440c      	add	r4, r1
 801168a:	10d1      	asrs	r1, r2, #3
 801168c:	00d2      	lsls	r2, r2, #3
 801168e:	b2d2      	uxtb	r2, r2
 8011690:	fb12 f207 	smulbb	r2, r2, r7
 8011694:	b2a4      	uxth	r4, r4
 8011696:	441a      	add	r2, r3
 8011698:	b292      	uxth	r2, r2
 801169a:	1c65      	adds	r5, r4, #1
 801169c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80116a0:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 80116a4:	fb11 f107 	smulbb	r1, r1, r7
 80116a8:	1c55      	adds	r5, r2, #1
 80116aa:	4431      	add	r1, r6
 80116ac:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 80116b0:	b289      	uxth	r1, r1
 80116b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80116b6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80116ba:	4314      	orrs	r4, r2
 80116bc:	1c4a      	adds	r2, r1, #1
 80116be:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80116c2:	0949      	lsrs	r1, r1, #5
 80116c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80116c8:	430c      	orrs	r4, r1
 80116ca:	f82a 4b02 	strh.w	r4, [sl], #2
 80116ce:	f10e 0e01 	add.w	lr, lr, #1
 80116d2:	e7cf      	b.n	8011674 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 80116d4:	9a07      	ldr	r2, [sp, #28]
 80116d6:	9906      	ldr	r1, [sp, #24]
 80116d8:	8812      	ldrh	r2, [r2, #0]
 80116da:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 80116de:	440a      	add	r2, r1
 80116e0:	4410      	add	r0, r2
 80116e2:	f10c 0c01 	add.w	ip, ip, #1
 80116e6:	e7c0      	b.n	801166a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 80116e8:	8833      	ldrh	r3, [r6, #0]
 80116ea:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 80116ee:	440b      	add	r3, r1
 80116f0:	4418      	add	r0, r3
 80116f2:	3201      	adds	r2, #1
 80116f4:	e79b      	b.n	801162e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 80116f6:	4b03      	ldr	r3, [pc, #12]	; (8011704 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 80116f8:	6818      	ldr	r0, [r3, #0]
 80116fa:	6803      	ldr	r3, [r0, #0]
 80116fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116fe:	4798      	blx	r3
 8011700:	e774      	b.n	80115ec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011702:	bf00      	nop
 8011704:	200120ac 	.word	0x200120ac
 8011708:	200120a6 	.word	0x200120a6

0801170c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801170c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011710:	4d9b      	ldr	r5, [pc, #620]	; (8011980 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8011712:	4690      	mov	r8, r2
 8011714:	682a      	ldr	r2, [r5, #0]
 8011716:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801171a:	2a02      	cmp	r2, #2
 801171c:	b08f      	sub	sp, #60	; 0x3c
 801171e:	4604      	mov	r4, r0
 8011720:	4689      	mov	r9, r1
 8011722:	d106      	bne.n	8011732 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011724:	4b97      	ldr	r3, [pc, #604]	; (8011984 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8011726:	4a98      	ldr	r2, [pc, #608]	; (8011988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011728:	f240 21be 	movw	r1, #702	; 0x2be
 801172c:	4897      	ldr	r0, [pc, #604]	; (801198c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801172e:	f008 fe21 	bl	801a374 <__assert_func>
 8011732:	ae0e      	add	r6, sp, #56	; 0x38
 8011734:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8011738:	4630      	mov	r0, r6
 801173a:	f7fd fad9 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801173e:	6823      	ldr	r3, [r4, #0]
 8011740:	4607      	mov	r7, r0
 8011742:	6a1b      	ldr	r3, [r3, #32]
 8011744:	4620      	mov	r0, r4
 8011746:	4798      	blx	r3
 8011748:	4287      	cmp	r7, r0
 801174a:	d004      	beq.n	8011756 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801174c:	4b90      	ldr	r3, [pc, #576]	; (8011990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 801174e:	4a8e      	ldr	r2, [pc, #568]	; (8011988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011750:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 8011754:	e7ea      	b.n	801172c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011756:	4630      	mov	r0, r6
 8011758:	f7fd fa46 	bl	800ebe8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801175c:	4607      	mov	r7, r0
 801175e:	b920      	cbnz	r0, 801176a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8011760:	4b8c      	ldr	r3, [pc, #560]	; (8011994 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8011762:	4a89      	ldr	r2, [pc, #548]	; (8011988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011764:	f240 21c2 	movw	r1, #706	; 0x2c2
 8011768:	e7e0      	b.n	801172c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801176a:	f8d8 0000 	ldr.w	r0, [r8]
 801176e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011772:	f9b8 a000 	ldrsh.w	sl, [r8]
 8011776:	ab06      	add	r3, sp, #24
 8011778:	c303      	stmia	r3!, {r0, r1}
 801177a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801177e:	f8d9 0000 	ldr.w	r0, [r9]
 8011782:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8011786:	ab08      	add	r3, sp, #32
 8011788:	c303      	stmia	r3!, {r0, r1}
 801178a:	4630      	mov	r0, r6
 801178c:	f7fd f924 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011790:	4680      	mov	r8, r0
 8011792:	4630      	mov	r0, r6
 8011794:	f7fd f95a 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011798:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801179c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80117a0:	f10d 0920 	add.w	r9, sp, #32
 80117a4:	a806      	add	r0, sp, #24
 80117a6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80117aa:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 80117ae:	f7fa f9e7 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80117b2:	4648      	mov	r0, r9
 80117b4:	f7fa f9e4 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80117b8:	a80a      	add	r0, sp, #40	; 0x28
 80117ba:	f7fa f9e1 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80117be:	4e76      	ldr	r6, [pc, #472]	; (8011998 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 80117c0:	4b76      	ldr	r3, [pc, #472]	; (801199c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80117c2:	f9b6 2000 	ldrsh.w	r2, [r6]
 80117c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80117ca:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80117ce:	2100      	movs	r1, #0
 80117d0:	910c      	str	r1, [sp, #48]	; 0x30
 80117d2:	4648      	mov	r0, r9
 80117d4:	a90c      	add	r1, sp, #48	; 0x30
 80117d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80117da:	f7f7 f8ff 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 80117de:	4648      	mov	r0, r9
 80117e0:	f7f7 f93f 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117e4:	2800      	cmp	r0, #0
 80117e6:	f040 80bd 	bne.w	8011964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80117ea:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80117ee:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80117f2:	4288      	cmp	r0, r1
 80117f4:	db37      	blt.n	8011866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 80117f6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80117fa:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80117fe:	429a      	cmp	r2, r3
 8011800:	db31      	blt.n	8011866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011802:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8011806:	4460      	add	r0, ip
 8011808:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 801180c:	4461      	add	r1, ip
 801180e:	b200      	sxth	r0, r0
 8011810:	b209      	sxth	r1, r1
 8011812:	4288      	cmp	r0, r1
 8011814:	dc27      	bgt.n	8011866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011816:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801181a:	440a      	add	r2, r1
 801181c:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011820:	440b      	add	r3, r1
 8011822:	b212      	sxth	r2, r2
 8011824:	b21b      	sxth	r3, r3
 8011826:	429a      	cmp	r2, r3
 8011828:	dc1d      	bgt.n	8011866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801182a:	6823      	ldr	r3, [r4, #0]
 801182c:	4620      	mov	r0, r4
 801182e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011830:	4798      	blx	r3
 8011832:	4682      	mov	sl, r0
 8011834:	6828      	ldr	r0, [r5, #0]
 8011836:	6803      	ldr	r3, [r0, #0]
 8011838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801183a:	4798      	blx	r3
 801183c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011840:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011844:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8011848:	1a9b      	subs	r3, r3, r2
 801184a:	b29b      	uxth	r3, r3
 801184c:	b21c      	sxth	r4, r3
 801184e:	2c00      	cmp	r4, #0
 8011850:	dc0e      	bgt.n	8011870 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8011852:	bf1f      	itttt	ne
 8011854:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8011858:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 801185c:	189b      	addne	r3, r3, r2
 801185e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8011862:	463c      	mov	r4, r7
 8011864:	e00a      	b.n	801187c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8011866:	4b4e      	ldr	r3, [pc, #312]	; (80119a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8011868:	4a47      	ldr	r2, [pc, #284]	; (8011988 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801186a:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 801186e:	e75d      	b.n	801172c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011870:	ebab 0303 	sub.w	r3, fp, r3
 8011874:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8011878:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801187c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011880:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011884:	1a5b      	subs	r3, r3, r1
 8011886:	b29b      	uxth	r3, r3
 8011888:	b21a      	sxth	r2, r3
 801188a:	2a00      	cmp	r2, #0
 801188c:	dd4a      	ble.n	8011924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 801188e:	fb02 f20b 	mul.w	r2, r2, fp
 8011892:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8011896:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 801189a:	1ad3      	subs	r3, r2, r3
 801189c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80118a0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80118a4:	2b00      	cmp	r3, #0
 80118a6:	dd5d      	ble.n	8011964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80118a8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80118ac:	f1bc 0f00 	cmp.w	ip, #0
 80118b0:	dd58      	ble.n	8011964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80118b2:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 80118b6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80118ba:	fb0a f801 	mul.w	r8, sl, r1
 80118be:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80118c2:	4480      	add	r8, r0
 80118c4:	8830      	ldrh	r0, [r6, #0]
 80118c6:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 80118ca:	42b3      	cmp	r3, r6
 80118cc:	bfa8      	it	ge
 80118ce:	4633      	movge	r3, r6
 80118d0:	1a82      	subs	r2, r0, r2
 80118d2:	4293      	cmp	r3, r2
 80118d4:	bfa8      	it	ge
 80118d6:	4613      	movge	r3, r2
 80118d8:	4a30      	ldr	r2, [pc, #192]	; (801199c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80118da:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80118de:	8812      	ldrh	r2, [r2, #0]
 80118e0:	4566      	cmp	r6, ip
 80118e2:	eba2 0101 	sub.w	r1, r2, r1
 80118e6:	bfa8      	it	ge
 80118e8:	4666      	movge	r6, ip
 80118ea:	428e      	cmp	r6, r1
 80118ec:	4632      	mov	r2, r6
 80118ee:	bfa8      	it	ge
 80118f0:	460a      	movge	r2, r1
 80118f2:	4298      	cmp	r0, r3
 80118f4:	9202      	str	r2, [sp, #8]
 80118f6:	d01e      	beq.n	8011936 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 80118f8:	005b      	lsls	r3, r3, #1
 80118fa:	9303      	str	r3, [sp, #12]
 80118fc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011900:	f04f 0900 	mov.w	r9, #0
 8011904:	9b02      	ldr	r3, [sp, #8]
 8011906:	454b      	cmp	r3, r9
 8011908:	dd2c      	ble.n	8011964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801190a:	6828      	ldr	r0, [r5, #0]
 801190c:	6803      	ldr	r3, [r0, #0]
 801190e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011910:	4642      	mov	r2, r8
 8011912:	461e      	mov	r6, r3
 8011914:	4621      	mov	r1, r4
 8011916:	9b03      	ldr	r3, [sp, #12]
 8011918:	47b0      	blx	r6
 801191a:	44d0      	add	r8, sl
 801191c:	445c      	add	r4, fp
 801191e:	f109 0901 	add.w	r9, r9, #1
 8011922:	e7ef      	b.n	8011904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8011924:	bf1f      	itttt	ne
 8011926:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 801192a:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 801192e:	189b      	addne	r3, r3, r2
 8011930:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8011934:	e7b4      	b.n	80118a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8011936:	4558      	cmp	r0, fp
 8011938:	d1de      	bne.n	80118f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 801193a:	6828      	ldr	r0, [r5, #0]
 801193c:	6803      	ldr	r3, [r0, #0]
 801193e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011940:	4798      	blx	r3
 8011942:	07c3      	lsls	r3, r0, #31
 8011944:	d512      	bpl.n	801196c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8011946:	6828      	ldr	r0, [r5, #0]
 8011948:	9b02      	ldr	r3, [sp, #8]
 801194a:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 801194e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011952:	6803      	ldr	r3, [r0, #0]
 8011954:	f8cd b000 	str.w	fp, [sp]
 8011958:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801195a:	e899 0006 	ldmia.w	r9, {r1, r2}
 801195e:	4623      	mov	r3, r4
 8011960:	47a8      	blx	r5
 8011962:	4607      	mov	r7, r0
 8011964:	4638      	mov	r0, r7
 8011966:	b00f      	add	sp, #60	; 0x3c
 8011968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801196c:	6828      	ldr	r0, [r5, #0]
 801196e:	6803      	ldr	r3, [r0, #0]
 8011970:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011972:	9b02      	ldr	r3, [sp, #8]
 8011974:	4642      	mov	r2, r8
 8011976:	fb03 f30a 	mul.w	r3, r3, sl
 801197a:	4621      	mov	r1, r4
 801197c:	47a8      	blx	r5
 801197e:	e7f1      	b.n	8011964 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011980:	200120ac 	.word	0x200120ac
 8011984:	0801dd1f 	.word	0x0801dd1f
 8011988:	0801e55b 	.word	0x0801e55b
 801198c:	0801ddd1 	.word	0x0801ddd1
 8011990:	0801de03 	.word	0x0801de03
 8011994:	0801de58 	.word	0x0801de58
 8011998:	200120a6 	.word	0x200120a6
 801199c:	200120a8 	.word	0x200120a8
 80119a0:	0801de96 	.word	0x0801de96

080119a4 <_ZN8touchgfx8LCD16bppC1Ev>:
 80119a4:	2200      	movs	r2, #0
 80119a6:	4910      	ldr	r1, [pc, #64]	; (80119e8 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80119a8:	6042      	str	r2, [r0, #4]
 80119aa:	6001      	str	r1, [r0, #0]
 80119ac:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80119b0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80119b4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80119b8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80119bc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80119c0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80119c4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80119c8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80119cc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80119d0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80119d4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80119d8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80119dc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80119e0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80119e4:	4770      	bx	lr
 80119e6:	bf00      	nop
 80119e8:	0801e1d8 	.word	0x0801e1d8

080119ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80119ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119f0:	460c      	mov	r4, r1
 80119f2:	b08d      	sub	sp, #52	; 0x34
 80119f4:	4682      	mov	sl, r0
 80119f6:	6808      	ldr	r0, [r1, #0]
 80119f8:	6849      	ldr	r1, [r1, #4]
 80119fa:	469b      	mov	fp, r3
 80119fc:	ab08      	add	r3, sp, #32
 80119fe:	c303      	stmia	r3!, {r0, r1}
 8011a00:	6810      	ldr	r0, [r2, #0]
 8011a02:	6851      	ldr	r1, [r2, #4]
 8011a04:	ab0a      	add	r3, sp, #40	; 0x28
 8011a06:	c303      	stmia	r3!, {r0, r1}
 8011a08:	a808      	add	r0, sp, #32
 8011a0a:	f7fa f8b9 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a0e:	4621      	mov	r1, r4
 8011a10:	a80a      	add	r0, sp, #40	; 0x28
 8011a12:	f7fa f89d 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011a16:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011a1a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011a1e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8011a22:	4c60      	ldr	r4, [pc, #384]	; (8011ba4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8011a24:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8011a28:	6820      	ldr	r0, [r4, #0]
 8011a2a:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8011a2e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011a32:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8011a36:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011a3a:	440a      	add	r2, r1
 8011a3c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011a40:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011a44:	4413      	add	r3, r2
 8011a46:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011a4a:	6803      	ldr	r3, [r0, #0]
 8011a4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a4e:	4798      	blx	r3
 8011a50:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011a54:	d119      	bne.n	8011a8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8011a56:	f010 0f20 	tst.w	r0, #32
 8011a5a:	6820      	ldr	r0, [r4, #0]
 8011a5c:	d018      	beq.n	8011a90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8011a5e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011a62:	6801      	ldr	r1, [r0, #0]
 8011a64:	9402      	str	r4, [sp, #8]
 8011a66:	fa1f f489 	uxth.w	r4, r9
 8011a6a:	9401      	str	r4, [sp, #4]
 8011a6c:	fa1f f488 	uxth.w	r4, r8
 8011a70:	f8cd b00c 	str.w	fp, [sp, #12]
 8011a74:	9400      	str	r4, [sp, #0]
 8011a76:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8011a78:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011a7c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011a80:	4651      	mov	r1, sl
 8011a82:	47a0      	blx	r4
 8011a84:	b00d      	add	sp, #52	; 0x34
 8011a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a8a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8011a8e:	e7e4      	b.n	8011a5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8011a90:	6803      	ldr	r3, [r0, #0]
 8011a92:	6a1b      	ldr	r3, [r3, #32]
 8011a94:	4798      	blx	r3
 8011a96:	4a44      	ldr	r2, [pc, #272]	; (8011ba8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8011a98:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011a9c:	8813      	ldrh	r3, [r2, #0]
 8011a9e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8011aa2:	9207      	str	r2, [sp, #28]
 8011aa4:	fb04 1303 	mla	r3, r4, r3, r1
 8011aa8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011aac:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8011ab0:	0099      	lsls	r1, r3, #2
 8011ab2:	005b      	lsls	r3, r3, #1
 8011ab4:	9106      	str	r1, [sp, #24]
 8011ab6:	9305      	str	r3, [sp, #20]
 8011ab8:	f04f 0c00 	mov.w	ip, #0
 8011abc:	45cc      	cmp	ip, r9
 8011abe:	da6b      	bge.n	8011b98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8011ac0:	2300      	movs	r3, #0
 8011ac2:	4543      	cmp	r3, r8
 8011ac4:	da55      	bge.n	8011b72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8011ac6:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8011aca:	0e25      	lsrs	r5, r4, #24
 8011acc:	d013      	beq.n	8011af6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8011ace:	2dff      	cmp	r5, #255	; 0xff
 8011ad0:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8011ad4:	d111      	bne.n	8011afa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011ad6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011ada:	d10e      	bne.n	8011afa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011adc:	0962      	lsrs	r2, r4, #5
 8011ade:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8011ae2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011ae6:	f027 0707 	bic.w	r7, r7, #7
 8011aea:	4317      	orrs	r7, r2
 8011aec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011af0:	433c      	orrs	r4, r7
 8011af2:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8011af6:	3301      	adds	r3, #1
 8011af8:	e7e3      	b.n	8011ac2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8011afa:	fb0b f505 	mul.w	r5, fp, r5
 8011afe:	1c6a      	adds	r2, r5, #1
 8011b00:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8011b04:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8011b08:	1212      	asrs	r2, r2, #8
 8011b0a:	fa1f fe82 	uxth.w	lr, r2
 8011b0e:	120e      	asrs	r6, r1, #8
 8011b10:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8011b14:	43d2      	mvns	r2, r2
 8011b16:	b2d2      	uxtb	r2, r2
 8011b18:	fb15 f50e 	smulbb	r5, r5, lr
 8011b1c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011b20:	fb06 5602 	mla	r6, r6, r2, r5
 8011b24:	b2e4      	uxtb	r4, r4
 8011b26:	10cd      	asrs	r5, r1, #3
 8011b28:	00c9      	lsls	r1, r1, #3
 8011b2a:	b2c9      	uxtb	r1, r1
 8011b2c:	fb14 f40e 	smulbb	r4, r4, lr
 8011b30:	fb01 4402 	mla	r4, r1, r2, r4
 8011b34:	b2ff      	uxtb	r7, r7
 8011b36:	b2b6      	uxth	r6, r6
 8011b38:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011b3c:	b2a4      	uxth	r4, r4
 8011b3e:	fb17 f70e 	smulbb	r7, r7, lr
 8011b42:	fb05 7702 	mla	r7, r5, r2, r7
 8011b46:	1c72      	adds	r2, r6, #1
 8011b48:	1c65      	adds	r5, r4, #1
 8011b4a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011b4e:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8011b52:	b2bf      	uxth	r7, r7
 8011b54:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011b58:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011b5c:	432e      	orrs	r6, r5
 8011b5e:	1c7d      	adds	r5, r7, #1
 8011b60:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011b64:	097f      	lsrs	r7, r7, #5
 8011b66:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011b6a:	433e      	orrs	r6, r7
 8011b6c:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8011b70:	e7c1      	b.n	8011af6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8011b72:	9b07      	ldr	r3, [sp, #28]
 8011b74:	9a05      	ldr	r2, [sp, #20]
 8011b76:	881b      	ldrh	r3, [r3, #0]
 8011b78:	eba3 0308 	sub.w	r3, r3, r8
 8011b7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011b80:	4418      	add	r0, r3
 8011b82:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011b86:	9a06      	ldr	r2, [sp, #24]
 8011b88:	eba3 0308 	sub.w	r3, r3, r8
 8011b8c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8011b90:	449a      	add	sl, r3
 8011b92:	f10c 0c01 	add.w	ip, ip, #1
 8011b96:	e791      	b.n	8011abc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8011b98:	4b02      	ldr	r3, [pc, #8]	; (8011ba4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8011b9a:	6818      	ldr	r0, [r3, #0]
 8011b9c:	6803      	ldr	r3, [r0, #0]
 8011b9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ba0:	4798      	blx	r3
 8011ba2:	e76f      	b.n	8011a84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8011ba4:	200120ac 	.word	0x200120ac
 8011ba8:	200120a6 	.word	0x200120a6

08011bac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8011bac:	b570      	push	{r4, r5, r6, lr}
 8011bae:	9d04      	ldr	r5, [sp, #16]
 8011bb0:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8011bb4:	460c      	mov	r4, r1
 8011bb6:	4619      	mov	r1, r3
 8011bb8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011bbc:	2a0c      	cmp	r2, #12
 8011bbe:	d820      	bhi.n	8011c02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8011bc0:	e8df f002 	tbb	[pc, r2]
 8011bc4:	18121807 	.word	0x18121807
 8011bc8:	18181818 	.word	0x18181818
 8011bcc:	18181818 	.word	0x18181818
 8011bd0:	18          	.byte	0x18
 8011bd1:	00          	.byte	0x00
 8011bd2:	6802      	ldr	r2, [r0, #0]
 8011bd4:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8011bd8:	68d6      	ldr	r6, [r2, #12]
 8011bda:	462b      	mov	r3, r5
 8011bdc:	460a      	mov	r2, r1
 8011bde:	46b4      	mov	ip, r6
 8011be0:	4621      	mov	r1, r4
 8011be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011be6:	4760      	bx	ip
 8011be8:	462a      	mov	r2, r5
 8011bea:	4620      	mov	r0, r4
 8011bec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011bf0:	f7ff befc 	b.w	80119ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011bf4:	4b03      	ldr	r3, [pc, #12]	; (8011c04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8011bf6:	4a04      	ldr	r2, [pc, #16]	; (8011c08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8011bf8:	4804      	ldr	r0, [pc, #16]	; (8011c0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8011bfa:	f240 21b7 	movw	r1, #695	; 0x2b7
 8011bfe:	f008 fbb9 	bl	801a374 <__assert_func>
 8011c02:	bd70      	pop	{r4, r5, r6, pc}
 8011c04:	0801def6 	.word	0x0801def6
 8011c08:	0801e5e1 	.word	0x0801e5e1
 8011c0c:	0801ddd1 	.word	0x0801ddd1

08011c10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8011c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c14:	b093      	sub	sp, #76	; 0x4c
 8011c16:	880f      	ldrh	r7, [r1, #0]
 8011c18:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011c1c:	4681      	mov	r9, r0
 8011c1e:	4688      	mov	r8, r1
 8011c20:	4615      	mov	r5, r2
 8011c22:	b12f      	cbz	r7, 8011c30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8011c24:	4b71      	ldr	r3, [pc, #452]	; (8011dec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011c26:	4a72      	ldr	r2, [pc, #456]	; (8011df0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8011c28:	4872      	ldr	r0, [pc, #456]	; (8011df4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011c2a:	21e8      	movs	r1, #232	; 0xe8
 8011c2c:	f008 fba2 	bl	801a374 <__assert_func>
 8011c30:	6810      	ldr	r0, [r2, #0]
 8011c32:	6851      	ldr	r1, [r2, #4]
 8011c34:	ac0e      	add	r4, sp, #56	; 0x38
 8011c36:	c403      	stmia	r4!, {r0, r1}
 8011c38:	6818      	ldr	r0, [r3, #0]
 8011c3a:	6859      	ldr	r1, [r3, #4]
 8011c3c:	ac10      	add	r4, sp, #64	; 0x40
 8011c3e:	c403      	stmia	r4!, {r0, r1}
 8011c40:	a80e      	add	r0, sp, #56	; 0x38
 8011c42:	f7f9 ff9d 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c46:	4629      	mov	r1, r5
 8011c48:	a810      	add	r0, sp, #64	; 0x40
 8011c4a:	f7f9 ff81 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011c4e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011c52:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011c56:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011c5a:	4d67      	ldr	r5, [pc, #412]	; (8011df8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8011c5c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8011c60:	6828      	ldr	r0, [r5, #0]
 8011c62:	4c66      	ldr	r4, [pc, #408]	; (8011dfc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8011c64:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011c68:	4489      	add	r9, r1
 8011c6a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011c6e:	440a      	add	r2, r1
 8011c70:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8011c74:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011c78:	4413      	add	r3, r2
 8011c7a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011c7e:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8011c82:	930a      	str	r3, [sp, #40]	; 0x28
 8011c84:	6803      	ldr	r3, [r0, #0]
 8011c86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8011c8a:	4798      	blx	r3
 8011c8c:	2801      	cmp	r0, #1
 8011c8e:	d11d      	bne.n	8011ccc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8011c90:	220b      	movs	r2, #11
 8011c92:	9708      	str	r7, [sp, #32]
 8011c94:	9207      	str	r2, [sp, #28]
 8011c96:	8822      	ldrh	r2, [r4, #0]
 8011c98:	f8cd a010 	str.w	sl, [sp, #16]
 8011c9c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8011ca0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8011ca4:	9203      	str	r2, [sp, #12]
 8011ca6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011caa:	9202      	str	r2, [sp, #8]
 8011cac:	fa1f f28b 	uxth.w	r2, fp
 8011cb0:	9201      	str	r2, [sp, #4]
 8011cb2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8011cb6:	9200      	str	r2, [sp, #0]
 8011cb8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011cbc:	6828      	ldr	r0, [r5, #0]
 8011cbe:	4642      	mov	r2, r8
 8011cc0:	4649      	mov	r1, r9
 8011cc2:	f7f7 fac9 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011cc6:	b013      	add	sp, #76	; 0x4c
 8011cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ccc:	6828      	ldr	r0, [r5, #0]
 8011cce:	6803      	ldr	r3, [r0, #0]
 8011cd0:	6a1b      	ldr	r3, [r3, #32]
 8011cd2:	4798      	blx	r3
 8011cd4:	8823      	ldrh	r3, [r4, #0]
 8011cd6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011cda:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011cde:	fb01 2303 	mla	r3, r1, r3, r2
 8011ce2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011ce6:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8011cea:	930b      	str	r3, [sp, #44]	; 0x2c
 8011cec:	005b      	lsls	r3, r3, #1
 8011cee:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8011cf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011cf4:	429f      	cmp	r7, r3
 8011cf6:	da72      	bge.n	8011dde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8011cf8:	2100      	movs	r1, #0
 8011cfa:	4559      	cmp	r1, fp
 8011cfc:	da5e      	bge.n	8011dbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8011cfe:	f819 3001 	ldrb.w	r3, [r9, r1]
 8011d02:	2204      	movs	r2, #4
 8011d04:	fb12 2303 	smlabb	r3, r2, r3, r2
 8011d08:	f858 2003 	ldr.w	r2, [r8, r3]
 8011d0c:	0e15      	lsrs	r5, r2, #24
 8011d0e:	d013      	beq.n	8011d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8011d10:	2dff      	cmp	r5, #255	; 0xff
 8011d12:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8011d16:	d111      	bne.n	8011d3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8011d18:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011d1c:	d10e      	bne.n	8011d3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8011d1e:	0953      	lsrs	r3, r2, #5
 8011d20:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8011d24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011d28:	f024 0407 	bic.w	r4, r4, #7
 8011d2c:	431c      	orrs	r4, r3
 8011d2e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011d32:	4314      	orrs	r4, r2
 8011d34:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8011d38:	3101      	adds	r1, #1
 8011d3a:	e7de      	b.n	8011cfa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8011d3c:	fb0a f505 	mul.w	r5, sl, r5
 8011d40:	1c6b      	adds	r3, r5, #1
 8011d42:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8011d46:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8011d4a:	121b      	asrs	r3, r3, #8
 8011d4c:	fa1f fe83 	uxth.w	lr, r3
 8011d50:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011d54:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8011d58:	43db      	mvns	r3, r3
 8011d5a:	b2db      	uxtb	r3, r3
 8011d5c:	fb15 f50e 	smulbb	r5, r5, lr
 8011d60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011d64:	fb06 5603 	mla	r6, r6, r3, r5
 8011d68:	b2d2      	uxtb	r2, r2
 8011d6a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011d6e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011d72:	fa5f fc8c 	uxtb.w	ip, ip
 8011d76:	fb12 f20e 	smulbb	r2, r2, lr
 8011d7a:	fb0c 2203 	mla	r2, ip, r3, r2
 8011d7e:	b2e4      	uxtb	r4, r4
 8011d80:	b2b6      	uxth	r6, r6
 8011d82:	fb14 f40e 	smulbb	r4, r4, lr
 8011d86:	b292      	uxth	r2, r2
 8011d88:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011d8c:	fb05 4503 	mla	r5, r5, r3, r4
 8011d90:	1c73      	adds	r3, r6, #1
 8011d92:	1c54      	adds	r4, r2, #1
 8011d94:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8011d98:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8011d9c:	b2ad      	uxth	r5, r5
 8011d9e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011da2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011da6:	4326      	orrs	r6, r4
 8011da8:	1c6c      	adds	r4, r5, #1
 8011daa:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8011dae:	0964      	lsrs	r4, r4, #5
 8011db0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8011db4:	4326      	orrs	r6, r4
 8011db6:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8011dba:	e7bd      	b.n	8011d38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8011dbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011dbe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011dc0:	881b      	ldrh	r3, [r3, #0]
 8011dc2:	eba3 030b 	sub.w	r3, r3, fp
 8011dc6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011dca:	4418      	add	r0, r3
 8011dcc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011dd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011dd2:	eba3 030b 	sub.w	r3, r3, fp
 8011dd6:	4413      	add	r3, r2
 8011dd8:	4499      	add	r9, r3
 8011dda:	3701      	adds	r7, #1
 8011ddc:	e789      	b.n	8011cf2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8011dde:	4b06      	ldr	r3, [pc, #24]	; (8011df8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8011de0:	6818      	ldr	r0, [r3, #0]
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011de6:	4798      	blx	r3
 8011de8:	e76d      	b.n	8011cc6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8011dea:	bf00      	nop
 8011dec:	0801dccf 	.word	0x0801dccf
 8011df0:	0801e3b2 	.word	0x0801e3b2
 8011df4:	0801ddd1 	.word	0x0801ddd1
 8011df8:	200120ac 	.word	0x200120ac
 8011dfc:	200120a6 	.word	0x200120a6

08011e00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8011e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e04:	4614      	mov	r4, r2
 8011e06:	880a      	ldrh	r2, [r1, #0]
 8011e08:	b093      	sub	sp, #76	; 0x4c
 8011e0a:	2a02      	cmp	r2, #2
 8011e0c:	4606      	mov	r6, r0
 8011e0e:	4689      	mov	r9, r1
 8011e10:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8011e14:	d006      	beq.n	8011e24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8011e16:	4b7a      	ldr	r3, [pc, #488]	; (8012000 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8011e18:	4a7a      	ldr	r2, [pc, #488]	; (8012004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8011e1a:	487b      	ldr	r0, [pc, #492]	; (8012008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8011e1c:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8011e20:	f008 faa8 	bl	801a374 <__assert_func>
 8011e24:	2f00      	cmp	r7, #0
 8011e26:	d04b      	beq.n	8011ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011e28:	6820      	ldr	r0, [r4, #0]
 8011e2a:	6861      	ldr	r1, [r4, #4]
 8011e2c:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8012010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8011e30:	ad0e      	add	r5, sp, #56	; 0x38
 8011e32:	c503      	stmia	r5!, {r0, r1}
 8011e34:	6818      	ldr	r0, [r3, #0]
 8011e36:	6859      	ldr	r1, [r3, #4]
 8011e38:	ad10      	add	r5, sp, #64	; 0x40
 8011e3a:	c503      	stmia	r5!, {r0, r1}
 8011e3c:	a80e      	add	r0, sp, #56	; 0x38
 8011e3e:	f7f9 fe9f 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011e42:	4621      	mov	r1, r4
 8011e44:	a810      	add	r0, sp, #64	; 0x40
 8011e46:	f7f9 fe83 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011e4a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011e4e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011e52:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011e56:	f8da 0000 	ldr.w	r0, [sl]
 8011e5a:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8011e5e:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8011e62:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011e66:	1874      	adds	r4, r6, r1
 8011e68:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011e6c:	4e67      	ldr	r6, [pc, #412]	; (801200c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8011e6e:	440a      	add	r2, r1
 8011e70:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8011e74:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011e78:	4413      	add	r3, r2
 8011e7a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011e7e:	6803      	ldr	r3, [r0, #0]
 8011e80:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8011e84:	4798      	blx	r3
 8011e86:	2801      	cmp	r0, #1
 8011e88:	d11d      	bne.n	8011ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8011e8a:	2200      	movs	r2, #0
 8011e8c:	210b      	movs	r1, #11
 8011e8e:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8011e92:	8831      	ldrh	r1, [r6, #0]
 8011e94:	9704      	str	r7, [sp, #16]
 8011e96:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011e9a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8011e9e:	9203      	str	r2, [sp, #12]
 8011ea0:	fa1f f288 	uxth.w	r2, r8
 8011ea4:	9202      	str	r2, [sp, #8]
 8011ea6:	b2ad      	uxth	r5, r5
 8011ea8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8011eac:	9200      	str	r2, [sp, #0]
 8011eae:	9501      	str	r5, [sp, #4]
 8011eb0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011eb4:	f8da 0000 	ldr.w	r0, [sl]
 8011eb8:	464a      	mov	r2, r9
 8011eba:	4621      	mov	r1, r4
 8011ebc:	f7f7 f9cc 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011ec0:	b013      	add	sp, #76	; 0x4c
 8011ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ec6:	f8da 0000 	ldr.w	r0, [sl]
 8011eca:	6803      	ldr	r3, [r0, #0]
 8011ecc:	6a1b      	ldr	r3, [r3, #32]
 8011ece:	4798      	blx	r3
 8011ed0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011ed4:	8833      	ldrh	r3, [r6, #0]
 8011ed6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011eda:	fb01 2303 	mla	r3, r1, r3, r2
 8011ede:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011ee2:	2fff      	cmp	r7, #255	; 0xff
 8011ee4:	f109 0304 	add.w	r3, r9, #4
 8011ee8:	930a      	str	r3, [sp, #40]	; 0x28
 8011eea:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8011eee:	d111      	bne.n	8011f14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8011ef0:	b212      	sxth	r2, r2
 8011ef2:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8011ef6:	2100      	movs	r1, #0
 8011ef8:	4541      	cmp	r1, r8
 8011efa:	da7a      	bge.n	8011ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8011efc:	2300      	movs	r3, #0
 8011efe:	42ab      	cmp	r3, r5
 8011f00:	da6b      	bge.n	8011fda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8011f02:	f814 c003 	ldrb.w	ip, [r4, r3]
 8011f06:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011f08:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8011f0c:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8011f10:	3301      	adds	r3, #1
 8011f12:	e7f4      	b.n	8011efe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8011f14:	b213      	sxth	r3, r2
 8011f16:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8011f1a:	930b      	str	r3, [sp, #44]	; 0x2c
 8011f1c:	005b      	lsls	r3, r3, #1
 8011f1e:	930c      	str	r3, [sp, #48]	; 0x30
 8011f20:	f04f 0900 	mov.w	r9, #0
 8011f24:	b2ba      	uxth	r2, r7
 8011f26:	fa1f fc8c 	uxth.w	ip, ip
 8011f2a:	960d      	str	r6, [sp, #52]	; 0x34
 8011f2c:	45c1      	cmp	r9, r8
 8011f2e:	da60      	bge.n	8011ff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8011f30:	46a3      	mov	fp, r4
 8011f32:	4682      	mov	sl, r0
 8011f34:	ebab 0304 	sub.w	r3, fp, r4
 8011f38:	429d      	cmp	r5, r3
 8011f3a:	dd3e      	ble.n	8011fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8011f3c:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8011f40:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8011f42:	f8ba 1000 	ldrh.w	r1, [sl]
 8011f46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011f4a:	120e      	asrs	r6, r1, #8
 8011f4c:	121f      	asrs	r7, r3, #8
 8011f4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011f52:	fb16 f60c 	smulbb	r6, r6, ip
 8011f56:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8011f5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011f5e:	00c9      	lsls	r1, r1, #3
 8011f60:	fb07 6702 	mla	r7, r7, r2, r6
 8011f64:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011f68:	10de      	asrs	r6, r3, #3
 8011f6a:	b2c9      	uxtb	r1, r1
 8011f6c:	00db      	lsls	r3, r3, #3
 8011f6e:	fb1e fe0c 	smulbb	lr, lr, ip
 8011f72:	fb11 f10c 	smulbb	r1, r1, ip
 8011f76:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011f7a:	b2db      	uxtb	r3, r3
 8011f7c:	b2bf      	uxth	r7, r7
 8011f7e:	fb06 e602 	mla	r6, r6, r2, lr
 8011f82:	fb03 1302 	mla	r3, r3, r2, r1
 8011f86:	b2b6      	uxth	r6, r6
 8011f88:	b29b      	uxth	r3, r3
 8011f8a:	1c79      	adds	r1, r7, #1
 8011f8c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8011f90:	f106 0e01 	add.w	lr, r6, #1
 8011f94:	1c59      	adds	r1, r3, #1
 8011f96:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8011f9a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011f9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011fa2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8011fa6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8011faa:	430f      	orrs	r7, r1
 8011fac:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8011fb0:	ea47 070e 	orr.w	r7, r7, lr
 8011fb4:	f82a 7b02 	strh.w	r7, [sl], #2
 8011fb8:	e7bc      	b.n	8011f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8011fba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011fbc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011fbe:	881b      	ldrh	r3, [r3, #0]
 8011fc0:	1b5b      	subs	r3, r3, r5
 8011fc2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8011fc6:	4418      	add	r0, r3
 8011fc8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011fcc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8011fce:	1b5b      	subs	r3, r3, r5
 8011fd0:	440b      	add	r3, r1
 8011fd2:	441c      	add	r4, r3
 8011fd4:	f109 0901 	add.w	r9, r9, #1
 8011fd8:	e7a8      	b.n	8011f2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8011fda:	8833      	ldrh	r3, [r6, #0]
 8011fdc:	1b5b      	subs	r3, r3, r5
 8011fde:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8011fe2:	4418      	add	r0, r3
 8011fe4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011fe8:	1b5b      	subs	r3, r3, r5
 8011fea:	4413      	add	r3, r2
 8011fec:	441c      	add	r4, r3
 8011fee:	3101      	adds	r1, #1
 8011ff0:	e782      	b.n	8011ef8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8011ff2:	4b07      	ldr	r3, [pc, #28]	; (8012010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8011ff4:	6818      	ldr	r0, [r3, #0]
 8011ff6:	6803      	ldr	r3, [r0, #0]
 8011ff8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ffa:	4798      	blx	r3
 8011ffc:	e760      	b.n	8011ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011ffe:	bf00      	nop
 8012000:	0801db8d 	.word	0x0801db8d
 8012004:	0801e21c 	.word	0x0801e21c
 8012008:	0801ddd1 	.word	0x0801ddd1
 801200c:	200120a6 	.word	0x200120a6
 8012010:	200120ac 	.word	0x200120ac

08012014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012018:	4616      	mov	r6, r2
 801201a:	880a      	ldrh	r2, [r1, #0]
 801201c:	b093      	sub	sp, #76	; 0x4c
 801201e:	2a01      	cmp	r2, #1
 8012020:	4681      	mov	r9, r0
 8012022:	4688      	mov	r8, r1
 8012024:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012028:	d006      	beq.n	8012038 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 801202a:	4b6c      	ldr	r3, [pc, #432]	; (80121dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801202c:	4a6c      	ldr	r2, [pc, #432]	; (80121e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 801202e:	486d      	ldr	r0, [pc, #436]	; (80121e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8012030:	f240 119d 	movw	r1, #413	; 0x19d
 8012034:	f008 f99e 	bl	801a374 <__assert_func>
 8012038:	f1ba 0f00 	cmp.w	sl, #0
 801203c:	d04a      	beq.n	80120d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801203e:	6830      	ldr	r0, [r6, #0]
 8012040:	6871      	ldr	r1, [r6, #4]
 8012042:	4d69      	ldr	r5, [pc, #420]	; (80121e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012044:	ac0e      	add	r4, sp, #56	; 0x38
 8012046:	c403      	stmia	r4!, {r0, r1}
 8012048:	6818      	ldr	r0, [r3, #0]
 801204a:	6859      	ldr	r1, [r3, #4]
 801204c:	ac10      	add	r4, sp, #64	; 0x40
 801204e:	c403      	stmia	r4!, {r0, r1}
 8012050:	a80e      	add	r0, sp, #56	; 0x38
 8012052:	f7f9 fd95 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012056:	4631      	mov	r1, r6
 8012058:	a810      	add	r0, sp, #64	; 0x40
 801205a:	f7f9 fd79 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801205e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012062:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012066:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801206a:	6828      	ldr	r0, [r5, #0]
 801206c:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012070:	4c5e      	ldr	r4, [pc, #376]	; (80121ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012072:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012076:	4489      	add	r9, r1
 8012078:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801207c:	440a      	add	r2, r1
 801207e:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012082:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012086:	4413      	add	r3, r2
 8012088:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801208c:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012090:	930a      	str	r3, [sp, #40]	; 0x28
 8012092:	6803      	ldr	r3, [r0, #0]
 8012094:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012098:	4798      	blx	r3
 801209a:	2801      	cmp	r0, #1
 801209c:	d11d      	bne.n	80120da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 801209e:	220b      	movs	r2, #11
 80120a0:	2100      	movs	r1, #0
 80120a2:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80120a6:	8822      	ldrh	r2, [r4, #0]
 80120a8:	f8cd a010 	str.w	sl, [sp, #16]
 80120ac:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80120b0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80120b4:	9203      	str	r2, [sp, #12]
 80120b6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80120ba:	9202      	str	r2, [sp, #8]
 80120bc:	b2b6      	uxth	r6, r6
 80120be:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80120c2:	9200      	str	r2, [sp, #0]
 80120c4:	9601      	str	r6, [sp, #4]
 80120c6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80120ca:	6828      	ldr	r0, [r5, #0]
 80120cc:	4642      	mov	r2, r8
 80120ce:	4649      	mov	r1, r9
 80120d0:	f7f7 f8c2 	bl	8009258 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80120d4:	b013      	add	sp, #76	; 0x4c
 80120d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120da:	6828      	ldr	r0, [r5, #0]
 80120dc:	6803      	ldr	r3, [r0, #0]
 80120de:	6a1b      	ldr	r3, [r3, #32]
 80120e0:	4798      	blx	r3
 80120e2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80120e6:	8823      	ldrh	r3, [r4, #0]
 80120e8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80120ec:	940d      	str	r4, [sp, #52]	; 0x34
 80120ee:	fb01 2303 	mla	r3, r1, r3, r2
 80120f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80120f6:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 80120fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80120fc:	ea6f 010a 	mvn.w	r1, sl
 8012100:	005b      	lsls	r3, r3, #1
 8012102:	930c      	str	r3, [sp, #48]	; 0x30
 8012104:	f04f 0e00 	mov.w	lr, #0
 8012108:	b2c9      	uxtb	r1, r1
 801210a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801210c:	459e      	cmp	lr, r3
 801210e:	da5f      	bge.n	80121d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8012110:	2700      	movs	r7, #0
 8012112:	fa1f fb8a 	uxth.w	fp, sl
 8012116:	42b7      	cmp	r7, r6
 8012118:	da4a      	bge.n	80121b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801211a:	f819 3007 	ldrb.w	r3, [r9, r7]
 801211e:	2203      	movs	r2, #3
 8012120:	2404      	movs	r4, #4
 8012122:	fb12 4303 	smlabb	r3, r2, r3, r4
 8012126:	eb08 0403 	add.w	r4, r8, r3
 801212a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801212e:	78a2      	ldrb	r2, [r4, #2]
 8012130:	7865      	ldrb	r5, [r4, #1]
 8012132:	f818 c003 	ldrb.w	ip, [r8, r3]
 8012136:	d10c      	bne.n	8012152 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8012138:	4b2d      	ldr	r3, [pc, #180]	; (80121f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801213a:	00ed      	lsls	r5, r5, #3
 801213c:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8012140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012144:	432a      	orrs	r2, r5
 8012146:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 801214a:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 801214e:	3701      	adds	r7, #1
 8012150:	e7e1      	b.n	8012116 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 8012152:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8012156:	121c      	asrs	r4, r3, #8
 8012158:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801215c:	fb12 f20b 	smulbb	r2, r2, fp
 8012160:	fb04 2201 	mla	r2, r4, r1, r2
 8012164:	10dc      	asrs	r4, r3, #3
 8012166:	00db      	lsls	r3, r3, #3
 8012168:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801216c:	b2db      	uxtb	r3, r3
 801216e:	fb15 f50b 	smulbb	r5, r5, fp
 8012172:	fb1c fc0b 	smulbb	ip, ip, fp
 8012176:	b292      	uxth	r2, r2
 8012178:	fb04 5501 	mla	r5, r4, r1, r5
 801217c:	fb03 cc01 	mla	ip, r3, r1, ip
 8012180:	b2ad      	uxth	r5, r5
 8012182:	fa1f fc8c 	uxth.w	ip, ip
 8012186:	1c53      	adds	r3, r2, #1
 8012188:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801218c:	1c6c      	adds	r4, r5, #1
 801218e:	f10c 0301 	add.w	r3, ip, #1
 8012192:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8012196:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801219a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801219e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80121a2:	096d      	lsrs	r5, r5, #5
 80121a4:	ea42 020c 	orr.w	r2, r2, ip
 80121a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80121ac:	432a      	orrs	r2, r5
 80121ae:	e7cc      	b.n	801214a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80121b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80121b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80121b4:	881b      	ldrh	r3, [r3, #0]
 80121b6:	1b9b      	subs	r3, r3, r6
 80121b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80121bc:	4418      	add	r0, r3
 80121be:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80121c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80121c4:	1b9b      	subs	r3, r3, r6
 80121c6:	4413      	add	r3, r2
 80121c8:	4499      	add	r9, r3
 80121ca:	f10e 0e01 	add.w	lr, lr, #1
 80121ce:	e79c      	b.n	801210a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80121d0:	4b05      	ldr	r3, [pc, #20]	; (80121e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80121d2:	6818      	ldr	r0, [r3, #0]
 80121d4:	6803      	ldr	r3, [r0, #0]
 80121d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80121d8:	4798      	blx	r3
 80121da:	e77b      	b.n	80120d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80121dc:	0801dbdb 	.word	0x0801dbdb
 80121e0:	0801e2a5 	.word	0x0801e2a5
 80121e4:	0801ddd1 	.word	0x0801ddd1
 80121e8:	200120ac 	.word	0x200120ac
 80121ec:	200120a6 	.word	0x200120a6
 80121f0:	fffff800 	.word	0xfffff800

080121f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80121f4:	b430      	push	{r4, r5}
 80121f6:	780d      	ldrb	r5, [r1, #0]
 80121f8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80121fc:	2d01      	cmp	r5, #1
 80121fe:	d00a      	beq.n	8012216 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8012200:	d305      	bcc.n	801220e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8012202:	2d02      	cmp	r5, #2
 8012204:	d10b      	bne.n	801221e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8012206:	9402      	str	r4, [sp, #8]
 8012208:	bc30      	pop	{r4, r5}
 801220a:	f7ff bdf9 	b.w	8011e00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801220e:	9402      	str	r4, [sp, #8]
 8012210:	bc30      	pop	{r4, r5}
 8012212:	f7ff bcfd 	b.w	8011c10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8012216:	9402      	str	r4, [sp, #8]
 8012218:	bc30      	pop	{r4, r5}
 801221a:	f7ff befb 	b.w	8012014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801221e:	bc30      	pop	{r4, r5}
 8012220:	4770      	bx	lr
	...

08012224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8012224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012228:	4605      	mov	r5, r0
 801222a:	b089      	sub	sp, #36	; 0x24
 801222c:	6810      	ldr	r0, [r2, #0]
 801222e:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 8012232:	460c      	mov	r4, r1
 8012234:	6851      	ldr	r1, [r2, #4]
 8012236:	ae04      	add	r6, sp, #16
 8012238:	c603      	stmia	r6!, {r0, r1}
 801223a:	6818      	ldr	r0, [r3, #0]
 801223c:	6859      	ldr	r1, [r3, #4]
 801223e:	ae06      	add	r6, sp, #24
 8012240:	4617      	mov	r7, r2
 8012242:	c603      	stmia	r6!, {r0, r1}
 8012244:	a804      	add	r0, sp, #16
 8012246:	f7f9 fc9b 	bl	800bb80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801224a:	4639      	mov	r1, r7
 801224c:	a806      	add	r0, sp, #24
 801224e:	f7f9 fc7f 	bl	800bb50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012252:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8012256:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801225a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801225e:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 8012262:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012266:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801226a:	440c      	add	r4, r1
 801226c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012270:	440a      	add	r2, r1
 8012272:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012276:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801227a:	4413      	add	r3, r2
 801227c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012280:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012284:	9300      	str	r3, [sp, #0]
 8012286:	4b80      	ldr	r3, [pc, #512]	; (8012488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012288:	6818      	ldr	r0, [r3, #0]
 801228a:	6803      	ldr	r3, [r0, #0]
 801228c:	6a1b      	ldr	r3, [r3, #32]
 801228e:	4798      	blx	r3
 8012290:	4b7e      	ldr	r3, [pc, #504]	; (801248c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8012292:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 8012296:	881a      	ldrh	r2, [r3, #0]
 8012298:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801229c:	fb06 1202 	mla	r2, r6, r2, r1
 80122a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80122a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80122a8:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 80122ac:	b212      	sxth	r2, r2
 80122ae:	d117      	bne.n	80122e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 80122b0:	9201      	str	r2, [sp, #4]
 80122b2:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80122b6:	f04f 0a00 	mov.w	sl, #0
 80122ba:	9302      	str	r3, [sp, #8]
 80122bc:	9b00      	ldr	r3, [sp, #0]
 80122be:	459a      	cmp	sl, r3
 80122c0:	f280 80d9 	bge.w	8012476 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80122c4:	2100      	movs	r1, #0
 80122c6:	4541      	cmp	r1, r8
 80122c8:	f280 80c1 	bge.w	801244e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80122cc:	5c63      	ldrb	r3, [r4, r1]
 80122ce:	b12b      	cbz	r3, 80122dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80122d0:	2bff      	cmp	r3, #255	; 0xff
 80122d2:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 80122d6:	d176      	bne.n	80123c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 80122d8:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 80122dc:	3101      	adds	r1, #1
 80122de:	e7f2      	b.n	80122c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 80122e0:	9202      	str	r2, [sp, #8]
 80122e2:	0052      	lsls	r2, r2, #1
 80122e4:	9201      	str	r2, [sp, #4]
 80122e6:	f04f 0b00 	mov.w	fp, #0
 80122ea:	9303      	str	r3, [sp, #12]
 80122ec:	9b00      	ldr	r3, [sp, #0]
 80122ee:	459b      	cmp	fp, r3
 80122f0:	f280 80c1 	bge.w	8012476 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80122f4:	f04f 0c00 	mov.w	ip, #0
 80122f8:	45c4      	cmp	ip, r8
 80122fa:	da4f      	bge.n	801239c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 80122fc:	f814 300c 	ldrb.w	r3, [r4, ip]
 8012300:	2b00      	cmp	r3, #0
 8012302:	d048      	beq.n	8012396 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012304:	fb09 f303 	mul.w	r3, r9, r3
 8012308:	1c5a      	adds	r2, r3, #1
 801230a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801230e:	121b      	asrs	r3, r3, #8
 8012310:	d041      	beq.n	8012396 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012312:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8012316:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 801231a:	b29e      	uxth	r6, r3
 801231c:	1211      	asrs	r1, r2, #8
 801231e:	43db      	mvns	r3, r3
 8012320:	b2db      	uxtb	r3, r3
 8012322:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012326:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801232a:	fb11 f103 	smulbb	r1, r1, r3
 801232e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8012332:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012336:	00d2      	lsls	r2, r2, #3
 8012338:	fb07 1706 	mla	r7, r7, r6, r1
 801233c:	b2d2      	uxtb	r2, r2
 801233e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8012342:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012346:	fb12 f203 	smulbb	r2, r2, r3
 801234a:	fa5f fe8e 	uxtb.w	lr, lr
 801234e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012352:	fb0e 2206 	mla	r2, lr, r6, r2
 8012356:	fb1a fa03 	smulbb	sl, sl, r3
 801235a:	b2bf      	uxth	r7, r7
 801235c:	b292      	uxth	r2, r2
 801235e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012362:	fb01 a106 	mla	r1, r1, r6, sl
 8012366:	1c7b      	adds	r3, r7, #1
 8012368:	f102 0a01 	add.w	sl, r2, #1
 801236c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012370:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8012374:	b289      	uxth	r1, r1
 8012376:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801237a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801237e:	ea47 070a 	orr.w	r7, r7, sl
 8012382:	f101 0a01 	add.w	sl, r1, #1
 8012386:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 801238a:	0949      	lsrs	r1, r1, #5
 801238c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012390:	430f      	orrs	r7, r1
 8012392:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8012396:	f10c 0c01 	add.w	ip, ip, #1
 801239a:	e7ad      	b.n	80122f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 801239c:	9b03      	ldr	r3, [sp, #12]
 801239e:	9a01      	ldr	r2, [sp, #4]
 80123a0:	881b      	ldrh	r3, [r3, #0]
 80123a2:	eba3 0308 	sub.w	r3, r3, r8
 80123a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80123aa:	4418      	add	r0, r3
 80123ac:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80123b0:	eba3 0308 	sub.w	r3, r3, r8
 80123b4:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80123b8:	4415      	add	r5, r2
 80123ba:	9a02      	ldr	r2, [sp, #8]
 80123bc:	4413      	add	r3, r2
 80123be:	441c      	add	r4, r3
 80123c0:	f10b 0b01 	add.w	fp, fp, #1
 80123c4:	e792      	b.n	80122ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 80123c6:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 80123ca:	b29f      	uxth	r7, r3
 80123cc:	1216      	asrs	r6, r2, #8
 80123ce:	43db      	mvns	r3, r3
 80123d0:	b2db      	uxtb	r3, r3
 80123d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80123d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80123da:	fb16 f603 	smulbb	r6, r6, r3
 80123de:	ea4f 09e2 	mov.w	r9, r2, asr #3
 80123e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123e6:	00d2      	lsls	r2, r2, #3
 80123e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80123ec:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80123f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80123f4:	b2d2      	uxtb	r2, r2
 80123f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80123fa:	fa1f fc8c 	uxth.w	ip, ip
 80123fe:	fb19 f903 	smulbb	r9, r9, r3
 8012402:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012406:	fa5f fe8e 	uxtb.w	lr, lr
 801240a:	fb12 f203 	smulbb	r2, r2, r3
 801240e:	fb06 9607 	mla	r6, r6, r7, r9
 8012412:	fb0e 2207 	mla	r2, lr, r7, r2
 8012416:	f10c 0901 	add.w	r9, ip, #1
 801241a:	b292      	uxth	r2, r2
 801241c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012420:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012424:	f102 0c01 	add.w	ip, r2, #1
 8012428:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801242c:	b2b6      	uxth	r6, r6
 801242e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012432:	ea49 0c02 	orr.w	ip, r9, r2
 8012436:	f106 0901 	add.w	r9, r6, #1
 801243a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801243e:	0976      	lsrs	r6, r6, #5
 8012440:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012444:	ea4c 0c06 	orr.w	ip, ip, r6
 8012448:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 801244c:	e746      	b.n	80122dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 801244e:	9b02      	ldr	r3, [sp, #8]
 8012450:	881b      	ldrh	r3, [r3, #0]
 8012452:	eba3 0308 	sub.w	r3, r3, r8
 8012456:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 801245a:	4418      	add	r0, r3
 801245c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012460:	eba3 0308 	sub.w	r3, r3, r8
 8012464:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8012468:	4415      	add	r5, r2
 801246a:	9a01      	ldr	r2, [sp, #4]
 801246c:	4413      	add	r3, r2
 801246e:	441c      	add	r4, r3
 8012470:	f10a 0a01 	add.w	sl, sl, #1
 8012474:	e722      	b.n	80122bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8012476:	4b04      	ldr	r3, [pc, #16]	; (8012488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012478:	6818      	ldr	r0, [r3, #0]
 801247a:	6803      	ldr	r3, [r0, #0]
 801247c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801247e:	4798      	blx	r3
 8012480:	b009      	add	sp, #36	; 0x24
 8012482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012486:	bf00      	nop
 8012488:	200120ac 	.word	0x200120ac
 801248c:	200120a6 	.word	0x200120a6

08012490 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012494:	b089      	sub	sp, #36	; 0x24
 8012496:	4682      	mov	sl, r0
 8012498:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801249c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801249e:	460d      	mov	r5, r1
 80124a0:	4691      	mov	r9, r2
 80124a2:	4698      	mov	r8, r3
 80124a4:	b3ae      	cbz	r6, 8012512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80124a6:	4608      	mov	r0, r1
 80124a8:	f7fc fa96 	bl	800e9d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80124ac:	4607      	mov	r7, r0
 80124ae:	4628      	mov	r0, r5
 80124b0:	f7fc facc 	bl	800ea4c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124b4:	f8ad 000e 	strh.w	r0, [sp, #14]
 80124b8:	4628      	mov	r0, r5
 80124ba:	f8ad 9008 	strh.w	r9, [sp, #8]
 80124be:	f8ad 800a 	strh.w	r8, [sp, #10]
 80124c2:	f8ad 700c 	strh.w	r7, [sp, #12]
 80124c6:	f7fc fc13 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80124ca:	b178      	cbz	r0, 80124ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80124cc:	4628      	mov	r0, r5
 80124ce:	f7fc fc0f 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80124d2:	2802      	cmp	r0, #2
 80124d4:	d00a      	beq.n	80124ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80124d6:	4628      	mov	r0, r5
 80124d8:	f7fc fc0a 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80124dc:	280b      	cmp	r0, #11
 80124de:	d005      	beq.n	80124ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80124e0:	4b69      	ldr	r3, [pc, #420]	; (8012688 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80124e2:	4a6a      	ldr	r2, [pc, #424]	; (801268c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80124e4:	486a      	ldr	r0, [pc, #424]	; (8012690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80124e6:	214b      	movs	r1, #75	; 0x4b
 80124e8:	f007 ff44 	bl	801a374 <__assert_func>
 80124ec:	4628      	mov	r0, r5
 80124ee:	f7fc fb7b 	bl	800ebe8 <_ZNK8touchgfx6Bitmap7getDataEv>
 80124f2:	4607      	mov	r7, r0
 80124f4:	4628      	mov	r0, r5
 80124f6:	f7fc fba9 	bl	800ec4c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80124fa:	4681      	mov	r9, r0
 80124fc:	4628      	mov	r0, r5
 80124fe:	f7fc fbf7 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012502:	2802      	cmp	r0, #2
 8012504:	d108      	bne.n	8012518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8012506:	4633      	mov	r3, r6
 8012508:	4622      	mov	r2, r4
 801250a:	a902      	add	r1, sp, #8
 801250c:	4638      	mov	r0, r7
 801250e:	f7ff fa6d 	bl	80119ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012512:	b009      	add	sp, #36	; 0x24
 8012514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012518:	4628      	mov	r0, r5
 801251a:	f7fc fbe9 	bl	800ecf0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801251e:	280b      	cmp	r0, #11
 8012520:	d107      	bne.n	8012532 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8012522:	9600      	str	r6, [sp, #0]
 8012524:	4623      	mov	r3, r4
 8012526:	aa02      	add	r2, sp, #8
 8012528:	4649      	mov	r1, r9
 801252a:	4638      	mov	r0, r7
 801252c:	f7ff fe62 	bl	80121f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8012530:	e7ef      	b.n	8012512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012532:	4628      	mov	r0, r5
 8012534:	f7fc fb1e 	bl	800eb74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012538:	b950      	cbnz	r0, 8012550 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801253a:	e9cd 6000 	strd	r6, r0, [sp]
 801253e:	f8da 3000 	ldr.w	r3, [sl]
 8012542:	aa02      	add	r2, sp, #8
 8012544:	68dd      	ldr	r5, [r3, #12]
 8012546:	4639      	mov	r1, r7
 8012548:	4623      	mov	r3, r4
 801254a:	4650      	mov	r0, sl
 801254c:	47a8      	blx	r5
 801254e:	e7e0      	b.n	8012512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012550:	f10d 0818 	add.w	r8, sp, #24
 8012554:	4629      	mov	r1, r5
 8012556:	4640      	mov	r0, r8
 8012558:	f7fc fab2 	bl	800eac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801255c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012560:	ad04      	add	r5, sp, #16
 8012562:	e885 0003 	stmia.w	r5, {r0, r1}
 8012566:	4628      	mov	r0, r5
 8012568:	4621      	mov	r1, r4
 801256a:	f7f6 fa37 	bl	80089dc <_ZN8touchgfx4RectaNERKS0_>
 801256e:	4628      	mov	r0, r5
 8012570:	f7f6 fa77 	bl	8008a62 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012574:	b138      	cbz	r0, 8012586 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8012576:	9600      	str	r6, [sp, #0]
 8012578:	4623      	mov	r3, r4
 801257a:	aa02      	add	r2, sp, #8
 801257c:	4649      	mov	r1, r9
 801257e:	4638      	mov	r0, r7
 8012580:	f7ff fe50 	bl	8012224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012584:	e7c5      	b.n	8012512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012586:	e9cd 6000 	strd	r6, r0, [sp]
 801258a:	f8da 3000 	ldr.w	r3, [sl]
 801258e:	aa02      	add	r2, sp, #8
 8012590:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8012594:	4639      	mov	r1, r7
 8012596:	462b      	mov	r3, r5
 8012598:	4650      	mov	r0, sl
 801259a:	47d8      	blx	fp
 801259c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80125a0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80125a4:	4293      	cmp	r3, r2
 80125a6:	dd13      	ble.n	80125d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 80125a8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80125ac:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80125b0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80125b4:	1a9b      	subs	r3, r3, r2
 80125b6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80125ba:	f8ad 101c 	strh.w	r1, [sp, #28]
 80125be:	f8ad 301e 	strh.w	r3, [sp, #30]
 80125c2:	9600      	str	r6, [sp, #0]
 80125c4:	4643      	mov	r3, r8
 80125c6:	aa02      	add	r2, sp, #8
 80125c8:	4649      	mov	r1, r9
 80125ca:	4638      	mov	r0, r7
 80125cc:	f7ff fe2a 	bl	8012224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80125d0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80125d4:	f9b4 2000 	ldrsh.w	r2, [r4]
 80125d8:	4293      	cmp	r3, r2
 80125da:	dd13      	ble.n	8012604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80125dc:	1a9b      	subs	r3, r3, r2
 80125de:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80125e2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80125e6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80125ea:	f8ad 001a 	strh.w	r0, [sp, #26]
 80125ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 80125f2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80125f6:	9600      	str	r6, [sp, #0]
 80125f8:	4643      	mov	r3, r8
 80125fa:	aa02      	add	r2, sp, #8
 80125fc:	4649      	mov	r1, r9
 80125fe:	4638      	mov	r0, r7
 8012600:	f7ff fe10 	bl	8012224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012604:	88a2      	ldrh	r2, [r4, #4]
 8012606:	8823      	ldrh	r3, [r4, #0]
 8012608:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801260c:	4413      	add	r3, r2
 801260e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012612:	440a      	add	r2, r1
 8012614:	b29b      	uxth	r3, r3
 8012616:	b292      	uxth	r2, r2
 8012618:	b211      	sxth	r1, r2
 801261a:	b218      	sxth	r0, r3
 801261c:	4288      	cmp	r0, r1
 801261e:	dd13      	ble.n	8012648 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8012620:	1a9b      	subs	r3, r3, r2
 8012622:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012626:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 801262a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801262e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012632:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012636:	9600      	str	r6, [sp, #0]
 8012638:	4643      	mov	r3, r8
 801263a:	aa02      	add	r2, sp, #8
 801263c:	4649      	mov	r1, r9
 801263e:	4638      	mov	r0, r7
 8012640:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012644:	f7ff fdee 	bl	8012224 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012648:	88e2      	ldrh	r2, [r4, #6]
 801264a:	8863      	ldrh	r3, [r4, #2]
 801264c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012650:	4413      	add	r3, r2
 8012652:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012656:	440a      	add	r2, r1
 8012658:	b29b      	uxth	r3, r3
 801265a:	b292      	uxth	r2, r2
 801265c:	b211      	sxth	r1, r2
 801265e:	b218      	sxth	r0, r3
 8012660:	4288      	cmp	r0, r1
 8012662:	f77f af56 	ble.w	8012512 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012666:	f9b4 5000 	ldrsh.w	r5, [r4]
 801266a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801266e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8012672:	1a9b      	subs	r3, r3, r2
 8012674:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012678:	f8ad 101a 	strh.w	r1, [sp, #26]
 801267c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012680:	9600      	str	r6, [sp, #0]
 8012682:	4643      	mov	r3, r8
 8012684:	e779      	b.n	801257a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8012686:	bf00      	nop
 8012688:	0801dc29 	.word	0x0801dc29
 801268c:	0801e32e 	.word	0x0801e32e
 8012690:	0801ddd1 	.word	0x0801ddd1

08012694 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012694:	b508      	push	{r3, lr}
 8012696:	b180      	cbz	r0, 80126ba <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012698:	2902      	cmp	r1, #2
 801269a:	d014      	beq.n	80126c6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801269c:	2903      	cmp	r1, #3
 801269e:	d01d      	beq.n	80126dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80126a0:	2901      	cmp	r1, #1
 80126a2:	d101      	bne.n	80126a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80126a4:	2001      	movs	r0, #1
 80126a6:	bd08      	pop	{r3, pc}
 80126a8:	4b0e      	ldr	r3, [pc, #56]	; (80126e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80126aa:	8818      	ldrh	r0, [r3, #0]
 80126ac:	b990      	cbnz	r0, 80126d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80126ae:	4b0e      	ldr	r3, [pc, #56]	; (80126e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 80126b0:	4a0e      	ldr	r2, [pc, #56]	; (80126ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 80126b2:	480f      	ldr	r0, [pc, #60]	; (80126f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 80126b4:	2154      	movs	r1, #84	; 0x54
 80126b6:	f007 fe5d 	bl	801a374 <__assert_func>
 80126ba:	2902      	cmp	r1, #2
 80126bc:	d00e      	beq.n	80126dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 80126be:	2903      	cmp	r1, #3
 80126c0:	d0f2      	beq.n	80126a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 80126c2:	2901      	cmp	r1, #1
 80126c4:	d1ee      	bne.n	80126a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 80126c6:	4b07      	ldr	r3, [pc, #28]	; (80126e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80126c8:	8818      	ldrh	r0, [r3, #0]
 80126ca:	2800      	cmp	r0, #0
 80126cc:	d0ef      	beq.n	80126ae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 80126ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80126d2:	e7e8      	b.n	80126a6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80126d4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80126d8:	4240      	negs	r0, r0
 80126da:	e7e4      	b.n	80126a6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80126dc:	f04f 30ff 	mov.w	r0, #4294967295
 80126e0:	e7e1      	b.n	80126a6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80126e2:	bf00      	nop
 80126e4:	200120a6 	.word	0x200120a6
 80126e8:	0801df2b 	.word	0x0801df2b
 80126ec:	0801e4ab 	.word	0x0801e4ab
 80126f0:	0801df6d 	.word	0x0801df6d

080126f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80126f4:	b508      	push	{r3, lr}
 80126f6:	b180      	cbz	r0, 801271a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80126f8:	2902      	cmp	r1, #2
 80126fa:	d014      	beq.n	8012726 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80126fc:	2903      	cmp	r1, #3
 80126fe:	d018      	beq.n	8012732 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012700:	2901      	cmp	r1, #1
 8012702:	d001      	beq.n	8012708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012704:	2001      	movs	r0, #1
 8012706:	e013      	b.n	8012730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012708:	4b0e      	ldr	r3, [pc, #56]	; (8012744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801270a:	8818      	ldrh	r0, [r3, #0]
 801270c:	b970      	cbnz	r0, 801272c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801270e:	4b0e      	ldr	r3, [pc, #56]	; (8012748 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012710:	4a0e      	ldr	r2, [pc, #56]	; (801274c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012712:	480f      	ldr	r0, [pc, #60]	; (8012750 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012714:	2154      	movs	r1, #84	; 0x54
 8012716:	f007 fe2d 	bl	801a374 <__assert_func>
 801271a:	2902      	cmp	r1, #2
 801271c:	d009      	beq.n	8012732 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801271e:	2903      	cmp	r1, #3
 8012720:	d0f0      	beq.n	8012704 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012722:	2901      	cmp	r1, #1
 8012724:	d1f0      	bne.n	8012708 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012726:	f04f 30ff 	mov.w	r0, #4294967295
 801272a:	e001      	b.n	8012730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801272c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012730:	bd08      	pop	{r3, pc}
 8012732:	4b04      	ldr	r3, [pc, #16]	; (8012744 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012734:	8818      	ldrh	r0, [r3, #0]
 8012736:	2800      	cmp	r0, #0
 8012738:	d0e9      	beq.n	801270e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801273a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801273e:	4240      	negs	r0, r0
 8012740:	e7f6      	b.n	8012730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012742:	bf00      	nop
 8012744:	200120a6 	.word	0x200120a6
 8012748:	0801df2b 	.word	0x0801df2b
 801274c:	0801e4ab 	.word	0x0801e4ab
 8012750:	0801df6d 	.word	0x0801df6d

08012754 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012758:	b097      	sub	sp, #92	; 0x5c
 801275a:	910a      	str	r1, [sp, #40]	; 0x28
 801275c:	a912      	add	r1, sp, #72	; 0x48
 801275e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012762:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8012766:	9307      	str	r3, [sp, #28]
 8012768:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801276c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012770:	930f      	str	r3, [sp, #60]	; 0x3c
 8012772:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8012776:	930b      	str	r3, [sp, #44]	; 0x2c
 8012778:	7b4b      	ldrb	r3, [r1, #13]
 801277a:	798d      	ldrb	r5, [r1, #6]
 801277c:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8012780:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8012784:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8012788:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 801278c:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8012790:	0158      	lsls	r0, r3, #5
 8012792:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012796:	4328      	orrs	r0, r5
 8012798:	9006      	str	r0, [sp, #24]
 801279a:	f000 8156 	beq.w	8012a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 801279e:	011b      	lsls	r3, r3, #4
 80127a0:	79c8      	ldrb	r0, [r1, #7]
 80127a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80127a6:	4303      	orrs	r3, r0
 80127a8:	9308      	str	r3, [sp, #32]
 80127aa:	f000 814e 	beq.w	8012a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 80127ae:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80127b2:	b29b      	uxth	r3, r3
 80127b4:	2f00      	cmp	r7, #0
 80127b6:	f000 80f2 	beq.w	801299e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 80127ba:	1aff      	subs	r7, r7, r3
 80127bc:	b2bf      	uxth	r7, r7
 80127be:	043b      	lsls	r3, r7, #16
 80127c0:	d502      	bpl.n	80127c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80127c2:	1bf6      	subs	r6, r6, r7
 80127c4:	b236      	sxth	r6, r6
 80127c6:	2700      	movs	r7, #0
 80127c8:	f9b2 1000 	ldrsh.w	r1, [r2]
 80127cc:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 80127d0:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80127d4:	428e      	cmp	r6, r1
 80127d6:	b28b      	uxth	r3, r1
 80127d8:	bfbf      	itttt	lt
 80127da:	18ff      	addlt	r7, r7, r3
 80127dc:	1bbe      	sublt	r6, r7, r6
 80127de:	b2b7      	uxthlt	r7, r6
 80127e0:	460e      	movlt	r6, r1
 80127e2:	8891      	ldrh	r1, [r2, #4]
 80127e4:	440b      	add	r3, r1
 80127e6:	b21b      	sxth	r3, r3
 80127e8:	930e      	str	r3, [sp, #56]	; 0x38
 80127ea:	88d3      	ldrh	r3, [r2, #6]
 80127ec:	9a07      	ldr	r2, [sp, #28]
 80127ee:	449a      	add	sl, r3
 80127f0:	fa0f f38a 	sxth.w	r3, sl
 80127f4:	930d      	str	r3, [sp, #52]	; 0x34
 80127f6:	4bbc      	ldr	r3, [pc, #752]	; (8012ae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 80127f8:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80127fc:	f893 b000 	ldrb.w	fp, [r3]
 8012800:	f10b 3cff 	add.w	ip, fp, #4294967295
 8012804:	f1dc 0300 	rsbs	r3, ip, #0
 8012808:	eb43 030c 	adc.w	r3, r3, ip
 801280c:	930c      	str	r3, [sp, #48]	; 0x30
 801280e:	4631      	mov	r1, r6
 8012810:	464b      	mov	r3, r9
 8012812:	a812      	add	r0, sp, #72	; 0x48
 8012814:	f7f8 fcf4 	bl	800b200 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012818:	4631      	mov	r1, r6
 801281a:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 801281e:	464b      	mov	r3, r9
 8012820:	9a07      	ldr	r2, [sp, #28]
 8012822:	a812      	add	r0, sp, #72	; 0x48
 8012824:	f7f8 fd04 	bl	800b230 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012828:	a916      	add	r1, sp, #88	; 0x58
 801282a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801282e:	a815      	add	r0, sp, #84	; 0x54
 8012830:	f7f9 f95c 	bl	800baec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012834:	f1b9 0f00 	cmp.w	r9, #0
 8012838:	f040 80b4 	bne.w	80129a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 801283c:	f1bb 0f01 	cmp.w	fp, #1
 8012840:	f040 80b8 	bne.w	80129b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8012844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012846:	2b00      	cmp	r3, #0
 8012848:	f040 8104 	bne.w	8012a54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 801284c:	4ba7      	ldr	r3, [pc, #668]	; (8012aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 801284e:	6818      	ldr	r0, [r3, #0]
 8012850:	6803      	ldr	r3, [r0, #0]
 8012852:	6a1b      	ldr	r3, [r3, #32]
 8012854:	4798      	blx	r3
 8012856:	4aa6      	ldr	r2, [pc, #664]	; (8012af0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8012858:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801285c:	8811      	ldrh	r1, [r2, #0]
 801285e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8012862:	fb01 2303 	mla	r3, r1, r3, r2
 8012866:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801286a:	9308      	str	r3, [sp, #32]
 801286c:	2301      	movs	r3, #1
 801286e:	fa03 f308 	lsl.w	r3, r3, r8
 8012872:	3b01      	subs	r3, #1
 8012874:	b2db      	uxtb	r3, r3
 8012876:	f1b8 0f01 	cmp.w	r8, #1
 801287a:	9310      	str	r3, [sp, #64]	; 0x40
 801287c:	f000 80ec 	beq.w	8012a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8012880:	f1b8 0f02 	cmp.w	r8, #2
 8012884:	f000 80ea 	beq.w	8012a5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8012888:	f1b8 0f04 	cmp.w	r8, #4
 801288c:	bf14      	ite	ne
 801288e:	2301      	movne	r3, #1
 8012890:	2311      	moveq	r3, #17
 8012892:	9309      	str	r3, [sp, #36]	; 0x24
 8012894:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012896:	b153      	cbz	r3, 80128ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8012898:	9a06      	ldr	r2, [sp, #24]
 801289a:	2508      	movs	r5, #8
 801289c:	fb95 f3f8 	sdiv	r3, r5, r8
 80128a0:	1e5d      	subs	r5, r3, #1
 80128a2:	4415      	add	r5, r2
 80128a4:	fb95 f5f3 	sdiv	r5, r5, r3
 80128a8:	fb15 f503 	smulbb	r5, r5, r3
 80128ac:	b2ad      	uxth	r5, r5
 80128ae:	b907      	cbnz	r7, 80128b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 80128b0:	b16c      	cbz	r4, 80128ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 80128b2:	fb04 7305 	mla	r3, r4, r5, r7
 80128b6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80128b8:	fb08 f303 	mul.w	r3, r8, r3
 80128bc:	ebaa 0a04 	sub.w	sl, sl, r4
 80128c0:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 80128c4:	9226      	str	r2, [sp, #152]	; 0x98
 80128c6:	fa1f fa8a 	uxth.w	sl, sl
 80128ca:	f003 0407 	and.w	r4, r3, #7
 80128ce:	4649      	mov	r1, r9
 80128d0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80128d2:	f7ff fedf 	bl	8012694 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80128d6:	4649      	mov	r1, r9
 80128d8:	4683      	mov	fp, r0
 80128da:	980c      	ldr	r0, [sp, #48]	; 0x30
 80128dc:	f7ff ff0a 	bl	80126f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80128e0:	9a07      	ldr	r2, [sp, #28]
 80128e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80128e4:	1a9b      	subs	r3, r3, r2
 80128e6:	459a      	cmp	sl, r3
 80128e8:	bfa8      	it	ge
 80128ea:	469a      	movge	sl, r3
 80128ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128ee:	1bf6      	subs	r6, r6, r7
 80128f0:	1b9e      	subs	r6, r3, r6
 80128f2:	9b06      	ldr	r3, [sp, #24]
 80128f4:	429e      	cmp	r6, r3
 80128f6:	bfd4      	ite	le
 80128f8:	ebc7 0706 	rsble	r7, r7, r6
 80128fc:	ebc7 0703 	rsbgt	r7, r7, r3
 8012900:	1bed      	subs	r5, r5, r7
 8012902:	fb08 f305 	mul.w	r3, r8, r5
 8012906:	9307      	str	r3, [sp, #28]
 8012908:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801290a:	781a      	ldrb	r2, [r3, #0]
 801290c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801290e:	0a1b      	lsrs	r3, r3, #8
 8012910:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012914:	930d      	str	r3, [sp, #52]	; 0x34
 8012916:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012918:	08db      	lsrs	r3, r3, #3
 801291a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801291e:	930e      	str	r3, [sp, #56]	; 0x38
 8012920:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012922:	00db      	lsls	r3, r3, #3
 8012924:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012928:	930f      	str	r3, [sp, #60]	; 0x3c
 801292a:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801292e:	fb0b 0b17 	mls	fp, fp, r7, r0
 8012932:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 8012936:	4358      	muls	r0, r3
 8012938:	9306      	str	r3, [sp, #24]
 801293a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801293c:	4122      	asrs	r2, r4
 801293e:	b29b      	uxth	r3, r3
 8012940:	b2d2      	uxtb	r2, r2
 8012942:	9311      	str	r3, [sp, #68]	; 0x44
 8012944:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8012948:	f1ba 0f00 	cmp.w	sl, #0
 801294c:	f340 80e5 	ble.w	8012b1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8012950:	f8dd c020 	ldr.w	ip, [sp, #32]
 8012954:	46be      	mov	lr, r7
 8012956:	f1be 0f00 	cmp.w	lr, #0
 801295a:	f340 80cb 	ble.w	8012af4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801295e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012960:	4013      	ands	r3, r2
 8012962:	d00a      	beq.n	801297a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8012964:	9909      	ldr	r1, [sp, #36]	; 0x24
 8012966:	fb13 f301 	smulbb	r3, r3, r1
 801296a:	2bfe      	cmp	r3, #254	; 0xfe
 801296c:	dd78      	ble.n	8012a60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 801296e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012970:	29ff      	cmp	r1, #255	; 0xff
 8012972:	d175      	bne.n	8012a60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 8012974:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012976:	f8ac 0000 	strh.w	r0, [ip]
 801297a:	4444      	add	r4, r8
 801297c:	b2a4      	uxth	r4, r4
 801297e:	2c07      	cmp	r4, #7
 8012980:	bf81      	itttt	hi
 8012982:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8012984:	785a      	ldrbhi	r2, [r3, #1]
 8012986:	3301      	addhi	r3, #1
 8012988:	9326      	strhi	r3, [sp, #152]	; 0x98
 801298a:	9b06      	ldr	r3, [sp, #24]
 801298c:	bf9a      	itte	ls
 801298e:	fa42 f208 	asrls.w	r2, r2, r8
 8012992:	b2d2      	uxtbls	r2, r2
 8012994:	2400      	movhi	r4, #0
 8012996:	449c      	add	ip, r3
 8012998:	f10e 3eff 	add.w	lr, lr, #4294967295
 801299c:	e7db      	b.n	8012956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 801299e:	441e      	add	r6, r3
 80129a0:	b236      	sxth	r6, r6
 80129a2:	e711      	b.n	80127c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80129a4:	f1b9 0f01 	cmp.w	r9, #1
 80129a8:	f47f af4c 	bne.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129ac:	f1bb 0f01 	cmp.w	fp, #1
 80129b0:	f47f af48 	bne.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129b4:	f8df b134 	ldr.w	fp, [pc, #308]	; 8012aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 80129b8:	f8db 0000 	ldr.w	r0, [fp]
 80129bc:	6803      	ldr	r3, [r0, #0]
 80129be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80129c0:	4798      	blx	r3
 80129c2:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80129c6:	465a      	mov	r2, fp
 80129c8:	d006      	beq.n	80129d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 80129ca:	f1b8 0f04 	cmp.w	r8, #4
 80129ce:	d13f      	bne.n	8012a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 80129d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80129d2:	3300      	adds	r3, #0
 80129d4:	bf18      	it	ne
 80129d6:	2301      	movne	r3, #1
 80129d8:	05c0      	lsls	r0, r0, #23
 80129da:	f140 80a7 	bpl.w	8012b2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80129de:	f1b8 0f08 	cmp.w	r8, #8
 80129e2:	f040 80a3 	bne.w	8012b2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 80129e6:	2b00      	cmp	r3, #0
 80129e8:	bf0c      	ite	eq
 80129ea:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80129ee:	2180      	movne	r1, #128	; 0x80
 80129f0:	2f00      	cmp	r7, #0
 80129f2:	f47f af27 	bne.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129f6:	2c00      	cmp	r4, #0
 80129f8:	f47f af24 	bne.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80129fc:	9b06      	ldr	r3, [sp, #24]
 80129fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012a00:	18f3      	adds	r3, r6, r3
 8012a02:	4283      	cmp	r3, r0
 8012a04:	f73f af1e 	bgt.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012a08:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8012a0c:	4403      	add	r3, r0
 8012a0e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012a10:	4283      	cmp	r3, r0
 8012a12:	f73f af17 	bgt.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012a16:	6810      	ldr	r0, [r2, #0]
 8012a18:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8012a1c:	6804      	ldr	r4, [r0, #0]
 8012a1e:	9105      	str	r1, [sp, #20]
 8012a20:	f1b8 0f08 	cmp.w	r8, #8
 8012a24:	bf18      	it	ne
 8012a26:	3501      	addne	r5, #1
 8012a28:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012a2a:	9104      	str	r1, [sp, #16]
 8012a2c:	bf18      	it	ne
 8012a2e:	f025 0501 	bicne.w	r5, r5, #1
 8012a32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012a34:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8012a38:	bf18      	it	ne
 8012a3a:	b2ad      	uxthne	r5, r5
 8012a3c:	e9cd 5102 	strd	r5, r1, [sp, #8]
 8012a40:	e9cd 5a00 	strd	r5, sl, [sp]
 8012a44:	9926      	ldr	r1, [sp, #152]	; 0x98
 8012a46:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8012a48:	47a0      	blx	r4
 8012a4a:	b017      	add	sp, #92	; 0x5c
 8012a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a50:	2300      	movs	r3, #0
 8012a52:	e7c1      	b.n	80129d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8012a54:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012a56:	e6fe      	b.n	8012856 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8012a58:	23ff      	movs	r3, #255	; 0xff
 8012a5a:	e71a      	b.n	8012892 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8012a5c:	2355      	movs	r3, #85	; 0x55
 8012a5e:	e718      	b.n	8012892 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8012a60:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012a62:	f8bc 5000 	ldrh.w	r5, [ip]
 8012a66:	fb11 f303 	smulbb	r3, r1, r3
 8012a6a:	b29b      	uxth	r3, r3
 8012a6c:	1c59      	adds	r1, r3, #1
 8012a6e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8012a72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8012a76:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012a78:	b29e      	uxth	r6, r3
 8012a7a:	1228      	asrs	r0, r5, #8
 8012a7c:	43db      	mvns	r3, r3
 8012a7e:	b2db      	uxtb	r3, r3
 8012a80:	fb11 f106 	smulbb	r1, r1, r6
 8012a84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012a88:	fb00 1003 	mla	r0, r0, r3, r1
 8012a8c:	b281      	uxth	r1, r0
 8012a8e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012a90:	910c      	str	r1, [sp, #48]	; 0x30
 8012a92:	fb16 f900 	smulbb	r9, r6, r0
 8012a96:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012a98:	10e9      	asrs	r1, r5, #3
 8012a9a:	00ed      	lsls	r5, r5, #3
 8012a9c:	fb16 f600 	smulbb	r6, r6, r0
 8012aa0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012aa4:	b2ed      	uxtb	r5, r5
 8012aa6:	fb01 9103 	mla	r1, r1, r3, r9
 8012aaa:	fb05 6603 	mla	r6, r5, r3, r6
 8012aae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012ab0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012ab2:	b2b6      	uxth	r6, r6
 8012ab4:	3301      	adds	r3, #1
 8012ab6:	f106 0901 	add.w	r9, r6, #1
 8012aba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012abe:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8012ac2:	b289      	uxth	r1, r1
 8012ac4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8012ac8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012acc:	ea40 0009 	orr.w	r0, r0, r9
 8012ad0:	f101 0901 	add.w	r9, r1, #1
 8012ad4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8012ad8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012adc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012ae0:	ea40 0009 	orr.w	r0, r0, r9
 8012ae4:	e747      	b.n	8012976 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8012ae6:	bf00      	nop
 8012ae8:	200120a4 	.word	0x200120a4
 8012aec:	200120ac 	.word	0x200120ac
 8012af0:	200120a6 	.word	0x200120a6
 8012af4:	9b07      	ldr	r3, [sp, #28]
 8012af6:	b153      	cbz	r3, 8012b0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8012af8:	441c      	add	r4, r3
 8012afa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012afc:	b2a4      	uxth	r4, r4
 8012afe:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 8012b02:	f004 0407 	and.w	r4, r4, #7
 8012b06:	781a      	ldrb	r2, [r3, #0]
 8012b08:	9326      	str	r3, [sp, #152]	; 0x98
 8012b0a:	4122      	asrs	r2, r4
 8012b0c:	b2d2      	uxtb	r2, r2
 8012b0e:	9b08      	ldr	r3, [sp, #32]
 8012b10:	445b      	add	r3, fp
 8012b12:	9308      	str	r3, [sp, #32]
 8012b14:	f10a 3aff 	add.w	sl, sl, #4294967295
 8012b18:	e716      	b.n	8012948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8012b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b1c:	2b00      	cmp	r3, #0
 8012b1e:	d194      	bne.n	8012a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012b20:	4b05      	ldr	r3, [pc, #20]	; (8012b38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 8012b22:	6818      	ldr	r0, [r3, #0]
 8012b24:	6803      	ldr	r3, [r0, #0]
 8012b26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012b28:	4798      	blx	r3
 8012b2a:	e78e      	b.n	8012a4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012b2c:	2b00      	cmp	r3, #0
 8012b2e:	f43f ae89 	beq.w	8012844 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012b32:	2180      	movs	r1, #128	; 0x80
 8012b34:	e75c      	b.n	80129f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8012b36:	bf00      	nop
 8012b38:	200120ac 	.word	0x200120ac

08012b3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8012b3c:	b538      	push	{r3, r4, r5, lr}
 8012b3e:	4c15      	ldr	r4, [pc, #84]	; (8012b94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8012b40:	7823      	ldrb	r3, [r4, #0]
 8012b42:	f3bf 8f5b 	dmb	ish
 8012b46:	07da      	lsls	r2, r3, #31
 8012b48:	4605      	mov	r5, r0
 8012b4a:	d40b      	bmi.n	8012b64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012b4c:	4620      	mov	r0, r4
 8012b4e:	f007 fbe7 	bl	801a320 <__cxa_guard_acquire>
 8012b52:	b138      	cbz	r0, 8012b64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012b54:	4620      	mov	r0, r4
 8012b56:	f007 fbef 	bl	801a338 <__cxa_guard_release>
 8012b5a:	4a0f      	ldr	r2, [pc, #60]	; (8012b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012b5c:	490f      	ldr	r1, [pc, #60]	; (8012b9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8012b5e:	4810      	ldr	r0, [pc, #64]	; (8012ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012b60:	f007 fbd4 	bl	801a30c <__aeabi_atexit>
 8012b64:	4c0f      	ldr	r4, [pc, #60]	; (8012ba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8012b66:	7823      	ldrb	r3, [r4, #0]
 8012b68:	f3bf 8f5b 	dmb	ish
 8012b6c:	07db      	lsls	r3, r3, #31
 8012b6e:	d40b      	bmi.n	8012b88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012b70:	4620      	mov	r0, r4
 8012b72:	f007 fbd5 	bl	801a320 <__cxa_guard_acquire>
 8012b76:	b138      	cbz	r0, 8012b88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012b78:	4620      	mov	r0, r4
 8012b7a:	f007 fbdd 	bl	801a338 <__cxa_guard_release>
 8012b7e:	4a06      	ldr	r2, [pc, #24]	; (8012b98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012b80:	4909      	ldr	r1, [pc, #36]	; (8012ba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8012b82:	480a      	ldr	r0, [pc, #40]	; (8012bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012b84:	f007 fbc2 	bl	801a30c <__aeabi_atexit>
 8012b88:	4b05      	ldr	r3, [pc, #20]	; (8012ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012b8a:	612b      	str	r3, [r5, #16]
 8012b8c:	4b07      	ldr	r3, [pc, #28]	; (8012bac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012b8e:	616b      	str	r3, [r5, #20]
 8012b90:	bd38      	pop	{r3, r4, r5, pc}
 8012b92:	bf00      	nop
 8012b94:	20012198 	.word	0x20012198
 8012b98:	20000000 	.word	0x20000000
 8012b9c:	080111e1 	.word	0x080111e1
 8012ba0:	200000c8 	.word	0x200000c8
 8012ba4:	2001219c 	.word	0x2001219c
 8012ba8:	080111df 	.word	0x080111df
 8012bac:	200000cc 	.word	0x200000cc

08012bb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8012bb0:	b538      	push	{r3, r4, r5, lr}
 8012bb2:	4c15      	ldr	r4, [pc, #84]	; (8012c08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8012bb4:	7823      	ldrb	r3, [r4, #0]
 8012bb6:	f3bf 8f5b 	dmb	ish
 8012bba:	07da      	lsls	r2, r3, #31
 8012bbc:	4605      	mov	r5, r0
 8012bbe:	d40b      	bmi.n	8012bd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012bc0:	4620      	mov	r0, r4
 8012bc2:	f007 fbad 	bl	801a320 <__cxa_guard_acquire>
 8012bc6:	b138      	cbz	r0, 8012bd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012bc8:	4620      	mov	r0, r4
 8012bca:	f007 fbb5 	bl	801a338 <__cxa_guard_release>
 8012bce:	4a0f      	ldr	r2, [pc, #60]	; (8012c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012bd0:	490f      	ldr	r1, [pc, #60]	; (8012c10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8012bd2:	4810      	ldr	r0, [pc, #64]	; (8012c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012bd4:	f007 fb9a 	bl	801a30c <__aeabi_atexit>
 8012bd8:	4c0f      	ldr	r4, [pc, #60]	; (8012c18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8012bda:	7823      	ldrb	r3, [r4, #0]
 8012bdc:	f3bf 8f5b 	dmb	ish
 8012be0:	07db      	lsls	r3, r3, #31
 8012be2:	d40b      	bmi.n	8012bfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012be4:	4620      	mov	r0, r4
 8012be6:	f007 fb9b 	bl	801a320 <__cxa_guard_acquire>
 8012bea:	b138      	cbz	r0, 8012bfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012bec:	4620      	mov	r0, r4
 8012bee:	f007 fba3 	bl	801a338 <__cxa_guard_release>
 8012bf2:	4a06      	ldr	r2, [pc, #24]	; (8012c0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012bf4:	4909      	ldr	r1, [pc, #36]	; (8012c1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8012bf6:	480a      	ldr	r0, [pc, #40]	; (8012c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012bf8:	f007 fb88 	bl	801a30c <__aeabi_atexit>
 8012bfc:	4b05      	ldr	r3, [pc, #20]	; (8012c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012bfe:	60ab      	str	r3, [r5, #8]
 8012c00:	4b07      	ldr	r3, [pc, #28]	; (8012c20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012c02:	60eb      	str	r3, [r5, #12]
 8012c04:	bd38      	pop	{r3, r4, r5, pc}
 8012c06:	bf00      	nop
 8012c08:	20012170 	.word	0x20012170
 8012c0c:	20000000 	.word	0x20000000
 8012c10:	080111e5 	.word	0x080111e5
 8012c14:	200000a0 	.word	0x200000a0
 8012c18:	20012174 	.word	0x20012174
 8012c1c:	080111e3 	.word	0x080111e3
 8012c20:	200000a4 	.word	0x200000a4

08012c24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8012c24:	b510      	push	{r4, lr}
 8012c26:	4604      	mov	r4, r0
 8012c28:	f7ff ff88 	bl	8012b3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8012c2c:	4620      	mov	r0, r4
 8012c2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c32:	f7ff bfbd 	b.w	8012bb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08012c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8012c38:	b538      	push	{r3, r4, r5, lr}
 8012c3a:	4c15      	ldr	r4, [pc, #84]	; (8012c90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8012c3c:	7823      	ldrb	r3, [r4, #0]
 8012c3e:	f3bf 8f5b 	dmb	ish
 8012c42:	07da      	lsls	r2, r3, #31
 8012c44:	4605      	mov	r5, r0
 8012c46:	d40b      	bmi.n	8012c60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012c48:	4620      	mov	r0, r4
 8012c4a:	f007 fb69 	bl	801a320 <__cxa_guard_acquire>
 8012c4e:	b138      	cbz	r0, 8012c60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012c50:	4620      	mov	r0, r4
 8012c52:	f007 fb71 	bl	801a338 <__cxa_guard_release>
 8012c56:	4a0f      	ldr	r2, [pc, #60]	; (8012c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012c58:	490f      	ldr	r1, [pc, #60]	; (8012c98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8012c5a:	4810      	ldr	r0, [pc, #64]	; (8012c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012c5c:	f007 fb56 	bl	801a30c <__aeabi_atexit>
 8012c60:	4c0f      	ldr	r4, [pc, #60]	; (8012ca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8012c62:	7823      	ldrb	r3, [r4, #0]
 8012c64:	f3bf 8f5b 	dmb	ish
 8012c68:	07db      	lsls	r3, r3, #31
 8012c6a:	d40b      	bmi.n	8012c84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012c6c:	4620      	mov	r0, r4
 8012c6e:	f007 fb57 	bl	801a320 <__cxa_guard_acquire>
 8012c72:	b138      	cbz	r0, 8012c84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012c74:	4620      	mov	r0, r4
 8012c76:	f007 fb5f 	bl	801a338 <__cxa_guard_release>
 8012c7a:	4a06      	ldr	r2, [pc, #24]	; (8012c94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012c7c:	4909      	ldr	r1, [pc, #36]	; (8012ca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8012c7e:	480a      	ldr	r0, [pc, #40]	; (8012ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8012c80:	f007 fb44 	bl	801a30c <__aeabi_atexit>
 8012c84:	4b05      	ldr	r3, [pc, #20]	; (8012c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012c86:	622b      	str	r3, [r5, #32]
 8012c88:	4b07      	ldr	r3, [pc, #28]	; (8012ca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8012c8a:	626b      	str	r3, [r5, #36]	; 0x24
 8012c8c:	bd38      	pop	{r3, r4, r5, pc}
 8012c8e:	bf00      	nop
 8012c90:	200121a0 	.word	0x200121a0
 8012c94:	20000000 	.word	0x20000000
 8012c98:	080111d9 	.word	0x080111d9
 8012c9c:	200000d0 	.word	0x200000d0
 8012ca0:	200121a4 	.word	0x200121a4
 8012ca4:	080111d7 	.word	0x080111d7
 8012ca8:	200000d4 	.word	0x200000d4

08012cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8012cac:	b538      	push	{r3, r4, r5, lr}
 8012cae:	4c15      	ldr	r4, [pc, #84]	; (8012d04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8012cb0:	7823      	ldrb	r3, [r4, #0]
 8012cb2:	f3bf 8f5b 	dmb	ish
 8012cb6:	07da      	lsls	r2, r3, #31
 8012cb8:	4605      	mov	r5, r0
 8012cba:	d40b      	bmi.n	8012cd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012cbc:	4620      	mov	r0, r4
 8012cbe:	f007 fb2f 	bl	801a320 <__cxa_guard_acquire>
 8012cc2:	b138      	cbz	r0, 8012cd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012cc4:	4620      	mov	r0, r4
 8012cc6:	f007 fb37 	bl	801a338 <__cxa_guard_release>
 8012cca:	4a0f      	ldr	r2, [pc, #60]	; (8012d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012ccc:	490f      	ldr	r1, [pc, #60]	; (8012d0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8012cce:	4810      	ldr	r0, [pc, #64]	; (8012d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012cd0:	f007 fb1c 	bl	801a30c <__aeabi_atexit>
 8012cd4:	4c0f      	ldr	r4, [pc, #60]	; (8012d14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8012cd6:	7823      	ldrb	r3, [r4, #0]
 8012cd8:	f3bf 8f5b 	dmb	ish
 8012cdc:	07db      	lsls	r3, r3, #31
 8012cde:	d40b      	bmi.n	8012cf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012ce0:	4620      	mov	r0, r4
 8012ce2:	f007 fb1d 	bl	801a320 <__cxa_guard_acquire>
 8012ce6:	b138      	cbz	r0, 8012cf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012ce8:	4620      	mov	r0, r4
 8012cea:	f007 fb25 	bl	801a338 <__cxa_guard_release>
 8012cee:	4a06      	ldr	r2, [pc, #24]	; (8012d08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012cf0:	4909      	ldr	r1, [pc, #36]	; (8012d18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8012cf2:	480a      	ldr	r0, [pc, #40]	; (8012d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012cf4:	f007 fb0a 	bl	801a30c <__aeabi_atexit>
 8012cf8:	4b05      	ldr	r3, [pc, #20]	; (8012d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012cfa:	61ab      	str	r3, [r5, #24]
 8012cfc:	4b07      	ldr	r3, [pc, #28]	; (8012d1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012cfe:	61eb      	str	r3, [r5, #28]
 8012d00:	bd38      	pop	{r3, r4, r5, pc}
 8012d02:	bf00      	nop
 8012d04:	20012178 	.word	0x20012178
 8012d08:	20000000 	.word	0x20000000
 8012d0c:	080111dd 	.word	0x080111dd
 8012d10:	200000a8 	.word	0x200000a8
 8012d14:	2001217c 	.word	0x2001217c
 8012d18:	080111db 	.word	0x080111db
 8012d1c:	200000ac 	.word	0x200000ac

08012d20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8012d20:	b510      	push	{r4, lr}
 8012d22:	4604      	mov	r4, r0
 8012d24:	f7ff ff88 	bl	8012c38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8012d28:	4620      	mov	r0, r4
 8012d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d2e:	f7ff bfbd 	b.w	8012cac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08012d34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8012d34:	b538      	push	{r3, r4, r5, lr}
 8012d36:	4c15      	ldr	r4, [pc, #84]	; (8012d8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8012d38:	7823      	ldrb	r3, [r4, #0]
 8012d3a:	f3bf 8f5b 	dmb	ish
 8012d3e:	07da      	lsls	r2, r3, #31
 8012d40:	4605      	mov	r5, r0
 8012d42:	d40b      	bmi.n	8012d5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012d44:	4620      	mov	r0, r4
 8012d46:	f007 faeb 	bl	801a320 <__cxa_guard_acquire>
 8012d4a:	b138      	cbz	r0, 8012d5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012d4c:	4620      	mov	r0, r4
 8012d4e:	f007 faf3 	bl	801a338 <__cxa_guard_release>
 8012d52:	4a0f      	ldr	r2, [pc, #60]	; (8012d90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012d54:	490f      	ldr	r1, [pc, #60]	; (8012d94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8012d56:	4810      	ldr	r0, [pc, #64]	; (8012d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8012d58:	f007 fad8 	bl	801a30c <__aeabi_atexit>
 8012d5c:	4c0f      	ldr	r4, [pc, #60]	; (8012d9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8012d5e:	7823      	ldrb	r3, [r4, #0]
 8012d60:	f3bf 8f5b 	dmb	ish
 8012d64:	07db      	lsls	r3, r3, #31
 8012d66:	d40b      	bmi.n	8012d80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012d68:	4620      	mov	r0, r4
 8012d6a:	f007 fad9 	bl	801a320 <__cxa_guard_acquire>
 8012d6e:	b138      	cbz	r0, 8012d80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012d70:	4620      	mov	r0, r4
 8012d72:	f007 fae1 	bl	801a338 <__cxa_guard_release>
 8012d76:	4a06      	ldr	r2, [pc, #24]	; (8012d90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012d78:	4909      	ldr	r1, [pc, #36]	; (8012da0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8012d7a:	480a      	ldr	r0, [pc, #40]	; (8012da4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012d7c:	f007 fac6 	bl	801a30c <__aeabi_atexit>
 8012d80:	4b05      	ldr	r3, [pc, #20]	; (8012d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8012d82:	632b      	str	r3, [r5, #48]	; 0x30
 8012d84:	4b07      	ldr	r3, [pc, #28]	; (8012da4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012d86:	636b      	str	r3, [r5, #52]	; 0x34
 8012d88:	bd38      	pop	{r3, r4, r5, pc}
 8012d8a:	bf00      	nop
 8012d8c:	200121b0 	.word	0x200121b0
 8012d90:	20000000 	.word	0x20000000
 8012d94:	080111d1 	.word	0x080111d1
 8012d98:	200000e0 	.word	0x200000e0
 8012d9c:	200121b4 	.word	0x200121b4
 8012da0:	080111cf 	.word	0x080111cf
 8012da4:	200000e4 	.word	0x200000e4

08012da8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8012da8:	b538      	push	{r3, r4, r5, lr}
 8012daa:	4c15      	ldr	r4, [pc, #84]	; (8012e00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8012dac:	7823      	ldrb	r3, [r4, #0]
 8012dae:	f3bf 8f5b 	dmb	ish
 8012db2:	07da      	lsls	r2, r3, #31
 8012db4:	4605      	mov	r5, r0
 8012db6:	d40b      	bmi.n	8012dd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012db8:	4620      	mov	r0, r4
 8012dba:	f007 fab1 	bl	801a320 <__cxa_guard_acquire>
 8012dbe:	b138      	cbz	r0, 8012dd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012dc0:	4620      	mov	r0, r4
 8012dc2:	f007 fab9 	bl	801a338 <__cxa_guard_release>
 8012dc6:	4a0f      	ldr	r2, [pc, #60]	; (8012e04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012dc8:	490f      	ldr	r1, [pc, #60]	; (8012e08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8012dca:	4810      	ldr	r0, [pc, #64]	; (8012e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012dcc:	f007 fa9e 	bl	801a30c <__aeabi_atexit>
 8012dd0:	4c0f      	ldr	r4, [pc, #60]	; (8012e10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8012dd2:	7823      	ldrb	r3, [r4, #0]
 8012dd4:	f3bf 8f5b 	dmb	ish
 8012dd8:	07db      	lsls	r3, r3, #31
 8012dda:	d40b      	bmi.n	8012df4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012ddc:	4620      	mov	r0, r4
 8012dde:	f007 fa9f 	bl	801a320 <__cxa_guard_acquire>
 8012de2:	b138      	cbz	r0, 8012df4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012de4:	4620      	mov	r0, r4
 8012de6:	f007 faa7 	bl	801a338 <__cxa_guard_release>
 8012dea:	4a06      	ldr	r2, [pc, #24]	; (8012e04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012dec:	4909      	ldr	r1, [pc, #36]	; (8012e14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8012dee:	480a      	ldr	r0, [pc, #40]	; (8012e18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012df0:	f007 fa8c 	bl	801a30c <__aeabi_atexit>
 8012df4:	4b05      	ldr	r3, [pc, #20]	; (8012e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012df6:	62ab      	str	r3, [r5, #40]	; 0x28
 8012df8:	4b07      	ldr	r3, [pc, #28]	; (8012e18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012dfa:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012dfc:	bd38      	pop	{r3, r4, r5, pc}
 8012dfe:	bf00      	nop
 8012e00:	20012180 	.word	0x20012180
 8012e04:	20000000 	.word	0x20000000
 8012e08:	080111d5 	.word	0x080111d5
 8012e0c:	200000b0 	.word	0x200000b0
 8012e10:	20012184 	.word	0x20012184
 8012e14:	080111d3 	.word	0x080111d3
 8012e18:	200000b4 	.word	0x200000b4

08012e1c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8012e1c:	b510      	push	{r4, lr}
 8012e1e:	4604      	mov	r4, r0
 8012e20:	f7ff ff88 	bl	8012d34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8012e24:	4620      	mov	r0, r4
 8012e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012e2a:	f7ff bfbd 	b.w	8012da8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08012e30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8012e30:	b538      	push	{r3, r4, r5, lr}
 8012e32:	4c15      	ldr	r4, [pc, #84]	; (8012e88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8012e34:	7823      	ldrb	r3, [r4, #0]
 8012e36:	f3bf 8f5b 	dmb	ish
 8012e3a:	07da      	lsls	r2, r3, #31
 8012e3c:	4605      	mov	r5, r0
 8012e3e:	d40b      	bmi.n	8012e58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012e40:	4620      	mov	r0, r4
 8012e42:	f007 fa6d 	bl	801a320 <__cxa_guard_acquire>
 8012e46:	b138      	cbz	r0, 8012e58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012e48:	4620      	mov	r0, r4
 8012e4a:	f007 fa75 	bl	801a338 <__cxa_guard_release>
 8012e4e:	4a0f      	ldr	r2, [pc, #60]	; (8012e8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012e50:	490f      	ldr	r1, [pc, #60]	; (8012e90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8012e52:	4810      	ldr	r0, [pc, #64]	; (8012e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012e54:	f007 fa5a 	bl	801a30c <__aeabi_atexit>
 8012e58:	4c0f      	ldr	r4, [pc, #60]	; (8012e98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8012e5a:	7823      	ldrb	r3, [r4, #0]
 8012e5c:	f3bf 8f5b 	dmb	ish
 8012e60:	07db      	lsls	r3, r3, #31
 8012e62:	d40b      	bmi.n	8012e7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012e64:	4620      	mov	r0, r4
 8012e66:	f007 fa5b 	bl	801a320 <__cxa_guard_acquire>
 8012e6a:	b138      	cbz	r0, 8012e7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012e6c:	4620      	mov	r0, r4
 8012e6e:	f007 fa63 	bl	801a338 <__cxa_guard_release>
 8012e72:	4a06      	ldr	r2, [pc, #24]	; (8012e8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012e74:	4909      	ldr	r1, [pc, #36]	; (8012e9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8012e76:	480a      	ldr	r0, [pc, #40]	; (8012ea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012e78:	f007 fa48 	bl	801a30c <__aeabi_atexit>
 8012e7c:	4b05      	ldr	r3, [pc, #20]	; (8012e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012e7e:	652b      	str	r3, [r5, #80]	; 0x50
 8012e80:	4b07      	ldr	r3, [pc, #28]	; (8012ea0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012e82:	656b      	str	r3, [r5, #84]	; 0x54
 8012e84:	bd38      	pop	{r3, r4, r5, pc}
 8012e86:	bf00      	nop
 8012e88:	200121b8 	.word	0x200121b8
 8012e8c:	20000000 	.word	0x20000000
 8012e90:	080111c1 	.word	0x080111c1
 8012e94:	200000e8 	.word	0x200000e8
 8012e98:	200121bc 	.word	0x200121bc
 8012e9c:	080111bf 	.word	0x080111bf
 8012ea0:	200000ec 	.word	0x200000ec

08012ea4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8012ea4:	b538      	push	{r3, r4, r5, lr}
 8012ea6:	4c15      	ldr	r4, [pc, #84]	; (8012efc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8012ea8:	7823      	ldrb	r3, [r4, #0]
 8012eaa:	f3bf 8f5b 	dmb	ish
 8012eae:	07da      	lsls	r2, r3, #31
 8012eb0:	4605      	mov	r5, r0
 8012eb2:	d40b      	bmi.n	8012ecc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012eb4:	4620      	mov	r0, r4
 8012eb6:	f007 fa33 	bl	801a320 <__cxa_guard_acquire>
 8012eba:	b138      	cbz	r0, 8012ecc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012ebc:	4620      	mov	r0, r4
 8012ebe:	f007 fa3b 	bl	801a338 <__cxa_guard_release>
 8012ec2:	4a0f      	ldr	r2, [pc, #60]	; (8012f00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012ec4:	490f      	ldr	r1, [pc, #60]	; (8012f04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8012ec6:	4810      	ldr	r0, [pc, #64]	; (8012f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012ec8:	f007 fa20 	bl	801a30c <__aeabi_atexit>
 8012ecc:	4c0f      	ldr	r4, [pc, #60]	; (8012f0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8012ece:	7823      	ldrb	r3, [r4, #0]
 8012ed0:	f3bf 8f5b 	dmb	ish
 8012ed4:	07db      	lsls	r3, r3, #31
 8012ed6:	d40b      	bmi.n	8012ef0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012ed8:	4620      	mov	r0, r4
 8012eda:	f007 fa21 	bl	801a320 <__cxa_guard_acquire>
 8012ede:	b138      	cbz	r0, 8012ef0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012ee0:	4620      	mov	r0, r4
 8012ee2:	f007 fa29 	bl	801a338 <__cxa_guard_release>
 8012ee6:	4a06      	ldr	r2, [pc, #24]	; (8012f00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012ee8:	4909      	ldr	r1, [pc, #36]	; (8012f10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8012eea:	480a      	ldr	r0, [pc, #40]	; (8012f14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012eec:	f007 fa0e 	bl	801a30c <__aeabi_atexit>
 8012ef0:	4b05      	ldr	r3, [pc, #20]	; (8012f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012ef2:	64ab      	str	r3, [r5, #72]	; 0x48
 8012ef4:	4b07      	ldr	r3, [pc, #28]	; (8012f14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012ef6:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012ef8:	bd38      	pop	{r3, r4, r5, pc}
 8012efa:	bf00      	nop
 8012efc:	200121c0 	.word	0x200121c0
 8012f00:	20000000 	.word	0x20000000
 8012f04:	080111c5 	.word	0x080111c5
 8012f08:	200000f0 	.word	0x200000f0
 8012f0c:	200121c4 	.word	0x200121c4
 8012f10:	080111c3 	.word	0x080111c3
 8012f14:	200000f4 	.word	0x200000f4

08012f18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8012f18:	b538      	push	{r3, r4, r5, lr}
 8012f1a:	4c15      	ldr	r4, [pc, #84]	; (8012f70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8012f1c:	7823      	ldrb	r3, [r4, #0]
 8012f1e:	f3bf 8f5b 	dmb	ish
 8012f22:	07da      	lsls	r2, r3, #31
 8012f24:	4605      	mov	r5, r0
 8012f26:	d40b      	bmi.n	8012f40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012f28:	4620      	mov	r0, r4
 8012f2a:	f007 f9f9 	bl	801a320 <__cxa_guard_acquire>
 8012f2e:	b138      	cbz	r0, 8012f40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012f30:	4620      	mov	r0, r4
 8012f32:	f007 fa01 	bl	801a338 <__cxa_guard_release>
 8012f36:	4a0f      	ldr	r2, [pc, #60]	; (8012f74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012f38:	490f      	ldr	r1, [pc, #60]	; (8012f78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8012f3a:	4810      	ldr	r0, [pc, #64]	; (8012f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012f3c:	f007 f9e6 	bl	801a30c <__aeabi_atexit>
 8012f40:	4c0f      	ldr	r4, [pc, #60]	; (8012f80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8012f42:	7823      	ldrb	r3, [r4, #0]
 8012f44:	f3bf 8f5b 	dmb	ish
 8012f48:	07db      	lsls	r3, r3, #31
 8012f4a:	d40b      	bmi.n	8012f64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012f4c:	4620      	mov	r0, r4
 8012f4e:	f007 f9e7 	bl	801a320 <__cxa_guard_acquire>
 8012f52:	b138      	cbz	r0, 8012f64 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012f54:	4620      	mov	r0, r4
 8012f56:	f007 f9ef 	bl	801a338 <__cxa_guard_release>
 8012f5a:	4a06      	ldr	r2, [pc, #24]	; (8012f74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012f5c:	4909      	ldr	r1, [pc, #36]	; (8012f84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8012f5e:	480a      	ldr	r0, [pc, #40]	; (8012f88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012f60:	f007 f9d4 	bl	801a30c <__aeabi_atexit>
 8012f64:	4b05      	ldr	r3, [pc, #20]	; (8012f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012f66:	642b      	str	r3, [r5, #64]	; 0x40
 8012f68:	4b07      	ldr	r3, [pc, #28]	; (8012f88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012f6a:	646b      	str	r3, [r5, #68]	; 0x44
 8012f6c:	bd38      	pop	{r3, r4, r5, pc}
 8012f6e:	bf00      	nop
 8012f70:	20012188 	.word	0x20012188
 8012f74:	20000000 	.word	0x20000000
 8012f78:	080111c9 	.word	0x080111c9
 8012f7c:	200000b8 	.word	0x200000b8
 8012f80:	2001218c 	.word	0x2001218c
 8012f84:	080111c7 	.word	0x080111c7
 8012f88:	200000bc 	.word	0x200000bc

08012f8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8012f8c:	b538      	push	{r3, r4, r5, lr}
 8012f8e:	4c15      	ldr	r4, [pc, #84]	; (8012fe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8012f90:	7823      	ldrb	r3, [r4, #0]
 8012f92:	f3bf 8f5b 	dmb	ish
 8012f96:	07da      	lsls	r2, r3, #31
 8012f98:	4605      	mov	r5, r0
 8012f9a:	d40b      	bmi.n	8012fb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012f9c:	4620      	mov	r0, r4
 8012f9e:	f007 f9bf 	bl	801a320 <__cxa_guard_acquire>
 8012fa2:	b138      	cbz	r0, 8012fb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012fa4:	4620      	mov	r0, r4
 8012fa6:	f007 f9c7 	bl	801a338 <__cxa_guard_release>
 8012faa:	4a0f      	ldr	r2, [pc, #60]	; (8012fe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012fac:	490f      	ldr	r1, [pc, #60]	; (8012fec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8012fae:	4810      	ldr	r0, [pc, #64]	; (8012ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012fb0:	f007 f9ac 	bl	801a30c <__aeabi_atexit>
 8012fb4:	4c0f      	ldr	r4, [pc, #60]	; (8012ff4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8012fb6:	7823      	ldrb	r3, [r4, #0]
 8012fb8:	f3bf 8f5b 	dmb	ish
 8012fbc:	07db      	lsls	r3, r3, #31
 8012fbe:	d40b      	bmi.n	8012fd8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012fc0:	4620      	mov	r0, r4
 8012fc2:	f007 f9ad 	bl	801a320 <__cxa_guard_acquire>
 8012fc6:	b138      	cbz	r0, 8012fd8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012fc8:	4620      	mov	r0, r4
 8012fca:	f007 f9b5 	bl	801a338 <__cxa_guard_release>
 8012fce:	4a06      	ldr	r2, [pc, #24]	; (8012fe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012fd0:	4909      	ldr	r1, [pc, #36]	; (8012ff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8012fd2:	480a      	ldr	r0, [pc, #40]	; (8012ffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012fd4:	f007 f99a 	bl	801a30c <__aeabi_atexit>
 8012fd8:	4b05      	ldr	r3, [pc, #20]	; (8012ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012fda:	63ab      	str	r3, [r5, #56]	; 0x38
 8012fdc:	4b07      	ldr	r3, [pc, #28]	; (8012ffc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012fde:	63eb      	str	r3, [r5, #60]	; 0x3c
 8012fe0:	bd38      	pop	{r3, r4, r5, pc}
 8012fe2:	bf00      	nop
 8012fe4:	200121a8 	.word	0x200121a8
 8012fe8:	20000000 	.word	0x20000000
 8012fec:	080111cd 	.word	0x080111cd
 8012ff0:	200000d8 	.word	0x200000d8
 8012ff4:	200121ac 	.word	0x200121ac
 8012ff8:	080111cb 	.word	0x080111cb
 8012ffc:	200000dc 	.word	0x200000dc

08013000 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013000:	b510      	push	{r4, lr}
 8013002:	4604      	mov	r4, r0
 8013004:	f7ff ff14 	bl	8012e30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013008:	4620      	mov	r0, r4
 801300a:	f7ff ff85 	bl	8012f18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801300e:	4620      	mov	r0, r4
 8013010:	f7ff ff48 	bl	8012ea4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013014:	4620      	mov	r0, r4
 8013016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801301a:	f7ff bfb7 	b.w	8012f8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013020 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013020:	b538      	push	{r3, r4, r5, lr}
 8013022:	4c15      	ldr	r4, [pc, #84]	; (8013078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013024:	7823      	ldrb	r3, [r4, #0]
 8013026:	f3bf 8f5b 	dmb	ish
 801302a:	07da      	lsls	r2, r3, #31
 801302c:	4605      	mov	r5, r0
 801302e:	d40b      	bmi.n	8013048 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013030:	4620      	mov	r0, r4
 8013032:	f007 f975 	bl	801a320 <__cxa_guard_acquire>
 8013036:	b138      	cbz	r0, 8013048 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013038:	4620      	mov	r0, r4
 801303a:	f007 f97d 	bl	801a338 <__cxa_guard_release>
 801303e:	4a0f      	ldr	r2, [pc, #60]	; (801307c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013040:	490f      	ldr	r1, [pc, #60]	; (8013080 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013042:	4810      	ldr	r0, [pc, #64]	; (8013084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013044:	f007 f962 	bl	801a30c <__aeabi_atexit>
 8013048:	4c0f      	ldr	r4, [pc, #60]	; (8013088 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801304a:	7823      	ldrb	r3, [r4, #0]
 801304c:	f3bf 8f5b 	dmb	ish
 8013050:	07db      	lsls	r3, r3, #31
 8013052:	d40b      	bmi.n	801306c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013054:	4620      	mov	r0, r4
 8013056:	f007 f963 	bl	801a320 <__cxa_guard_acquire>
 801305a:	b138      	cbz	r0, 801306c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801305c:	4620      	mov	r0, r4
 801305e:	f007 f96b 	bl	801a338 <__cxa_guard_release>
 8013062:	4a06      	ldr	r2, [pc, #24]	; (801307c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013064:	4909      	ldr	r1, [pc, #36]	; (801308c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013066:	480a      	ldr	r0, [pc, #40]	; (8013090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013068:	f007 f950 	bl	801a30c <__aeabi_atexit>
 801306c:	4b05      	ldr	r3, [pc, #20]	; (8013084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801306e:	662b      	str	r3, [r5, #96]	; 0x60
 8013070:	4b07      	ldr	r3, [pc, #28]	; (8013090 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013072:	666b      	str	r3, [r5, #100]	; 0x64
 8013074:	bd38      	pop	{r3, r4, r5, pc}
 8013076:	bf00      	nop
 8013078:	20012190 	.word	0x20012190
 801307c:	20000000 	.word	0x20000000
 8013080:	080111b9 	.word	0x080111b9
 8013084:	200000c0 	.word	0x200000c0
 8013088:	20012194 	.word	0x20012194
 801308c:	080111b7 	.word	0x080111b7
 8013090:	200000c4 	.word	0x200000c4

08013094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013094:	b538      	push	{r3, r4, r5, lr}
 8013096:	4c15      	ldr	r4, [pc, #84]	; (80130ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013098:	7823      	ldrb	r3, [r4, #0]
 801309a:	f3bf 8f5b 	dmb	ish
 801309e:	07da      	lsls	r2, r3, #31
 80130a0:	4605      	mov	r5, r0
 80130a2:	d40b      	bmi.n	80130bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80130a4:	4620      	mov	r0, r4
 80130a6:	f007 f93b 	bl	801a320 <__cxa_guard_acquire>
 80130aa:	b138      	cbz	r0, 80130bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80130ac:	4620      	mov	r0, r4
 80130ae:	f007 f943 	bl	801a338 <__cxa_guard_release>
 80130b2:	4a0f      	ldr	r2, [pc, #60]	; (80130f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80130b4:	490f      	ldr	r1, [pc, #60]	; (80130f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80130b6:	4810      	ldr	r0, [pc, #64]	; (80130f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80130b8:	f007 f928 	bl	801a30c <__aeabi_atexit>
 80130bc:	4c0f      	ldr	r4, [pc, #60]	; (80130fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80130be:	7823      	ldrb	r3, [r4, #0]
 80130c0:	f3bf 8f5b 	dmb	ish
 80130c4:	07db      	lsls	r3, r3, #31
 80130c6:	d40b      	bmi.n	80130e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80130c8:	4620      	mov	r0, r4
 80130ca:	f007 f929 	bl	801a320 <__cxa_guard_acquire>
 80130ce:	b138      	cbz	r0, 80130e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80130d0:	4620      	mov	r0, r4
 80130d2:	f007 f931 	bl	801a338 <__cxa_guard_release>
 80130d6:	4a06      	ldr	r2, [pc, #24]	; (80130f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80130d8:	4909      	ldr	r1, [pc, #36]	; (8013100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80130da:	480a      	ldr	r0, [pc, #40]	; (8013104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80130dc:	f007 f916 	bl	801a30c <__aeabi_atexit>
 80130e0:	4b05      	ldr	r3, [pc, #20]	; (80130f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80130e2:	65ab      	str	r3, [r5, #88]	; 0x58
 80130e4:	4b07      	ldr	r3, [pc, #28]	; (8013104 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80130e6:	65eb      	str	r3, [r5, #92]	; 0x5c
 80130e8:	bd38      	pop	{r3, r4, r5, pc}
 80130ea:	bf00      	nop
 80130ec:	20012168 	.word	0x20012168
 80130f0:	20000000 	.word	0x20000000
 80130f4:	080111bd 	.word	0x080111bd
 80130f8:	20000098 	.word	0x20000098
 80130fc:	2001216c 	.word	0x2001216c
 8013100:	080111bb 	.word	0x080111bb
 8013104:	2000009c 	.word	0x2000009c

08013108 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8013108:	b510      	push	{r4, lr}
 801310a:	4604      	mov	r4, r0
 801310c:	f7ff ff88 	bl	8013020 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8013110:	4620      	mov	r0, r4
 8013112:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013116:	f7ff bfbd 	b.w	8013094 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801311c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801311c:	b538      	push	{r3, r4, r5, lr}
 801311e:	4c15      	ldr	r4, [pc, #84]	; (8013174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8013120:	7823      	ldrb	r3, [r4, #0]
 8013122:	f3bf 8f5b 	dmb	ish
 8013126:	07da      	lsls	r2, r3, #31
 8013128:	4605      	mov	r5, r0
 801312a:	d40b      	bmi.n	8013144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801312c:	4620      	mov	r0, r4
 801312e:	f007 f8f7 	bl	801a320 <__cxa_guard_acquire>
 8013132:	b138      	cbz	r0, 8013144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013134:	4620      	mov	r0, r4
 8013136:	f007 f8ff 	bl	801a338 <__cxa_guard_release>
 801313a:	4a0f      	ldr	r2, [pc, #60]	; (8013178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801313c:	490f      	ldr	r1, [pc, #60]	; (801317c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801313e:	4810      	ldr	r0, [pc, #64]	; (8013180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013140:	f007 f8e4 	bl	801a30c <__aeabi_atexit>
 8013144:	4c0f      	ldr	r4, [pc, #60]	; (8013184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8013146:	7823      	ldrb	r3, [r4, #0]
 8013148:	f3bf 8f5b 	dmb	ish
 801314c:	07db      	lsls	r3, r3, #31
 801314e:	d40b      	bmi.n	8013168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013150:	4620      	mov	r0, r4
 8013152:	f007 f8e5 	bl	801a320 <__cxa_guard_acquire>
 8013156:	b138      	cbz	r0, 8013168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013158:	4620      	mov	r0, r4
 801315a:	f007 f8ed 	bl	801a338 <__cxa_guard_release>
 801315e:	4a06      	ldr	r2, [pc, #24]	; (8013178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013160:	4909      	ldr	r1, [pc, #36]	; (8013188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8013162:	480a      	ldr	r0, [pc, #40]	; (801318c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013164:	f007 f8d2 	bl	801a30c <__aeabi_atexit>
 8013168:	4b05      	ldr	r3, [pc, #20]	; (8013180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801316a:	672b      	str	r3, [r5, #112]	; 0x70
 801316c:	4b07      	ldr	r3, [pc, #28]	; (801318c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801316e:	676b      	str	r3, [r5, #116]	; 0x74
 8013170:	bd38      	pop	{r3, r4, r5, pc}
 8013172:	bf00      	nop
 8013174:	20012160 	.word	0x20012160
 8013178:	20000000 	.word	0x20000000
 801317c:	080111b1 	.word	0x080111b1
 8013180:	20000090 	.word	0x20000090
 8013184:	20012164 	.word	0x20012164
 8013188:	080111af 	.word	0x080111af
 801318c:	20000094 	.word	0x20000094

08013190 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8013190:	b538      	push	{r3, r4, r5, lr}
 8013192:	4c15      	ldr	r4, [pc, #84]	; (80131e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8013194:	7823      	ldrb	r3, [r4, #0]
 8013196:	f3bf 8f5b 	dmb	ish
 801319a:	07da      	lsls	r2, r3, #31
 801319c:	4605      	mov	r5, r0
 801319e:	d40b      	bmi.n	80131b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80131a0:	4620      	mov	r0, r4
 80131a2:	f007 f8bd 	bl	801a320 <__cxa_guard_acquire>
 80131a6:	b138      	cbz	r0, 80131b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80131a8:	4620      	mov	r0, r4
 80131aa:	f007 f8c5 	bl	801a338 <__cxa_guard_release>
 80131ae:	4a0f      	ldr	r2, [pc, #60]	; (80131ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80131b0:	490f      	ldr	r1, [pc, #60]	; (80131f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80131b2:	4810      	ldr	r0, [pc, #64]	; (80131f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80131b4:	f007 f8aa 	bl	801a30c <__aeabi_atexit>
 80131b8:	4c0f      	ldr	r4, [pc, #60]	; (80131f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80131ba:	7823      	ldrb	r3, [r4, #0]
 80131bc:	f3bf 8f5b 	dmb	ish
 80131c0:	07db      	lsls	r3, r3, #31
 80131c2:	d40b      	bmi.n	80131dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80131c4:	4620      	mov	r0, r4
 80131c6:	f007 f8ab 	bl	801a320 <__cxa_guard_acquire>
 80131ca:	b138      	cbz	r0, 80131dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80131cc:	4620      	mov	r0, r4
 80131ce:	f007 f8b3 	bl	801a338 <__cxa_guard_release>
 80131d2:	4a06      	ldr	r2, [pc, #24]	; (80131ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80131d4:	4909      	ldr	r1, [pc, #36]	; (80131fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80131d6:	480a      	ldr	r0, [pc, #40]	; (8013200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80131d8:	f007 f898 	bl	801a30c <__aeabi_atexit>
 80131dc:	4b05      	ldr	r3, [pc, #20]	; (80131f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80131de:	66ab      	str	r3, [r5, #104]	; 0x68
 80131e0:	4b07      	ldr	r3, [pc, #28]	; (8013200 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80131e2:	66eb      	str	r3, [r5, #108]	; 0x6c
 80131e4:	bd38      	pop	{r3, r4, r5, pc}
 80131e6:	bf00      	nop
 80131e8:	20012158 	.word	0x20012158
 80131ec:	20000000 	.word	0x20000000
 80131f0:	080111b5 	.word	0x080111b5
 80131f4:	20000088 	.word	0x20000088
 80131f8:	2001215c 	.word	0x2001215c
 80131fc:	080111b3 	.word	0x080111b3
 8013200:	2000008c 	.word	0x2000008c

08013204 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8013204:	b510      	push	{r4, lr}
 8013206:	4604      	mov	r4, r0
 8013208:	f7ff ff88 	bl	801311c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801320c:	4620      	mov	r0, r4
 801320e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013212:	f7ff bfbd 	b.w	8013190 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08013216 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8013216:	b510      	push	{r4, lr}
 8013218:	4604      	mov	r4, r0
 801321a:	f7ff fff3 	bl	8013204 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801321e:	4620      	mov	r0, r4
 8013220:	f7ff ff72 	bl	8013108 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8013224:	4620      	mov	r0, r4
 8013226:	f7ff fdf9 	bl	8012e1c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801322a:	4620      	mov	r0, r4
 801322c:	f7ff fcfa 	bl	8012c24 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8013230:	4620      	mov	r0, r4
 8013232:	f7ff fd75 	bl	8012d20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8013236:	4620      	mov	r0, r4
 8013238:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801323c:	f7ff bee0 	b.w	8013000 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08013240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8013240:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013244:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8013248:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801324c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8013250:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013254:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8013258:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801325c:	8808      	ldrh	r0, [r1, #0]
 801325e:	fb0e 4708 	mla	r7, lr, r8, r4
 8013262:	f1be 0f00 	cmp.w	lr, #0
 8013266:	eb02 0a07 	add.w	sl, r2, r7
 801326a:	db37      	blt.n	80132dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801326c:	45f3      	cmp	fp, lr
 801326e:	dd35      	ble.n	80132dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013270:	2c00      	cmp	r4, #0
 8013272:	db31      	blt.n	80132d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013274:	45a0      	cmp	r8, r4
 8013276:	dd2f      	ble.n	80132d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013278:	5dd2      	ldrb	r2, [r2, r7]
 801327a:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801327e:	1c62      	adds	r2, r4, #1
 8013280:	d42f      	bmi.n	80132e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013282:	4590      	cmp	r8, r2
 8013284:	dd2d      	ble.n	80132e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013286:	b366      	cbz	r6, 80132e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013288:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801328c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013290:	f11e 0e01 	adds.w	lr, lr, #1
 8013294:	d429      	bmi.n	80132ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013296:	45f3      	cmp	fp, lr
 8013298:	dd27      	ble.n	80132ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801329a:	f1bc 0f00 	cmp.w	ip, #0
 801329e:	f000 80a0 	beq.w	80133e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80132a2:	2c00      	cmp	r4, #0
 80132a4:	db1f      	blt.n	80132e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80132a6:	45a0      	cmp	r8, r4
 80132a8:	dd1d      	ble.n	80132e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80132aa:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80132ae:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80132b2:	3401      	adds	r4, #1
 80132b4:	d41c      	bmi.n	80132f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80132b6:	45a0      	cmp	r8, r4
 80132b8:	dd1a      	ble.n	80132f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80132ba:	b1de      	cbz	r6, 80132f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80132bc:	44d0      	add	r8, sl
 80132be:	f898 2001 	ldrb.w	r2, [r8, #1]
 80132c2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80132c6:	2e0f      	cmp	r6, #15
 80132c8:	d915      	bls.n	80132f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80132ca:	4b49      	ldr	r3, [pc, #292]	; (80133f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80132cc:	4a49      	ldr	r2, [pc, #292]	; (80133f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80132ce:	484a      	ldr	r0, [pc, #296]	; (80133f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80132d0:	f240 11ef 	movw	r1, #495	; 0x1ef
 80132d4:	f007 f84e 	bl	801a374 <__assert_func>
 80132d8:	4681      	mov	r9, r0
 80132da:	e7d0      	b.n	801327e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80132dc:	4607      	mov	r7, r0
 80132de:	4681      	mov	r9, r0
 80132e0:	e7d6      	b.n	8013290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80132e2:	4607      	mov	r7, r0
 80132e4:	e7d4      	b.n	8013290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80132e6:	4686      	mov	lr, r0
 80132e8:	e7e3      	b.n	80132b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80132ea:	4603      	mov	r3, r0
 80132ec:	4686      	mov	lr, r0
 80132ee:	e7ea      	b.n	80132c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80132f0:	4603      	mov	r3, r0
 80132f2:	e7e8      	b.n	80132c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80132f4:	4603      	mov	r3, r0
 80132f6:	f1bc 0f0f 	cmp.w	ip, #15
 80132fa:	d8e6      	bhi.n	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80132fc:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8013300:	fb16 f80c 	smulbb	r8, r6, ip
 8013304:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013308:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801330c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013310:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8013314:	ea44 0909 	orr.w	r9, r4, r9
 8013318:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801331c:	f1cc 0410 	rsb	r4, ip, #16
 8013320:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013324:	1ba4      	subs	r4, r4, r6
 8013326:	041a      	lsls	r2, r3, #16
 8013328:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801332c:	ea4a 0707 	orr.w	r7, sl, r7
 8013330:	4377      	muls	r7, r6
 8013332:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013336:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801333a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801333e:	fb04 7409 	mla	r4, r4, r9, r7
 8013342:	4313      	orrs	r3, r2
 8013344:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8013348:	fb08 4303 	mla	r3, r8, r3, r4
 801334c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013350:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8013354:	4322      	orrs	r2, r4
 8013356:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801335a:	fb0c 3202 	mla	r2, ip, r2, r3
 801335e:	0d53      	lsrs	r3, r2, #21
 8013360:	0952      	lsrs	r2, r2, #5
 8013362:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013366:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801336a:	431a      	orrs	r2, r3
 801336c:	b293      	uxth	r3, r2
 801336e:	b2af      	uxth	r7, r5
 8013370:	1202      	asrs	r2, r0, #8
 8013372:	43ed      	mvns	r5, r5
 8013374:	b2ed      	uxtb	r5, r5
 8013376:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801337a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801337e:	fb12 f205 	smulbb	r2, r2, r5
 8013382:	10c6      	asrs	r6, r0, #3
 8013384:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013388:	fb0c 2c07 	mla	ip, ip, r7, r2
 801338c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013390:	10da      	asrs	r2, r3, #3
 8013392:	fb16 f605 	smulbb	r6, r6, r5
 8013396:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801339a:	fb02 6207 	mla	r2, r2, r7, r6
 801339e:	b296      	uxth	r6, r2
 80133a0:	00c2      	lsls	r2, r0, #3
 80133a2:	00dc      	lsls	r4, r3, #3
 80133a4:	b2d2      	uxtb	r2, r2
 80133a6:	b2e4      	uxtb	r4, r4
 80133a8:	fb12 f205 	smulbb	r2, r2, r5
 80133ac:	fb04 2207 	mla	r2, r4, r7, r2
 80133b0:	fa1f fc8c 	uxth.w	ip, ip
 80133b4:	b292      	uxth	r2, r2
 80133b6:	f10c 0301 	add.w	r3, ip, #1
 80133ba:	1c50      	adds	r0, r2, #1
 80133bc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80133c0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80133c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80133c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80133cc:	4313      	orrs	r3, r2
 80133ce:	1c72      	adds	r2, r6, #1
 80133d0:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80133d4:	0952      	lsrs	r2, r2, #5
 80133d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80133da:	4313      	orrs	r3, r2
 80133dc:	800b      	strh	r3, [r1, #0]
 80133de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133e2:	2e0f      	cmp	r6, #15
 80133e4:	f63f af71 	bhi.w	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80133e8:	4603      	mov	r3, r0
 80133ea:	4686      	mov	lr, r0
 80133ec:	e786      	b.n	80132fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80133ee:	bf00      	nop
 80133f0:	0801dee5 	.word	0x0801dee5
 80133f4:	0801e4e6 	.word	0x0801e4e6
 80133f8:	0801df6d 	.word	0x0801df6d

080133fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80133fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013400:	ed2d 8b08 	vpush	{d8-d11}
 8013404:	b09b      	sub	sp, #108	; 0x6c
 8013406:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 801340a:	9309      	str	r3, [sp, #36]	; 0x24
 801340c:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013410:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8013412:	930a      	str	r3, [sp, #40]	; 0x28
 8013414:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013418:	930e      	str	r3, [sp, #56]	; 0x38
 801341a:	910d      	str	r1, [sp, #52]	; 0x34
 801341c:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013420:	9018      	str	r0, [sp, #96]	; 0x60
 8013422:	6870      	ldr	r0, [r6, #4]
 8013424:	9217      	str	r2, [sp, #92]	; 0x5c
 8013426:	fb00 1303 	mla	r3, r0, r3, r1
 801342a:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801342c:	6831      	ldr	r1, [r6, #0]
 801342e:	6856      	ldr	r6, [r2, #4]
 8013430:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013434:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013438:	6813      	ldr	r3, [r2, #0]
 801343a:	930c      	str	r3, [sp, #48]	; 0x30
 801343c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801343e:	43db      	mvns	r3, r3
 8013440:	b2db      	uxtb	r3, r3
 8013442:	eeb0 aa40 	vmov.f32	s20, s0
 8013446:	eef0 9a60 	vmov.f32	s19, s1
 801344a:	eeb0 9a41 	vmov.f32	s18, s2
 801344e:	eeb0 8a62 	vmov.f32	s16, s5
 8013452:	eef0 8a43 	vmov.f32	s17, s6
 8013456:	eef0 ba44 	vmov.f32	s23, s8
 801345a:	eeb0 ba64 	vmov.f32	s22, s9
 801345e:	eef0 aa45 	vmov.f32	s21, s10
 8013462:	3604      	adds	r6, #4
 8013464:	930b      	str	r3, [sp, #44]	; 0x2c
 8013466:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013468:	2b00      	cmp	r3, #0
 801346a:	dc03      	bgt.n	8013474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801346c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801346e:	2b00      	cmp	r3, #0
 8013470:	f340 8215 	ble.w	801389e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013474:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013476:	2b00      	cmp	r3, #0
 8013478:	f340 8102 	ble.w	8013680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801347c:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013480:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013484:	d42c      	bmi.n	80134e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013486:	1c51      	adds	r1, r2, #1
 8013488:	428c      	cmp	r4, r1
 801348a:	dd2c      	ble.n	80134e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801348c:	2b00      	cmp	r3, #0
 801348e:	db2a      	blt.n	80134e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013490:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013492:	1c59      	adds	r1, r3, #1
 8013494:	4288      	cmp	r0, r1
 8013496:	dd26      	ble.n	80134e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013498:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801349a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801349c:	3b01      	subs	r3, #1
 801349e:	fb02 9203 	mla	r2, r2, r3, r9
 80134a2:	1412      	asrs	r2, r2, #16
 80134a4:	d429      	bmi.n	80134fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80134a6:	3201      	adds	r2, #1
 80134a8:	4294      	cmp	r4, r2
 80134aa:	dd26      	ble.n	80134fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80134ac:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80134ae:	fb02 8303 	mla	r3, r2, r3, r8
 80134b2:	141b      	asrs	r3, r3, #16
 80134b4:	d421      	bmi.n	80134fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80134b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80134b8:	3301      	adds	r3, #1
 80134ba:	429a      	cmp	r2, r3
 80134bc:	dd1d      	ble.n	80134fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80134be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80134c2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80134c6:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80134ca:	9312      	str	r3, [sp, #72]	; 0x48
 80134cc:	f1be 0f00 	cmp.w	lr, #0
 80134d0:	f300 8138 	bgt.w	8013744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 80134d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134d6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80134da:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80134de:	e0d1      	b.n	8013684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 80134e0:	1c51      	adds	r1, r2, #1
 80134e2:	f040 80c3 	bne.w	801366c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80134e6:	42a2      	cmp	r2, r4
 80134e8:	f280 80c0 	bge.w	801366c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80134ec:	1c5f      	adds	r7, r3, #1
 80134ee:	f2c0 80bd 	blt.w	801366c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80134f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80134f4:	4293      	cmp	r3, r2
 80134f6:	f280 80b9 	bge.w	801366c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 80134fa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80134fe:	4657      	mov	r7, sl
 8013500:	f1bb 0f00 	cmp.w	fp, #0
 8013504:	dde6      	ble.n	80134d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013506:	ea5f 4229 	movs.w	r2, r9, asr #16
 801350a:	ea4f 4328 	mov.w	r3, r8, asr #16
 801350e:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013512:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8013516:	f100 80fc 	bmi.w	8013712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 801351a:	f102 0c01 	add.w	ip, r2, #1
 801351e:	4564      	cmp	r4, ip
 8013520:	f340 80f9 	ble.w	8013716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013524:	2b00      	cmp	r3, #0
 8013526:	f2c0 80f6 	blt.w	8013716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 801352a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801352c:	f103 0c01 	add.w	ip, r3, #1
 8013530:	4565      	cmp	r5, ip
 8013532:	f340 80f0 	ble.w	8013716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013536:	fb03 2304 	mla	r3, r3, r4, r2
 801353a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801353c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801353e:	441a      	add	r2, r3
 8013540:	5ceb      	ldrb	r3, [r5, r3]
 8013542:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8013546:	2800      	cmp	r0, #0
 8013548:	f000 80db 	beq.w	8013702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 801354c:	7853      	ldrb	r3, [r2, #1]
 801354e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013552:	9313      	str	r3, [sp, #76]	; 0x4c
 8013554:	b141      	cbz	r1, 8013568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013556:	1913      	adds	r3, r2, r4
 8013558:	5d12      	ldrb	r2, [r2, r4]
 801355a:	785b      	ldrb	r3, [r3, #1]
 801355c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013560:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013564:	9210      	str	r2, [sp, #64]	; 0x40
 8013566:	9314      	str	r3, [sp, #80]	; 0x50
 8013568:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801356a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801356c:	fb10 f201 	smulbb	r2, r0, r1
 8013570:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013574:	10d2      	asrs	r2, r2, #3
 8013576:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801357a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801357e:	ea4c 0c03 	orr.w	ip, ip, r3
 8013582:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013586:	930f      	str	r3, [sp, #60]	; 0x3c
 8013588:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801358a:	041b      	lsls	r3, r3, #16
 801358c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013590:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013594:	432b      	orrs	r3, r5
 8013596:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013598:	4353      	muls	r3, r2
 801359a:	fb05 330c 	mla	r3, r5, ip, r3
 801359e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80135a2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80135a6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80135aa:	ea4c 0e0e 	orr.w	lr, ip, lr
 80135ae:	f1c1 0c10 	rsb	ip, r1, #16
 80135b2:	ebac 0c00 	sub.w	ip, ip, r0
 80135b6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80135ba:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80135be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80135c2:	0418      	lsls	r0, r3, #16
 80135c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80135c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80135cc:	4318      	orrs	r0, r3
 80135ce:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80135d2:	fb02 c200 	mla	r2, r2, r0, ip
 80135d6:	0d53      	lsrs	r3, r2, #21
 80135d8:	0952      	lsrs	r2, r2, #5
 80135da:	f8b7 c000 	ldrh.w	ip, [r7]
 80135de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80135e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80135e6:	431a      	orrs	r2, r3
 80135e8:	b292      	uxth	r2, r2
 80135ea:	ea4f 212c 	mov.w	r1, ip, asr #8
 80135ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80135f2:	1210      	asrs	r0, r2, #8
 80135f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80135f8:	fb11 f105 	smulbb	r1, r1, r5
 80135fc:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8013600:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013604:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013608:	fb00 1003 	mla	r0, r0, r3, r1
 801360c:	fa5f fc8c 	uxtb.w	ip, ip
 8013610:	10d1      	asrs	r1, r2, #3
 8013612:	00d2      	lsls	r2, r2, #3
 8013614:	fb1c fc05 	smulbb	ip, ip, r5
 8013618:	b2d2      	uxtb	r2, r2
 801361a:	fb02 c203 	mla	r2, r2, r3, ip
 801361e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013622:	b280      	uxth	r0, r0
 8013624:	b292      	uxth	r2, r2
 8013626:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801362a:	fb1e fe05 	smulbb	lr, lr, r5
 801362e:	fb01 e103 	mla	r1, r1, r3, lr
 8013632:	f102 0c01 	add.w	ip, r2, #1
 8013636:	1c43      	adds	r3, r0, #1
 8013638:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801363c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013640:	b289      	uxth	r1, r1
 8013642:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013646:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801364a:	4313      	orrs	r3, r2
 801364c:	1c4a      	adds	r2, r1, #1
 801364e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013652:	0949      	lsrs	r1, r1, #5
 8013654:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013658:	430b      	orrs	r3, r1
 801365a:	803b      	strh	r3, [r7, #0]
 801365c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801365e:	4499      	add	r9, r3
 8013660:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013662:	3702      	adds	r7, #2
 8013664:	4498      	add	r8, r3
 8013666:	f10b 3bff 	add.w	fp, fp, #4294967295
 801366a:	e749      	b.n	8013500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801366c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801366e:	4499      	add	r9, r3
 8013670:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013672:	4498      	add	r8, r3
 8013674:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013676:	3b01      	subs	r3, #1
 8013678:	9309      	str	r3, [sp, #36]	; 0x24
 801367a:	f10a 0a02 	add.w	sl, sl, #2
 801367e:	e6f9      	b.n	8013474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013680:	f47f af0a 	bne.w	8013498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8013684:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013686:	2b00      	cmp	r3, #0
 8013688:	f340 8109 	ble.w	801389e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801368c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013690:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013694:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013698:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801369a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801369e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80136a2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80136a6:	eef0 6a48 	vmov.f32	s13, s16
 80136aa:	ee69 7a27 	vmul.f32	s15, s18, s15
 80136ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136b2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80136b6:	ee16 9a90 	vmov	r9, s13
 80136ba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80136be:	eef0 6a68 	vmov.f32	s13, s17
 80136c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80136c6:	ee18 2a10 	vmov	r2, s16
 80136ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80136ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80136d2:	ee18 2a90 	vmov	r2, s17
 80136d6:	932f      	str	r3, [sp, #188]	; 0xbc
 80136d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80136da:	fb92 f3f3 	sdiv	r3, r2, r3
 80136de:	9330      	str	r3, [sp, #192]	; 0xc0
 80136e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80136e2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80136e4:	3b01      	subs	r3, #1
 80136e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80136ea:	930d      	str	r3, [sp, #52]	; 0x34
 80136ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80136ee:	bf08      	it	eq
 80136f0:	4613      	moveq	r3, r2
 80136f2:	ee16 8a90 	vmov	r8, s13
 80136f6:	9309      	str	r3, [sp, #36]	; 0x24
 80136f8:	eef0 8a67 	vmov.f32	s17, s15
 80136fc:	eeb0 8a47 	vmov.f32	s16, s14
 8013700:	e6b1      	b.n	8013466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8013702:	2900      	cmp	r1, #0
 8013704:	f43f af30 	beq.w	8013568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013708:	5d13      	ldrb	r3, [r2, r4]
 801370a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801370e:	9310      	str	r3, [sp, #64]	; 0x40
 8013710:	e72a      	b.n	8013568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013712:	1c55      	adds	r5, r2, #1
 8013714:	d1a2      	bne.n	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013716:	4294      	cmp	r4, r2
 8013718:	dda0      	ble.n	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801371a:	1c5d      	adds	r5, r3, #1
 801371c:	db9e      	blt.n	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801371e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013720:	429d      	cmp	r5, r3
 8013722:	dd9b      	ble.n	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013724:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8013728:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801372a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801372c:	9202      	str	r2, [sp, #8]
 801372e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013732:	e9cd 4300 	strd	r4, r3, [sp]
 8013736:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013738:	9818      	ldr	r0, [sp, #96]	; 0x60
 801373a:	4633      	mov	r3, r6
 801373c:	4639      	mov	r1, r7
 801373e:	f7ff fd7f 	bl	8013240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013742:	e78b      	b.n	801365c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013744:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013748:	ea4f 4228 	mov.w	r2, r8, asr #16
 801374c:	fb04 3202 	mla	r2, r4, r2, r3
 8013750:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013752:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013754:	4413      	add	r3, r2
 8013756:	5c8a      	ldrb	r2, [r1, r2]
 8013758:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 801375c:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8013760:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8013764:	f1bc 0f00 	cmp.w	ip, #0
 8013768:	f000 8091 	beq.w	801388e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 801376c:	785a      	ldrb	r2, [r3, #1]
 801376e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013772:	9215      	str	r2, [sp, #84]	; 0x54
 8013774:	b140      	cbz	r0, 8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013776:	191a      	adds	r2, r3, r4
 8013778:	5d1b      	ldrb	r3, [r3, r4]
 801377a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801377e:	9311      	str	r3, [sp, #68]	; 0x44
 8013780:	7853      	ldrb	r3, [r2, #1]
 8013782:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013786:	9316      	str	r3, [sp, #88]	; 0x58
 8013788:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801378a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801378c:	fb1c f200 	smulbb	r2, ip, r0
 8013790:	041f      	lsls	r7, r3, #16
 8013792:	10d2      	asrs	r2, r2, #3
 8013794:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013798:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801379c:	431f      	orrs	r7, r3
 801379e:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80137a2:	9319      	str	r3, [sp, #100]	; 0x64
 80137a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80137a6:	041b      	lsls	r3, r3, #16
 80137a8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80137ac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80137b0:	ea43 030b 	orr.w	r3, r3, fp
 80137b4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80137b6:	4353      	muls	r3, r2
 80137b8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80137bc:	fb05 3707 	mla	r7, r5, r7, r3
 80137c0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80137c4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80137c8:	ea43 0b01 	orr.w	fp, r3, r1
 80137cc:	f1c0 0110 	rsb	r1, r0, #16
 80137d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80137d2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80137d4:	eba1 0c0c 	sub.w	ip, r1, ip
 80137d8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80137dc:	fb0c 770b 	mla	r7, ip, fp, r7
 80137e0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80137e4:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80137e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80137ec:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80137f0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80137f4:	fb02 770c 	mla	r7, r2, ip, r7
 80137f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80137fa:	0d79      	lsrs	r1, r7, #21
 80137fc:	8812      	ldrh	r2, [r2, #0]
 80137fe:	097f      	lsrs	r7, r7, #5
 8013800:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013804:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013808:	430f      	orrs	r7, r1
 801380a:	1211      	asrs	r1, r2, #8
 801380c:	b2bb      	uxth	r3, r7
 801380e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013812:	fb11 f105 	smulbb	r1, r1, r5
 8013816:	1218      	asrs	r0, r3, #8
 8013818:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801381a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801381e:	fb00 1005 	mla	r0, r0, r5, r1
 8013822:	10d7      	asrs	r7, r2, #3
 8013824:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013826:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801382a:	fb17 f705 	smulbb	r7, r7, r5
 801382e:	10d9      	asrs	r1, r3, #3
 8013830:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013832:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013836:	fb01 7105 	mla	r1, r1, r5, r7
 801383a:	00d2      	lsls	r2, r2, #3
 801383c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801383e:	b2d2      	uxtb	r2, r2
 8013840:	fb12 f205 	smulbb	r2, r2, r5
 8013844:	00db      	lsls	r3, r3, #3
 8013846:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013848:	b2db      	uxtb	r3, r3
 801384a:	b280      	uxth	r0, r0
 801384c:	fb03 2305 	mla	r3, r3, r5, r2
 8013850:	b29b      	uxth	r3, r3
 8013852:	b289      	uxth	r1, r1
 8013854:	1c42      	adds	r2, r0, #1
 8013856:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801385a:	1c4f      	adds	r7, r1, #1
 801385c:	1c5a      	adds	r2, r3, #1
 801385e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013862:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8013866:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801386a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801386e:	0949      	lsrs	r1, r1, #5
 8013870:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013872:	4310      	orrs	r0, r2
 8013874:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013878:	4308      	orrs	r0, r1
 801387a:	f823 0b02 	strh.w	r0, [r3], #2
 801387e:	930f      	str	r3, [sp, #60]	; 0x3c
 8013880:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013882:	4499      	add	r9, r3
 8013884:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013886:	f10e 3eff 	add.w	lr, lr, #4294967295
 801388a:	4498      	add	r8, r3
 801388c:	e61e      	b.n	80134cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801388e:	2800      	cmp	r0, #0
 8013890:	f43f af7a 	beq.w	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013894:	5d1b      	ldrb	r3, [r3, r4]
 8013896:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801389a:	9311      	str	r3, [sp, #68]	; 0x44
 801389c:	e774      	b.n	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801389e:	b01b      	add	sp, #108	; 0x6c
 80138a0:	ecbd 8b08 	vpop	{d8-d11}
 80138a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080138a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80138a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80138ac:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80138b0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80138b4:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80138b8:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80138bc:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80138c0:	8808      	ldrh	r0, [r1, #0]
 80138c2:	fb06 570e 	mla	r7, r6, lr, r5
 80138c6:	2e00      	cmp	r6, #0
 80138c8:	eb02 0807 	add.w	r8, r2, r7
 80138cc:	db38      	blt.n	8013940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80138ce:	45b1      	cmp	r9, r6
 80138d0:	dd36      	ble.n	8013940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80138d2:	2d00      	cmp	r5, #0
 80138d4:	db32      	blt.n	801393c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80138d6:	45ae      	cmp	lr, r5
 80138d8:	dd30      	ble.n	801393c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80138da:	5dd2      	ldrb	r2, [r2, r7]
 80138dc:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80138e0:	1c6a      	adds	r2, r5, #1
 80138e2:	d430      	bmi.n	8013946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80138e4:	4596      	cmp	lr, r2
 80138e6:	dd2e      	ble.n	8013946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80138e8:	b36c      	cbz	r4, 8013946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80138ea:	f898 2001 	ldrb.w	r2, [r8, #1]
 80138ee:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80138f2:	3601      	adds	r6, #1
 80138f4:	d42b      	bmi.n	801394e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80138f6:	45b1      	cmp	r9, r6
 80138f8:	dd29      	ble.n	801394e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80138fa:	f1bc 0f00 	cmp.w	ip, #0
 80138fe:	d028      	beq.n	8013952 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013900:	2d00      	cmp	r5, #0
 8013902:	db22      	blt.n	801394a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013904:	45ae      	cmp	lr, r5
 8013906:	dd20      	ble.n	801394a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013908:	f818 600e 	ldrb.w	r6, [r8, lr]
 801390c:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013910:	3501      	adds	r5, #1
 8013912:	d407      	bmi.n	8013924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013914:	45ae      	cmp	lr, r5
 8013916:	dd05      	ble.n	8013924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013918:	b134      	cbz	r4, 8013928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801391a:	44c6      	add	lr, r8
 801391c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013920:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013924:	2c0f      	cmp	r4, #15
 8013926:	d802      	bhi.n	801392e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013928:	f1bc 0f0f 	cmp.w	ip, #15
 801392c:	d914      	bls.n	8013958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801392e:	4b26      	ldr	r3, [pc, #152]	; (80139c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013930:	4a26      	ldr	r2, [pc, #152]	; (80139cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013932:	4827      	ldr	r0, [pc, #156]	; (80139d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013934:	f240 11ef 	movw	r1, #495	; 0x1ef
 8013938:	f006 fd1c 	bl	801a374 <__assert_func>
 801393c:	4607      	mov	r7, r0
 801393e:	e7cf      	b.n	80138e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8013940:	4602      	mov	r2, r0
 8013942:	4607      	mov	r7, r0
 8013944:	e7d5      	b.n	80138f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013946:	4602      	mov	r2, r0
 8013948:	e7d3      	b.n	80138f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801394a:	4606      	mov	r6, r0
 801394c:	e7e0      	b.n	8013910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801394e:	4606      	mov	r6, r0
 8013950:	e7e8      	b.n	8013924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013952:	2c0f      	cmp	r4, #15
 8013954:	d8eb      	bhi.n	801392e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013956:	4606      	mov	r6, r0
 8013958:	043d      	lsls	r5, r7, #16
 801395a:	fb14 f30c 	smulbb	r3, r4, ip
 801395e:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8013962:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8013966:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801396a:	10db      	asrs	r3, r3, #3
 801396c:	432f      	orrs	r7, r5
 801396e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8013972:	f1cc 0510 	rsb	r5, ip, #16
 8013976:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801397a:	1b2d      	subs	r5, r5, r4
 801397c:	ea4e 0202 	orr.w	r2, lr, r2
 8013980:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8013984:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013988:	4354      	muls	r4, r2
 801398a:	fb05 4507 	mla	r5, r5, r7, r4
 801398e:	0404      	lsls	r4, r0, #16
 8013990:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013994:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013998:	4320      	orrs	r0, r4
 801399a:	fb03 5400 	mla	r4, r3, r0, r5
 801399e:	0430      	lsls	r0, r6, #16
 80139a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80139a4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80139a8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80139ac:	4330      	orrs	r0, r6
 80139ae:	fb03 4000 	mla	r0, r3, r0, r4
 80139b2:	0d43      	lsrs	r3, r0, #21
 80139b4:	0940      	lsrs	r0, r0, #5
 80139b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80139ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80139be:	4318      	orrs	r0, r3
 80139c0:	8008      	strh	r0, [r1, #0]
 80139c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80139c6:	bf00      	nop
 80139c8:	0801dee5 	.word	0x0801dee5
 80139cc:	0801e4e6 	.word	0x0801e4e6
 80139d0:	0801df6d 	.word	0x0801df6d

080139d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80139d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139d8:	ed2d 8b0a 	vpush	{d8-d12}
 80139dc:	b095      	sub	sp, #84	; 0x54
 80139de:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 80139e2:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 80139e4:	9306      	str	r3, [sp, #24]
 80139e6:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80139ea:	9109      	str	r1, [sp, #36]	; 0x24
 80139ec:	9307      	str	r3, [sp, #28]
 80139ee:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80139f2:	9012      	str	r0, [sp, #72]	; 0x48
 80139f4:	6878      	ldr	r0, [r7, #4]
 80139f6:	9211      	str	r2, [sp, #68]	; 0x44
 80139f8:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80139fa:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 80139fe:	fb00 1303 	mla	r3, r0, r3, r1
 8013a02:	6839      	ldr	r1, [r7, #0]
 8013a04:	6857      	ldr	r7, [r2, #4]
 8013a06:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013a0a:	6813      	ldr	r3, [r2, #0]
 8013a0c:	9308      	str	r3, [sp, #32]
 8013a0e:	eeb0 aa40 	vmov.f32	s20, s0
 8013a12:	eef0 9a60 	vmov.f32	s19, s1
 8013a16:	eeb0 9a41 	vmov.f32	s18, s2
 8013a1a:	eeb0 8a62 	vmov.f32	s16, s5
 8013a1e:	eef0 8a43 	vmov.f32	s17, s6
 8013a22:	eeb0 ca44 	vmov.f32	s24, s8
 8013a26:	eef0 ba64 	vmov.f32	s23, s9
 8013a2a:	eeb0 ba45 	vmov.f32	s22, s10
 8013a2e:	3704      	adds	r7, #4
 8013a30:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013a34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a36:	2b00      	cmp	r3, #0
 8013a38:	dc03      	bgt.n	8013a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8013a3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a3c:	2b00      	cmp	r3, #0
 8013a3e:	f340 819a 	ble.w	8013d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8013a42:	9b06      	ldr	r3, [sp, #24]
 8013a44:	2b00      	cmp	r3, #0
 8013a46:	f340 80c4 	ble.w	8013bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013a4a:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013a4e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013a52:	d429      	bmi.n	8013aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013a54:	1c51      	adds	r1, r2, #1
 8013a56:	428c      	cmp	r4, r1
 8013a58:	dd29      	ble.n	8013aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013a5a:	2b00      	cmp	r3, #0
 8013a5c:	db27      	blt.n	8013aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013a5e:	9807      	ldr	r0, [sp, #28]
 8013a60:	1c59      	adds	r1, r3, #1
 8013a62:	4288      	cmp	r0, r1
 8013a64:	dd23      	ble.n	8013aae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013a66:	9b06      	ldr	r3, [sp, #24]
 8013a68:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013a6a:	3b01      	subs	r3, #1
 8013a6c:	fb02 9203 	mla	r2, r2, r3, r9
 8013a70:	1412      	asrs	r2, r2, #16
 8013a72:	d425      	bmi.n	8013ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013a74:	3201      	adds	r2, #1
 8013a76:	4294      	cmp	r4, r2
 8013a78:	dd22      	ble.n	8013ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013a7a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013a7c:	fb02 6303 	mla	r3, r2, r3, r6
 8013a80:	141b      	asrs	r3, r3, #16
 8013a82:	d41d      	bmi.n	8013ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013a84:	9a07      	ldr	r2, [sp, #28]
 8013a86:	3301      	adds	r3, #1
 8013a88:	429a      	cmp	r2, r3
 8013a8a:	dd19      	ble.n	8013ac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8013a8c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8013a90:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8013a94:	f1b8 0f00 	cmp.w	r8, #0
 8013a98:	f300 80f8 	bgt.w	8013c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8013a9c:	9b06      	ldr	r3, [sp, #24]
 8013a9e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013aa2:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013aa6:	e096      	b.n	8013bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8013aa8:	1c51      	adds	r1, r2, #1
 8013aaa:	f040 8088 	bne.w	8013bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013aae:	42a2      	cmp	r2, r4
 8013ab0:	f280 8085 	bge.w	8013bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013ab4:	1c5a      	adds	r2, r3, #1
 8013ab6:	f2c0 8082 	blt.w	8013bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013aba:	9a07      	ldr	r2, [sp, #28]
 8013abc:	4293      	cmp	r3, r2
 8013abe:	da7e      	bge.n	8013bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8013ac0:	f8dd b018 	ldr.w	fp, [sp, #24]
 8013ac4:	46d0      	mov	r8, sl
 8013ac6:	f1bb 0f00 	cmp.w	fp, #0
 8013aca:	dde7      	ble.n	8013a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8013acc:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013ad0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013ad4:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013ad8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8013adc:	f100 80c0 	bmi.w	8013c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8013ae0:	f102 0c01 	add.w	ip, r2, #1
 8013ae4:	4564      	cmp	r4, ip
 8013ae6:	f340 80bd 	ble.w	8013c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013aea:	2b00      	cmp	r3, #0
 8013aec:	f2c0 80ba 	blt.w	8013c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013af0:	9d07      	ldr	r5, [sp, #28]
 8013af2:	f103 0c01 	add.w	ip, r3, #1
 8013af6:	4565      	cmp	r5, ip
 8013af8:	f340 80b4 	ble.w	8013c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013afc:	fb03 2304 	mla	r3, r3, r4, r2
 8013b00:	9d08      	ldr	r5, [sp, #32]
 8013b02:	9a08      	ldr	r2, [sp, #32]
 8013b04:	441a      	add	r2, r3
 8013b06:	5ceb      	ldrb	r3, [r5, r3]
 8013b08:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8013b0c:	2800      	cmp	r0, #0
 8013b0e:	f000 809f 	beq.w	8013c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8013b12:	7853      	ldrb	r3, [r2, #1]
 8013b14:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013b18:	930d      	str	r3, [sp, #52]	; 0x34
 8013b1a:	b141      	cbz	r1, 8013b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013b1c:	1913      	adds	r3, r2, r4
 8013b1e:	5d12      	ldrb	r2, [r2, r4]
 8013b20:	785b      	ldrb	r3, [r3, #1]
 8013b22:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8013b26:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013b2a:	920a      	str	r2, [sp, #40]	; 0x28
 8013b2c:	930e      	str	r3, [sp, #56]	; 0x38
 8013b2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b30:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013b32:	fb10 f201 	smulbb	r2, r0, r1
 8013b36:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013b3a:	10d2      	asrs	r2, r2, #3
 8013b3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013b40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013b44:	ea4c 0c03 	orr.w	ip, ip, r3
 8013b48:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013b4c:	930c      	str	r3, [sp, #48]	; 0x30
 8013b4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b50:	041b      	lsls	r3, r3, #16
 8013b52:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013b56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013b5a:	432b      	orrs	r3, r5
 8013b5c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013b5e:	4353      	muls	r3, r2
 8013b60:	fb05 330c 	mla	r3, r5, ip, r3
 8013b64:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013b68:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013b6c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013b70:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013b74:	f1c1 0c10 	rsb	ip, r1, #16
 8013b78:	ebac 0c00 	sub.w	ip, ip, r0
 8013b7c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013b80:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013b84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b86:	0418      	lsls	r0, r3, #16
 8013b88:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013b8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013b90:	4318      	orrs	r0, r3
 8013b92:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013b96:	fb02 c200 	mla	r2, r2, r0, ip
 8013b9a:	0d53      	lsrs	r3, r2, #21
 8013b9c:	0952      	lsrs	r2, r2, #5
 8013b9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013ba2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013ba6:	431a      	orrs	r2, r3
 8013ba8:	f8a8 2000 	strh.w	r2, [r8]
 8013bac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013bae:	4499      	add	r9, r3
 8013bb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013bb2:	f108 0802 	add.w	r8, r8, #2
 8013bb6:	441e      	add	r6, r3
 8013bb8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013bbc:	e783      	b.n	8013ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8013bbe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013bc0:	4499      	add	r9, r3
 8013bc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013bc4:	441e      	add	r6, r3
 8013bc6:	9b06      	ldr	r3, [sp, #24]
 8013bc8:	3b01      	subs	r3, #1
 8013bca:	9306      	str	r3, [sp, #24]
 8013bcc:	f10a 0a02 	add.w	sl, sl, #2
 8013bd0:	e737      	b.n	8013a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8013bd2:	f47f af48 	bne.w	8013a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8013bd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bd8:	2b00      	cmp	r3, #0
 8013bda:	f340 80cc 	ble.w	8013d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8013bde:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8013be2:	ee79 9aab 	vadd.f32	s19, s19, s23
 8013be6:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013bea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013bec:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8013bf0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013bf4:	eef0 6a48 	vmov.f32	s13, s16
 8013bf8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013bfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c00:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013c04:	ee16 9a90 	vmov	r9, s13
 8013c08:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013c0c:	eef0 6a68 	vmov.f32	s13, s17
 8013c10:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013c14:	ee18 2a10 	vmov	r2, s16
 8013c18:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013c1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c20:	ee18 2a90 	vmov	r2, s17
 8013c24:	932b      	str	r3, [sp, #172]	; 0xac
 8013c26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013c28:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c2c:	932c      	str	r3, [sp, #176]	; 0xb0
 8013c2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c30:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013c32:	3b01      	subs	r3, #1
 8013c34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c38:	9309      	str	r3, [sp, #36]	; 0x24
 8013c3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013c3c:	bf08      	it	eq
 8013c3e:	4613      	moveq	r3, r2
 8013c40:	ee16 6a90 	vmov	r6, s13
 8013c44:	9306      	str	r3, [sp, #24]
 8013c46:	eef0 8a67 	vmov.f32	s17, s15
 8013c4a:	eeb0 8a47 	vmov.f32	s16, s14
 8013c4e:	e6f1      	b.n	8013a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8013c50:	2900      	cmp	r1, #0
 8013c52:	f43f af6c 	beq.w	8013b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013c56:	5d13      	ldrb	r3, [r2, r4]
 8013c58:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013c5c:	930a      	str	r3, [sp, #40]	; 0x28
 8013c5e:	e766      	b.n	8013b2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013c60:	1c55      	adds	r5, r2, #1
 8013c62:	d1a3      	bne.n	8013bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013c64:	4294      	cmp	r4, r2
 8013c66:	dda1      	ble.n	8013bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013c68:	1c5d      	adds	r5, r3, #1
 8013c6a:	db9f      	blt.n	8013bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013c6c:	9d07      	ldr	r5, [sp, #28]
 8013c6e:	429d      	cmp	r5, r3
 8013c70:	dd9c      	ble.n	8013bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013c72:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013c76:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8013c7a:	e9cd 4500 	strd	r4, r5, [sp]
 8013c7e:	463b      	mov	r3, r7
 8013c80:	9a08      	ldr	r2, [sp, #32]
 8013c82:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013c84:	4641      	mov	r1, r8
 8013c86:	f7ff fe0f 	bl	80138a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8013c8a:	e78f      	b.n	8013bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013c8c:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013c90:	1432      	asrs	r2, r6, #16
 8013c92:	fb04 3202 	mla	r2, r4, r2, r3
 8013c96:	9908      	ldr	r1, [sp, #32]
 8013c98:	9b08      	ldr	r3, [sp, #32]
 8013c9a:	4413      	add	r3, r2
 8013c9c:	5c8a      	ldrb	r2, [r1, r2]
 8013c9e:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8013ca2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8013ca6:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8013caa:	f1be 0f00 	cmp.w	lr, #0
 8013cae:	d05b      	beq.n	8013d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8013cb0:	785a      	ldrb	r2, [r3, #1]
 8013cb2:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8013cb6:	920f      	str	r2, [sp, #60]	; 0x3c
 8013cb8:	b140      	cbz	r0, 8013ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013cba:	191a      	adds	r2, r3, r4
 8013cbc:	5d1b      	ldrb	r3, [r3, r4]
 8013cbe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013cc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013cc4:	7853      	ldrb	r3, [r2, #1]
 8013cc6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013cca:	9310      	str	r3, [sp, #64]	; 0x40
 8013ccc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013cce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8013cd0:	fb1e f200 	smulbb	r2, lr, r0
 8013cd4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013cd8:	10d2      	asrs	r2, r2, #3
 8013cda:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013cde:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013ce2:	ea4c 0c03 	orr.w	ip, ip, r3
 8013ce6:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8013cea:	9313      	str	r3, [sp, #76]	; 0x4c
 8013cec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013cee:	041b      	lsls	r3, r3, #16
 8013cf0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013cf4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013cf8:	ea43 030b 	orr.w	r3, r3, fp
 8013cfc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013cfe:	4353      	muls	r3, r2
 8013d00:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013d04:	fb05 3c0c 	mla	ip, r5, ip, r3
 8013d08:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013d0c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013d10:	ea43 0b01 	orr.w	fp, r3, r1
 8013d14:	f1c0 0110 	rsb	r1, r0, #16
 8013d18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013d1a:	eba1 0e0e 	sub.w	lr, r1, lr
 8013d1e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8013d22:	fb0e cc0b 	mla	ip, lr, fp, ip
 8013d26:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8013d2a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8013d2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8013d32:	ea4b 0e0e 	orr.w	lr, fp, lr
 8013d36:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013d3a:	fb02 cc0e 	mla	ip, r2, lr, ip
 8013d3e:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8013d42:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8013d46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013d4a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8013d4e:	ea43 0c0c 	orr.w	ip, r3, ip
 8013d52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d54:	f823 cb02 	strh.w	ip, [r3], #2
 8013d58:	930c      	str	r3, [sp, #48]	; 0x30
 8013d5a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013d5c:	4499      	add	r9, r3
 8013d5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013d60:	f108 38ff 	add.w	r8, r8, #4294967295
 8013d64:	441e      	add	r6, r3
 8013d66:	e695      	b.n	8013a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8013d68:	2800      	cmp	r0, #0
 8013d6a:	d0af      	beq.n	8013ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013d6c:	5d1b      	ldrb	r3, [r3, r4]
 8013d6e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013d72:	930b      	str	r3, [sp, #44]	; 0x2c
 8013d74:	e7aa      	b.n	8013ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013d76:	b015      	add	sp, #84	; 0x54
 8013d78:	ecbd 8b0a 	vpop	{d8-d12}
 8013d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8013d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d84:	468b      	mov	fp, r1
 8013d86:	8809      	ldrh	r1, [r1, #0]
 8013d88:	b089      	sub	sp, #36	; 0x24
 8013d8a:	10cd      	asrs	r5, r1, #3
 8013d8c:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8013d90:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013d94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013d98:	00c9      	lsls	r1, r1, #3
 8013d9a:	9500      	str	r5, [sp, #0]
 8013d9c:	b2c9      	uxtb	r1, r1
 8013d9e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8013da2:	9101      	str	r1, [sp, #4]
 8013da4:	9900      	ldr	r1, [sp, #0]
 8013da6:	9202      	str	r2, [sp, #8]
 8013da8:	fb04 650e 	mla	r5, r4, lr, r6
 8013dac:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013db0:	eb02 0805 	add.w	r8, r2, r5
 8013db4:	0209      	lsls	r1, r1, #8
 8013db6:	9a01      	ldr	r2, [sp, #4]
 8013db8:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8013dbc:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8013dc0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8013dc4:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8013dc8:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8013dcc:	4311      	orrs	r1, r2
 8013dce:	2c00      	cmp	r4, #0
 8013dd0:	9107      	str	r1, [sp, #28]
 8013dd2:	db43      	blt.n	8013e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013dd4:	45a2      	cmp	sl, r4
 8013dd6:	dd41      	ble.n	8013e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013dd8:	2e00      	cmp	r6, #0
 8013dda:	db3d      	blt.n	8013e58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013ddc:	45b6      	cmp	lr, r6
 8013dde:	dd3b      	ble.n	8013e58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013de0:	9a02      	ldr	r2, [sp, #8]
 8013de2:	5d55      	ldrb	r5, [r2, r5]
 8013de4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013de8:	441d      	add	r5, r3
 8013dea:	1c72      	adds	r2, r6, #1
 8013dec:	d439      	bmi.n	8013e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013dee:	4596      	cmp	lr, r2
 8013df0:	dd37      	ble.n	8013e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013df2:	2f00      	cmp	r7, #0
 8013df4:	d035      	beq.n	8013e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013df6:	f898 1001 	ldrb.w	r1, [r8, #1]
 8013dfa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013dfe:	4419      	add	r1, r3
 8013e00:	3401      	adds	r4, #1
 8013e02:	d432      	bmi.n	8013e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013e04:	45a2      	cmp	sl, r4
 8013e06:	dd30      	ble.n	8013e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013e08:	b378      	cbz	r0, 8013e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013e0a:	2e00      	cmp	r6, #0
 8013e0c:	db2b      	blt.n	8013e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8013e0e:	45b6      	cmp	lr, r6
 8013e10:	dd29      	ble.n	8013e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8013e12:	f818 400e 	ldrb.w	r4, [r8, lr]
 8013e16:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013e1a:	441c      	add	r4, r3
 8013e1c:	3601      	adds	r6, #1
 8013e1e:	d427      	bmi.n	8013e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013e20:	45b6      	cmp	lr, r6
 8013e22:	dd25      	ble.n	8013e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013e24:	b327      	cbz	r7, 8013e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013e26:	44c6      	add	lr, r8
 8013e28:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8013e2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013e30:	4413      	add	r3, r2
 8013e32:	782a      	ldrb	r2, [r5, #0]
 8013e34:	9202      	str	r2, [sp, #8]
 8013e36:	780a      	ldrb	r2, [r1, #0]
 8013e38:	9203      	str	r2, [sp, #12]
 8013e3a:	7822      	ldrb	r2, [r4, #0]
 8013e3c:	9204      	str	r2, [sp, #16]
 8013e3e:	2f0f      	cmp	r7, #15
 8013e40:	781a      	ldrb	r2, [r3, #0]
 8013e42:	9205      	str	r2, [sp, #20]
 8013e44:	d801      	bhi.n	8013e4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8013e46:	280f      	cmp	r0, #15
 8013e48:	d914      	bls.n	8013e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8013e4a:	4b3f      	ldr	r3, [pc, #252]	; (8013f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8013e4c:	4a3f      	ldr	r2, [pc, #252]	; (8013f4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8013e4e:	4840      	ldr	r0, [pc, #256]	; (8013f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8013e50:	f240 210d 	movw	r1, #525	; 0x20d
 8013e54:	f006 fa8e 	bl	801a374 <__assert_func>
 8013e58:	ad07      	add	r5, sp, #28
 8013e5a:	e7c6      	b.n	8013dea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8013e5c:	a907      	add	r1, sp, #28
 8013e5e:	460d      	mov	r5, r1
 8013e60:	e7ce      	b.n	8013e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013e62:	a907      	add	r1, sp, #28
 8013e64:	e7cc      	b.n	8013e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013e66:	ac07      	add	r4, sp, #28
 8013e68:	e7d8      	b.n	8013e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8013e6a:	ab07      	add	r3, sp, #28
 8013e6c:	461c      	mov	r4, r3
 8013e6e:	e7e0      	b.n	8013e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013e70:	ab07      	add	r3, sp, #28
 8013e72:	e7de      	b.n	8013e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013e74:	b2ba      	uxth	r2, r7
 8013e76:	b280      	uxth	r0, r0
 8013e78:	fb02 fa00 	mul.w	sl, r2, r0
 8013e7c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8013e80:	0112      	lsls	r2, r2, #4
 8013e82:	b280      	uxth	r0, r0
 8013e84:	f891 8002 	ldrb.w	r8, [r1, #2]
 8013e88:	7849      	ldrb	r1, [r1, #1]
 8013e8a:	78ae      	ldrb	r6, [r5, #2]
 8013e8c:	786d      	ldrb	r5, [r5, #1]
 8013e8e:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8013e92:	eba2 020a 	sub.w	r2, r2, sl
 8013e96:	b292      	uxth	r2, r2
 8013e98:	ebae 0e00 	sub.w	lr, lr, r0
 8013e9c:	fa1f fe8e 	uxth.w	lr, lr
 8013ea0:	4351      	muls	r1, r2
 8013ea2:	fb02 f808 	mul.w	r8, r2, r8
 8013ea6:	fb0e 8806 	mla	r8, lr, r6, r8
 8013eaa:	fb0e 1505 	mla	r5, lr, r5, r1
 8013eae:	78a6      	ldrb	r6, [r4, #2]
 8013eb0:	7861      	ldrb	r1, [r4, #1]
 8013eb2:	fa1f f78c 	uxth.w	r7, ip
 8013eb6:	fb00 8806 	mla	r8, r0, r6, r8
 8013eba:	fb00 5501 	mla	r5, r0, r1, r5
 8013ebe:	789e      	ldrb	r6, [r3, #2]
 8013ec0:	7859      	ldrb	r1, [r3, #1]
 8013ec2:	9b00      	ldr	r3, [sp, #0]
 8013ec4:	ea6f 0c0c 	mvn.w	ip, ip
 8013ec8:	fa5f fc8c 	uxtb.w	ip, ip
 8013ecc:	fb0a 5101 	mla	r1, sl, r1, r5
 8013ed0:	fb13 f50c 	smulbb	r5, r3, ip
 8013ed4:	9b03      	ldr	r3, [sp, #12]
 8013ed6:	435a      	muls	r2, r3
 8013ed8:	9b02      	ldr	r3, [sp, #8]
 8013eda:	fb0e 2203 	mla	r2, lr, r3, r2
 8013ede:	9b04      	ldr	r3, [sp, #16]
 8013ee0:	fb00 2003 	mla	r0, r0, r3, r2
 8013ee4:	9b05      	ldr	r3, [sp, #20]
 8013ee6:	fb0a 8606 	mla	r6, sl, r6, r8
 8013eea:	fb0a 0a03 	mla	sl, sl, r3, r0
 8013eee:	9b01      	ldr	r3, [sp, #4]
 8013ef0:	fb19 f90c 	smulbb	r9, r9, ip
 8013ef4:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8013ef8:	fb13 fc0c 	smulbb	ip, r3, ip
 8013efc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013f00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013f04:	fb06 9607 	mla	r6, r6, r7, r9
 8013f08:	fb01 5107 	mla	r1, r1, r7, r5
 8013f0c:	fb0a c707 	mla	r7, sl, r7, ip
 8013f10:	b2b6      	uxth	r6, r6
 8013f12:	b289      	uxth	r1, r1
 8013f14:	b2bf      	uxth	r7, r7
 8013f16:	f106 0901 	add.w	r9, r6, #1
 8013f1a:	f107 0c01 	add.w	ip, r7, #1
 8013f1e:	1c4d      	adds	r5, r1, #1
 8013f20:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013f24:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8013f28:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8013f2c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013f30:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013f34:	0949      	lsrs	r1, r1, #5
 8013f36:	433e      	orrs	r6, r7
 8013f38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013f3c:	430e      	orrs	r6, r1
 8013f3e:	f8ab 6000 	strh.w	r6, [fp]
 8013f42:	b009      	add	sp, #36	; 0x24
 8013f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f48:	0801dee5 	.word	0x0801dee5
 8013f4c:	0801e43d 	.word	0x0801e43d
 8013f50:	0801df6d 	.word	0x0801df6d

08013f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013f54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f58:	ed2d 8b08 	vpush	{d8-d11}
 8013f5c:	b097      	sub	sp, #92	; 0x5c
 8013f5e:	eeb0 aa40 	vmov.f32	s20, s0
 8013f62:	9309      	str	r3, [sp, #36]	; 0x24
 8013f64:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013f68:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8013f6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f6c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8013f70:	9310      	str	r3, [sp, #64]	; 0x40
 8013f72:	910f      	str	r1, [sp, #60]	; 0x3c
 8013f74:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013f78:	9015      	str	r0, [sp, #84]	; 0x54
 8013f7a:	6860      	ldr	r0, [r4, #4]
 8013f7c:	9213      	str	r2, [sp, #76]	; 0x4c
 8013f7e:	fb00 1303 	mla	r3, r0, r3, r1
 8013f82:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013f84:	6821      	ldr	r1, [r4, #0]
 8013f86:	6854      	ldr	r4, [r2, #4]
 8013f88:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8013f8c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013f90:	930a      	str	r3, [sp, #40]	; 0x28
 8013f92:	6813      	ldr	r3, [r2, #0]
 8013f94:	930e      	str	r3, [sp, #56]	; 0x38
 8013f96:	1d23      	adds	r3, r4, #4
 8013f98:	9308      	str	r3, [sp, #32]
 8013f9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f9c:	43db      	mvns	r3, r3
 8013f9e:	b2db      	uxtb	r3, r3
 8013fa0:	eef0 9a60 	vmov.f32	s19, s1
 8013fa4:	eeb0 9a41 	vmov.f32	s18, s2
 8013fa8:	eeb0 8a62 	vmov.f32	s16, s5
 8013fac:	eef0 8a43 	vmov.f32	s17, s6
 8013fb0:	eef0 ba44 	vmov.f32	s23, s8
 8013fb4:	eeb0 ba64 	vmov.f32	s22, s9
 8013fb8:	eef0 aa45 	vmov.f32	s21, s10
 8013fbc:	930c      	str	r3, [sp, #48]	; 0x30
 8013fbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013fc0:	2b00      	cmp	r3, #0
 8013fc2:	dc03      	bgt.n	8013fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013fc4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013fc6:	2b00      	cmp	r3, #0
 8013fc8:	f340 825c 	ble.w	8014484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8013fcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fce:	2b00      	cmp	r3, #0
 8013fd0:	f340 8127 	ble.w	8014222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8013fd4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013fd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013fd8:	1412      	asrs	r2, r2, #16
 8013fda:	ea4f 4323 	mov.w	r3, r3, asr #16
 8013fde:	d430      	bmi.n	8014042 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8013fe0:	1c51      	adds	r1, r2, #1
 8013fe2:	428d      	cmp	r5, r1
 8013fe4:	dd30      	ble.n	8014048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013fe6:	2b00      	cmp	r3, #0
 8013fe8:	db2e      	blt.n	8014048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013fea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013fec:	1c59      	adds	r1, r3, #1
 8013fee:	4288      	cmp	r0, r1
 8013ff0:	dd2a      	ble.n	8014048 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013ff2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ff4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013ff6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013ff8:	3b01      	subs	r3, #1
 8013ffa:	fb02 1203 	mla	r2, r2, r3, r1
 8013ffe:	1412      	asrs	r2, r2, #16
 8014000:	d42c      	bmi.n	801405c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014002:	3201      	adds	r2, #1
 8014004:	4295      	cmp	r5, r2
 8014006:	dd29      	ble.n	801405c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014008:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801400a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801400c:	fb02 1303 	mla	r3, r2, r3, r1
 8014010:	141b      	asrs	r3, r3, #16
 8014012:	d423      	bmi.n	801405c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014014:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014016:	3301      	adds	r3, #1
 8014018:	429a      	cmp	r2, r3
 801401a:	dd1f      	ble.n	801405c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801401c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801401e:	9311      	str	r3, [sp, #68]	; 0x44
 8014020:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014022:	930d      	str	r3, [sp, #52]	; 0x34
 8014024:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014028:	9312      	str	r3, [sp, #72]	; 0x48
 801402a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801402c:	2b00      	cmp	r3, #0
 801402e:	f300 8161 	bgt.w	80142f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8014032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014034:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014036:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801403a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801403e:	930a      	str	r3, [sp, #40]	; 0x28
 8014040:	e0f1      	b.n	8014226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8014042:	1c51      	adds	r1, r2, #1
 8014044:	f040 80de 	bne.w	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014048:	42aa      	cmp	r2, r5
 801404a:	f280 80db 	bge.w	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801404e:	1c5f      	adds	r7, r3, #1
 8014050:	f2c0 80d8 	blt.w	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014054:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014056:	4293      	cmp	r3, r2
 8014058:	f280 80d4 	bge.w	8014204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801405c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801405e:	9311      	str	r3, [sp, #68]	; 0x44
 8014060:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014062:	930d      	str	r3, [sp, #52]	; 0x34
 8014064:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014066:	2b00      	cmp	r3, #0
 8014068:	dde3      	ble.n	8014032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801406a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801406c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801406e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014070:	141a      	asrs	r2, r3, #16
 8014072:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014074:	1400      	asrs	r0, r0, #16
 8014076:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801407a:	f3c1 3103 	ubfx	r1, r1, #12, #4
 801407e:	f100 8120 	bmi.w	80142c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 8014082:	1c46      	adds	r6, r0, #1
 8014084:	42b5      	cmp	r5, r6
 8014086:	f340 811e 	ble.w	80142c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801408a:	2a00      	cmp	r2, #0
 801408c:	f2c0 811b 	blt.w	80142c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014090:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014092:	1c56      	adds	r6, r2, #1
 8014094:	42b7      	cmp	r7, r6
 8014096:	f340 8116 	ble.w	80142c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801409a:	fb02 0005 	mla	r0, r2, r5, r0
 801409e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80140a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80140a2:	9c08      	ldr	r4, [sp, #32]
 80140a4:	4402      	add	r2, r0
 80140a6:	5c30      	ldrb	r0, [r6, r0]
 80140a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80140ac:	9014      	str	r0, [sp, #80]	; 0x50
 80140ae:	1826      	adds	r6, r4, r0
 80140b0:	2b00      	cmp	r3, #0
 80140b2:	f000 80f7 	beq.w	80142a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 80140b6:	f892 e001 	ldrb.w	lr, [r2, #1]
 80140ba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80140be:	44a6      	add	lr, r4
 80140c0:	2900      	cmp	r1, #0
 80140c2:	f000 80f8 	beq.w	80142b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80140c6:	1950      	adds	r0, r2, r5
 80140c8:	5d52      	ldrb	r2, [r2, r5]
 80140ca:	7840      	ldrb	r0, [r0, #1]
 80140cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80140d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80140d4:	4422      	add	r2, r4
 80140d6:	4420      	add	r0, r4
 80140d8:	b29b      	uxth	r3, r3
 80140da:	b289      	uxth	r1, r1
 80140dc:	fb03 fa01 	mul.w	sl, r3, r1
 80140e0:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80140e4:	011b      	lsls	r3, r3, #4
 80140e6:	b289      	uxth	r1, r1
 80140e8:	f89e c002 	ldrb.w	ip, [lr, #2]
 80140ec:	f896 b002 	ldrb.w	fp, [r6, #2]
 80140f0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80140f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80140f4:	f8b7 8000 	ldrh.w	r8, [r7]
 80140f8:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 80140fc:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8014100:	eba3 030a 	sub.w	r3, r3, sl
 8014104:	b29b      	uxth	r3, r3
 8014106:	eba9 0901 	sub.w	r9, r9, r1
 801410a:	fa1f f989 	uxth.w	r9, r9
 801410e:	fb03 fc0c 	mul.w	ip, r3, ip
 8014112:	fb09 cc0b 	mla	ip, r9, fp, ip
 8014116:	f892 b002 	ldrb.w	fp, [r2, #2]
 801411a:	fb01 cc0b 	mla	ip, r1, fp, ip
 801411e:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014122:	fb0a cc0b 	mla	ip, sl, fp, ip
 8014126:	ea4f 2b28 	mov.w	fp, r8, asr #8
 801412a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801412e:	fb1b fb04 	smulbb	fp, fp, r4
 8014132:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014136:	fb0c bc07 	mla	ip, ip, r7, fp
 801413a:	f896 b001 	ldrb.w	fp, [r6, #1]
 801413e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014142:	f89e e000 	ldrb.w	lr, [lr]
 8014146:	435e      	muls	r6, r3
 8014148:	fb09 660b 	mla	r6, r9, fp, r6
 801414c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014150:	fb01 660b 	mla	r6, r1, fp, r6
 8014154:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014158:	fb0a 660b 	mla	r6, sl, fp, r6
 801415c:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8014160:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014164:	fb1b fb04 	smulbb	fp, fp, r4
 8014168:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801416c:	fb06 b607 	mla	r6, r6, r7, fp
 8014170:	b2b4      	uxth	r4, r6
 8014172:	9412      	str	r4, [sp, #72]	; 0x48
 8014174:	9e08      	ldr	r6, [sp, #32]
 8014176:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014178:	f816 b004 	ldrb.w	fp, [r6, r4]
 801417c:	fb03 f30e 	mul.w	r3, r3, lr
 8014180:	f892 e000 	ldrb.w	lr, [r2]
 8014184:	fb09 330b 	mla	r3, r9, fp, r3
 8014188:	fb01 330e 	mla	r3, r1, lr, r3
 801418c:	f890 e000 	ldrb.w	lr, [r0]
 8014190:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014194:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8014198:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801419a:	fa5f f888 	uxtb.w	r8, r8
 801419e:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80141a2:	fb18 f803 	smulbb	r8, r8, r3
 80141a6:	fb0e 8807 	mla	r8, lr, r7, r8
 80141aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80141ac:	fa1f fc8c 	uxth.w	ip, ip
 80141b0:	fa1f f888 	uxth.w	r8, r8
 80141b4:	f103 0b01 	add.w	fp, r3, #1
 80141b8:	f10c 0201 	add.w	r2, ip, #1
 80141bc:	f108 0e01 	add.w	lr, r8, #1
 80141c0:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80141c4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80141c8:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80141cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80141d0:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80141d4:	0976      	lsrs	r6, r6, #5
 80141d6:	ea4c 0c08 	orr.w	ip, ip, r8
 80141da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80141de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141e0:	ea4c 0606 	orr.w	r6, ip, r6
 80141e4:	801e      	strh	r6, [r3, #0]
 80141e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141e8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80141ea:	3302      	adds	r3, #2
 80141ec:	930d      	str	r3, [sp, #52]	; 0x34
 80141ee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80141f0:	4413      	add	r3, r2
 80141f2:	9329      	str	r3, [sp, #164]	; 0xa4
 80141f4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80141f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80141f8:	4413      	add	r3, r2
 80141fa:	932a      	str	r3, [sp, #168]	; 0xa8
 80141fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80141fe:	3b01      	subs	r3, #1
 8014200:	9311      	str	r3, [sp, #68]	; 0x44
 8014202:	e72f      	b.n	8014064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8014204:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014206:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014208:	4413      	add	r3, r2
 801420a:	9329      	str	r3, [sp, #164]	; 0xa4
 801420c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801420e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014210:	4413      	add	r3, r2
 8014212:	932a      	str	r3, [sp, #168]	; 0xa8
 8014214:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014216:	3b01      	subs	r3, #1
 8014218:	9309      	str	r3, [sp, #36]	; 0x24
 801421a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801421c:	3302      	adds	r3, #2
 801421e:	930a      	str	r3, [sp, #40]	; 0x28
 8014220:	e6d4      	b.n	8013fcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014222:	f47f aee6 	bne.w	8013ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8014226:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014228:	2b00      	cmp	r3, #0
 801422a:	f340 812b 	ble.w	8014484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801422e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014232:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014236:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801423a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801423c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014240:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014244:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014248:	eef0 6a48 	vmov.f32	s13, s16
 801424c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014250:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014254:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014258:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801425c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014260:	eef0 6a68 	vmov.f32	s13, s17
 8014264:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014268:	ee18 2a10 	vmov	r2, s16
 801426c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014270:	fb92 f3f3 	sdiv	r3, r2, r3
 8014274:	ee18 2a90 	vmov	r2, s17
 8014278:	932b      	str	r3, [sp, #172]	; 0xac
 801427a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801427c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014280:	932c      	str	r3, [sp, #176]	; 0xb0
 8014282:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014284:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014286:	3b01      	subs	r3, #1
 8014288:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801428c:	930f      	str	r3, [sp, #60]	; 0x3c
 801428e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014290:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014294:	bf08      	it	eq
 8014296:	4613      	moveq	r3, r2
 8014298:	9309      	str	r3, [sp, #36]	; 0x24
 801429a:	eef0 8a67 	vmov.f32	s17, s15
 801429e:	eeb0 8a47 	vmov.f32	s16, s14
 80142a2:	e68c      	b.n	8013fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80142a4:	b151      	cbz	r1, 80142bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80142a6:	5d52      	ldrb	r2, [r2, r5]
 80142a8:	9808      	ldr	r0, [sp, #32]
 80142aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142ae:	4402      	add	r2, r0
 80142b0:	4630      	mov	r0, r6
 80142b2:	46b6      	mov	lr, r6
 80142b4:	e710      	b.n	80140d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80142b6:	4630      	mov	r0, r6
 80142b8:	4632      	mov	r2, r6
 80142ba:	e70d      	b.n	80140d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80142bc:	4630      	mov	r0, r6
 80142be:	4632      	mov	r2, r6
 80142c0:	e7f7      	b.n	80142b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80142c2:	1c46      	adds	r6, r0, #1
 80142c4:	d18f      	bne.n	80141e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80142c6:	4285      	cmp	r5, r0
 80142c8:	dd8d      	ble.n	80141e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80142ca:	1c54      	adds	r4, r2, #1
 80142cc:	db8b      	blt.n	80141e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80142ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80142d0:	4294      	cmp	r4, r2
 80142d2:	dd88      	ble.n	80141e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80142d4:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80142d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80142da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142dc:	9002      	str	r0, [sp, #8]
 80142de:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80142e2:	e9cd 5300 	strd	r5, r3, [sp]
 80142e6:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 80142ea:	9b08      	ldr	r3, [sp, #32]
 80142ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 80142ee:	f7ff fd47 	bl	8013d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80142f2:	e778      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80142f4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80142f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80142f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142fa:	1410      	asrs	r0, r2, #16
 80142fc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014300:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014302:	1412      	asrs	r2, r2, #16
 8014304:	fb05 2000 	mla	r0, r5, r0, r2
 8014308:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801430a:	f814 a000 	ldrb.w	sl, [r4, r0]
 801430e:	4402      	add	r2, r0
 8014310:	9808      	ldr	r0, [sp, #32]
 8014312:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014316:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801431a:	eb00 060a 	add.w	r6, r0, sl
 801431e:	2b00      	cmp	r3, #0
 8014320:	f000 80a1 	beq.w	8014466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8014324:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014328:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801432c:	4484      	add	ip, r0
 801432e:	2900      	cmp	r1, #0
 8014330:	f000 80a2 	beq.w	8014478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8014334:	1950      	adds	r0, r2, r5
 8014336:	5d52      	ldrb	r2, [r2, r5]
 8014338:	7840      	ldrb	r0, [r0, #1]
 801433a:	9c08      	ldr	r4, [sp, #32]
 801433c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014340:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014344:	4422      	add	r2, r4
 8014346:	4420      	add	r0, r4
 8014348:	b29b      	uxth	r3, r3
 801434a:	b289      	uxth	r1, r1
 801434c:	fb03 f901 	mul.w	r9, r3, r1
 8014350:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014354:	011b      	lsls	r3, r3, #4
 8014356:	b289      	uxth	r1, r1
 8014358:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801435c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014360:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014362:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8014366:	eba3 0309 	sub.w	r3, r3, r9
 801436a:	b29b      	uxth	r3, r3
 801436c:	eba8 0801 	sub.w	r8, r8, r1
 8014370:	fa1f f888 	uxth.w	r8, r8
 8014374:	435f      	muls	r7, r3
 8014376:	fb08 770b 	mla	r7, r8, fp, r7
 801437a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801437e:	f8b4 e000 	ldrh.w	lr, [r4]
 8014382:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014384:	fb01 770b 	mla	r7, r1, fp, r7
 8014388:	f890 b002 	ldrb.w	fp, [r0, #2]
 801438c:	fb09 770b 	mla	r7, r9, fp, r7
 8014390:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014394:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014398:	fb1b fb04 	smulbb	fp, fp, r4
 801439c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801439e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80143a2:	fb07 b704 	mla	r7, r7, r4, fp
 80143a6:	f896 b001 	ldrb.w	fp, [r6, #1]
 80143aa:	f89c 6001 	ldrb.w	r6, [ip, #1]
 80143ae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80143b0:	f89c c000 	ldrb.w	ip, [ip]
 80143b4:	435e      	muls	r6, r3
 80143b6:	fb08 660b 	mla	r6, r8, fp, r6
 80143ba:	f892 b001 	ldrb.w	fp, [r2, #1]
 80143be:	fb01 660b 	mla	r6, r1, fp, r6
 80143c2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80143c6:	fb09 660b 	mla	r6, r9, fp, r6
 80143ca:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80143ce:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80143d2:	fb1b fb04 	smulbb	fp, fp, r4
 80143d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80143d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80143dc:	fb06 b604 	mla	r6, r6, r4, fp
 80143e0:	9c08      	ldr	r4, [sp, #32]
 80143e2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80143e6:	fb03 f30c 	mul.w	r3, r3, ip
 80143ea:	f892 c000 	ldrb.w	ip, [r2]
 80143ee:	fb08 330a 	mla	r3, r8, sl, r3
 80143f2:	fb01 330c 	mla	r3, r1, ip, r3
 80143f6:	f890 c000 	ldrb.w	ip, [r0]
 80143fa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80143fe:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014402:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014404:	fa5f fe8e 	uxtb.w	lr, lr
 8014408:	fb1e fe03 	smulbb	lr, lr, r3
 801440c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801440e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014412:	fb0c ec03 	mla	ip, ip, r3, lr
 8014416:	b2bf      	uxth	r7, r7
 8014418:	b2b6      	uxth	r6, r6
 801441a:	fa1f fc8c 	uxth.w	ip, ip
 801441e:	1c7b      	adds	r3, r7, #1
 8014420:	f10c 0201 	add.w	r2, ip, #1
 8014424:	f106 0b01 	add.w	fp, r6, #1
 8014428:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801442c:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8014430:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8014434:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014438:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801443c:	0976      	lsrs	r6, r6, #5
 801443e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014440:	4317      	orrs	r7, r2
 8014442:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014446:	4337      	orrs	r7, r6
 8014448:	f823 7b02 	strh.w	r7, [r3], #2
 801444c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801444e:	930d      	str	r3, [sp, #52]	; 0x34
 8014450:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014452:	4413      	add	r3, r2
 8014454:	9329      	str	r3, [sp, #164]	; 0xa4
 8014456:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014458:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801445a:	4413      	add	r3, r2
 801445c:	932a      	str	r3, [sp, #168]	; 0xa8
 801445e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014460:	3b01      	subs	r3, #1
 8014462:	9311      	str	r3, [sp, #68]	; 0x44
 8014464:	e5e1      	b.n	801402a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8014466:	b151      	cbz	r1, 801447e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8014468:	5d52      	ldrb	r2, [r2, r5]
 801446a:	9808      	ldr	r0, [sp, #32]
 801446c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014470:	4402      	add	r2, r0
 8014472:	4630      	mov	r0, r6
 8014474:	46b4      	mov	ip, r6
 8014476:	e767      	b.n	8014348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014478:	4630      	mov	r0, r6
 801447a:	4632      	mov	r2, r6
 801447c:	e764      	b.n	8014348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 801447e:	4630      	mov	r0, r6
 8014480:	4632      	mov	r2, r6
 8014482:	e7f7      	b.n	8014474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8014484:	b017      	add	sp, #92	; 0x5c
 8014486:	ecbd 8b08 	vpop	{d8-d11}
 801448a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014494:	880e      	ldrh	r6, [r1, #0]
 8014496:	b085      	sub	sp, #20
 8014498:	0230      	lsls	r0, r6, #8
 801449a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801449e:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80144a2:	0170      	lsls	r0, r6, #5
 80144a4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80144a8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80144ac:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80144b0:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80144b4:	00f6      	lsls	r6, r6, #3
 80144b6:	ea4b 0000 	orr.w	r0, fp, r0
 80144ba:	b2f6      	uxtb	r6, r6
 80144bc:	4691      	mov	r9, r2
 80144be:	fb05 7a0c 	mla	sl, r5, ip, r7
 80144c2:	4306      	orrs	r6, r0
 80144c4:	2d00      	cmp	r5, #0
 80144c6:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80144ca:	9603      	str	r6, [sp, #12]
 80144cc:	eb09 0e0a 	add.w	lr, r9, sl
 80144d0:	db42      	blt.n	8014558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80144d2:	45a8      	cmp	r8, r5
 80144d4:	dd40      	ble.n	8014558 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80144d6:	2f00      	cmp	r7, #0
 80144d8:	db3c      	blt.n	8014554 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80144da:	45bc      	cmp	ip, r7
 80144dc:	dd3a      	ble.n	8014554 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 80144de:	f819 600a 	ldrb.w	r6, [r9, sl]
 80144e2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80144e6:	441e      	add	r6, r3
 80144e8:	1c78      	adds	r0, r7, #1
 80144ea:	d438      	bmi.n	801455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80144ec:	4584      	cmp	ip, r0
 80144ee:	dd36      	ble.n	801455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80144f0:	b3aa      	cbz	r2, 801455e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 80144f2:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80144f6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80144fa:	4418      	add	r0, r3
 80144fc:	3501      	adds	r5, #1
 80144fe:	d432      	bmi.n	8014566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014500:	45a8      	cmp	r8, r5
 8014502:	dd30      	ble.n	8014566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014504:	b37c      	cbz	r4, 8014566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014506:	2f00      	cmp	r7, #0
 8014508:	db2b      	blt.n	8014562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801450a:	45bc      	cmp	ip, r7
 801450c:	dd29      	ble.n	8014562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801450e:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014512:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014516:	441d      	add	r5, r3
 8014518:	3701      	adds	r7, #1
 801451a:	d427      	bmi.n	801456c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801451c:	45bc      	cmp	ip, r7
 801451e:	dd25      	ble.n	801456c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014520:	b322      	cbz	r2, 801456c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014522:	44f4      	add	ip, lr
 8014524:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8014528:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801452c:	443b      	add	r3, r7
 801452e:	781f      	ldrb	r7, [r3, #0]
 8014530:	f896 a000 	ldrb.w	sl, [r6]
 8014534:	f890 b000 	ldrb.w	fp, [r0]
 8014538:	f895 9000 	ldrb.w	r9, [r5]
 801453c:	9700      	str	r7, [sp, #0]
 801453e:	2a0f      	cmp	r2, #15
 8014540:	d801      	bhi.n	8014546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8014542:	2c0f      	cmp	r4, #15
 8014544:	d914      	bls.n	8014570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8014546:	4b2c      	ldr	r3, [pc, #176]	; (80145f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8014548:	4a2c      	ldr	r2, [pc, #176]	; (80145fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801454a:	482d      	ldr	r0, [pc, #180]	; (8014600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 801454c:	f240 210d 	movw	r1, #525	; 0x20d
 8014550:	f005 ff10 	bl	801a374 <__assert_func>
 8014554:	ae03      	add	r6, sp, #12
 8014556:	e7c7      	b.n	80144e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8014558:	a803      	add	r0, sp, #12
 801455a:	4606      	mov	r6, r0
 801455c:	e7ce      	b.n	80144fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801455e:	a803      	add	r0, sp, #12
 8014560:	e7cc      	b.n	80144fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014562:	ad03      	add	r5, sp, #12
 8014564:	e7d8      	b.n	8014518 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8014566:	ab03      	add	r3, sp, #12
 8014568:	461d      	mov	r5, r3
 801456a:	e7e0      	b.n	801452e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 801456c:	ab03      	add	r3, sp, #12
 801456e:	e7de      	b.n	801452e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014570:	b292      	uxth	r2, r2
 8014572:	b2a4      	uxth	r4, r4
 8014574:	fb02 f804 	mul.w	r8, r2, r4
 8014578:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 801457c:	0112      	lsls	r2, r2, #4
 801457e:	b2a4      	uxth	r4, r4
 8014580:	f890 e002 	ldrb.w	lr, [r0, #2]
 8014584:	78b7      	ldrb	r7, [r6, #2]
 8014586:	7840      	ldrb	r0, [r0, #1]
 8014588:	7876      	ldrb	r6, [r6, #1]
 801458a:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801458e:	eba2 0208 	sub.w	r2, r2, r8
 8014592:	b292      	uxth	r2, r2
 8014594:	ebac 0c04 	sub.w	ip, ip, r4
 8014598:	fa1f fc8c 	uxth.w	ip, ip
 801459c:	fb02 fe0e 	mul.w	lr, r2, lr
 80145a0:	fb0c ee07 	mla	lr, ip, r7, lr
 80145a4:	78af      	ldrb	r7, [r5, #2]
 80145a6:	fb04 ee07 	mla	lr, r4, r7, lr
 80145aa:	789f      	ldrb	r7, [r3, #2]
 80145ac:	785b      	ldrb	r3, [r3, #1]
 80145ae:	fb08 e707 	mla	r7, r8, r7, lr
 80145b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80145b6:	fb02 fe0b 	mul.w	lr, r2, fp
 80145ba:	4342      	muls	r2, r0
 80145bc:	7868      	ldrb	r0, [r5, #1]
 80145be:	9701      	str	r7, [sp, #4]
 80145c0:	fb0c ee0a 	mla	lr, ip, sl, lr
 80145c4:	9f00      	ldr	r7, [sp, #0]
 80145c6:	fb0c 2206 	mla	r2, ip, r6, r2
 80145ca:	fb04 ee09 	mla	lr, r4, r9, lr
 80145ce:	fb04 2400 	mla	r4, r4, r0, r2
 80145d2:	fb08 ee07 	mla	lr, r8, r7, lr
 80145d6:	9f01      	ldr	r7, [sp, #4]
 80145d8:	fb08 4803 	mla	r8, r8, r3, r4
 80145dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80145e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80145e4:	ea47 070e 	orr.w	r7, r7, lr
 80145e8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80145ec:	ea47 0708 	orr.w	r7, r7, r8
 80145f0:	800f      	strh	r7, [r1, #0]
 80145f2:	b005      	add	sp, #20
 80145f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145f8:	0801dee5 	.word	0x0801dee5
 80145fc:	0801e43d 	.word	0x0801e43d
 8014600:	0801df6d 	.word	0x0801df6d

08014604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014608:	ed2d 8b0a 	vpush	{d8-d12}
 801460c:	b091      	sub	sp, #68	; 0x44
 801460e:	eeb0 aa40 	vmov.f32	s20, s0
 8014612:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8014614:	9307      	str	r3, [sp, #28]
 8014616:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 801461a:	910c      	str	r1, [sp, #48]	; 0x30
 801461c:	9309      	str	r3, [sp, #36]	; 0x24
 801461e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8014622:	900f      	str	r0, [sp, #60]	; 0x3c
 8014624:	6860      	ldr	r0, [r4, #4]
 8014626:	920e      	str	r2, [sp, #56]	; 0x38
 8014628:	fb00 1303 	mla	r3, r0, r3, r1
 801462c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801462e:	6821      	ldr	r1, [r4, #0]
 8014630:	6854      	ldr	r4, [r2, #4]
 8014632:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8014636:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 801463a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801463e:	9308      	str	r3, [sp, #32]
 8014640:	6813      	ldr	r3, [r2, #0]
 8014642:	930a      	str	r3, [sp, #40]	; 0x28
 8014644:	eef0 9a60 	vmov.f32	s19, s1
 8014648:	eeb0 9a41 	vmov.f32	s18, s2
 801464c:	eeb0 8a62 	vmov.f32	s16, s5
 8014650:	eef0 8a43 	vmov.f32	s17, s6
 8014654:	eeb0 ca44 	vmov.f32	s24, s8
 8014658:	eef0 ba64 	vmov.f32	s23, s9
 801465c:	eeb0 ba45 	vmov.f32	s22, s10
 8014660:	3404      	adds	r4, #4
 8014662:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014666:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014668:	2b00      	cmp	r3, #0
 801466a:	dc03      	bgt.n	8014674 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801466c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801466e:	2b00      	cmp	r3, #0
 8014670:	f340 81cb 	ble.w	8014a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014674:	9b07      	ldr	r3, [sp, #28]
 8014676:	2b00      	cmp	r3, #0
 8014678:	f340 80dd 	ble.w	8014836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 801467c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801467e:	1412      	asrs	r2, r2, #16
 8014680:	ea4f 432b 	mov.w	r3, fp, asr #16
 8014684:	d42c      	bmi.n	80146e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014686:	1c51      	adds	r1, r2, #1
 8014688:	428d      	cmp	r5, r1
 801468a:	dd2c      	ble.n	80146e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801468c:	2b00      	cmp	r3, #0
 801468e:	db2a      	blt.n	80146e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014690:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014692:	1c59      	adds	r1, r3, #1
 8014694:	4288      	cmp	r0, r1
 8014696:	dd26      	ble.n	80146e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014698:	9b07      	ldr	r3, [sp, #28]
 801469a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801469c:	9925      	ldr	r1, [sp, #148]	; 0x94
 801469e:	3b01      	subs	r3, #1
 80146a0:	fb02 1203 	mla	r2, r2, r3, r1
 80146a4:	1412      	asrs	r2, r2, #16
 80146a6:	d428      	bmi.n	80146fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80146a8:	3201      	adds	r2, #1
 80146aa:	4295      	cmp	r5, r2
 80146ac:	dd25      	ble.n	80146fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80146ae:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80146b0:	fb02 b303 	mla	r3, r2, r3, fp
 80146b4:	141b      	asrs	r3, r3, #16
 80146b6:	d420      	bmi.n	80146fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80146b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80146ba:	3301      	adds	r3, #1
 80146bc:	429a      	cmp	r2, r3
 80146be:	dd1c      	ble.n	80146fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 80146c0:	9b07      	ldr	r3, [sp, #28]
 80146c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80146c4:	9b08      	ldr	r3, [sp, #32]
 80146c6:	930d      	str	r3, [sp, #52]	; 0x34
 80146c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80146ca:	2b00      	cmp	r3, #0
 80146cc:	f300 8116 	bgt.w	80148fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80146d0:	9b07      	ldr	r3, [sp, #28]
 80146d2:	9a08      	ldr	r2, [sp, #32]
 80146d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80146dc:	9308      	str	r3, [sp, #32]
 80146de:	e0ac      	b.n	801483a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 80146e0:	1c51      	adds	r1, r2, #1
 80146e2:	f040 809b 	bne.w	801481c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80146e6:	42aa      	cmp	r2, r5
 80146e8:	f280 8098 	bge.w	801481c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80146ec:	1c5a      	adds	r2, r3, #1
 80146ee:	f2c0 8095 	blt.w	801481c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80146f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80146f4:	4293      	cmp	r3, r2
 80146f6:	f280 8091 	bge.w	801481c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 80146fa:	9b07      	ldr	r3, [sp, #28]
 80146fc:	930d      	str	r3, [sp, #52]	; 0x34
 80146fe:	9b08      	ldr	r3, [sp, #32]
 8014700:	930b      	str	r3, [sp, #44]	; 0x2c
 8014702:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014704:	2b00      	cmp	r3, #0
 8014706:	dde3      	ble.n	80146d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014708:	9825      	ldr	r0, [sp, #148]	; 0x94
 801470a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801470c:	1400      	asrs	r0, r0, #16
 801470e:	ea4f 422b 	mov.w	r2, fp, asr #16
 8014712:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014716:	f3cb 3103 	ubfx	r1, fp, #12, #4
 801471a:	f100 80d9 	bmi.w	80148d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 801471e:	1c46      	adds	r6, r0, #1
 8014720:	42b5      	cmp	r5, r6
 8014722:	f340 80d7 	ble.w	80148d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014726:	2a00      	cmp	r2, #0
 8014728:	f2c0 80d4 	blt.w	80148d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 801472c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801472e:	1c56      	adds	r6, r2, #1
 8014730:	42b7      	cmp	r7, r6
 8014732:	f340 80cf 	ble.w	80148d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014736:	fb02 0005 	mla	r0, r2, r5, r0
 801473a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801473c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801473e:	4402      	add	r2, r0
 8014740:	5c30      	ldrb	r0, [r6, r0]
 8014742:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014746:	eb04 0c08 	add.w	ip, r4, r8
 801474a:	2b00      	cmp	r3, #0
 801474c:	f000 80b2 	beq.w	80148b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014750:	7856      	ldrb	r6, [r2, #1]
 8014752:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014756:	4426      	add	r6, r4
 8014758:	2900      	cmp	r1, #0
 801475a:	f000 80b3 	beq.w	80148c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801475e:	1950      	adds	r0, r2, r5
 8014760:	5d52      	ldrb	r2, [r2, r5]
 8014762:	7840      	ldrb	r0, [r0, #1]
 8014764:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014768:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801476c:	4422      	add	r2, r4
 801476e:	4420      	add	r0, r4
 8014770:	b29b      	uxth	r3, r3
 8014772:	b289      	uxth	r1, r1
 8014774:	fb03 f901 	mul.w	r9, r3, r1
 8014778:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801477c:	011b      	lsls	r3, r3, #4
 801477e:	b289      	uxth	r1, r1
 8014780:	78b7      	ldrb	r7, [r6, #2]
 8014782:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014786:	f89c c001 	ldrb.w	ip, [ip, #1]
 801478a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801478e:	eba3 0309 	sub.w	r3, r3, r9
 8014792:	b29b      	uxth	r3, r3
 8014794:	ebae 0e01 	sub.w	lr, lr, r1
 8014798:	fa1f fe8e 	uxth.w	lr, lr
 801479c:	435f      	muls	r7, r3
 801479e:	fb0e 770a 	mla	r7, lr, sl, r7
 80147a2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80147a6:	fb01 770a 	mla	r7, r1, sl, r7
 80147aa:	f890 a002 	ldrb.w	sl, [r0, #2]
 80147ae:	fb09 7a0a 	mla	sl, r9, sl, r7
 80147b2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80147b6:	f896 8000 	ldrb.w	r8, [r6]
 80147ba:	7876      	ldrb	r6, [r6, #1]
 80147bc:	fb03 f808 	mul.w	r8, r3, r8
 80147c0:	fb0e 8807 	mla	r8, lr, r7, r8
 80147c4:	7817      	ldrb	r7, [r2, #0]
 80147c6:	fb01 8807 	mla	r8, r1, r7, r8
 80147ca:	7807      	ldrb	r7, [r0, #0]
 80147cc:	fb09 8707 	mla	r7, r9, r7, r8
 80147d0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80147d4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80147d8:	ea4a 0707 	orr.w	r7, sl, r7
 80147dc:	4373      	muls	r3, r6
 80147de:	f892 a001 	ldrb.w	sl, [r2, #1]
 80147e2:	fb0e 330c 	mla	r3, lr, ip, r3
 80147e6:	fb01 310a 	mla	r1, r1, sl, r3
 80147ea:	f890 a001 	ldrb.w	sl, [r0, #1]
 80147ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80147f0:	fb09 1a0a 	mla	sl, r9, sl, r1
 80147f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80147f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80147fc:	ea47 070a 	orr.w	r7, r7, sl
 8014800:	801f      	strh	r7, [r3, #0]
 8014802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014804:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014806:	3302      	adds	r3, #2
 8014808:	930b      	str	r3, [sp, #44]	; 0x2c
 801480a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801480c:	4413      	add	r3, r2
 801480e:	9325      	str	r3, [sp, #148]	; 0x94
 8014810:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014812:	449b      	add	fp, r3
 8014814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014816:	3b01      	subs	r3, #1
 8014818:	930d      	str	r3, [sp, #52]	; 0x34
 801481a:	e772      	b.n	8014702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801481c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801481e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014820:	4413      	add	r3, r2
 8014822:	9325      	str	r3, [sp, #148]	; 0x94
 8014824:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014826:	449b      	add	fp, r3
 8014828:	9b07      	ldr	r3, [sp, #28]
 801482a:	3b01      	subs	r3, #1
 801482c:	9307      	str	r3, [sp, #28]
 801482e:	9b08      	ldr	r3, [sp, #32]
 8014830:	3302      	adds	r3, #2
 8014832:	9308      	str	r3, [sp, #32]
 8014834:	e71e      	b.n	8014674 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014836:	f47f af2f 	bne.w	8014698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801483a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801483c:	2b00      	cmp	r3, #0
 801483e:	f340 80e4 	ble.w	8014a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014842:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014846:	ee79 9aab 	vadd.f32	s19, s19, s23
 801484a:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801484e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014850:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014854:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014858:	eef0 6a48 	vmov.f32	s13, s16
 801485c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014860:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014864:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014868:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801486c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014870:	eef0 6a68 	vmov.f32	s13, s17
 8014874:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014878:	ee18 2a10 	vmov	r2, s16
 801487c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014880:	fb92 f3f3 	sdiv	r3, r2, r3
 8014884:	ee18 2a90 	vmov	r2, s17
 8014888:	9327      	str	r3, [sp, #156]	; 0x9c
 801488a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801488c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014890:	9328      	str	r3, [sp, #160]	; 0xa0
 8014892:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014894:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014896:	3b01      	subs	r3, #1
 8014898:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801489c:	930c      	str	r3, [sp, #48]	; 0x30
 801489e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80148a0:	bf08      	it	eq
 80148a2:	4613      	moveq	r3, r2
 80148a4:	ee16 ba90 	vmov	fp, s13
 80148a8:	9307      	str	r3, [sp, #28]
 80148aa:	eef0 8a67 	vmov.f32	s17, s15
 80148ae:	eeb0 8a47 	vmov.f32	s16, s14
 80148b2:	e6d8      	b.n	8014666 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80148b4:	b149      	cbz	r1, 80148ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 80148b6:	5d52      	ldrb	r2, [r2, r5]
 80148b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80148bc:	4422      	add	r2, r4
 80148be:	4660      	mov	r0, ip
 80148c0:	4666      	mov	r6, ip
 80148c2:	e755      	b.n	8014770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80148c4:	4660      	mov	r0, ip
 80148c6:	4662      	mov	r2, ip
 80148c8:	e752      	b.n	8014770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80148ca:	4660      	mov	r0, ip
 80148cc:	4662      	mov	r2, ip
 80148ce:	e7f7      	b.n	80148c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80148d0:	1c47      	adds	r7, r0, #1
 80148d2:	d196      	bne.n	8014802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148d4:	4285      	cmp	r5, r0
 80148d6:	dd94      	ble.n	8014802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148d8:	1c56      	adds	r6, r2, #1
 80148da:	db92      	blt.n	8014802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148dc:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80148de:	4296      	cmp	r6, r2
 80148e0:	dd8f      	ble.n	8014802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148e2:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80148e6:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80148ea:	e9cd 5600 	strd	r5, r6, [sp]
 80148ee:	4623      	mov	r3, r4
 80148f0:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 80148f4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80148f6:	f7ff fdcb 	bl	8014490 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80148fa:	e782      	b.n	8014802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148fc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80148fe:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014900:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014902:	1412      	asrs	r2, r2, #16
 8014904:	ea4f 402b 	mov.w	r0, fp, asr #16
 8014908:	fb05 2000 	mla	r0, r5, r0, r2
 801490c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801490e:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014912:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014916:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801491a:	f3cb 3103 	ubfx	r1, fp, #12, #4
 801491e:	4402      	add	r2, r0
 8014920:	eb04 0c08 	add.w	ip, r4, r8
 8014924:	2b00      	cmp	r3, #0
 8014926:	d062      	beq.n	80149ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8014928:	7856      	ldrb	r6, [r2, #1]
 801492a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801492e:	4426      	add	r6, r4
 8014930:	2900      	cmp	r1, #0
 8014932:	d064      	beq.n	80149fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8014934:	1950      	adds	r0, r2, r5
 8014936:	5d52      	ldrb	r2, [r2, r5]
 8014938:	7840      	ldrb	r0, [r0, #1]
 801493a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801493e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014942:	4422      	add	r2, r4
 8014944:	4420      	add	r0, r4
 8014946:	b29b      	uxth	r3, r3
 8014948:	b289      	uxth	r1, r1
 801494a:	fb03 f901 	mul.w	r9, r3, r1
 801494e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014952:	011b      	lsls	r3, r3, #4
 8014954:	b289      	uxth	r1, r1
 8014956:	78b7      	ldrb	r7, [r6, #2]
 8014958:	f89c a002 	ldrb.w	sl, [ip, #2]
 801495c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014960:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014964:	eba3 0309 	sub.w	r3, r3, r9
 8014968:	b29b      	uxth	r3, r3
 801496a:	ebae 0e01 	sub.w	lr, lr, r1
 801496e:	fa1f fe8e 	uxth.w	lr, lr
 8014972:	435f      	muls	r7, r3
 8014974:	fb0e 770a 	mla	r7, lr, sl, r7
 8014978:	f892 a002 	ldrb.w	sl, [r2, #2]
 801497c:	fb01 770a 	mla	r7, r1, sl, r7
 8014980:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014984:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014988:	f814 7008 	ldrb.w	r7, [r4, r8]
 801498c:	f896 8000 	ldrb.w	r8, [r6]
 8014990:	7876      	ldrb	r6, [r6, #1]
 8014992:	fb03 f808 	mul.w	r8, r3, r8
 8014996:	fb0e 8807 	mla	r8, lr, r7, r8
 801499a:	7817      	ldrb	r7, [r2, #0]
 801499c:	fb01 8807 	mla	r8, r1, r7, r8
 80149a0:	7807      	ldrb	r7, [r0, #0]
 80149a2:	fb09 8707 	mla	r7, r9, r7, r8
 80149a6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80149aa:	4373      	muls	r3, r6
 80149ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80149b0:	7856      	ldrb	r6, [r2, #1]
 80149b2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80149b4:	ea4a 0707 	orr.w	r7, sl, r7
 80149b8:	fb0e 330c 	mla	r3, lr, ip, r3
 80149bc:	f890 a001 	ldrb.w	sl, [r0, #1]
 80149c0:	fb01 3306 	mla	r3, r1, r6, r3
 80149c4:	fb09 3a0a 	mla	sl, r9, sl, r3
 80149c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80149cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80149d2:	ea47 070a 	orr.w	r7, r7, sl
 80149d6:	f823 7b02 	strh.w	r7, [r3], #2
 80149da:	930d      	str	r3, [sp, #52]	; 0x34
 80149dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80149de:	4413      	add	r3, r2
 80149e0:	9325      	str	r3, [sp, #148]	; 0x94
 80149e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80149e4:	449b      	add	fp, r3
 80149e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80149e8:	3b01      	subs	r3, #1
 80149ea:	930b      	str	r3, [sp, #44]	; 0x2c
 80149ec:	e66c      	b.n	80146c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80149ee:	b149      	cbz	r1, 8014a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 80149f0:	5d52      	ldrb	r2, [r2, r5]
 80149f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80149f6:	4422      	add	r2, r4
 80149f8:	4660      	mov	r0, ip
 80149fa:	4666      	mov	r6, ip
 80149fc:	e7a3      	b.n	8014946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 80149fe:	4660      	mov	r0, ip
 8014a00:	4662      	mov	r2, ip
 8014a02:	e7a0      	b.n	8014946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014a04:	4660      	mov	r0, ip
 8014a06:	4662      	mov	r2, ip
 8014a08:	e7f7      	b.n	80149fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8014a0a:	b011      	add	sp, #68	; 0x44
 8014a0c:	ecbd 8b0a 	vpop	{d8-d12}
 8014a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a18:	8808      	ldrh	r0, [r1, #0]
 8014a1a:	b085      	sub	sp, #20
 8014a1c:	1206      	asrs	r6, r0, #8
 8014a1e:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014a22:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014a26:	9600      	str	r6, [sp, #0]
 8014a28:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014a2c:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8014a30:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014a34:	10c6      	asrs	r6, r0, #3
 8014a36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014a3a:	9601      	str	r6, [sp, #4]
 8014a3c:	00c0      	lsls	r0, r0, #3
 8014a3e:	fb04 560c 	mla	r6, r4, ip, r5
 8014a42:	b2c0      	uxtb	r0, r0
 8014a44:	4692      	mov	sl, r2
 8014a46:	eb02 0e06 	add.w	lr, r2, r6
 8014a4a:	9a00      	ldr	r2, [sp, #0]
 8014a4c:	9002      	str	r0, [sp, #8]
 8014a4e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8014a52:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8014a56:	9a01      	ldr	r2, [sp, #4]
 8014a58:	2c00      	cmp	r4, #0
 8014a5a:	4698      	mov	r8, r3
 8014a5c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8014a60:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014a64:	db3e      	blt.n	8014ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014a66:	45a1      	cmp	r9, r4
 8014a68:	dd3c      	ble.n	8014ae4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014a6a:	2d00      	cmp	r5, #0
 8014a6c:	db38      	blt.n	8014ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8014a6e:	45ac      	cmp	ip, r5
 8014a70:	dd36      	ble.n	8014ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8014a72:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8014a76:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8014a7a:	1c6e      	adds	r6, r5, #1
 8014a7c:	d435      	bmi.n	8014aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014a7e:	45b4      	cmp	ip, r6
 8014a80:	dd33      	ble.n	8014aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014a82:	b393      	cbz	r3, 8014aea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8014a84:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014a88:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8014a8c:	3401      	adds	r4, #1
 8014a8e:	d430      	bmi.n	8014af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014a90:	45a1      	cmp	r9, r4
 8014a92:	dd2e      	ble.n	8014af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014a94:	b36f      	cbz	r7, 8014af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8014a96:	2d00      	cmp	r5, #0
 8014a98:	db29      	blt.n	8014aee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014a9a:	45ac      	cmp	ip, r5
 8014a9c:	dd27      	ble.n	8014aee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014a9e:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014aa2:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8014aa6:	3501      	adds	r5, #1
 8014aa8:	d407      	bmi.n	8014aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014aaa:	45ac      	cmp	ip, r5
 8014aac:	dd05      	ble.n	8014aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014aae:	b123      	cbz	r3, 8014aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014ab0:	44f4      	add	ip, lr
 8014ab2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8014ab6:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8014aba:	2b0f      	cmp	r3, #15
 8014abc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014ac0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014ac4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014ac8:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8014acc:	d801      	bhi.n	8014ad2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8014ace:	2f0f      	cmp	r7, #15
 8014ad0:	d911      	bls.n	8014af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8014ad2:	4b7f      	ldr	r3, [pc, #508]	; (8014cd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8014ad4:	4a7f      	ldr	r2, [pc, #508]	; (8014cd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8014ad6:	4880      	ldr	r0, [pc, #512]	; (8014cd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8014ad8:	f240 210d 	movw	r1, #525	; 0x20d
 8014adc:	f005 fc4a 	bl	801a374 <__assert_func>
 8014ae0:	4602      	mov	r2, r0
 8014ae2:	e7ca      	b.n	8014a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8014ae4:	4606      	mov	r6, r0
 8014ae6:	4602      	mov	r2, r0
 8014ae8:	e7d0      	b.n	8014a8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8014aea:	4606      	mov	r6, r0
 8014aec:	e7ce      	b.n	8014a8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8014aee:	4604      	mov	r4, r0
 8014af0:	e7d9      	b.n	8014aa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8014af2:	4604      	mov	r4, r0
 8014af4:	e7e1      	b.n	8014aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014af6:	b29b      	uxth	r3, r3
 8014af8:	b2bf      	uxth	r7, r7
 8014afa:	fb03 fe07 	mul.w	lr, r3, r7
 8014afe:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014b02:	011b      	lsls	r3, r3, #4
 8014b04:	eba3 0c0e 	sub.w	ip, r3, lr
 8014b08:	b2bf      	uxth	r7, r7
 8014b0a:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8014b0e:	fa1f fc8c 	uxth.w	ip, ip
 8014b12:	1bed      	subs	r5, r5, r7
 8014b14:	b2ad      	uxth	r5, r5
 8014b16:	fb0c f30a 	mul.w	r3, ip, sl
 8014b1a:	fb05 330b 	mla	r3, r5, fp, r3
 8014b1e:	fb07 3309 	mla	r3, r7, r9, r3
 8014b22:	fb0e 3308 	mla	r3, lr, r8, r3
 8014b26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014b2a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014b2e:	9303      	str	r3, [sp, #12]
 8014b30:	d018      	beq.n	8014b64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8014b32:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014b36:	fb0b f303 	mul.w	r3, fp, r3
 8014b3a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014b3e:	fb0b fb02 	mul.w	fp, fp, r2
 8014b42:	0a1a      	lsrs	r2, r3, #8
 8014b44:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014b48:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8014b4c:	441a      	add	r2, r3
 8014b4e:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8014b52:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8014b56:	0a12      	lsrs	r2, r2, #8
 8014b58:	0a1b      	lsrs	r3, r3, #8
 8014b5a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014b5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014b62:	431a      	orrs	r2, r3
 8014b64:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014b68:	d019      	beq.n	8014b9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8014b6a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014b6e:	fb0a fb0b 	mul.w	fp, sl, fp
 8014b72:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014b76:	fb0a fa06 	mul.w	sl, sl, r6
 8014b7a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014b7e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014b82:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014b86:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8014b8a:	445e      	add	r6, fp
 8014b8c:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8014b90:	0a36      	lsrs	r6, r6, #8
 8014b92:	0a1b      	lsrs	r3, r3, #8
 8014b94:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014b98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014b9c:	431e      	orrs	r6, r3
 8014b9e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014ba2:	d019      	beq.n	8014bd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8014ba4:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014ba8:	fb09 fa0a 	mul.w	sl, r9, sl
 8014bac:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014bb0:	fb09 f904 	mul.w	r9, r9, r4
 8014bb4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014bb8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014bbc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014bc0:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8014bc4:	4454      	add	r4, sl
 8014bc6:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8014bca:	0a24      	lsrs	r4, r4, #8
 8014bcc:	0a1b      	lsrs	r3, r3, #8
 8014bce:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014bd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014bd6:	431c      	orrs	r4, r3
 8014bd8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014bdc:	d019      	beq.n	8014c12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8014bde:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8014be2:	fb08 f909 	mul.w	r9, r8, r9
 8014be6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014bea:	fb08 f800 	mul.w	r8, r8, r0
 8014bee:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8014bf2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014bf6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014bfa:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8014bfe:	4448      	add	r0, r9
 8014c00:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014c04:	0a00      	lsrs	r0, r0, #8
 8014c06:	0a1b      	lsrs	r3, r3, #8
 8014c08:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014c0c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c10:	4318      	orrs	r0, r3
 8014c12:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014c16:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014c1a:	fb0c f808 	mul.w	r8, ip, r8
 8014c1e:	fb05 8803 	mla	r8, r5, r3, r8
 8014c22:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8014c26:	fb07 8803 	mla	r8, r7, r3, r8
 8014c2a:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8014c2e:	fb0e 8303 	mla	r3, lr, r3, r8
 8014c32:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014c36:	fb0c f606 	mul.w	r6, ip, r6
 8014c3a:	0a1b      	lsrs	r3, r3, #8
 8014c3c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014c40:	fb05 6202 	mla	r2, r5, r2, r6
 8014c44:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8014c48:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8014c4c:	fb07 2703 	mla	r7, r7, r3, r2
 8014c50:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8014c54:	b295      	uxth	r5, r2
 8014c56:	9a03      	ldr	r2, [sp, #12]
 8014c58:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8014c5c:	436a      	muls	r2, r5
 8014c5e:	fb0e 7303 	mla	r3, lr, r3, r7
 8014c62:	1c50      	adds	r0, r2, #1
 8014c64:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8014c68:	0a1b      	lsrs	r3, r3, #8
 8014c6a:	9a00      	ldr	r2, [sp, #0]
 8014c6c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c70:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8014c74:	ea48 0303 	orr.w	r3, r8, r3
 8014c78:	b2c0      	uxtb	r0, r0
 8014c7a:	fb12 f200 	smulbb	r2, r2, r0
 8014c7e:	0c1e      	lsrs	r6, r3, #16
 8014c80:	fb06 2605 	mla	r6, r6, r5, r2
 8014c84:	9a01      	ldr	r2, [sp, #4]
 8014c86:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8014c8a:	fb12 f200 	smulbb	r2, r2, r0
 8014c8e:	fb04 2205 	mla	r2, r4, r5, r2
 8014c92:	b294      	uxth	r4, r2
 8014c94:	9a02      	ldr	r2, [sp, #8]
 8014c96:	b2db      	uxtb	r3, r3
 8014c98:	fb12 f200 	smulbb	r2, r2, r0
 8014c9c:	fb03 2205 	mla	r2, r3, r5, r2
 8014ca0:	b2b6      	uxth	r6, r6
 8014ca2:	b292      	uxth	r2, r2
 8014ca4:	1c73      	adds	r3, r6, #1
 8014ca6:	1c50      	adds	r0, r2, #1
 8014ca8:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8014cac:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014cb0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014cb4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014cb8:	4313      	orrs	r3, r2
 8014cba:	1c62      	adds	r2, r4, #1
 8014cbc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8014cc0:	0952      	lsrs	r2, r2, #5
 8014cc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014cc6:	4313      	orrs	r3, r2
 8014cc8:	800b      	strh	r3, [r1, #0]
 8014cca:	b005      	add	sp, #20
 8014ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014cd0:	0801dee5 	.word	0x0801dee5
 8014cd4:	0801e43d 	.word	0x0801e43d
 8014cd8:	0801df6d 	.word	0x0801df6d

08014cdc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ce0:	ed2d 8b08 	vpush	{d8-d11}
 8014ce4:	b09b      	sub	sp, #108	; 0x6c
 8014ce6:	eeb0 aa40 	vmov.f32	s20, s0
 8014cea:	9309      	str	r3, [sp, #36]	; 0x24
 8014cec:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8014cf0:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8014cf2:	9311      	str	r3, [sp, #68]	; 0x44
 8014cf4:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014cf8:	9114      	str	r1, [sp, #80]	; 0x50
 8014cfa:	9317      	str	r3, [sp, #92]	; 0x5c
 8014cfc:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8014d00:	9019      	str	r0, [sp, #100]	; 0x64
 8014d02:	6868      	ldr	r0, [r5, #4]
 8014d04:	9218      	str	r2, [sp, #96]	; 0x60
 8014d06:	fb00 1303 	mla	r3, r0, r3, r1
 8014d0a:	6829      	ldr	r1, [r5, #0]
 8014d0c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8014d0e:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8014d12:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014d16:	930c      	str	r3, [sp, #48]	; 0x30
 8014d18:	6813      	ldr	r3, [r2, #0]
 8014d1a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014d1c:	6853      	ldr	r3, [r2, #4]
 8014d1e:	3304      	adds	r3, #4
 8014d20:	eef0 9a60 	vmov.f32	s19, s1
 8014d24:	eeb0 9a41 	vmov.f32	s18, s2
 8014d28:	eeb0 8a62 	vmov.f32	s16, s5
 8014d2c:	eef0 8a43 	vmov.f32	s17, s6
 8014d30:	eef0 ba44 	vmov.f32	s23, s8
 8014d34:	eeb0 ba64 	vmov.f32	s22, s9
 8014d38:	eef0 aa45 	vmov.f32	s21, s10
 8014d3c:	9308      	str	r3, [sp, #32]
 8014d3e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014d40:	2b00      	cmp	r3, #0
 8014d42:	dc03      	bgt.n	8014d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014d44:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8014d46:	2b00      	cmp	r3, #0
 8014d48:	f340 8363 	ble.w	8015412 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8014d4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d4e:	2b00      	cmp	r3, #0
 8014d50:	f340 81ad 	ble.w	80150ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8014d54:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014d56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014d58:	1412      	asrs	r2, r2, #16
 8014d5a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014d5e:	d42f      	bmi.n	8014dc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8014d60:	1c51      	adds	r1, r2, #1
 8014d62:	428c      	cmp	r4, r1
 8014d64:	dd2f      	ble.n	8014dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014d66:	2b00      	cmp	r3, #0
 8014d68:	db2d      	blt.n	8014dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014d6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d6c:	1c59      	adds	r1, r3, #1
 8014d6e:	4288      	cmp	r0, r1
 8014d70:	dd29      	ble.n	8014dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014d72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d74:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014d76:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014d78:	3b01      	subs	r3, #1
 8014d7a:	fb02 1203 	mla	r2, r2, r3, r1
 8014d7e:	1412      	asrs	r2, r2, #16
 8014d80:	d42b      	bmi.n	8014dda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014d82:	3201      	adds	r2, #1
 8014d84:	4294      	cmp	r4, r2
 8014d86:	dd28      	ble.n	8014dda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014d88:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014d8a:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014d8c:	fb02 1303 	mla	r3, r2, r3, r1
 8014d90:	141b      	asrs	r3, r3, #16
 8014d92:	d422      	bmi.n	8014dda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014d94:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014d96:	3301      	adds	r3, #1
 8014d98:	429a      	cmp	r2, r3
 8014d9a:	dd1e      	ble.n	8014dda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014d9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d9e:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8014da2:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8014da6:	9312      	str	r3, [sp, #72]	; 0x48
 8014da8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014daa:	2b00      	cmp	r3, #0
 8014dac:	f300 81ea 	bgt.w	8015184 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8014db0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014db2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014db4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014db8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014dbc:	930c      	str	r3, [sp, #48]	; 0x30
 8014dbe:	e178      	b.n	80150b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8014dc0:	1c51      	adds	r1, r2, #1
 8014dc2:	f040 8165 	bne.w	8015090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014dc6:	42a2      	cmp	r2, r4
 8014dc8:	f280 8162 	bge.w	8015090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014dcc:	1c5f      	adds	r7, r3, #1
 8014dce:	f2c0 815f 	blt.w	8015090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014dd2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014dd4:	4293      	cmp	r3, r2
 8014dd6:	f280 815b 	bge.w	8015090 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014dda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ddc:	9316      	str	r3, [sp, #88]	; 0x58
 8014dde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014de0:	9312      	str	r3, [sp, #72]	; 0x48
 8014de2:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8014de6:	9315      	str	r3, [sp, #84]	; 0x54
 8014de8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014dea:	2b00      	cmp	r3, #0
 8014dec:	dde0      	ble.n	8014db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8014dee:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014df0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014df2:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8014df6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014df8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014dfc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014dfe:	1412      	asrs	r2, r2, #16
 8014e00:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014e04:	f100 81a5 	bmi.w	8015152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8014e08:	1c55      	adds	r5, r2, #1
 8014e0a:	42ac      	cmp	r4, r5
 8014e0c:	f340 81a3 	ble.w	8015156 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014e10:	2b00      	cmp	r3, #0
 8014e12:	f2c0 81a0 	blt.w	8015156 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014e16:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8014e18:	1c5d      	adds	r5, r3, #1
 8014e1a:	42af      	cmp	r7, r5
 8014e1c:	f340 819b 	ble.w	8015156 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014e20:	fb03 2304 	mla	r3, r3, r4, r2
 8014e24:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014e26:	18d5      	adds	r5, r2, r3
 8014e28:	5cd3      	ldrb	r3, [r2, r3]
 8014e2a:	9a08      	ldr	r2, [sp, #32]
 8014e2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8014e30:	0e1f      	lsrs	r7, r3, #24
 8014e32:	2800      	cmp	r0, #0
 8014e34:	f000 817c 	beq.w	8015130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8014e38:	786a      	ldrb	r2, [r5, #1]
 8014e3a:	9e08      	ldr	r6, [sp, #32]
 8014e3c:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8014e40:	920d      	str	r2, [sp, #52]	; 0x34
 8014e42:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8014e46:	2900      	cmp	r1, #0
 8014e48:	f000 817d 	beq.w	8015146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8014e4c:	192a      	adds	r2, r5, r4
 8014e4e:	5d2d      	ldrb	r5, [r5, r4]
 8014e50:	7852      	ldrb	r2, [r2, #1]
 8014e52:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8014e56:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8014e5a:	950a      	str	r5, [sp, #40]	; 0x28
 8014e5c:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8014e60:	920e      	str	r2, [sp, #56]	; 0x38
 8014e62:	0e15      	lsrs	r5, r2, #24
 8014e64:	b280      	uxth	r0, r0
 8014e66:	b289      	uxth	r1, r1
 8014e68:	fb00 fa01 	mul.w	sl, r0, r1
 8014e6c:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014e70:	0100      	lsls	r0, r0, #4
 8014e72:	eba0 080a 	sub.w	r8, r0, sl
 8014e76:	b289      	uxth	r1, r1
 8014e78:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8014e7c:	fa1f f888 	uxth.w	r8, r8
 8014e80:	1a52      	subs	r2, r2, r1
 8014e82:	b292      	uxth	r2, r2
 8014e84:	fb08 f00e 	mul.w	r0, r8, lr
 8014e88:	fb02 0007 	mla	r0, r2, r7, r0
 8014e8c:	fb01 0009 	mla	r0, r1, r9, r0
 8014e90:	fb0a 0005 	mla	r0, sl, r5, r0
 8014e94:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014e98:	2800      	cmp	r0, #0
 8014e9a:	f000 80ea 	beq.w	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014e9e:	2fff      	cmp	r7, #255	; 0xff
 8014ea0:	d01a      	beq.n	8014ed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8014ea2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014ea6:	fb07 fc0c 	mul.w	ip, r7, ip
 8014eaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014eae:	435f      	muls	r7, r3
 8014eb0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8014eb4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014eb8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014ebc:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8014ec0:	4463      	add	r3, ip
 8014ec2:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8014ec6:	0a1b      	lsrs	r3, r3, #8
 8014ec8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8014ecc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014ed0:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8014ed4:	ea43 030b 	orr.w	r3, r3, fp
 8014ed8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014edc:	d01e      	beq.n	8014f1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8014ede:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8014ee0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014ee4:	fb0e fb0b 	mul.w	fp, lr, fp
 8014ee8:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014eec:	fb0e fe07 	mul.w	lr, lr, r7
 8014ef0:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8014ef4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014ef8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014efc:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8014f00:	44dc      	add	ip, fp
 8014f02:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8014f06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014f0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014f0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f12:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014f16:	ea4c 060e 	orr.w	r6, ip, lr
 8014f1a:	960d      	str	r6, [sp, #52]	; 0x34
 8014f1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014f20:	d01e      	beq.n	8014f60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8014f22:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014f24:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014f28:	fb09 fe0e 	mul.w	lr, r9, lr
 8014f2c:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014f30:	fb09 f907 	mul.w	r9, r9, r7
 8014f34:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014f38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f3c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014f40:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8014f44:	44f4      	add	ip, lr
 8014f46:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014f4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014f4e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014f52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f56:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014f5a:	ea4c 0609 	orr.w	r6, ip, r9
 8014f5e:	960a      	str	r6, [sp, #40]	; 0x28
 8014f60:	2dff      	cmp	r5, #255	; 0xff
 8014f62:	d01c      	beq.n	8014f9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8014f64:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014f66:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014f6a:	fb05 fe0e 	mul.w	lr, r5, lr
 8014f6e:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014f72:	437d      	muls	r5, r7
 8014f74:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014f78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f7c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014f80:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8014f84:	44f4      	add	ip, lr
 8014f86:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8014f8a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014f8e:	0a2d      	lsrs	r5, r5, #8
 8014f90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014f94:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8014f98:	ea4c 0505 	orr.w	r5, ip, r5
 8014f9c:	950e      	str	r5, [sp, #56]	; 0x38
 8014f9e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8014fa0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014fa2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8014fa6:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014faa:	fb08 f505 	mul.w	r5, r8, r5
 8014fae:	fb02 5507 	mla	r5, r2, r7, r5
 8014fb2:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8014fb6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014fb8:	fb01 5507 	mla	r5, r1, r7, r5
 8014fbc:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8014fc0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8014fc2:	fb0a 5507 	mla	r5, sl, r7, r5
 8014fc6:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014fca:	fb08 f807 	mul.w	r8, r8, r7
 8014fce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014fd2:	fb02 8303 	mla	r3, r2, r3, r8
 8014fd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014fd8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8014fda:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014fde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014fe0:	fb01 330c 	mla	r3, r1, ip, r3
 8014fe4:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8014fe8:	fb0a 3a01 	mla	sl, sl, r1, r3
 8014fec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014fee:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014ff0:	881f      	ldrh	r7, [r3, #0]
 8014ff2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014ff4:	0a2d      	lsrs	r5, r5, #8
 8014ff6:	4343      	muls	r3, r0
 8014ff8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014ffc:	1c58      	adds	r0, r3, #1
 8014ffe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015002:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015006:	ea45 050a 	orr.w	r5, r5, sl
 801500a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801500e:	0c29      	lsrs	r1, r5, #16
 8015010:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015014:	123b      	asrs	r3, r7, #8
 8015016:	b2c0      	uxtb	r0, r0
 8015018:	fb11 f102 	smulbb	r1, r1, r2
 801501c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015020:	fb03 1300 	mla	r3, r3, r0, r1
 8015024:	b299      	uxth	r1, r3
 8015026:	10fa      	asrs	r2, r7, #3
 8015028:	f3c5 2307 	ubfx	r3, r5, #8, #8
 801502c:	fb13 f306 	smulbb	r3, r3, r6
 8015030:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015034:	fb02 3200 	mla	r2, r2, r0, r3
 8015038:	b2ed      	uxtb	r5, r5
 801503a:	00fb      	lsls	r3, r7, #3
 801503c:	b2db      	uxtb	r3, r3
 801503e:	fb15 f506 	smulbb	r5, r5, r6
 8015042:	fb03 5500 	mla	r5, r3, r0, r5
 8015046:	b292      	uxth	r2, r2
 8015048:	b2ad      	uxth	r5, r5
 801504a:	1c4b      	adds	r3, r1, #1
 801504c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015050:	1c68      	adds	r0, r5, #1
 8015052:	1c51      	adds	r1, r2, #1
 8015054:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8015058:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801505c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015060:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015064:	0952      	lsrs	r2, r2, #5
 8015066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801506a:	432b      	orrs	r3, r5
 801506c:	4313      	orrs	r3, r2
 801506e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015070:	8013      	strh	r3, [r2, #0]
 8015072:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015074:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015076:	3302      	adds	r3, #2
 8015078:	9312      	str	r3, [sp, #72]	; 0x48
 801507a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801507c:	4413      	add	r3, r2
 801507e:	932d      	str	r3, [sp, #180]	; 0xb4
 8015080:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015082:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015084:	4413      	add	r3, r2
 8015086:	932e      	str	r3, [sp, #184]	; 0xb8
 8015088:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801508a:	3b01      	subs	r3, #1
 801508c:	9316      	str	r3, [sp, #88]	; 0x58
 801508e:	e6ab      	b.n	8014de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8015090:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015092:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015094:	4413      	add	r3, r2
 8015096:	932d      	str	r3, [sp, #180]	; 0xb4
 8015098:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801509a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801509c:	4413      	add	r3, r2
 801509e:	932e      	str	r3, [sp, #184]	; 0xb8
 80150a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80150a2:	3b01      	subs	r3, #1
 80150a4:	9309      	str	r3, [sp, #36]	; 0x24
 80150a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80150a8:	3302      	adds	r3, #2
 80150aa:	930c      	str	r3, [sp, #48]	; 0x30
 80150ac:	e64e      	b.n	8014d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80150ae:	f47f ae60 	bne.w	8014d72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80150b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80150b4:	2b00      	cmp	r3, #0
 80150b6:	f340 81ac 	ble.w	8015412 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80150ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80150be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80150c2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80150c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80150c8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80150cc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80150d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80150d4:	eef0 6a48 	vmov.f32	s13, s16
 80150d8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80150dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150e0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80150e4:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80150e8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80150ec:	eef0 6a68 	vmov.f32	s13, s17
 80150f0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80150f4:	ee18 2a10 	vmov	r2, s16
 80150f8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80150fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015100:	ee18 2a90 	vmov	r2, s17
 8015104:	932f      	str	r3, [sp, #188]	; 0xbc
 8015106:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015108:	fb92 f3f3 	sdiv	r3, r2, r3
 801510c:	9330      	str	r3, [sp, #192]	; 0xc0
 801510e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015110:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015112:	3b01      	subs	r3, #1
 8015114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015118:	9314      	str	r3, [sp, #80]	; 0x50
 801511a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801511c:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8015120:	bf08      	it	eq
 8015122:	4613      	moveq	r3, r2
 8015124:	9309      	str	r3, [sp, #36]	; 0x24
 8015126:	eef0 8a67 	vmov.f32	s17, s15
 801512a:	eeb0 8a47 	vmov.f32	s16, s14
 801512e:	e606      	b.n	8014d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015130:	b161      	cbz	r1, 801514c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015132:	5d2a      	ldrb	r2, [r5, r4]
 8015134:	9d08      	ldr	r5, [sp, #32]
 8015136:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801513a:	920a      	str	r2, [sp, #40]	; 0x28
 801513c:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8015140:	25ff      	movs	r5, #255	; 0xff
 8015142:	46ae      	mov	lr, r5
 8015144:	e68e      	b.n	8014e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015146:	25ff      	movs	r5, #255	; 0xff
 8015148:	46a9      	mov	r9, r5
 801514a:	e68b      	b.n	8014e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801514c:	25ff      	movs	r5, #255	; 0xff
 801514e:	46a9      	mov	r9, r5
 8015150:	e7f7      	b.n	8015142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8015152:	1c56      	adds	r6, r2, #1
 8015154:	d18d      	bne.n	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015156:	4294      	cmp	r4, r2
 8015158:	dd8b      	ble.n	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801515a:	1c5d      	adds	r5, r3, #1
 801515c:	db89      	blt.n	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801515e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015160:	429d      	cmp	r5, r3
 8015162:	dd86      	ble.n	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015164:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8015168:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801516a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801516c:	9202      	str	r2, [sp, #8]
 801516e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015172:	e9cd 4300 	strd	r4, r3, [sp]
 8015176:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 801517a:	9b08      	ldr	r3, [sp, #32]
 801517c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801517e:	f7ff fc49 	bl	8014a14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8015182:	e776      	b.n	8015072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015184:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015186:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015188:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801518c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801518e:	1412      	asrs	r2, r2, #16
 8015190:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015194:	141b      	asrs	r3, r3, #16
 8015196:	fb04 2303 	mla	r3, r4, r3, r2
 801519a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801519c:	18d5      	adds	r5, r2, r3
 801519e:	5cd3      	ldrb	r3, [r2, r3]
 80151a0:	9a08      	ldr	r2, [sp, #32]
 80151a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80151a6:	0e1e      	lsrs	r6, r3, #24
 80151a8:	2900      	cmp	r1, #0
 80151aa:	f000 8121 	beq.w	80153f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80151ae:	786a      	ldrb	r2, [r5, #1]
 80151b0:	9f08      	ldr	r7, [sp, #32]
 80151b2:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80151b6:	920f      	str	r2, [sp, #60]	; 0x3c
 80151b8:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80151bc:	2800      	cmp	r0, #0
 80151be:	f000 8122 	beq.w	8015406 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80151c2:	192a      	adds	r2, r5, r4
 80151c4:	5d2d      	ldrb	r5, [r5, r4]
 80151c6:	7852      	ldrb	r2, [r2, #1]
 80151c8:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80151cc:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80151d0:	950b      	str	r5, [sp, #44]	; 0x2c
 80151d2:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80151d6:	9210      	str	r2, [sp, #64]	; 0x40
 80151d8:	0e15      	lsrs	r5, r2, #24
 80151da:	b289      	uxth	r1, r1
 80151dc:	b280      	uxth	r0, r0
 80151de:	fb01 f900 	mul.w	r9, r1, r0
 80151e2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80151e6:	0109      	lsls	r1, r1, #4
 80151e8:	eba1 0e09 	sub.w	lr, r1, r9
 80151ec:	b280      	uxth	r0, r0
 80151ee:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80151f2:	fa1f fe8e 	uxth.w	lr, lr
 80151f6:	1a12      	subs	r2, r2, r0
 80151f8:	b292      	uxth	r2, r2
 80151fa:	fb0e f10c 	mul.w	r1, lr, ip
 80151fe:	fb02 1106 	mla	r1, r2, r6, r1
 8015202:	fb00 1108 	mla	r1, r0, r8, r1
 8015206:	fb09 1105 	mla	r1, r9, r5, r1
 801520a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801520e:	2900      	cmp	r1, #0
 8015210:	f000 80e0 	beq.w	80153d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8015214:	2eff      	cmp	r6, #255	; 0xff
 8015216:	d016      	beq.n	8015246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8015218:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801521c:	4377      	muls	r7, r6
 801521e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015222:	435e      	muls	r6, r3
 8015224:	0a3b      	lsrs	r3, r7, #8
 8015226:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801522a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801522e:	443b      	add	r3, r7
 8015230:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8015234:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015238:	0a1b      	lsrs	r3, r3, #8
 801523a:	0a3f      	lsrs	r7, r7, #8
 801523c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015240:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015244:	433b      	orrs	r3, r7
 8015246:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801524a:	d01d      	beq.n	8015288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 801524c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801524e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015250:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015254:	fb0c f606 	mul.w	r6, ip, r6
 8015258:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801525c:	fb0c fc07 	mul.w	ip, ip, r7
 8015260:	0a37      	lsrs	r7, r6, #8
 8015262:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015266:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 801526a:	4437      	add	r7, r6
 801526c:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8015270:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8015274:	0a3f      	lsrs	r7, r7, #8
 8015276:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801527a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801527e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015282:	ea47 060c 	orr.w	r6, r7, ip
 8015286:	960f      	str	r6, [sp, #60]	; 0x3c
 8015288:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801528c:	d01d      	beq.n	80152ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 801528e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015290:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015294:	fb08 fc0c 	mul.w	ip, r8, ip
 8015298:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801529c:	fb08 f806 	mul.w	r8, r8, r6
 80152a0:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80152a4:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80152a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80152ac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80152b0:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80152b4:	4467      	add	r7, ip
 80152b6:	0a3f      	lsrs	r7, r7, #8
 80152b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80152bc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80152c0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80152c4:	ea47 0608 	orr.w	r6, r7, r8
 80152c8:	960b      	str	r6, [sp, #44]	; 0x2c
 80152ca:	2dff      	cmp	r5, #255	; 0xff
 80152cc:	d01a      	beq.n	8015304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80152ce:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80152d0:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80152d4:	fb05 fc0c 	mul.w	ip, r5, ip
 80152d8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80152dc:	4375      	muls	r5, r6
 80152de:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80152e2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80152e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80152ea:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80152ee:	4467      	add	r7, ip
 80152f0:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80152f4:	0a3f      	lsrs	r7, r7, #8
 80152f6:	0a2d      	lsrs	r5, r5, #8
 80152f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80152fc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015300:	433d      	orrs	r5, r7
 8015302:	9510      	str	r5, [sp, #64]	; 0x40
 8015304:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8015306:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801530a:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801530e:	fb0e f505 	mul.w	r5, lr, r5
 8015312:	fb02 5506 	mla	r5, r2, r6, r5
 8015316:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015318:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801531c:	fb00 5506 	mla	r5, r0, r6, r5
 8015320:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015322:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015326:	fb09 5506 	mla	r5, r9, r6, r5
 801532a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801532c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015330:	fb0e fe06 	mul.w	lr, lr, r6
 8015334:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015338:	fb02 e303 	mla	r3, r2, r3, lr
 801533c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801533e:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015342:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015344:	fb00 3307 	mla	r3, r0, r7, r3
 8015348:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801534c:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015350:	fb01 f10b 	mul.w	r1, r1, fp
 8015354:	0a2d      	lsrs	r5, r5, #8
 8015356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801535a:	f8ba 0000 	ldrh.w	r0, [sl]
 801535e:	1c4b      	adds	r3, r1, #1
 8015360:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015364:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015368:	ea45 050c 	orr.w	r5, r5, ip
 801536c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015370:	1202      	asrs	r2, r0, #8
 8015372:	0c2b      	lsrs	r3, r5, #16
 8015374:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8015378:	b2c9      	uxtb	r1, r1
 801537a:	fb13 f30b 	smulbb	r3, r3, fp
 801537e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015382:	fb02 3201 	mla	r2, r2, r1, r3
 8015386:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801538a:	10c3      	asrs	r3, r0, #3
 801538c:	b2ed      	uxtb	r5, r5
 801538e:	00c0      	lsls	r0, r0, #3
 8015390:	b2c0      	uxtb	r0, r0
 8015392:	fb15 f50b 	smulbb	r5, r5, fp
 8015396:	fb00 5001 	mla	r0, r0, r1, r5
 801539a:	b292      	uxth	r2, r2
 801539c:	fb16 f60b 	smulbb	r6, r6, fp
 80153a0:	b280      	uxth	r0, r0
 80153a2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80153a6:	fb03 6301 	mla	r3, r3, r1, r6
 80153aa:	1c51      	adds	r1, r2, #1
 80153ac:	1c46      	adds	r6, r0, #1
 80153ae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80153b2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80153b6:	b29b      	uxth	r3, r3
 80153b8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80153bc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80153c0:	4332      	orrs	r2, r6
 80153c2:	1c5e      	adds	r6, r3, #1
 80153c4:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80153c8:	095b      	lsrs	r3, r3, #5
 80153ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153ce:	431a      	orrs	r2, r3
 80153d0:	f8aa 2000 	strh.w	r2, [sl]
 80153d4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80153d6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80153d8:	4413      	add	r3, r2
 80153da:	932d      	str	r3, [sp, #180]	; 0xb4
 80153dc:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80153de:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80153e0:	4413      	add	r3, r2
 80153e2:	932e      	str	r3, [sp, #184]	; 0xb8
 80153e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80153e6:	3b01      	subs	r3, #1
 80153e8:	f10a 0a02 	add.w	sl, sl, #2
 80153ec:	9312      	str	r3, [sp, #72]	; 0x48
 80153ee:	e4db      	b.n	8014da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80153f0:	b160      	cbz	r0, 801540c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80153f2:	5d2a      	ldrb	r2, [r5, r4]
 80153f4:	9d08      	ldr	r5, [sp, #32]
 80153f6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80153fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80153fc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015400:	25ff      	movs	r5, #255	; 0xff
 8015402:	46ac      	mov	ip, r5
 8015404:	e6e9      	b.n	80151da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015406:	25ff      	movs	r5, #255	; 0xff
 8015408:	46a8      	mov	r8, r5
 801540a:	e6e6      	b.n	80151da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 801540c:	25ff      	movs	r5, #255	; 0xff
 801540e:	46a8      	mov	r8, r5
 8015410:	e7f7      	b.n	8015402 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8015412:	b01b      	add	sp, #108	; 0x6c
 8015414:	ecbd 8b08 	vpop	{d8-d11}
 8015418:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801541c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801541c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015420:	8808      	ldrh	r0, [r1, #0]
 8015422:	b085      	sub	sp, #20
 8015424:	1206      	asrs	r6, r0, #8
 8015426:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801542a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801542e:	9600      	str	r6, [sp, #0]
 8015430:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015434:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015438:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801543c:	10c6      	asrs	r6, r0, #3
 801543e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015442:	9601      	str	r6, [sp, #4]
 8015444:	00c0      	lsls	r0, r0, #3
 8015446:	fb04 560c 	mla	r6, r4, ip, r5
 801544a:	b2c0      	uxtb	r0, r0
 801544c:	4692      	mov	sl, r2
 801544e:	eb02 0e06 	add.w	lr, r2, r6
 8015452:	9a00      	ldr	r2, [sp, #0]
 8015454:	9002      	str	r0, [sp, #8]
 8015456:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801545a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801545e:	9a01      	ldr	r2, [sp, #4]
 8015460:	2c00      	cmp	r4, #0
 8015462:	4698      	mov	r8, r3
 8015464:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015468:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801546c:	db3e      	blt.n	80154ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 801546e:	45a1      	cmp	r9, r4
 8015470:	dd3c      	ble.n	80154ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015472:	2d00      	cmp	r5, #0
 8015474:	db38      	blt.n	80154e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015476:	45ac      	cmp	ip, r5
 8015478:	dd36      	ble.n	80154e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801547a:	f81a 2006 	ldrb.w	r2, [sl, r6]
 801547e:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015482:	1c6e      	adds	r6, r5, #1
 8015484:	d435      	bmi.n	80154f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015486:	45b4      	cmp	ip, r6
 8015488:	dd33      	ble.n	80154f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801548a:	b393      	cbz	r3, 80154f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801548c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015490:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015494:	3401      	adds	r4, #1
 8015496:	d430      	bmi.n	80154fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015498:	45a1      	cmp	r9, r4
 801549a:	dd2e      	ble.n	80154fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 801549c:	b36f      	cbz	r7, 80154fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 801549e:	2d00      	cmp	r5, #0
 80154a0:	db29      	blt.n	80154f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80154a2:	45ac      	cmp	ip, r5
 80154a4:	dd27      	ble.n	80154f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 80154a6:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80154aa:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80154ae:	3501      	adds	r5, #1
 80154b0:	d407      	bmi.n	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80154b2:	45ac      	cmp	ip, r5
 80154b4:	dd05      	ble.n	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80154b6:	b123      	cbz	r3, 80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80154b8:	44f4      	add	ip, lr
 80154ba:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80154be:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80154c2:	2b0f      	cmp	r3, #15
 80154c4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80154c8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80154cc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80154d0:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80154d4:	d801      	bhi.n	80154da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80154d6:	2f0f      	cmp	r7, #15
 80154d8:	d911      	bls.n	80154fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 80154da:	4b79      	ldr	r3, [pc, #484]	; (80156c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 80154dc:	4a79      	ldr	r2, [pc, #484]	; (80156c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80154de:	487a      	ldr	r0, [pc, #488]	; (80156c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80154e0:	f240 210d 	movw	r1, #525	; 0x20d
 80154e4:	f004 ff46 	bl	801a374 <__assert_func>
 80154e8:	4602      	mov	r2, r0
 80154ea:	e7ca      	b.n	8015482 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 80154ec:	4606      	mov	r6, r0
 80154ee:	4602      	mov	r2, r0
 80154f0:	e7d0      	b.n	8015494 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80154f2:	4606      	mov	r6, r0
 80154f4:	e7ce      	b.n	8015494 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 80154f6:	4604      	mov	r4, r0
 80154f8:	e7d9      	b.n	80154ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 80154fa:	4604      	mov	r4, r0
 80154fc:	e7e1      	b.n	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 80154fe:	b29b      	uxth	r3, r3
 8015500:	b2bf      	uxth	r7, r7
 8015502:	fb03 fe07 	mul.w	lr, r3, r7
 8015506:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801550a:	011b      	lsls	r3, r3, #4
 801550c:	eba3 0c0e 	sub.w	ip, r3, lr
 8015510:	b2bf      	uxth	r7, r7
 8015512:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015516:	fa1f fc8c 	uxth.w	ip, ip
 801551a:	1bed      	subs	r5, r5, r7
 801551c:	b2ad      	uxth	r5, r5
 801551e:	fb0c f30a 	mul.w	r3, ip, sl
 8015522:	fb05 330b 	mla	r3, r5, fp, r3
 8015526:	fb07 3309 	mla	r3, r7, r9, r3
 801552a:	fb0e 3308 	mla	r3, lr, r8, r3
 801552e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015532:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015536:	9303      	str	r3, [sp, #12]
 8015538:	d018      	beq.n	801556c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 801553a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801553e:	fb0b f303 	mul.w	r3, fp, r3
 8015542:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015546:	fb0b fb02 	mul.w	fp, fp, r2
 801554a:	0a1a      	lsrs	r2, r3, #8
 801554c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015550:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015554:	441a      	add	r2, r3
 8015556:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801555a:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801555e:	0a12      	lsrs	r2, r2, #8
 8015560:	0a1b      	lsrs	r3, r3, #8
 8015562:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801556a:	431a      	orrs	r2, r3
 801556c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015570:	d019      	beq.n	80155a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8015572:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015576:	fb0a fb0b 	mul.w	fp, sl, fp
 801557a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801557e:	fb0a fa06 	mul.w	sl, sl, r6
 8015582:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015586:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801558a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801558e:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015592:	445e      	add	r6, fp
 8015594:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015598:	0a36      	lsrs	r6, r6, #8
 801559a:	0a1b      	lsrs	r3, r3, #8
 801559c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80155a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80155a4:	431e      	orrs	r6, r3
 80155a6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80155aa:	d019      	beq.n	80155e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 80155ac:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80155b0:	fb09 fa0a 	mul.w	sl, r9, sl
 80155b4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80155b8:	fb09 f904 	mul.w	r9, r9, r4
 80155bc:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80155c0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80155c4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80155c8:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80155cc:	4454      	add	r4, sl
 80155ce:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80155d2:	0a24      	lsrs	r4, r4, #8
 80155d4:	0a1b      	lsrs	r3, r3, #8
 80155d6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80155da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80155de:	431c      	orrs	r4, r3
 80155e0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80155e4:	d019      	beq.n	801561a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 80155e6:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80155ea:	fb08 f909 	mul.w	r9, r8, r9
 80155ee:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80155f2:	fb08 f800 	mul.w	r8, r8, r0
 80155f6:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80155fa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80155fe:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015602:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015606:	4448      	add	r0, r9
 8015608:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801560c:	0a00      	lsrs	r0, r0, #8
 801560e:	0a1b      	lsrs	r3, r3, #8
 8015610:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015614:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015618:	4318      	orrs	r0, r3
 801561a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801561e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015622:	fb0c f808 	mul.w	r8, ip, r8
 8015626:	fb05 8803 	mla	r8, r5, r3, r8
 801562a:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801562e:	fb07 8803 	mla	r8, r7, r3, r8
 8015632:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015636:	fb0e 8303 	mla	r3, lr, r3, r8
 801563a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801563e:	0a1b      	lsrs	r3, r3, #8
 8015640:	fb0c f606 	mul.w	r6, ip, r6
 8015644:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015648:	fb05 6202 	mla	r2, r5, r2, r6
 801564c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015650:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015654:	fb07 2703 	mla	r7, r7, r3, r2
 8015658:	9a03      	ldr	r2, [sp, #12]
 801565a:	9c02      	ldr	r4, [sp, #8]
 801565c:	9d01      	ldr	r5, [sp, #4]
 801565e:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015662:	fb0e 7303 	mla	r3, lr, r3, r7
 8015666:	43d0      	mvns	r0, r2
 8015668:	9a00      	ldr	r2, [sp, #0]
 801566a:	b2c0      	uxtb	r0, r0
 801566c:	0a1b      	lsrs	r3, r3, #8
 801566e:	4342      	muls	r2, r0
 8015670:	4344      	muls	r4, r0
 8015672:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015676:	ea48 0303 	orr.w	r3, r8, r3
 801567a:	4345      	muls	r5, r0
 801567c:	4620      	mov	r0, r4
 801567e:	1c54      	adds	r4, r2, #1
 8015680:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015684:	0c1a      	lsrs	r2, r3, #16
 8015686:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801568a:	4a10      	ldr	r2, [pc, #64]	; (80156cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801568c:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8015690:	1c44      	adds	r4, r0, #1
 8015692:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015696:	b2d8      	uxtb	r0, r3
 8015698:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801569c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80156a0:	1c68      	adds	r0, r5, #1
 80156a2:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 80156a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80156aa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80156ae:	00db      	lsls	r3, r3, #3
 80156b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80156b4:	4313      	orrs	r3, r2
 80156b6:	800b      	strh	r3, [r1, #0]
 80156b8:	b005      	add	sp, #20
 80156ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156be:	bf00      	nop
 80156c0:	0801dee5 	.word	0x0801dee5
 80156c4:	0801e43d 	.word	0x0801e43d
 80156c8:	0801df6d 	.word	0x0801df6d
 80156cc:	fffff800 	.word	0xfffff800

080156d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80156d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156d4:	ed2d 8b08 	vpush	{d8-d11}
 80156d8:	b097      	sub	sp, #92	; 0x5c
 80156da:	eeb0 aa40 	vmov.f32	s20, s0
 80156de:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 80156e0:	9307      	str	r3, [sp, #28]
 80156e2:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80156e6:	9112      	str	r1, [sp, #72]	; 0x48
 80156e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80156ea:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80156ee:	9015      	str	r0, [sp, #84]	; 0x54
 80156f0:	6868      	ldr	r0, [r5, #4]
 80156f2:	9214      	str	r2, [sp, #80]	; 0x50
 80156f4:	fb00 1303 	mla	r3, r0, r3, r1
 80156f8:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80156fa:	6829      	ldr	r1, [r5, #0]
 80156fc:	6855      	ldr	r5, [r2, #4]
 80156fe:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015702:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015706:	930a      	str	r3, [sp, #40]	; 0x28
 8015708:	6813      	ldr	r3, [r2, #0]
 801570a:	9311      	str	r3, [sp, #68]	; 0x44
 801570c:	eef0 9a60 	vmov.f32	s19, s1
 8015710:	eeb0 9a41 	vmov.f32	s18, s2
 8015714:	eeb0 8a62 	vmov.f32	s16, s5
 8015718:	eef0 8a43 	vmov.f32	s17, s6
 801571c:	eef0 ba44 	vmov.f32	s23, s8
 8015720:	eeb0 ba64 	vmov.f32	s22, s9
 8015724:	eef0 aa45 	vmov.f32	s21, s10
 8015728:	3504      	adds	r5, #4
 801572a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801572c:	2b00      	cmp	r3, #0
 801572e:	dc03      	bgt.n	8015738 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015730:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015732:	2b00      	cmp	r3, #0
 8015734:	f340 834d 	ble.w	8015dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015738:	9b07      	ldr	r3, [sp, #28]
 801573a:	2b00      	cmp	r3, #0
 801573c:	f340 819c 	ble.w	8015a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8015740:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015742:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015744:	1412      	asrs	r2, r2, #16
 8015746:	ea4f 4323 	mov.w	r3, r3, asr #16
 801574a:	d42d      	bmi.n	80157a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801574c:	1c51      	adds	r1, r2, #1
 801574e:	428c      	cmp	r4, r1
 8015750:	dd2d      	ble.n	80157ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015752:	2b00      	cmp	r3, #0
 8015754:	db2b      	blt.n	80157ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015756:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015758:	1c59      	adds	r1, r3, #1
 801575a:	4288      	cmp	r0, r1
 801575c:	dd27      	ble.n	80157ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801575e:	9b07      	ldr	r3, [sp, #28]
 8015760:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015762:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015764:	3b01      	subs	r3, #1
 8015766:	fb02 1203 	mla	r2, r2, r3, r1
 801576a:	1412      	asrs	r2, r2, #16
 801576c:	d429      	bmi.n	80157c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801576e:	3201      	adds	r2, #1
 8015770:	4294      	cmp	r4, r2
 8015772:	dd26      	ble.n	80157c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015774:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015776:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015778:	fb02 1303 	mla	r3, r2, r3, r1
 801577c:	141b      	asrs	r3, r3, #16
 801577e:	d420      	bmi.n	80157c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015780:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015782:	3301      	adds	r3, #1
 8015784:	429a      	cmp	r2, r3
 8015786:	dd1c      	ble.n	80157c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015788:	9b07      	ldr	r3, [sp, #28]
 801578a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 801578e:	9310      	str	r3, [sp, #64]	; 0x40
 8015790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015792:	2b00      	cmp	r3, #0
 8015794:	f300 81da 	bgt.w	8015b4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015798:	9b07      	ldr	r3, [sp, #28]
 801579a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801579c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80157a4:	930a      	str	r3, [sp, #40]	; 0x28
 80157a6:	e169      	b.n	8015a7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80157a8:	1c51      	adds	r1, r2, #1
 80157aa:	f040 8156 	bne.w	8015a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80157ae:	42a2      	cmp	r2, r4
 80157b0:	f280 8153 	bge.w	8015a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80157b4:	1c5a      	adds	r2, r3, #1
 80157b6:	f2c0 8150 	blt.w	8015a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80157ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80157bc:	4293      	cmp	r3, r2
 80157be:	f280 814c 	bge.w	8015a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 80157c2:	9b07      	ldr	r3, [sp, #28]
 80157c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80157c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157c8:	9310      	str	r3, [sp, #64]	; 0x40
 80157ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80157cc:	2b00      	cmp	r3, #0
 80157ce:	dde3      	ble.n	8015798 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80157d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80157d2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80157d4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80157d8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80157da:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80157de:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80157e0:	1412      	asrs	r2, r2, #16
 80157e2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80157e6:	f100 8198 	bmi.w	8015b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 80157ea:	1c56      	adds	r6, r2, #1
 80157ec:	42b4      	cmp	r4, r6
 80157ee:	f340 8196 	ble.w	8015b1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80157f2:	2b00      	cmp	r3, #0
 80157f4:	f2c0 8193 	blt.w	8015b1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80157f8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80157fa:	1c5e      	adds	r6, r3, #1
 80157fc:	42b7      	cmp	r7, r6
 80157fe:	f340 818e 	ble.w	8015b1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015802:	fb03 2304 	mla	r3, r3, r4, r2
 8015806:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015808:	18d6      	adds	r6, r2, r3
 801580a:	5cd3      	ldrb	r3, [r2, r3]
 801580c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015810:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015814:	2900      	cmp	r1, #0
 8015816:	f000 8170 	beq.w	8015afa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 801581a:	7872      	ldrb	r2, [r6, #1]
 801581c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015820:	920b      	str	r2, [sp, #44]	; 0x2c
 8015822:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015826:	2800      	cmp	r0, #0
 8015828:	f000 8171 	beq.w	8015b0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 801582c:	1932      	adds	r2, r6, r4
 801582e:	5d36      	ldrb	r6, [r6, r4]
 8015830:	7852      	ldrb	r2, [r2, #1]
 8015832:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8015836:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801583a:	9608      	str	r6, [sp, #32]
 801583c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015840:	920c      	str	r2, [sp, #48]	; 0x30
 8015842:	0e16      	lsrs	r6, r2, #24
 8015844:	b289      	uxth	r1, r1
 8015846:	b280      	uxth	r0, r0
 8015848:	fb01 fb00 	mul.w	fp, r1, r0
 801584c:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8015850:	0109      	lsls	r1, r1, #4
 8015852:	eba1 090b 	sub.w	r9, r1, fp
 8015856:	b280      	uxth	r0, r0
 8015858:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801585c:	fa1f f989 	uxth.w	r9, r9
 8015860:	1a12      	subs	r2, r2, r0
 8015862:	b292      	uxth	r2, r2
 8015864:	fb09 f108 	mul.w	r1, r9, r8
 8015868:	fb02 110c 	mla	r1, r2, ip, r1
 801586c:	fb00 110a 	mla	r1, r0, sl, r1
 8015870:	fb0b 1106 	mla	r1, fp, r6, r1
 8015874:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015878:	2900      	cmp	r1, #0
 801587a:	f000 80df 	beq.w	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801587e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015882:	d01b      	beq.n	80158bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8015884:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015888:	fb0c fe0e 	mul.w	lr, ip, lr
 801588c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015890:	fb0c fc03 	mul.w	ip, ip, r3
 8015894:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8015898:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801589c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80158a0:	4473      	add	r3, lr
 80158a2:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80158a6:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80158aa:	0a1b      	lsrs	r3, r3, #8
 80158ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80158b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80158b4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80158b8:	ea43 030e 	orr.w	r3, r3, lr
 80158bc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80158c0:	d01e      	beq.n	8015900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80158c2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80158c4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80158c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80158cc:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 80158d0:	fb08 f80e 	mul.w	r8, r8, lr
 80158d4:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80158d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80158dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80158e0:	44e6      	add	lr, ip
 80158e2:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80158e6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80158ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80158ee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80158f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80158f6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80158fa:	ea4e 0708 	orr.w	r7, lr, r8
 80158fe:	970b      	str	r7, [sp, #44]	; 0x2c
 8015900:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015904:	d01e      	beq.n	8015944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015906:	9f08      	ldr	r7, [sp, #32]
 8015908:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 801590c:	fb0a f808 	mul.w	r8, sl, r8
 8015910:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015914:	fb0a fa0c 	mul.w	sl, sl, ip
 8015918:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801591c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015920:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015924:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015928:	44c6      	add	lr, r8
 801592a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801592e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015936:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801593a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801593e:	ea4e 070a 	orr.w	r7, lr, sl
 8015942:	9708      	str	r7, [sp, #32]
 8015944:	2eff      	cmp	r6, #255	; 0xff
 8015946:	d01d      	beq.n	8015984 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8015948:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801594a:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 801594e:	fb06 f808 	mul.w	r8, r6, r8
 8015952:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015956:	fb06 f60c 	mul.w	r6, r6, ip
 801595a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801595e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015962:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015966:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801596a:	44c6      	add	lr, r8
 801596c:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8015970:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015974:	0a36      	lsrs	r6, r6, #8
 8015976:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801597a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801597e:	ea4e 0606 	orr.w	r6, lr, r6
 8015982:	960c      	str	r6, [sp, #48]	; 0x30
 8015984:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015986:	9f08      	ldr	r7, [sp, #32]
 8015988:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801598c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015990:	fb09 f606 	mul.w	r6, r9, r6
 8015994:	fb02 660c 	mla	r6, r2, ip, r6
 8015998:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801599c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801599e:	fb00 660c 	mla	r6, r0, ip, r6
 80159a2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80159a6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80159a8:	fb0b 660c 	mla	r6, fp, ip, r6
 80159ac:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80159b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80159b4:	fb09 f90c 	mul.w	r9, r9, ip
 80159b8:	fb02 9303 	mla	r3, r2, r3, r9
 80159bc:	9a08      	ldr	r2, [sp, #32]
 80159be:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80159c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80159c4:	fb00 330e 	mla	r3, r0, lr, r3
 80159c8:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80159cc:	fb0b 3b00 	mla	fp, fp, r0, r3
 80159d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159d2:	881b      	ldrh	r3, [r3, #0]
 80159d4:	43c9      	mvns	r1, r1
 80159d6:	1218      	asrs	r0, r3, #8
 80159d8:	b2c9      	uxtb	r1, r1
 80159da:	10da      	asrs	r2, r3, #3
 80159dc:	0a36      	lsrs	r6, r6, #8
 80159de:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80159e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80159e6:	00db      	lsls	r3, r3, #3
 80159e8:	4348      	muls	r0, r1
 80159ea:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80159ee:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80159f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80159f6:	b2db      	uxtb	r3, r3
 80159f8:	434b      	muls	r3, r1
 80159fa:	ea46 060b 	orr.w	r6, r6, fp
 80159fe:	434a      	muls	r2, r1
 8015a00:	1c41      	adds	r1, r0, #1
 8015a02:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015a06:	0c30      	lsrs	r0, r6, #16
 8015a08:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8015a0c:	494e      	ldr	r1, [pc, #312]	; (8015b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8015a0e:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8015a12:	1c59      	adds	r1, r3, #1
 8015a14:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015a18:	b2f3      	uxtb	r3, r6
 8015a1a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015a1e:	1c51      	adds	r1, r2, #1
 8015a20:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015a24:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015a28:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8015a2c:	00f6      	lsls	r6, r6, #3
 8015a2e:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8015a32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a36:	431e      	orrs	r6, r3
 8015a38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a3a:	801e      	strh	r6, [r3, #0]
 8015a3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a3e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015a40:	3302      	adds	r3, #2
 8015a42:	9310      	str	r3, [sp, #64]	; 0x40
 8015a44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a46:	4413      	add	r3, r2
 8015a48:	9329      	str	r3, [sp, #164]	; 0xa4
 8015a4a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015a4c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015a4e:	4413      	add	r3, r2
 8015a50:	932a      	str	r3, [sp, #168]	; 0xa8
 8015a52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015a54:	3b01      	subs	r3, #1
 8015a56:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a58:	e6b7      	b.n	80157ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015a5a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a5c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015a5e:	4413      	add	r3, r2
 8015a60:	9329      	str	r3, [sp, #164]	; 0xa4
 8015a62:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015a64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015a66:	4413      	add	r3, r2
 8015a68:	932a      	str	r3, [sp, #168]	; 0xa8
 8015a6a:	9b07      	ldr	r3, [sp, #28]
 8015a6c:	3b01      	subs	r3, #1
 8015a6e:	9307      	str	r3, [sp, #28]
 8015a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015a72:	3302      	adds	r3, #2
 8015a74:	930a      	str	r3, [sp, #40]	; 0x28
 8015a76:	e65f      	b.n	8015738 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015a78:	f47f ae71 	bne.w	801575e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8015a7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015a7e:	2b00      	cmp	r3, #0
 8015a80:	f340 81a7 	ble.w	8015dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015a84:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015a88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015a8c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015a90:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015a92:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015a96:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015a9a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015a9e:	eef0 6a48 	vmov.f32	s13, s16
 8015aa2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015aa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015aaa:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015aae:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015ab2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015ab6:	eef0 6a68 	vmov.f32	s13, s17
 8015aba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015abe:	ee18 2a10 	vmov	r2, s16
 8015ac2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015ac6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015aca:	ee18 2a90 	vmov	r2, s17
 8015ace:	932b      	str	r3, [sp, #172]	; 0xac
 8015ad0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ad2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ad6:	932c      	str	r3, [sp, #176]	; 0xb0
 8015ad8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ada:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015adc:	3b01      	subs	r3, #1
 8015ade:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ae2:	9312      	str	r3, [sp, #72]	; 0x48
 8015ae4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ae6:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8015aea:	bf08      	it	eq
 8015aec:	4613      	moveq	r3, r2
 8015aee:	9307      	str	r3, [sp, #28]
 8015af0:	eef0 8a67 	vmov.f32	s17, s15
 8015af4:	eeb0 8a47 	vmov.f32	s16, s14
 8015af8:	e617      	b.n	801572a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8015afa:	b158      	cbz	r0, 8015b14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8015afc:	5d32      	ldrb	r2, [r6, r4]
 8015afe:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015b02:	9208      	str	r2, [sp, #32]
 8015b04:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8015b08:	26ff      	movs	r6, #255	; 0xff
 8015b0a:	46b0      	mov	r8, r6
 8015b0c:	e69a      	b.n	8015844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8015b0e:	26ff      	movs	r6, #255	; 0xff
 8015b10:	46b2      	mov	sl, r6
 8015b12:	e697      	b.n	8015844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8015b14:	26ff      	movs	r6, #255	; 0xff
 8015b16:	46b2      	mov	sl, r6
 8015b18:	e7f7      	b.n	8015b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8015b1a:	1c57      	adds	r7, r2, #1
 8015b1c:	d18e      	bne.n	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015b1e:	4294      	cmp	r4, r2
 8015b20:	dd8c      	ble.n	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015b22:	1c5e      	adds	r6, r3, #1
 8015b24:	db8a      	blt.n	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015b26:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015b28:	429e      	cmp	r6, r3
 8015b2a:	dd87      	ble.n	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015b2c:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8015b30:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015b34:	e9cd 4600 	strd	r4, r6, [sp]
 8015b38:	462b      	mov	r3, r5
 8015b3a:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8015b3e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015b40:	f7ff fc6c 	bl	801541c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8015b44:	e77a      	b.n	8015a3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015b46:	bf00      	nop
 8015b48:	fffff800 	.word	0xfffff800
 8015b4c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015b4e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015b50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015b54:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015b56:	1409      	asrs	r1, r1, #16
 8015b58:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015b5c:	141b      	asrs	r3, r3, #16
 8015b5e:	fb04 1303 	mla	r3, r4, r3, r1
 8015b62:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015b64:	18ce      	adds	r6, r1, r3
 8015b66:	5ccb      	ldrb	r3, [r1, r3]
 8015b68:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015b6c:	0e1f      	lsrs	r7, r3, #24
 8015b6e:	2a00      	cmp	r2, #0
 8015b70:	f000 811f 	beq.w	8015db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8015b74:	7871      	ldrb	r1, [r6, #1]
 8015b76:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8015b7a:	910d      	str	r1, [sp, #52]	; 0x34
 8015b7c:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8015b80:	2800      	cmp	r0, #0
 8015b82:	f000 8120 	beq.w	8015dc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8015b86:	1931      	adds	r1, r6, r4
 8015b88:	5d36      	ldrb	r6, [r6, r4]
 8015b8a:	7849      	ldrb	r1, [r1, #1]
 8015b8c:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8015b90:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8015b94:	9609      	str	r6, [sp, #36]	; 0x24
 8015b96:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8015b9a:	910e      	str	r1, [sp, #56]	; 0x38
 8015b9c:	0e0e      	lsrs	r6, r1, #24
 8015b9e:	b292      	uxth	r2, r2
 8015ba0:	b280      	uxth	r0, r0
 8015ba2:	fb02 fa00 	mul.w	sl, r2, r0
 8015ba6:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8015baa:	0112      	lsls	r2, r2, #4
 8015bac:	eba2 080a 	sub.w	r8, r2, sl
 8015bb0:	b280      	uxth	r0, r0
 8015bb2:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8015bb6:	fa1f f888 	uxth.w	r8, r8
 8015bba:	1a09      	subs	r1, r1, r0
 8015bbc:	b289      	uxth	r1, r1
 8015bbe:	fb08 f20e 	mul.w	r2, r8, lr
 8015bc2:	fb01 2207 	mla	r2, r1, r7, r2
 8015bc6:	fb00 2209 	mla	r2, r0, r9, r2
 8015bca:	fb0a 2206 	mla	r2, sl, r6, r2
 8015bce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8015bd2:	9213      	str	r2, [sp, #76]	; 0x4c
 8015bd4:	2a00      	cmp	r2, #0
 8015bd6:	f000 80de 	beq.w	8015d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8015bda:	2fff      	cmp	r7, #255	; 0xff
 8015bdc:	d01a      	beq.n	8015c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8015bde:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015be2:	fb07 fc0c 	mul.w	ip, r7, ip
 8015be6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015bea:	435f      	muls	r7, r3
 8015bec:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015bf0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015bf4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015bf8:	4463      	add	r3, ip
 8015bfa:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8015bfe:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8015c02:	0a1b      	lsrs	r3, r3, #8
 8015c04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015c08:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015c0c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015c10:	ea43 030c 	orr.w	r3, r3, ip
 8015c14:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015c18:	d01f      	beq.n	8015c5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8015c1a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015c1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015c1e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015c22:	fb0e f707 	mul.w	r7, lr, r7
 8015c26:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015c2a:	fb0e fe0c 	mul.w	lr, lr, ip
 8015c2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015c32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015c3a:	44bc      	add	ip, r7
 8015c3c:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8015c40:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8015c44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015c48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c50:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015c54:	ea4c 020e 	orr.w	r2, ip, lr
 8015c58:	920d      	str	r2, [sp, #52]	; 0x34
 8015c5a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015c5e:	d01e      	beq.n	8015c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8015c60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015c62:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8015c66:	fb09 fe0e 	mul.w	lr, r9, lr
 8015c6a:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015c6e:	fb09 f907 	mul.w	r9, r9, r7
 8015c72:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015c76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c7a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015c7e:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8015c82:	44f4      	add	ip, lr
 8015c84:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8015c88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015c8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015c90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015c94:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015c98:	ea4c 0209 	orr.w	r2, ip, r9
 8015c9c:	9209      	str	r2, [sp, #36]	; 0x24
 8015c9e:	2eff      	cmp	r6, #255	; 0xff
 8015ca0:	d01c      	beq.n	8015cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8015ca2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015ca4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8015ca8:	fb06 fe0e 	mul.w	lr, r6, lr
 8015cac:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015cb0:	437e      	muls	r6, r7
 8015cb2:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015cb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015cba:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015cbe:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8015cc2:	44f4      	add	ip, lr
 8015cc4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015cc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015ccc:	0a36      	lsrs	r6, r6, #8
 8015cce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015cd2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015cd6:	ea4c 0206 	orr.w	r2, ip, r6
 8015cda:	920e      	str	r2, [sp, #56]	; 0x38
 8015cdc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015cde:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8015ce2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015ce4:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015ce8:	fb08 f606 	mul.w	r6, r8, r6
 8015cec:	fb01 6607 	mla	r6, r1, r7, r6
 8015cf0:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8015cf4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015cf6:	fb00 6607 	mla	r6, r0, r7, r6
 8015cfa:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8015cfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015d00:	fb0a 6607 	mla	r6, sl, r7, r6
 8015d04:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015d08:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d0a:	fb08 f807 	mul.w	r8, r8, r7
 8015d0e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015d12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015d18:	fb01 8303 	mla	r3, r1, r3, r8
 8015d1c:	fb00 330c 	mla	r3, r0, ip, r3
 8015d20:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8015d24:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8015d28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d2a:	f8bb 3000 	ldrh.w	r3, [fp]
 8015d2e:	43d2      	mvns	r2, r2
 8015d30:	1218      	asrs	r0, r3, #8
 8015d32:	b2d2      	uxtb	r2, r2
 8015d34:	0a36      	lsrs	r6, r6, #8
 8015d36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015d3a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015d3e:	4350      	muls	r0, r2
 8015d40:	10d9      	asrs	r1, r3, #3
 8015d42:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015d46:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015d4a:	00db      	lsls	r3, r3, #3
 8015d4c:	ea46 060e 	orr.w	r6, r6, lr
 8015d50:	1c47      	adds	r7, r0, #1
 8015d52:	b2db      	uxtb	r3, r3
 8015d54:	4353      	muls	r3, r2
 8015d56:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015d5a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015d5e:	0c37      	lsrs	r7, r6, #16
 8015d60:	4351      	muls	r1, r2
 8015d62:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015d66:	4a1d      	ldr	r2, [pc, #116]	; (8015ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8015d68:	1c5f      	adds	r7, r3, #1
 8015d6a:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8015d6e:	b2f7      	uxtb	r7, r6
 8015d70:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8015d74:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8015d78:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8015d7c:	1c4b      	adds	r3, r1, #1
 8015d7e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015d82:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015d86:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8015d8a:	00f6      	lsls	r6, r6, #3
 8015d8c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015d90:	4330      	orrs	r0, r6
 8015d92:	f8ab 0000 	strh.w	r0, [fp]
 8015d96:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015d98:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015d9a:	4413      	add	r3, r2
 8015d9c:	9329      	str	r3, [sp, #164]	; 0xa4
 8015d9e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015da0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015da2:	4413      	add	r3, r2
 8015da4:	932a      	str	r3, [sp, #168]	; 0xa8
 8015da6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015da8:	3b01      	subs	r3, #1
 8015daa:	f10b 0b02 	add.w	fp, fp, #2
 8015dae:	9310      	str	r3, [sp, #64]	; 0x40
 8015db0:	e4ee      	b.n	8015790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8015db2:	b158      	cbz	r0, 8015dcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8015db4:	5d31      	ldrb	r1, [r6, r4]
 8015db6:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8015dba:	9109      	str	r1, [sp, #36]	; 0x24
 8015dbc:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8015dc0:	26ff      	movs	r6, #255	; 0xff
 8015dc2:	46b6      	mov	lr, r6
 8015dc4:	e6eb      	b.n	8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8015dc6:	26ff      	movs	r6, #255	; 0xff
 8015dc8:	46b1      	mov	r9, r6
 8015dca:	e6e8      	b.n	8015b9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8015dcc:	26ff      	movs	r6, #255	; 0xff
 8015dce:	46b1      	mov	r9, r6
 8015dd0:	e7f7      	b.n	8015dc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8015dd2:	b017      	add	sp, #92	; 0x5c
 8015dd4:	ecbd 8b08 	vpop	{d8-d11}
 8015dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ddc:	fffff800 	.word	0xfffff800

08015de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8015de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015de4:	b087      	sub	sp, #28
 8015de6:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8015dea:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8015dee:	9105      	str	r1, [sp, #20]
 8015df0:	fb00 e604 	mla	r6, r0, r4, lr
 8015df4:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8015df8:	9102      	str	r1, [sp, #8]
 8015dfa:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8015dfe:	9103      	str	r1, [sp, #12]
 8015e00:	9905      	ldr	r1, [sp, #20]
 8015e02:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8015e06:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015e0a:	8809      	ldrh	r1, [r1, #0]
 8015e0c:	2800      	cmp	r0, #0
 8015e0e:	eb03 0a06 	add.w	sl, r3, r6
 8015e12:	f2c0 80ca 	blt.w	8015faa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8015e16:	4287      	cmp	r7, r0
 8015e18:	f340 80c7 	ble.w	8015faa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8015e1c:	f1be 0f00 	cmp.w	lr, #0
 8015e20:	f2c0 80bf 	blt.w	8015fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8015e24:	4574      	cmp	r4, lr
 8015e26:	f340 80bc 	ble.w	8015fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8015e2a:	f813 c006 	ldrb.w	ip, [r3, r6]
 8015e2e:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8015e32:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015e36:	d01c      	beq.n	8015e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8015e38:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015e3c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015e40:	4372      	muls	r2, r6
 8015e42:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8015e46:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015e4a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015e4e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015e52:	fb0c f609 	mul.w	r6, ip, r9
 8015e56:	eb03 0902 	add.w	r9, r3, r2
 8015e5a:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8015e5e:	f106 0820 	add.w	r8, r6, #32
 8015e62:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8015e66:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015e6a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015e6e:	ea49 0908 	orr.w	r9, r9, r8
 8015e72:	fa1f f989 	uxth.w	r9, r9
 8015e76:	f11e 0301 	adds.w	r3, lr, #1
 8015e7a:	f100 809b 	bmi.w	8015fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8015e7e:	429c      	cmp	r4, r3
 8015e80:	f340 8098 	ble.w	8015fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8015e84:	2d00      	cmp	r5, #0
 8015e86:	f000 8095 	beq.w	8015fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8015e8a:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8015e8e:	9b03      	ldr	r3, [sp, #12]
 8015e90:	2eff      	cmp	r6, #255	; 0xff
 8015e92:	885b      	ldrh	r3, [r3, #2]
 8015e94:	d01b      	beq.n	8015ece <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8015e96:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015e9a:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8015e9e:	fb08 f202 	mul.w	r2, r8, r2
 8015ea2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015ea6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015eaa:	fb06 f803 	mul.w	r8, r6, r3
 8015eae:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8015eb2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015eb6:	441a      	add	r2, r3
 8015eb8:	f108 0320 	add.w	r3, r8, #32
 8015ebc:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015ec0:	0a1b      	lsrs	r3, r3, #8
 8015ec2:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015ec6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015eca:	ea4b 0303 	orr.w	r3, fp, r3
 8015ece:	b29b      	uxth	r3, r3
 8015ed0:	9301      	str	r3, [sp, #4]
 8015ed2:	3001      	adds	r0, #1
 8015ed4:	d474      	bmi.n	8015fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015ed6:	4287      	cmp	r7, r0
 8015ed8:	dd72      	ble.n	8015fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015eda:	9a02      	ldr	r2, [sp, #8]
 8015edc:	2a00      	cmp	r2, #0
 8015ede:	f000 8121 	beq.w	8016124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8015ee2:	f1be 0f00 	cmp.w	lr, #0
 8015ee6:	db68      	blt.n	8015fba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8015ee8:	4574      	cmp	r4, lr
 8015eea:	dd66      	ble.n	8015fba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8015eec:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8015ef0:	9a03      	ldr	r2, [sp, #12]
 8015ef2:	2fff      	cmp	r7, #255	; 0xff
 8015ef4:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8015ef8:	d01c      	beq.n	8015f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8015efa:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8015efe:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015f02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015f06:	fb07 fb00 	mul.w	fp, r7, r0
 8015f0a:	fb08 f802 	mul.w	r8, r8, r2
 8015f0e:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8015f12:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8015f16:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015f1a:	4490      	add	r8, r2
 8015f1c:	f10b 0220 	add.w	r2, fp, #32
 8015f20:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8015f24:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015f28:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015f2c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015f30:	ea40 000b 	orr.w	r0, r0, fp
 8015f34:	b280      	uxth	r0, r0
 8015f36:	f11e 0e01 	adds.w	lr, lr, #1
 8015f3a:	d446      	bmi.n	8015fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8015f3c:	4574      	cmp	r4, lr
 8015f3e:	dd44      	ble.n	8015fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8015f40:	2d00      	cmp	r5, #0
 8015f42:	d045      	beq.n	8015fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8015f44:	1c62      	adds	r2, r4, #1
 8015f46:	9b03      	ldr	r3, [sp, #12]
 8015f48:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015f4c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015f50:	2cff      	cmp	r4, #255	; 0xff
 8015f52:	d01c      	beq.n	8015f8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8015f54:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015f58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015f5c:	fb08 fe0e 	mul.w	lr, r8, lr
 8015f60:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8015f64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015f68:	fb04 f802 	mul.w	r8, r4, r2
 8015f6c:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8015f70:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015f74:	4472      	add	r2, lr
 8015f76:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8015f7a:	f108 0a20 	add.w	sl, r8, #32
 8015f7e:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8015f82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015f86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f8a:	ea42 020a 	orr.w	r2, r2, sl
 8015f8e:	b292      	uxth	r2, r2
 8015f90:	2d0f      	cmp	r5, #15
 8015f92:	d91f      	bls.n	8015fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8015f94:	4b67      	ldr	r3, [pc, #412]	; (8016134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8015f96:	4a68      	ldr	r2, [pc, #416]	; (8016138 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8015f98:	4868      	ldr	r0, [pc, #416]	; (801613c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8015f9a:	f240 210d 	movw	r1, #525	; 0x20d
 8015f9e:	f004 f9e9 	bl	801a374 <__assert_func>
 8015fa2:	4689      	mov	r9, r1
 8015fa4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8015fa8:	e765      	b.n	8015e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8015faa:	26ff      	movs	r6, #255	; 0xff
 8015fac:	9101      	str	r1, [sp, #4]
 8015fae:	4689      	mov	r9, r1
 8015fb0:	46b4      	mov	ip, r6
 8015fb2:	e78e      	b.n	8015ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8015fb4:	9101      	str	r1, [sp, #4]
 8015fb6:	26ff      	movs	r6, #255	; 0xff
 8015fb8:	e78b      	b.n	8015ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8015fba:	4608      	mov	r0, r1
 8015fbc:	27ff      	movs	r7, #255	; 0xff
 8015fbe:	e7ba      	b.n	8015f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8015fc0:	24ff      	movs	r4, #255	; 0xff
 8015fc2:	460a      	mov	r2, r1
 8015fc4:	4608      	mov	r0, r1
 8015fc6:	4627      	mov	r7, r4
 8015fc8:	e7e2      	b.n	8015f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015fca:	460a      	mov	r2, r1
 8015fcc:	24ff      	movs	r4, #255	; 0xff
 8015fce:	e7df      	b.n	8015f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015fd0:	460a      	mov	r2, r1
 8015fd2:	24ff      	movs	r4, #255	; 0xff
 8015fd4:	9b02      	ldr	r3, [sp, #8]
 8015fd6:	2b0f      	cmp	r3, #15
 8015fd8:	d8dc      	bhi.n	8015f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8015fda:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8015fde:	fa1f f885 	uxth.w	r8, r5
 8015fe2:	fb08 fa0e 	mul.w	sl, r8, lr
 8015fe6:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015fea:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8015fee:	9303      	str	r3, [sp, #12]
 8015ff0:	fa1f f38e 	uxth.w	r3, lr
 8015ff4:	9304      	str	r3, [sp, #16]
 8015ff6:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015ffa:	9b02      	ldr	r3, [sp, #8]
 8015ffc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016000:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016004:	fb15 fe03 	smulbb	lr, r5, r3
 8016008:	ea48 0809 	orr.w	r8, r8, r9
 801600c:	f1c3 0910 	rsb	r9, r3, #16
 8016010:	9b01      	ldr	r3, [sp, #4]
 8016012:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016016:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801601a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801601e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016022:	eba9 0905 	sub.w	r9, r9, r5
 8016026:	ea4b 0303 	orr.w	r3, fp, r3
 801602a:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801602e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016032:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8016036:	436b      	muls	r3, r5
 8016038:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801603c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016040:	ea4b 0202 	orr.w	r2, fp, r2
 8016044:	fb09 3308 	mla	r3, r9, r8, r3
 8016048:	fb0e 3302 	mla	r3, lr, r2, r3
 801604c:	0402      	lsls	r2, r0, #16
 801604e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016052:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016056:	4310      	orrs	r0, r2
 8016058:	9a02      	ldr	r2, [sp, #8]
 801605a:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801605e:	fb0e 3e00 	mla	lr, lr, r0, r3
 8016062:	9803      	ldr	r0, [sp, #12]
 8016064:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8016068:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801606c:	9804      	ldr	r0, [sp, #16]
 801606e:	1a2d      	subs	r5, r5, r0
 8016070:	9803      	ldr	r0, [sp, #12]
 8016072:	eba0 000a 	sub.w	r0, r0, sl
 8016076:	b280      	uxth	r0, r0
 8016078:	b2ad      	uxth	r5, r5
 801607a:	4346      	muls	r6, r0
 801607c:	9804      	ldr	r0, [sp, #16]
 801607e:	fb0c 6605 	mla	r6, ip, r5, r6
 8016082:	fb00 6707 	mla	r7, r0, r7, r6
 8016086:	fb0a 7404 	mla	r4, sl, r4, r7
 801608a:	b292      	uxth	r2, r2
 801608c:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016090:	4354      	muls	r4, r2
 8016092:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016096:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801609a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801609e:	f104 0a01 	add.w	sl, r4, #1
 80160a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80160a6:	ea43 0e0e 	orr.w	lr, r3, lr
 80160aa:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80160ae:	fa1f f38e 	uxth.w	r3, lr
 80160b2:	1208      	asrs	r0, r1, #8
 80160b4:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 80160b8:	b2e4      	uxtb	r4, r4
 80160ba:	121d      	asrs	r5, r3, #8
 80160bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80160c0:	fb10 f004 	smulbb	r0, r0, r4
 80160c4:	10ce      	asrs	r6, r1, #3
 80160c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80160ca:	00c9      	lsls	r1, r1, #3
 80160cc:	fb05 0502 	mla	r5, r5, r2, r0
 80160d0:	b2c9      	uxtb	r1, r1
 80160d2:	10d8      	asrs	r0, r3, #3
 80160d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80160d8:	00db      	lsls	r3, r3, #3
 80160da:	fb16 f604 	smulbb	r6, r6, r4
 80160de:	b2db      	uxtb	r3, r3
 80160e0:	fb11 f404 	smulbb	r4, r1, r4
 80160e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80160e8:	fb00 6002 	mla	r0, r0, r2, r6
 80160ec:	fb03 4202 	mla	r2, r3, r2, r4
 80160f0:	b2ad      	uxth	r5, r5
 80160f2:	b292      	uxth	r2, r2
 80160f4:	1c6b      	adds	r3, r5, #1
 80160f6:	1c51      	adds	r1, r2, #1
 80160f8:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80160fc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016100:	b280      	uxth	r0, r0
 8016102:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016106:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801610a:	4313      	orrs	r3, r2
 801610c:	1c42      	adds	r2, r0, #1
 801610e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016112:	0940      	lsrs	r0, r0, #5
 8016114:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016118:	9a05      	ldr	r2, [sp, #20]
 801611a:	4303      	orrs	r3, r0
 801611c:	8013      	strh	r3, [r2, #0]
 801611e:	b007      	add	sp, #28
 8016120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016124:	2d0f      	cmp	r5, #15
 8016126:	f63f af35 	bhi.w	8015f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801612a:	24ff      	movs	r4, #255	; 0xff
 801612c:	460a      	mov	r2, r1
 801612e:	4608      	mov	r0, r1
 8016130:	4627      	mov	r7, r4
 8016132:	e752      	b.n	8015fda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8016134:	0801dee5 	.word	0x0801dee5
 8016138:	0801e43d 	.word	0x0801e43d
 801613c:	0801df6d 	.word	0x0801df6d

08016140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016144:	ed2d 8b08 	vpush	{d8-d11}
 8016148:	b099      	sub	sp, #100	; 0x64
 801614a:	eeb0 aa40 	vmov.f32	s20, s0
 801614e:	9308      	str	r3, [sp, #32]
 8016150:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016154:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8016156:	930b      	str	r3, [sp, #44]	; 0x2c
 8016158:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801615c:	9314      	str	r3, [sp, #80]	; 0x50
 801615e:	9113      	str	r1, [sp, #76]	; 0x4c
 8016160:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016164:	9017      	str	r0, [sp, #92]	; 0x5c
 8016166:	6870      	ldr	r0, [r6, #4]
 8016168:	9216      	str	r2, [sp, #88]	; 0x58
 801616a:	fb00 1303 	mla	r3, r0, r3, r1
 801616e:	6831      	ldr	r1, [r6, #0]
 8016170:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8016172:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8016176:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801617a:	9309      	str	r3, [sp, #36]	; 0x24
 801617c:	6813      	ldr	r3, [r2, #0]
 801617e:	930c      	str	r3, [sp, #48]	; 0x30
 8016180:	6853      	ldr	r3, [r2, #4]
 8016182:	930d      	str	r3, [sp, #52]	; 0x34
 8016184:	006b      	lsls	r3, r5, #1
 8016186:	9312      	str	r3, [sp, #72]	; 0x48
 8016188:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801618c:	930a      	str	r3, [sp, #40]	; 0x28
 801618e:	eef0 9a60 	vmov.f32	s19, s1
 8016192:	eeb0 9a41 	vmov.f32	s18, s2
 8016196:	eeb0 8a62 	vmov.f32	s16, s5
 801619a:	eef0 8a43 	vmov.f32	s17, s6
 801619e:	eef0 ba44 	vmov.f32	s23, s8
 80161a2:	eeb0 ba64 	vmov.f32	s22, s9
 80161a6:	eef0 aa45 	vmov.f32	s21, s10
 80161aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80161ac:	2b00      	cmp	r3, #0
 80161ae:	dc03      	bgt.n	80161b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80161b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80161b2:	2b00      	cmp	r3, #0
 80161b4:	f340 83bf 	ble.w	8016936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80161b8:	9b08      	ldr	r3, [sp, #32]
 80161ba:	2b00      	cmp	r3, #0
 80161bc:	f340 81cb 	ble.w	8016556 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80161c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80161c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80161c4:	1412      	asrs	r2, r2, #16
 80161c6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80161ca:	d42f      	bmi.n	801622c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80161cc:	1c51      	adds	r1, r2, #1
 80161ce:	428d      	cmp	r5, r1
 80161d0:	dd2f      	ble.n	8016232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80161d2:	2b00      	cmp	r3, #0
 80161d4:	db2d      	blt.n	8016232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80161d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80161d8:	1c59      	adds	r1, r3, #1
 80161da:	4288      	cmp	r0, r1
 80161dc:	dd29      	ble.n	8016232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80161de:	9b08      	ldr	r3, [sp, #32]
 80161e0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80161e2:	992b      	ldr	r1, [sp, #172]	; 0xac
 80161e4:	3b01      	subs	r3, #1
 80161e6:	fb02 1203 	mla	r2, r2, r3, r1
 80161ea:	1412      	asrs	r2, r2, #16
 80161ec:	d42b      	bmi.n	8016246 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80161ee:	3201      	adds	r2, #1
 80161f0:	4295      	cmp	r5, r2
 80161f2:	dd28      	ble.n	8016246 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80161f4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80161f6:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80161f8:	fb02 1303 	mla	r3, r2, r3, r1
 80161fc:	141b      	asrs	r3, r3, #16
 80161fe:	d422      	bmi.n	8016246 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016200:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016202:	3301      	adds	r3, #1
 8016204:	429a      	cmp	r2, r3
 8016206:	dd1e      	ble.n	8016246 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016208:	9b08      	ldr	r3, [sp, #32]
 801620a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801620e:	9315      	str	r3, [sp, #84]	; 0x54
 8016210:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016214:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016216:	2b00      	cmp	r3, #0
 8016218:	f300 8217 	bgt.w	801664a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 801621c:	9b08      	ldr	r3, [sp, #32]
 801621e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016224:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016228:	9309      	str	r3, [sp, #36]	; 0x24
 801622a:	e196      	b.n	801655a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801622c:	1c57      	adds	r7, r2, #1
 801622e:	f040 8183 	bne.w	8016538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016232:	42aa      	cmp	r2, r5
 8016234:	f280 8180 	bge.w	8016538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016238:	1c5e      	adds	r6, r3, #1
 801623a:	f2c0 817d 	blt.w	8016538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801623e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016240:	4293      	cmp	r3, r2
 8016242:	f280 8179 	bge.w	8016538 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016246:	9b08      	ldr	r3, [sp, #32]
 8016248:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801624a:	9315      	str	r3, [sp, #84]	; 0x54
 801624c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016250:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016252:	2b00      	cmp	r3, #0
 8016254:	dde2      	ble.n	801621c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8016256:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016258:	1419      	asrs	r1, r3, #16
 801625a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801625c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016260:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016262:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016266:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016268:	141b      	asrs	r3, r3, #16
 801626a:	f100 81d3 	bmi.w	8016614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 801626e:	1c58      	adds	r0, r3, #1
 8016270:	4285      	cmp	r5, r0
 8016272:	f340 81d1 	ble.w	8016618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016276:	2900      	cmp	r1, #0
 8016278:	f2c0 81ce 	blt.w	8016618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801627c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801627e:	1c48      	adds	r0, r1, #1
 8016280:	4284      	cmp	r4, r0
 8016282:	f340 81c9 	ble.w	8016618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016286:	fb01 3105 	mla	r1, r1, r5, r3
 801628a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801628c:	fa1f fe82 	uxth.w	lr, r2
 8016290:	eb03 0a01 	add.w	sl, r3, r1
 8016294:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8016298:	f813 9001 	ldrb.w	r9, [r3, r1]
 801629c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80162a0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80162a4:	b29b      	uxth	r3, r3
 80162a6:	f1bc 0f00 	cmp.w	ip, #0
 80162aa:	f000 8195 	beq.w	80165d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 80162ae:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80162b2:	940e      	str	r4, [sp, #56]	; 0x38
 80162b4:	eb0a 0b05 	add.w	fp, sl, r5
 80162b8:	fa1f fa8c 	uxth.w	sl, ip
 80162bc:	fb0a fe0e 	mul.w	lr, sl, lr
 80162c0:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80162c4:	fa1f fa8a 	uxth.w	sl, sl
 80162c8:	eba0 000e 	sub.w	r0, r0, lr
 80162cc:	eba3 030a 	sub.w	r3, r3, sl
 80162d0:	b280      	uxth	r0, r0
 80162d2:	fb08 f000 	mul.w	r0, r8, r0
 80162d6:	b29b      	uxth	r3, r3
 80162d8:	fb09 0303 	mla	r3, r9, r3, r0
 80162dc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80162de:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80162e2:	940f      	str	r4, [sp, #60]	; 0x3c
 80162e4:	fb0a 3300 	mla	r3, sl, r0, r3
 80162e8:	fb0e 3304 	mla	r3, lr, r4, r3
 80162ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80162f0:	2b00      	cmp	r3, #0
 80162f2:	f000 8114 	beq.w	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80162f6:	980c      	ldr	r0, [sp, #48]	; 0x30
 80162f8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80162fa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80162fe:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016302:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8016306:	f000 816c 	beq.w	80165e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801630a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801630e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016312:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016316:	fb09 f101 	mul.w	r1, r9, r1
 801631a:	fb0a fe0e 	mul.w	lr, sl, lr
 801631e:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016322:	f101 0b20 	add.w	fp, r1, #32
 8016326:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801632a:	44ce      	add	lr, r9
 801632c:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016330:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016334:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016338:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801633c:	ea4e 0909 	orr.w	r9, lr, r9
 8016340:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016344:	8841      	ldrh	r1, [r0, #2]
 8016346:	d019      	beq.n	801637c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8016348:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801634c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016350:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016354:	fb0a fe0e 	mul.w	lr, sl, lr
 8016358:	fb08 f801 	mul.w	r8, r8, r1
 801635c:	f108 0b20 	add.w	fp, r8, #32
 8016360:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8016364:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016368:	448e      	add	lr, r1
 801636a:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 801636e:	0a09      	lsrs	r1, r1, #8
 8016370:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8016374:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016378:	ea4a 0101 	orr.w	r1, sl, r1
 801637c:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016380:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016384:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016388:	ea4e 0909 	orr.w	r9, lr, r9
 801638c:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016390:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016394:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016398:	ea4e 0e01 	orr.w	lr, lr, r1
 801639c:	f1bc 0f00 	cmp.w	ip, #0
 80163a0:	f000 8121 	beq.w	80165e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80163a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80163a6:	eb00 0801 	add.w	r8, r0, r1
 80163aa:	5a41      	ldrh	r1, [r0, r1]
 80163ac:	980e      	ldr	r0, [sp, #56]	; 0x38
 80163ae:	28ff      	cmp	r0, #255	; 0xff
 80163b0:	d019      	beq.n	80163e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80163b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80163b4:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80163b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80163bc:	fb04 fb01 	mul.w	fp, r4, r1
 80163c0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80163c4:	fb0a fa00 	mul.w	sl, sl, r0
 80163c8:	f10b 0020 	add.w	r0, fp, #32
 80163cc:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80163d0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80163d4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80163d8:	4451      	add	r1, sl
 80163da:	0a00      	lsrs	r0, r0, #8
 80163dc:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80163e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80163e4:	4301      	orrs	r1, r0
 80163e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80163e8:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80163ec:	2cff      	cmp	r4, #255	; 0xff
 80163ee:	d01a      	beq.n	8016426 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 80163f0:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80163f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80163f8:	fb04 fb00 	mul.w	fp, r4, r0
 80163fc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016400:	fb0a fa08 	mul.w	sl, sl, r8
 8016404:	f10b 0820 	add.w	r8, fp, #32
 8016408:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 801640c:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016410:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016414:	4450      	add	r0, sl
 8016416:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801641a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801641e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016422:	ea40 0008 	orr.w	r0, r0, r8
 8016426:	fb1c f802 	smulbb	r8, ip, r2
 801642a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801642e:	f1cc 0a10 	rsb	sl, ip, #16
 8016432:	ebaa 0a02 	sub.w	sl, sl, r2
 8016436:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801643a:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 801643e:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016442:	fb0e f202 	mul.w	r2, lr, r2
 8016446:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801644a:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 801644e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016452:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016456:	fb09 220a 	mla	r2, r9, sl, r2
 801645a:	ea4b 0101 	orr.w	r1, fp, r1
 801645e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016462:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016466:	fb0c 2201 	mla	r2, ip, r1, r2
 801646a:	ea4e 0000 	orr.w	r0, lr, r0
 801646e:	fb08 2800 	mla	r8, r8, r0, r2
 8016472:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016476:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801647a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801647e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016482:	ea42 0808 	orr.w	r8, r2, r8
 8016486:	fa1f f288 	uxth.w	r2, r8
 801648a:	2bff      	cmp	r3, #255	; 0xff
 801648c:	d103      	bne.n	8016496 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 801648e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016490:	29ff      	cmp	r1, #255	; 0xff
 8016492:	f000 80bd 	beq.w	8016610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8016496:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016498:	f8b7 c000 	ldrh.w	ip, [r7]
 801649c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801649e:	434b      	muls	r3, r1
 80164a0:	f103 0e01 	add.w	lr, r3, #1
 80164a4:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 80164a8:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 80164ac:	ea4f 202c 	mov.w	r0, ip, asr #8
 80164b0:	fa5f fe8e 	uxtb.w	lr, lr
 80164b4:	1213      	asrs	r3, r2, #8
 80164b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80164ba:	fb10 f00e 	smulbb	r0, r0, lr
 80164be:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80164c2:	fb03 0301 	mla	r3, r3, r1, r0
 80164c6:	b298      	uxth	r0, r3
 80164c8:	ea4f 03ec 	mov.w	r3, ip, asr #3
 80164cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80164d0:	10d1      	asrs	r1, r2, #3
 80164d2:	fa5f fc8c 	uxtb.w	ip, ip
 80164d6:	00d2      	lsls	r2, r2, #3
 80164d8:	fb1c fc0e 	smulbb	ip, ip, lr
 80164dc:	b2d2      	uxtb	r2, r2
 80164de:	fb02 c204 	mla	r2, r2, r4, ip
 80164e2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80164e6:	fb13 f30e 	smulbb	r3, r3, lr
 80164ea:	b292      	uxth	r2, r2
 80164ec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80164f0:	fb01 3104 	mla	r1, r1, r4, r3
 80164f4:	f102 0c01 	add.w	ip, r2, #1
 80164f8:	1c43      	adds	r3, r0, #1
 80164fa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80164fe:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016502:	b289      	uxth	r1, r1
 8016504:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016508:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801650c:	4313      	orrs	r3, r2
 801650e:	1c4a      	adds	r2, r1, #1
 8016510:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016514:	0949      	lsrs	r1, r1, #5
 8016516:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801651a:	430b      	orrs	r3, r1
 801651c:	803b      	strh	r3, [r7, #0]
 801651e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016520:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016522:	4413      	add	r3, r2
 8016524:	932b      	str	r3, [sp, #172]	; 0xac
 8016526:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016528:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801652a:	441a      	add	r2, r3
 801652c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801652e:	922c      	str	r2, [sp, #176]	; 0xb0
 8016530:	3b01      	subs	r3, #1
 8016532:	3702      	adds	r7, #2
 8016534:	9315      	str	r3, [sp, #84]	; 0x54
 8016536:	e68b      	b.n	8016250 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016538:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801653a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801653c:	4413      	add	r3, r2
 801653e:	932b      	str	r3, [sp, #172]	; 0xac
 8016540:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016542:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016544:	441a      	add	r2, r3
 8016546:	9b08      	ldr	r3, [sp, #32]
 8016548:	922c      	str	r2, [sp, #176]	; 0xb0
 801654a:	3b01      	subs	r3, #1
 801654c:	9308      	str	r3, [sp, #32]
 801654e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016550:	3302      	adds	r3, #2
 8016552:	9309      	str	r3, [sp, #36]	; 0x24
 8016554:	e630      	b.n	80161b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016556:	f47f ae42 	bne.w	80161de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801655a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801655c:	2b00      	cmp	r3, #0
 801655e:	f340 81ea 	ble.w	8016936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8016562:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016566:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801656a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801656e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016570:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016574:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016578:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801657c:	eef0 6a48 	vmov.f32	s13, s16
 8016580:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016584:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016588:	ee37 8a48 	vsub.f32	s16, s14, s16
 801658c:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016590:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016594:	eef0 6a68 	vmov.f32	s13, s17
 8016598:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801659c:	ee18 2a10 	vmov	r2, s16
 80165a0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80165a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80165a8:	ee18 2a90 	vmov	r2, s17
 80165ac:	932d      	str	r3, [sp, #180]	; 0xb4
 80165ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80165b4:	932e      	str	r3, [sp, #184]	; 0xb8
 80165b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80165b8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80165ba:	3b01      	subs	r3, #1
 80165bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80165c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165c4:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 80165c8:	bf08      	it	eq
 80165ca:	4613      	moveq	r3, r2
 80165cc:	9308      	str	r3, [sp, #32]
 80165ce:	eef0 8a67 	vmov.f32	s17, s15
 80165d2:	eeb0 8a47 	vmov.f32	s16, s14
 80165d6:	e5e8      	b.n	80161aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80165d8:	fb08 f000 	mul.w	r0, r8, r0
 80165dc:	fb09 0303 	mla	r3, r9, r3, r0
 80165e0:	e684      	b.n	80162ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 80165e2:	4689      	mov	r9, r1
 80165e4:	e6ac      	b.n	8016340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 80165e6:	f1c2 0010 	rsb	r0, r2, #16
 80165ea:	fb0e f202 	mul.w	r2, lr, r2
 80165ee:	fb09 2900 	mla	r9, r9, r0, r2
 80165f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80165f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80165fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80165fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016602:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016606:	ea42 0909 	orr.w	r9, r2, r9
 801660a:	fa1f f289 	uxth.w	r2, r9
 801660e:	e73c      	b.n	801648a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016610:	803a      	strh	r2, [r7, #0]
 8016612:	e784      	b.n	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016614:	1c5c      	adds	r4, r3, #1
 8016616:	d182      	bne.n	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016618:	429d      	cmp	r5, r3
 801661a:	dd80      	ble.n	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801661c:	1c48      	adds	r0, r1, #1
 801661e:	f6ff af7e 	blt.w	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016622:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016624:	4288      	cmp	r0, r1
 8016626:	f77f af7a 	ble.w	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801662a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801662c:	9302      	str	r3, [sp, #8]
 801662e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016630:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8016634:	e9cd c005 	strd	ip, r0, [sp, #20]
 8016638:	e9cd 5300 	strd	r5, r3, [sp]
 801663c:	4639      	mov	r1, r7
 801663e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8016642:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016644:	f7ff fbcc 	bl	8015de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016648:	e769      	b.n	801651e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801664a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801664c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016650:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016652:	141f      	asrs	r7, r3, #16
 8016654:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016658:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801665a:	141b      	asrs	r3, r3, #16
 801665c:	fb05 3707 	mla	r7, r5, r7, r3
 8016660:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016662:	fa1f fc82 	uxth.w	ip, r2
 8016666:	eb03 0a07 	add.w	sl, r3, r7
 801666a:	ea4f 110c 	mov.w	r1, ip, lsl #4
 801666e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016672:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016676:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 801667a:	b29b      	uxth	r3, r3
 801667c:	2800      	cmp	r0, #0
 801667e:	f000 813f 	beq.w	8016900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8016682:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016686:	9410      	str	r4, [sp, #64]	; 0x40
 8016688:	eb0a 0b05 	add.w	fp, sl, r5
 801668c:	fa1f fa80 	uxth.w	sl, r0
 8016690:	fb0a fc0c 	mul.w	ip, sl, ip
 8016694:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016698:	fa1f fa8a 	uxth.w	sl, sl
 801669c:	eba1 010c 	sub.w	r1, r1, ip
 80166a0:	eba3 030a 	sub.w	r3, r3, sl
 80166a4:	b289      	uxth	r1, r1
 80166a6:	fb08 f101 	mul.w	r1, r8, r1
 80166aa:	b29b      	uxth	r3, r3
 80166ac:	fb09 1303 	mla	r3, r9, r3, r1
 80166b0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80166b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80166b6:	9411      	str	r4, [sp, #68]	; 0x44
 80166b8:	fb0a 3301 	mla	r3, sl, r1, r3
 80166bc:	fb0c 3304 	mla	r3, ip, r4, r3
 80166c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80166c4:	2b00      	cmp	r3, #0
 80166c6:	f000 810d 	beq.w	80168e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80166ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80166cc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80166ce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80166d2:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80166d6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80166da:	f000 8116 	beq.w	801690a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 80166de:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80166e2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80166e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80166ea:	fb09 f707 	mul.w	r7, r9, r7
 80166ee:	fb0a fc0c 	mul.w	ip, sl, ip
 80166f2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80166f6:	f107 0b20 	add.w	fp, r7, #32
 80166fa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80166fe:	44cc      	add	ip, r9
 8016700:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016704:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016708:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801670c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016710:	ea4c 0909 	orr.w	r9, ip, r9
 8016714:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016718:	884f      	ldrh	r7, [r1, #2]
 801671a:	d019      	beq.n	8016750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 801671c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016720:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016724:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016728:	fb08 f807 	mul.w	r8, r8, r7
 801672c:	fb0a fc0c 	mul.w	ip, sl, ip
 8016730:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016734:	f108 0b20 	add.w	fp, r8, #32
 8016738:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801673c:	44bc      	add	ip, r7
 801673e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016742:	0a3f      	lsrs	r7, r7, #8
 8016744:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016748:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801674c:	ea4c 0707 	orr.w	r7, ip, r7
 8016750:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016754:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016758:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801675c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016760:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016764:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016768:	ea4c 0909 	orr.w	r9, ip, r9
 801676c:	ea4a 0707 	orr.w	r7, sl, r7
 8016770:	2800      	cmp	r0, #0
 8016772:	f000 80cc 	beq.w	801690e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8016776:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016778:	eb01 0c04 	add.w	ip, r1, r4
 801677c:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016780:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016782:	29ff      	cmp	r1, #255	; 0xff
 8016784:	d01a      	beq.n	80167bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8016786:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016788:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 801678c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016790:	fb04 fb08 	mul.w	fp, r4, r8
 8016794:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016798:	fb0a fa01 	mul.w	sl, sl, r1
 801679c:	f10b 0120 	add.w	r1, fp, #32
 80167a0:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80167a4:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80167a8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80167ac:	44d0      	add	r8, sl
 80167ae:	0a09      	lsrs	r1, r1, #8
 80167b0:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80167b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167b8:	ea48 0801 	orr.w	r8, r8, r1
 80167bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80167be:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80167c2:	2cff      	cmp	r4, #255	; 0xff
 80167c4:	d01a      	beq.n	80167fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 80167c6:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80167ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80167ce:	fb04 fb01 	mul.w	fp, r4, r1
 80167d2:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80167d6:	fb0a fa0c 	mul.w	sl, sl, ip
 80167da:	f10b 0c20 	add.w	ip, fp, #32
 80167de:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80167e2:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80167e6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80167ea:	4451      	add	r1, sl
 80167ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80167f0:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80167f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80167f8:	ea41 010c 	orr.w	r1, r1, ip
 80167fc:	fb10 fc02 	smulbb	ip, r0, r2
 8016800:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016804:	f1c0 0a10 	rsb	sl, r0, #16
 8016808:	ebaa 0a02 	sub.w	sl, sl, r2
 801680c:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016810:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016814:	437a      	muls	r2, r7
 8016816:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 801681a:	040f      	lsls	r7, r1, #16
 801681c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016820:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016824:	fb09 220a 	mla	r2, r9, sl, r2
 8016828:	ea4b 0808 	orr.w	r8, fp, r8
 801682c:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016830:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016834:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016838:	fb00 2208 	mla	r2, r0, r8, r2
 801683c:	4339      	orrs	r1, r7
 801683e:	fb0c 2201 	mla	r2, ip, r1, r2
 8016842:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016846:	0952      	lsrs	r2, r2, #5
 8016848:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801684c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016850:	ea49 0202 	orr.w	r2, r9, r2
 8016854:	2bff      	cmp	r3, #255	; 0xff
 8016856:	b292      	uxth	r2, r2
 8016858:	d102      	bne.n	8016860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 801685a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801685c:	29ff      	cmp	r1, #255	; 0xff
 801685e:	d067      	beq.n	8016930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8016860:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016862:	f8be 0000 	ldrh.w	r0, [lr]
 8016866:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016868:	434b      	muls	r3, r1
 801686a:	1c59      	adds	r1, r3, #1
 801686c:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8016870:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016874:	1201      	asrs	r1, r0, #8
 8016876:	b2db      	uxtb	r3, r3
 8016878:	1217      	asrs	r7, r2, #8
 801687a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801687e:	fb11 f103 	smulbb	r1, r1, r3
 8016882:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8016886:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801688a:	00c0      	lsls	r0, r0, #3
 801688c:	fb07 1704 	mla	r7, r7, r4, r1
 8016890:	b2c0      	uxtb	r0, r0
 8016892:	10d1      	asrs	r1, r2, #3
 8016894:	00d2      	lsls	r2, r2, #3
 8016896:	fb10 f003 	smulbb	r0, r0, r3
 801689a:	b2d2      	uxtb	r2, r2
 801689c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80168a0:	fb02 0204 	mla	r2, r2, r4, r0
 80168a4:	fb1c fc03 	smulbb	ip, ip, r3
 80168a8:	b2bf      	uxth	r7, r7
 80168aa:	b292      	uxth	r2, r2
 80168ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80168b0:	fb01 c104 	mla	r1, r1, r4, ip
 80168b4:	1c7b      	adds	r3, r7, #1
 80168b6:	f102 0c01 	add.w	ip, r2, #1
 80168ba:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80168be:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80168c2:	b289      	uxth	r1, r1
 80168c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80168c8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80168cc:	ea47 070c 	orr.w	r7, r7, ip
 80168d0:	f101 0c01 	add.w	ip, r1, #1
 80168d4:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80168d8:	0949      	lsrs	r1, r1, #5
 80168da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80168de:	430f      	orrs	r7, r1
 80168e0:	f8ae 7000 	strh.w	r7, [lr]
 80168e4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80168e6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80168e8:	4413      	add	r3, r2
 80168ea:	932b      	str	r3, [sp, #172]	; 0xac
 80168ec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80168ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80168f0:	441a      	add	r2, r3
 80168f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80168f4:	922c      	str	r2, [sp, #176]	; 0xb0
 80168f6:	3b01      	subs	r3, #1
 80168f8:	f10e 0e02 	add.w	lr, lr, #2
 80168fc:	9315      	str	r3, [sp, #84]	; 0x54
 80168fe:	e489      	b.n	8016214 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016900:	fb08 f101 	mul.w	r1, r8, r1
 8016904:	fb09 1303 	mla	r3, r9, r3, r1
 8016908:	e6da      	b.n	80166c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 801690a:	46b9      	mov	r9, r7
 801690c:	e702      	b.n	8016714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 801690e:	f1c2 0110 	rsb	r1, r2, #16
 8016912:	437a      	muls	r2, r7
 8016914:	fb09 2901 	mla	r9, r9, r1, r2
 8016918:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801691c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016920:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016924:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016928:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801692c:	4302      	orrs	r2, r0
 801692e:	e791      	b.n	8016854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016930:	f8ae 2000 	strh.w	r2, [lr]
 8016934:	e7d6      	b.n	80168e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016936:	b019      	add	sp, #100	; 0x64
 8016938:	ecbd 8b08 	vpop	{d8-d11}
 801693c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016940 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016944:	b087      	sub	sp, #28
 8016946:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 801694a:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801694e:	9105      	str	r1, [sp, #20]
 8016950:	fb00 e604 	mla	r6, r0, r4, lr
 8016954:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016958:	9102      	str	r1, [sp, #8]
 801695a:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 801695e:	9103      	str	r1, [sp, #12]
 8016960:	9905      	ldr	r1, [sp, #20]
 8016962:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016966:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801696a:	8809      	ldrh	r1, [r1, #0]
 801696c:	2800      	cmp	r0, #0
 801696e:	eb02 0a06 	add.w	sl, r2, r6
 8016972:	f2c0 80ca 	blt.w	8016b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8016976:	4287      	cmp	r7, r0
 8016978:	f340 80c7 	ble.w	8016b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 801697c:	f1be 0f00 	cmp.w	lr, #0
 8016980:	f2c0 80bf 	blt.w	8016b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8016984:	4574      	cmp	r4, lr
 8016986:	f340 80bc 	ble.w	8016b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 801698a:	f812 c006 	ldrb.w	ip, [r2, r6]
 801698e:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8016992:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016996:	d01c      	beq.n	80169d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8016998:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 801699c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80169a0:	4372      	muls	r2, r6
 80169a2:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80169a6:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80169aa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80169ae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80169b2:	fb0c f609 	mul.w	r6, ip, r9
 80169b6:	eb03 0902 	add.w	r9, r3, r2
 80169ba:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80169be:	f106 0820 	add.w	r8, r6, #32
 80169c2:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80169c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80169ca:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80169ce:	ea49 0908 	orr.w	r9, r9, r8
 80169d2:	fa1f f989 	uxth.w	r9, r9
 80169d6:	f11e 0301 	adds.w	r3, lr, #1
 80169da:	f100 809b 	bmi.w	8016b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80169de:	429c      	cmp	r4, r3
 80169e0:	f340 8098 	ble.w	8016b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80169e4:	2d00      	cmp	r5, #0
 80169e6:	f000 8095 	beq.w	8016b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80169ea:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80169ee:	9b03      	ldr	r3, [sp, #12]
 80169f0:	2eff      	cmp	r6, #255	; 0xff
 80169f2:	885b      	ldrh	r3, [r3, #2]
 80169f4:	d01b      	beq.n	8016a2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 80169f6:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80169fa:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80169fe:	fb08 f202 	mul.w	r2, r8, r2
 8016a02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a06:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016a0a:	fb06 f803 	mul.w	r8, r6, r3
 8016a0e:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016a12:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016a16:	441a      	add	r2, r3
 8016a18:	f108 0320 	add.w	r3, r8, #32
 8016a1c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016a20:	0a1b      	lsrs	r3, r3, #8
 8016a22:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016a26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a2a:	ea4b 0303 	orr.w	r3, fp, r3
 8016a2e:	b29b      	uxth	r3, r3
 8016a30:	9301      	str	r3, [sp, #4]
 8016a32:	3001      	adds	r0, #1
 8016a34:	d474      	bmi.n	8016b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016a36:	4287      	cmp	r7, r0
 8016a38:	dd72      	ble.n	8016b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016a3a:	9a02      	ldr	r2, [sp, #8]
 8016a3c:	2a00      	cmp	r2, #0
 8016a3e:	f000 8111 	beq.w	8016c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8016a42:	f1be 0f00 	cmp.w	lr, #0
 8016a46:	db68      	blt.n	8016b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016a48:	4574      	cmp	r4, lr
 8016a4a:	dd66      	ble.n	8016b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016a4c:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8016a50:	9a03      	ldr	r2, [sp, #12]
 8016a52:	2fff      	cmp	r7, #255	; 0xff
 8016a54:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016a58:	d01c      	beq.n	8016a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8016a5a:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8016a5e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016a62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016a66:	fb07 fb00 	mul.w	fp, r7, r0
 8016a6a:	fb08 f802 	mul.w	r8, r8, r2
 8016a6e:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8016a72:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8016a76:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016a7a:	4490      	add	r8, r2
 8016a7c:	f10b 0220 	add.w	r2, fp, #32
 8016a80:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016a84:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016a88:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016a8c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016a90:	ea40 000b 	orr.w	r0, r0, fp
 8016a94:	b280      	uxth	r0, r0
 8016a96:	f11e 0e01 	adds.w	lr, lr, #1
 8016a9a:	d446      	bmi.n	8016b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8016a9c:	4574      	cmp	r4, lr
 8016a9e:	dd44      	ble.n	8016b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8016aa0:	2d00      	cmp	r5, #0
 8016aa2:	d045      	beq.n	8016b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8016aa4:	1c62      	adds	r2, r4, #1
 8016aa6:	9b03      	ldr	r3, [sp, #12]
 8016aa8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016aac:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016ab0:	2cff      	cmp	r4, #255	; 0xff
 8016ab2:	d01c      	beq.n	8016aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8016ab4:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016ab8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016abc:	fb08 fe0e 	mul.w	lr, r8, lr
 8016ac0:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016ac4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ac8:	fb04 f802 	mul.w	r8, r4, r2
 8016acc:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8016ad0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016ad4:	4472      	add	r2, lr
 8016ad6:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016ada:	f108 0a20 	add.w	sl, r8, #32
 8016ade:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8016ae2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ae6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016aea:	ea42 020a 	orr.w	r2, r2, sl
 8016aee:	b292      	uxth	r2, r2
 8016af0:	2d0f      	cmp	r5, #15
 8016af2:	d91f      	bls.n	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8016af4:	4b5f      	ldr	r3, [pc, #380]	; (8016c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8016af6:	4a60      	ldr	r2, [pc, #384]	; (8016c78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8016af8:	4860      	ldr	r0, [pc, #384]	; (8016c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8016afa:	f240 210d 	movw	r1, #525	; 0x20d
 8016afe:	f003 fc39 	bl	801a374 <__assert_func>
 8016b02:	4689      	mov	r9, r1
 8016b04:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016b08:	e765      	b.n	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8016b0a:	26ff      	movs	r6, #255	; 0xff
 8016b0c:	9101      	str	r1, [sp, #4]
 8016b0e:	4689      	mov	r9, r1
 8016b10:	46b4      	mov	ip, r6
 8016b12:	e78e      	b.n	8016a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016b14:	9101      	str	r1, [sp, #4]
 8016b16:	26ff      	movs	r6, #255	; 0xff
 8016b18:	e78b      	b.n	8016a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016b1a:	4608      	mov	r0, r1
 8016b1c:	27ff      	movs	r7, #255	; 0xff
 8016b1e:	e7ba      	b.n	8016a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8016b20:	24ff      	movs	r4, #255	; 0xff
 8016b22:	460a      	mov	r2, r1
 8016b24:	4608      	mov	r0, r1
 8016b26:	4627      	mov	r7, r4
 8016b28:	e7e2      	b.n	8016af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016b2a:	460a      	mov	r2, r1
 8016b2c:	24ff      	movs	r4, #255	; 0xff
 8016b2e:	e7df      	b.n	8016af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016b30:	460a      	mov	r2, r1
 8016b32:	24ff      	movs	r4, #255	; 0xff
 8016b34:	9b02      	ldr	r3, [sp, #8]
 8016b36:	2b0f      	cmp	r3, #15
 8016b38:	d8dc      	bhi.n	8016af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8016b3a:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8016b3e:	fa1f f885 	uxth.w	r8, r5
 8016b42:	fb08 fa0e 	mul.w	sl, r8, lr
 8016b46:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016b4a:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8016b4e:	9303      	str	r3, [sp, #12]
 8016b50:	fa1f f38e 	uxth.w	r3, lr
 8016b54:	9304      	str	r3, [sp, #16]
 8016b56:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016b5a:	9b02      	ldr	r3, [sp, #8]
 8016b5c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016b60:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016b64:	fb15 fe03 	smulbb	lr, r5, r3
 8016b68:	ea48 0809 	orr.w	r8, r8, r9
 8016b6c:	f1c3 0910 	rsb	r9, r3, #16
 8016b70:	9b01      	ldr	r3, [sp, #4]
 8016b72:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016b76:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016b7a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016b7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016b82:	eba9 0905 	sub.w	r9, r9, r5
 8016b86:	ea4b 0303 	orr.w	r3, fp, r3
 8016b8a:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8016b8e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016b92:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8016b96:	436b      	muls	r3, r5
 8016b98:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016b9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016ba0:	ea4b 0202 	orr.w	r2, fp, r2
 8016ba4:	fb09 3308 	mla	r3, r9, r8, r3
 8016ba8:	fb0e 3302 	mla	r3, lr, r2, r3
 8016bac:	0402      	lsls	r2, r0, #16
 8016bae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016bb2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016bb6:	4310      	orrs	r0, r2
 8016bb8:	9a02      	ldr	r2, [sp, #8]
 8016bba:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8016bbe:	9a03      	ldr	r2, [sp, #12]
 8016bc0:	fb0e 3e00 	mla	lr, lr, r0, r3
 8016bc4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8016bc8:	9a04      	ldr	r2, [sp, #16]
 8016bca:	1a80      	subs	r0, r0, r2
 8016bcc:	9a03      	ldr	r2, [sp, #12]
 8016bce:	eba2 020a 	sub.w	r2, r2, sl
 8016bd2:	b292      	uxth	r2, r2
 8016bd4:	b280      	uxth	r0, r0
 8016bd6:	4356      	muls	r6, r2
 8016bd8:	9a04      	ldr	r2, [sp, #16]
 8016bda:	fb0c 6600 	mla	r6, ip, r0, r6
 8016bde:	fb02 6707 	mla	r7, r2, r7, r6
 8016be2:	fb0a 7404 	mla	r4, sl, r4, r7
 8016be6:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016bea:	1208      	asrs	r0, r1, #8
 8016bec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016bf0:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8016bf4:	b2e4      	uxtb	r4, r4
 8016bf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016bfa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016bfe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016c02:	4360      	muls	r0, r4
 8016c04:	ea43 0e0e 	orr.w	lr, r3, lr
 8016c08:	fa1f f38e 	uxth.w	r3, lr
 8016c0c:	1c42      	adds	r2, r0, #1
 8016c0e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016c12:	1218      	asrs	r0, r3, #8
 8016c14:	10cd      	asrs	r5, r1, #3
 8016c16:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016c1a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016c1e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016c22:	4a17      	ldr	r2, [pc, #92]	; (8016c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8016c24:	4365      	muls	r5, r4
 8016c26:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016c2a:	1c6a      	adds	r2, r5, #1
 8016c2c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016c30:	00c9      	lsls	r1, r1, #3
 8016c32:	10da      	asrs	r2, r3, #3
 8016c34:	b2c9      	uxtb	r1, r1
 8016c36:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016c3a:	434c      	muls	r4, r1
 8016c3c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016c40:	1c61      	adds	r1, r4, #1
 8016c42:	00d2      	lsls	r2, r2, #3
 8016c44:	00db      	lsls	r3, r3, #3
 8016c46:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8016c4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016c4e:	b2db      	uxtb	r3, r3
 8016c50:	4302      	orrs	r2, r0
 8016c52:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8016c56:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8016c5a:	9a05      	ldr	r2, [sp, #20]
 8016c5c:	8013      	strh	r3, [r2, #0]
 8016c5e:	b007      	add	sp, #28
 8016c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c64:	2d0f      	cmp	r5, #15
 8016c66:	f63f af45 	bhi.w	8016af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8016c6a:	24ff      	movs	r4, #255	; 0xff
 8016c6c:	460a      	mov	r2, r1
 8016c6e:	4608      	mov	r0, r1
 8016c70:	4627      	mov	r7, r4
 8016c72:	e762      	b.n	8016b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8016c74:	0801dee5 	.word	0x0801dee5
 8016c78:	0801e43d 	.word	0x0801e43d
 8016c7c:	0801df6d 	.word	0x0801df6d
 8016c80:	fffff800 	.word	0xfffff800

08016c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c88:	ed2d 8b08 	vpush	{d8-d11}
 8016c8c:	b095      	sub	sp, #84	; 0x54
 8016c8e:	eeb0 aa40 	vmov.f32	s20, s0
 8016c92:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8016c94:	9306      	str	r3, [sp, #24]
 8016c96:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8016c9a:	9110      	str	r1, [sp, #64]	; 0x40
 8016c9c:	9308      	str	r3, [sp, #32]
 8016c9e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8016ca2:	9013      	str	r0, [sp, #76]	; 0x4c
 8016ca4:	6870      	ldr	r0, [r6, #4]
 8016ca6:	9212      	str	r2, [sp, #72]	; 0x48
 8016ca8:	fb00 1303 	mla	r3, r0, r3, r1
 8016cac:	6831      	ldr	r1, [r6, #0]
 8016cae:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016cb0:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8016cb4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016cb8:	9307      	str	r3, [sp, #28]
 8016cba:	6813      	ldr	r3, [r2, #0]
 8016cbc:	9309      	str	r3, [sp, #36]	; 0x24
 8016cbe:	6853      	ldr	r3, [r2, #4]
 8016cc0:	930a      	str	r3, [sp, #40]	; 0x28
 8016cc2:	006b      	lsls	r3, r5, #1
 8016cc4:	eef0 9a60 	vmov.f32	s19, s1
 8016cc8:	eeb0 9a41 	vmov.f32	s18, s2
 8016ccc:	eeb0 8a62 	vmov.f32	s16, s5
 8016cd0:	eef0 8a43 	vmov.f32	s17, s6
 8016cd4:	eef0 ba44 	vmov.f32	s23, s8
 8016cd8:	eeb0 ba64 	vmov.f32	s22, s9
 8016cdc:	eef0 aa45 	vmov.f32	s21, s10
 8016ce0:	930f      	str	r3, [sp, #60]	; 0x3c
 8016ce2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ce4:	2b00      	cmp	r3, #0
 8016ce6:	dc03      	bgt.n	8016cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8016ce8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016cea:	2b00      	cmp	r3, #0
 8016cec:	f340 83a3 	ble.w	8017436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8016cf0:	9b06      	ldr	r3, [sp, #24]
 8016cf2:	2b00      	cmp	r3, #0
 8016cf4:	f340 81bc 	ble.w	8017070 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8016cf8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016cfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016cfc:	1412      	asrs	r2, r2, #16
 8016cfe:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016d02:	d42f      	bmi.n	8016d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8016d04:	1c51      	adds	r1, r2, #1
 8016d06:	428d      	cmp	r5, r1
 8016d08:	dd2f      	ble.n	8016d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016d0a:	2b00      	cmp	r3, #0
 8016d0c:	db2d      	blt.n	8016d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016d0e:	9808      	ldr	r0, [sp, #32]
 8016d10:	1c59      	adds	r1, r3, #1
 8016d12:	4288      	cmp	r0, r1
 8016d14:	dd29      	ble.n	8016d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016d16:	9b06      	ldr	r3, [sp, #24]
 8016d18:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d1a:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8016d1c:	3b01      	subs	r3, #1
 8016d1e:	fb02 1203 	mla	r2, r2, r3, r1
 8016d22:	1412      	asrs	r2, r2, #16
 8016d24:	d42b      	bmi.n	8016d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016d26:	3201      	adds	r2, #1
 8016d28:	4295      	cmp	r5, r2
 8016d2a:	dd28      	ble.n	8016d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016d2c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016d2e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8016d30:	fb02 1303 	mla	r3, r2, r3, r1
 8016d34:	141b      	asrs	r3, r3, #16
 8016d36:	d422      	bmi.n	8016d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016d38:	9a08      	ldr	r2, [sp, #32]
 8016d3a:	3301      	adds	r3, #1
 8016d3c:	429a      	cmp	r2, r3
 8016d3e:	dd1e      	ble.n	8016d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016d40:	9b06      	ldr	r3, [sp, #24]
 8016d42:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8016d46:	9311      	str	r3, [sp, #68]	; 0x44
 8016d48:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016d4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d4e:	2b00      	cmp	r3, #0
 8016d50:	f300 8208 	bgt.w	8017164 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8016d54:	9b06      	ldr	r3, [sp, #24]
 8016d56:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016d5a:	9b07      	ldr	r3, [sp, #28]
 8016d5c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016d60:	9307      	str	r3, [sp, #28]
 8016d62:	e187      	b.n	8017074 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8016d64:	1c57      	adds	r7, r2, #1
 8016d66:	f040 8174 	bne.w	8017052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8016d6a:	42aa      	cmp	r2, r5
 8016d6c:	f280 8171 	bge.w	8017052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8016d70:	1c5e      	adds	r6, r3, #1
 8016d72:	f2c0 816e 	blt.w	8017052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8016d76:	9a08      	ldr	r2, [sp, #32]
 8016d78:	4293      	cmp	r3, r2
 8016d7a:	f280 816a 	bge.w	8017052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8016d7e:	9b06      	ldr	r3, [sp, #24]
 8016d80:	9f07      	ldr	r7, [sp, #28]
 8016d82:	9311      	str	r3, [sp, #68]	; 0x44
 8016d84:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016d88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d8a:	2b00      	cmp	r3, #0
 8016d8c:	dde2      	ble.n	8016d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8016d8e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016d90:	1419      	asrs	r1, r3, #16
 8016d92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016d94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016d98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016d9a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016d9e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016da0:	141b      	asrs	r3, r3, #16
 8016da2:	f100 81c4 	bmi.w	801712e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8016da6:	1c58      	adds	r0, r3, #1
 8016da8:	4285      	cmp	r5, r0
 8016daa:	f340 81c2 	ble.w	8017132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8016dae:	2900      	cmp	r1, #0
 8016db0:	f2c0 81bf 	blt.w	8017132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8016db4:	9c08      	ldr	r4, [sp, #32]
 8016db6:	1c48      	adds	r0, r1, #1
 8016db8:	4284      	cmp	r4, r0
 8016dba:	f340 81ba 	ble.w	8017132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8016dbe:	fb01 3105 	mla	r1, r1, r5, r3
 8016dc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016dc4:	fa1f fe82 	uxth.w	lr, r2
 8016dc8:	eb03 0a01 	add.w	sl, r3, r1
 8016dcc:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8016dd0:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016dd4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016dd8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016ddc:	b29b      	uxth	r3, r3
 8016dde:	f1bc 0f00 	cmp.w	ip, #0
 8016de2:	f000 8186 	beq.w	80170f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8016de6:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016dea:	940b      	str	r4, [sp, #44]	; 0x2c
 8016dec:	eb0a 0b05 	add.w	fp, sl, r5
 8016df0:	fa1f fa8c 	uxth.w	sl, ip
 8016df4:	fb0a fe0e 	mul.w	lr, sl, lr
 8016df8:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016dfc:	fa1f fa8a 	uxth.w	sl, sl
 8016e00:	eba0 000e 	sub.w	r0, r0, lr
 8016e04:	eba3 030a 	sub.w	r3, r3, sl
 8016e08:	b280      	uxth	r0, r0
 8016e0a:	fb08 f000 	mul.w	r0, r8, r0
 8016e0e:	b29b      	uxth	r3, r3
 8016e10:	fb09 0303 	mla	r3, r9, r3, r0
 8016e14:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016e16:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016e1a:	940c      	str	r4, [sp, #48]	; 0x30
 8016e1c:	fb0a 3300 	mla	r3, sl, r0, r3
 8016e20:	fb0e 3304 	mla	r3, lr, r4, r3
 8016e24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016e28:	2b00      	cmp	r3, #0
 8016e2a:	f000 8105 	beq.w	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016e2e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8016e30:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016e32:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016e36:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016e3a:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8016e3e:	f000 815d 	beq.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8016e42:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016e46:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016e4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e4e:	fb09 f101 	mul.w	r1, r9, r1
 8016e52:	fb0a fe0e 	mul.w	lr, sl, lr
 8016e56:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016e5a:	f101 0b20 	add.w	fp, r1, #32
 8016e5e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016e62:	44ce      	add	lr, r9
 8016e64:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016e68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016e6c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016e70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016e74:	ea4e 0909 	orr.w	r9, lr, r9
 8016e78:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016e7c:	8841      	ldrh	r1, [r0, #2]
 8016e7e:	d019      	beq.n	8016eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8016e80:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016e84:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016e88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e8c:	fb0a fe0e 	mul.w	lr, sl, lr
 8016e90:	fb08 f801 	mul.w	r8, r8, r1
 8016e94:	f108 0b20 	add.w	fp, r8, #32
 8016e98:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8016e9c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016ea0:	448e      	add	lr, r1
 8016ea2:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8016ea6:	0a09      	lsrs	r1, r1, #8
 8016ea8:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8016eac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016eb0:	ea4a 0101 	orr.w	r1, sl, r1
 8016eb4:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016eb8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ebc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016ec0:	ea4e 0909 	orr.w	r9, lr, r9
 8016ec4:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016ec8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ecc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016ed0:	ea4e 0e01 	orr.w	lr, lr, r1
 8016ed4:	f1bc 0f00 	cmp.w	ip, #0
 8016ed8:	f000 8112 	beq.w	8017100 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8016edc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8016ede:	eb00 0801 	add.w	r8, r0, r1
 8016ee2:	5a41      	ldrh	r1, [r0, r1]
 8016ee4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016ee6:	28ff      	cmp	r0, #255	; 0xff
 8016ee8:	d019      	beq.n	8016f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8016eea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016eec:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016ef0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016ef4:	fb04 fb01 	mul.w	fp, r4, r1
 8016ef8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016efc:	fb0a fa00 	mul.w	sl, sl, r0
 8016f00:	f10b 0020 	add.w	r0, fp, #32
 8016f04:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016f08:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016f0c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016f10:	4451      	add	r1, sl
 8016f12:	0a00      	lsrs	r0, r0, #8
 8016f14:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016f18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016f1c:	4301      	orrs	r1, r0
 8016f1e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016f20:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8016f24:	2cff      	cmp	r4, #255	; 0xff
 8016f26:	d01a      	beq.n	8016f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8016f28:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016f2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016f30:	fb04 fb00 	mul.w	fp, r4, r0
 8016f34:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016f38:	fb0a fa08 	mul.w	sl, sl, r8
 8016f3c:	f10b 0820 	add.w	r8, fp, #32
 8016f40:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8016f44:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016f48:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016f4c:	4450      	add	r0, sl
 8016f4e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016f52:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016f56:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016f5a:	ea40 0008 	orr.w	r0, r0, r8
 8016f5e:	fb1c f802 	smulbb	r8, ip, r2
 8016f62:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016f66:	f1cc 0a10 	rsb	sl, ip, #16
 8016f6a:	ebaa 0a02 	sub.w	sl, sl, r2
 8016f6e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016f72:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8016f76:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016f7a:	fb0e f202 	mul.w	r2, lr, r2
 8016f7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f82:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8016f86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016f8a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016f8e:	fb09 220a 	mla	r2, r9, sl, r2
 8016f92:	ea4b 0101 	orr.w	r1, fp, r1
 8016f96:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016f9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f9e:	fb0c 2201 	mla	r2, ip, r1, r2
 8016fa2:	ea4e 0000 	orr.w	r0, lr, r0
 8016fa6:	fb08 2800 	mla	r8, r8, r0, r2
 8016faa:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016fae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016fb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016fb6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016fba:	ea42 0808 	orr.w	r8, r2, r8
 8016fbe:	fa1f f288 	uxth.w	r2, r8
 8016fc2:	2bff      	cmp	r3, #255	; 0xff
 8016fc4:	f000 80b1 	beq.w	801712a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016fc8:	f8b7 8000 	ldrh.w	r8, [r7]
 8016fcc:	43db      	mvns	r3, r3
 8016fce:	ea4f 2028 	mov.w	r0, r8, asr #8
 8016fd2:	fa5f fe83 	uxtb.w	lr, r3
 8016fd6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016fda:	fb00 f00e 	mul.w	r0, r0, lr
 8016fde:	1c41      	adds	r1, r0, #1
 8016fe0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016fe4:	1210      	asrs	r0, r2, #8
 8016fe6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016fea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016fee:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016ff2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016ff6:	495a      	ldr	r1, [pc, #360]	; (8017160 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8016ff8:	fb0c fc0e 	mul.w	ip, ip, lr
 8016ffc:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017000:	f10c 0101 	add.w	r1, ip, #1
 8017004:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8017008:	10d1      	asrs	r1, r2, #3
 801700a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801700e:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017012:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8017016:	b2db      	uxtb	r3, r3
 8017018:	00c9      	lsls	r1, r1, #3
 801701a:	fb03 f30e 	mul.w	r3, r3, lr
 801701e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017022:	4301      	orrs	r1, r0
 8017024:	1c58      	adds	r0, r3, #1
 8017026:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801702a:	00d3      	lsls	r3, r2, #3
 801702c:	b2db      	uxtb	r3, r3
 801702e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017032:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8017036:	803b      	strh	r3, [r7, #0]
 8017038:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801703a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801703c:	4413      	add	r3, r2
 801703e:	9327      	str	r3, [sp, #156]	; 0x9c
 8017040:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017042:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017044:	441a      	add	r2, r3
 8017046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017048:	9228      	str	r2, [sp, #160]	; 0xa0
 801704a:	3b01      	subs	r3, #1
 801704c:	3702      	adds	r7, #2
 801704e:	9311      	str	r3, [sp, #68]	; 0x44
 8017050:	e69a      	b.n	8016d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017052:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017054:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017056:	4413      	add	r3, r2
 8017058:	9327      	str	r3, [sp, #156]	; 0x9c
 801705a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801705c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801705e:	441a      	add	r2, r3
 8017060:	9b06      	ldr	r3, [sp, #24]
 8017062:	9228      	str	r2, [sp, #160]	; 0xa0
 8017064:	3b01      	subs	r3, #1
 8017066:	9306      	str	r3, [sp, #24]
 8017068:	9b07      	ldr	r3, [sp, #28]
 801706a:	3302      	adds	r3, #2
 801706c:	9307      	str	r3, [sp, #28]
 801706e:	e63f      	b.n	8016cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017070:	f47f ae51 	bne.w	8016d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017074:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017076:	2b00      	cmp	r3, #0
 8017078:	f340 81dd 	ble.w	8017436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 801707c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017080:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017084:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017088:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801708a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801708e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017092:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017096:	eef0 6a48 	vmov.f32	s13, s16
 801709a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801709e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170a2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80170a6:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80170aa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80170ae:	eef0 6a68 	vmov.f32	s13, s17
 80170b2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80170b6:	ee18 2a10 	vmov	r2, s16
 80170ba:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80170be:	fb92 f3f3 	sdiv	r3, r2, r3
 80170c2:	ee18 2a90 	vmov	r2, s17
 80170c6:	9329      	str	r3, [sp, #164]	; 0xa4
 80170c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80170ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80170ce:	932a      	str	r3, [sp, #168]	; 0xa8
 80170d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80170d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80170d4:	3b01      	subs	r3, #1
 80170d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170da:	9310      	str	r3, [sp, #64]	; 0x40
 80170dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80170de:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80170e2:	bf08      	it	eq
 80170e4:	4613      	moveq	r3, r2
 80170e6:	9306      	str	r3, [sp, #24]
 80170e8:	eef0 8a67 	vmov.f32	s17, s15
 80170ec:	eeb0 8a47 	vmov.f32	s16, s14
 80170f0:	e5f7      	b.n	8016ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80170f2:	fb08 f000 	mul.w	r0, r8, r0
 80170f6:	fb09 0303 	mla	r3, r9, r3, r0
 80170fa:	e693      	b.n	8016e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 80170fc:	4689      	mov	r9, r1
 80170fe:	e6bb      	b.n	8016e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8017100:	f1c2 0010 	rsb	r0, r2, #16
 8017104:	fb0e f202 	mul.w	r2, lr, r2
 8017108:	fb09 2900 	mla	r9, r9, r0, r2
 801710c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017110:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017114:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017118:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801711c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017120:	ea42 0909 	orr.w	r9, r2, r9
 8017124:	fa1f f289 	uxth.w	r2, r9
 8017128:	e74b      	b.n	8016fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801712a:	803a      	strh	r2, [r7, #0]
 801712c:	e784      	b.n	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801712e:	1c5c      	adds	r4, r3, #1
 8017130:	d182      	bne.n	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017132:	429d      	cmp	r5, r3
 8017134:	dd80      	ble.n	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017136:	1c48      	adds	r0, r1, #1
 8017138:	f6ff af7e 	blt.w	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801713c:	9808      	ldr	r0, [sp, #32]
 801713e:	4288      	cmp	r0, r1
 8017140:	f77f af7a 	ble.w	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017144:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8017148:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 801714c:	e9cd 5000 	strd	r5, r0, [sp]
 8017150:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8017154:	4639      	mov	r1, r7
 8017156:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017158:	f7ff fbf2 	bl	8016940 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801715c:	e76c      	b.n	8017038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801715e:	bf00      	nop
 8017160:	fffff800 	.word	0xfffff800
 8017164:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017166:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801716a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801716c:	141f      	asrs	r7, r3, #16
 801716e:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017172:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017174:	141b      	asrs	r3, r3, #16
 8017176:	fb05 3707 	mla	r7, r5, r7, r3
 801717a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801717c:	fa1f fc82 	uxth.w	ip, r2
 8017180:	eb03 0a07 	add.w	sl, r3, r7
 8017184:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8017188:	f813 9007 	ldrb.w	r9, [r3, r7]
 801718c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017190:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017194:	b29b      	uxth	r3, r3
 8017196:	2800      	cmp	r0, #0
 8017198:	f000 8132 	beq.w	8017400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 801719c:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80171a0:	940d      	str	r4, [sp, #52]	; 0x34
 80171a2:	eb0a 0b05 	add.w	fp, sl, r5
 80171a6:	fa1f fa80 	uxth.w	sl, r0
 80171aa:	fb0a fc0c 	mul.w	ip, sl, ip
 80171ae:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80171b2:	fa1f fa8a 	uxth.w	sl, sl
 80171b6:	eba1 010c 	sub.w	r1, r1, ip
 80171ba:	eba3 030a 	sub.w	r3, r3, sl
 80171be:	b289      	uxth	r1, r1
 80171c0:	fb08 f101 	mul.w	r1, r8, r1
 80171c4:	b29b      	uxth	r3, r3
 80171c6:	fb09 1303 	mla	r3, r9, r3, r1
 80171ca:	990d      	ldr	r1, [sp, #52]	; 0x34
 80171cc:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80171d0:	940e      	str	r4, [sp, #56]	; 0x38
 80171d2:	fb0a 3301 	mla	r3, sl, r1, r3
 80171d6:	fb0c 3304 	mla	r3, ip, r4, r3
 80171da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80171de:	2b00      	cmp	r3, #0
 80171e0:	f000 8100 	beq.w	80173e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80171e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80171e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80171e8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80171ec:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80171f0:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80171f4:	f000 8109 	beq.w	801740a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 80171f8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80171fc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017200:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017204:	fb09 f707 	mul.w	r7, r9, r7
 8017208:	fb0a fc0c 	mul.w	ip, sl, ip
 801720c:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017210:	f107 0b20 	add.w	fp, r7, #32
 8017214:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017218:	44cc      	add	ip, r9
 801721a:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801721e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017222:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017226:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801722a:	ea4c 0909 	orr.w	r9, ip, r9
 801722e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017232:	884f      	ldrh	r7, [r1, #2]
 8017234:	d019      	beq.n	801726a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8017236:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801723a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801723e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017242:	fb08 f807 	mul.w	r8, r8, r7
 8017246:	fb0a fc0c 	mul.w	ip, sl, ip
 801724a:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801724e:	f108 0b20 	add.w	fp, r8, #32
 8017252:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017256:	44bc      	add	ip, r7
 8017258:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801725c:	0a3f      	lsrs	r7, r7, #8
 801725e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017262:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017266:	ea4c 0707 	orr.w	r7, ip, r7
 801726a:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801726e:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017272:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017276:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801727a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801727e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017282:	ea4c 0909 	orr.w	r9, ip, r9
 8017286:	ea4a 0707 	orr.w	r7, sl, r7
 801728a:	2800      	cmp	r0, #0
 801728c:	f000 80bf 	beq.w	801740e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8017290:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017292:	eb01 0c04 	add.w	ip, r1, r4
 8017296:	f831 8004 	ldrh.w	r8, [r1, r4]
 801729a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801729c:	29ff      	cmp	r1, #255	; 0xff
 801729e:	d01a      	beq.n	80172d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80172a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172a2:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80172a6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80172aa:	fb04 fb08 	mul.w	fp, r4, r8
 80172ae:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80172b2:	fb0a fa01 	mul.w	sl, sl, r1
 80172b6:	f10b 0120 	add.w	r1, fp, #32
 80172ba:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80172be:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80172c2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80172c6:	44d0      	add	r8, sl
 80172c8:	0a09      	lsrs	r1, r1, #8
 80172ca:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80172ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172d2:	ea48 0801 	orr.w	r8, r8, r1
 80172d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172d8:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80172dc:	2cff      	cmp	r4, #255	; 0xff
 80172de:	d01a      	beq.n	8017316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 80172e0:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80172e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80172e8:	fb04 fb01 	mul.w	fp, r4, r1
 80172ec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80172f0:	fb0a fa0c 	mul.w	sl, sl, ip
 80172f4:	f10b 0c20 	add.w	ip, fp, #32
 80172f8:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80172fc:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017300:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017304:	4451      	add	r1, sl
 8017306:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801730a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801730e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017312:	ea41 010c 	orr.w	r1, r1, ip
 8017316:	fb10 fc02 	smulbb	ip, r0, r2
 801731a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801731e:	f1c0 0a10 	rsb	sl, r0, #16
 8017322:	ebaa 0a02 	sub.w	sl, sl, r2
 8017326:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801732a:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801732e:	437a      	muls	r2, r7
 8017330:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017334:	040f      	lsls	r7, r1, #16
 8017336:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801733a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801733e:	fb09 220a 	mla	r2, r9, sl, r2
 8017342:	ea4b 0808 	orr.w	r8, fp, r8
 8017346:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 801734a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801734e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017352:	fb00 2208 	mla	r2, r0, r8, r2
 8017356:	4339      	orrs	r1, r7
 8017358:	fb0c 2201 	mla	r2, ip, r1, r2
 801735c:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017360:	0952      	lsrs	r2, r2, #5
 8017362:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017366:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801736a:	ea49 0202 	orr.w	r2, r9, r2
 801736e:	2bff      	cmp	r3, #255	; 0xff
 8017370:	b292      	uxth	r2, r2
 8017372:	d05d      	beq.n	8017430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8017374:	f8be 8000 	ldrh.w	r8, [lr]
 8017378:	4c31      	ldr	r4, [pc, #196]	; (8017440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 801737a:	43db      	mvns	r3, r3
 801737c:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017380:	fa5f fc83 	uxtb.w	ip, r3
 8017384:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017388:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801738c:	fb00 f00c 	mul.w	r0, r0, ip
 8017390:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017394:	fb07 f10c 	mul.w	r1, r7, ip
 8017398:	1c47      	adds	r7, r0, #1
 801739a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801739e:	1217      	asrs	r7, r2, #8
 80173a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80173a4:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80173a8:	1c4f      	adds	r7, r1, #1
 80173aa:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80173ae:	10d1      	asrs	r1, r2, #3
 80173b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80173b4:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80173b8:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80173bc:	b2db      	uxtb	r3, r3
 80173be:	00c9      	lsls	r1, r1, #3
 80173c0:	fb03 f30c 	mul.w	r3, r3, ip
 80173c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80173c8:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80173cc:	4308      	orrs	r0, r1
 80173ce:	00d2      	lsls	r2, r2, #3
 80173d0:	1c59      	adds	r1, r3, #1
 80173d2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80173d6:	b2d2      	uxtb	r2, r2
 80173d8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80173dc:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80173e0:	f8ae 0000 	strh.w	r0, [lr]
 80173e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80173e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80173e8:	4413      	add	r3, r2
 80173ea:	9327      	str	r3, [sp, #156]	; 0x9c
 80173ec:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80173ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173f0:	441a      	add	r2, r3
 80173f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80173f4:	9228      	str	r2, [sp, #160]	; 0xa0
 80173f6:	3b01      	subs	r3, #1
 80173f8:	f10e 0e02 	add.w	lr, lr, #2
 80173fc:	9311      	str	r3, [sp, #68]	; 0x44
 80173fe:	e4a5      	b.n	8016d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8017400:	fb08 f101 	mul.w	r1, r8, r1
 8017404:	fb09 1303 	mla	r3, r9, r3, r1
 8017408:	e6e7      	b.n	80171da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 801740a:	46b9      	mov	r9, r7
 801740c:	e70f      	b.n	801722e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 801740e:	f1c2 0110 	rsb	r1, r2, #16
 8017412:	437a      	muls	r2, r7
 8017414:	fb09 2901 	mla	r9, r9, r1, r2
 8017418:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801741c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017420:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017424:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017428:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801742c:	4302      	orrs	r2, r0
 801742e:	e79e      	b.n	801736e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8017430:	f8ae 2000 	strh.w	r2, [lr]
 8017434:	e7d6      	b.n	80173e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017436:	b015      	add	sp, #84	; 0x54
 8017438:	ecbd 8b08 	vpop	{d8-d11}
 801743c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017440:	fffff800 	.word	0xfffff800

08017444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8017444:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017448:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801744c:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017450:	f1bc 0f00 	cmp.w	ip, #0
 8017454:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017458:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801745c:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017460:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017464:	8808      	ldrh	r0, [r1, #0]
 8017466:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801746a:	db2f      	blt.n	80174cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801746c:	45e2      	cmp	sl, ip
 801746e:	dd2d      	ble.n	80174cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017470:	2c00      	cmp	r4, #0
 8017472:	db29      	blt.n	80174c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017474:	42a3      	cmp	r3, r4
 8017476:	dd27      	ble.n	80174c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017478:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801747c:	1c62      	adds	r2, r4, #1
 801747e:	d428      	bmi.n	80174d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017480:	4293      	cmp	r3, r2
 8017482:	dd26      	ble.n	80174d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017484:	b32f      	cbz	r7, 80174d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017486:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801748a:	f11c 0c01 	adds.w	ip, ip, #1
 801748e:	d424      	bmi.n	80174da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017490:	45e2      	cmp	sl, ip
 8017492:	dd22      	ble.n	80174da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017494:	2e00      	cmp	r6, #0
 8017496:	f000 809c 	beq.w	80175d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801749a:	2c00      	cmp	r4, #0
 801749c:	db1b      	blt.n	80174d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801749e:	42a3      	cmp	r3, r4
 80174a0:	dd19      	ble.n	80174d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80174a2:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80174a6:	3401      	adds	r4, #1
 80174a8:	d41a      	bmi.n	80174e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80174aa:	42a3      	cmp	r3, r4
 80174ac:	dd18      	ble.n	80174e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80174ae:	b1cf      	cbz	r7, 80174e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80174b0:	3301      	adds	r3, #1
 80174b2:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80174b6:	2f0f      	cmp	r7, #15
 80174b8:	d915      	bls.n	80174e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80174ba:	4b49      	ldr	r3, [pc, #292]	; (80175e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80174bc:	4a49      	ldr	r2, [pc, #292]	; (80175e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80174be:	484a      	ldr	r0, [pc, #296]	; (80175e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80174c0:	f240 11ef 	movw	r1, #495	; 0x1ef
 80174c4:	f002 ff56 	bl	801a374 <__assert_func>
 80174c8:	4681      	mov	r9, r0
 80174ca:	e7d7      	b.n	801747c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80174cc:	4686      	mov	lr, r0
 80174ce:	4681      	mov	r9, r0
 80174d0:	e7db      	b.n	801748a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80174d2:	4686      	mov	lr, r0
 80174d4:	e7d9      	b.n	801748a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80174d6:	4684      	mov	ip, r0
 80174d8:	e7e5      	b.n	80174a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80174da:	4603      	mov	r3, r0
 80174dc:	4684      	mov	ip, r0
 80174de:	e7ea      	b.n	80174b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80174e0:	4603      	mov	r3, r0
 80174e2:	e7e8      	b.n	80174b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80174e4:	4603      	mov	r3, r0
 80174e6:	2e0f      	cmp	r6, #15
 80174e8:	d8e7      	bhi.n	80174ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80174ea:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80174ee:	fb17 f806 	smulbb	r8, r7, r6
 80174f2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80174f6:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80174fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80174fe:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017502:	ea44 0909 	orr.w	r9, r4, r9
 8017506:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801750a:	f1c6 0410 	rsb	r4, r6, #16
 801750e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017512:	1be4      	subs	r4, r4, r7
 8017514:	041a      	lsls	r2, r3, #16
 8017516:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801751a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801751e:	fb07 fe0e 	mul.w	lr, r7, lr
 8017522:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017526:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801752a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801752e:	fb04 e409 	mla	r4, r4, r9, lr
 8017532:	4313      	orrs	r3, r2
 8017534:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017538:	fb08 4303 	mla	r3, r8, r3, r4
 801753c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017540:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8017544:	4322      	orrs	r2, r4
 8017546:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801754a:	fb06 3202 	mla	r2, r6, r2, r3
 801754e:	0d53      	lsrs	r3, r2, #21
 8017550:	0952      	lsrs	r2, r2, #5
 8017552:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017556:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801755a:	431a      	orrs	r2, r3
 801755c:	b293      	uxth	r3, r2
 801755e:	b2af      	uxth	r7, r5
 8017560:	1202      	asrs	r2, r0, #8
 8017562:	43ed      	mvns	r5, r5
 8017564:	b2ed      	uxtb	r5, r5
 8017566:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801756a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801756e:	fb12 f205 	smulbb	r2, r2, r5
 8017572:	10c6      	asrs	r6, r0, #3
 8017574:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017578:	fb0c 2c07 	mla	ip, ip, r7, r2
 801757c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017580:	10da      	asrs	r2, r3, #3
 8017582:	fb16 f605 	smulbb	r6, r6, r5
 8017586:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801758a:	fb02 6207 	mla	r2, r2, r7, r6
 801758e:	b296      	uxth	r6, r2
 8017590:	00c2      	lsls	r2, r0, #3
 8017592:	00dc      	lsls	r4, r3, #3
 8017594:	b2d2      	uxtb	r2, r2
 8017596:	b2e4      	uxtb	r4, r4
 8017598:	fb12 f205 	smulbb	r2, r2, r5
 801759c:	fb04 2207 	mla	r2, r4, r7, r2
 80175a0:	fa1f fc8c 	uxth.w	ip, ip
 80175a4:	b292      	uxth	r2, r2
 80175a6:	f10c 0301 	add.w	r3, ip, #1
 80175aa:	1c50      	adds	r0, r2, #1
 80175ac:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80175b0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80175b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80175b8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80175bc:	4313      	orrs	r3, r2
 80175be:	1c72      	adds	r2, r6, #1
 80175c0:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80175c4:	0952      	lsrs	r2, r2, #5
 80175c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175ca:	4313      	orrs	r3, r2
 80175cc:	800b      	strh	r3, [r1, #0]
 80175ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80175d2:	2f0f      	cmp	r7, #15
 80175d4:	f63f af71 	bhi.w	80174ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80175d8:	4603      	mov	r3, r0
 80175da:	4684      	mov	ip, r0
 80175dc:	e785      	b.n	80174ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80175de:	bf00      	nop
 80175e0:	0801dee5 	.word	0x0801dee5
 80175e4:	0801e4e6 	.word	0x0801e4e6
 80175e8:	0801df6d 	.word	0x0801df6d

080175ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80175ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175f0:	ed2d 8b08 	vpush	{d8-d11}
 80175f4:	b095      	sub	sp, #84	; 0x54
 80175f6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80175fa:	9306      	str	r3, [sp, #24]
 80175fc:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017600:	9212      	str	r2, [sp, #72]	; 0x48
 8017602:	9307      	str	r3, [sp, #28]
 8017604:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017606:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801760a:	930c      	str	r3, [sp, #48]	; 0x30
 801760c:	910b      	str	r1, [sp, #44]	; 0x2c
 801760e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017612:	9013      	str	r0, [sp, #76]	; 0x4c
 8017614:	6850      	ldr	r0, [r2, #4]
 8017616:	6812      	ldr	r2, [r2, #0]
 8017618:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 801761c:	fb00 1303 	mla	r3, r0, r3, r1
 8017620:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017624:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017626:	681b      	ldr	r3, [r3, #0]
 8017628:	9309      	str	r3, [sp, #36]	; 0x24
 801762a:	007b      	lsls	r3, r7, #1
 801762c:	930a      	str	r3, [sp, #40]	; 0x28
 801762e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017630:	43db      	mvns	r3, r3
 8017632:	b2db      	uxtb	r3, r3
 8017634:	eeb0 aa40 	vmov.f32	s20, s0
 8017638:	eef0 9a60 	vmov.f32	s19, s1
 801763c:	eeb0 9a41 	vmov.f32	s18, s2
 8017640:	eeb0 8a62 	vmov.f32	s16, s5
 8017644:	eef0 8a43 	vmov.f32	s17, s6
 8017648:	eef0 ba44 	vmov.f32	s23, s8
 801764c:	eeb0 ba64 	vmov.f32	s22, s9
 8017650:	eef0 aa45 	vmov.f32	s21, s10
 8017654:	9308      	str	r3, [sp, #32]
 8017656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017658:	2b00      	cmp	r3, #0
 801765a:	dc03      	bgt.n	8017664 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801765c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801765e:	2b00      	cmp	r3, #0
 8017660:	f340 81f3 	ble.w	8017a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017664:	9b06      	ldr	r3, [sp, #24]
 8017666:	2b00      	cmp	r3, #0
 8017668:	f340 80fa 	ble.w	8017860 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801766c:	1422      	asrs	r2, r4, #16
 801766e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017672:	d42b      	bmi.n	80176cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017674:	1c51      	adds	r1, r2, #1
 8017676:	428f      	cmp	r7, r1
 8017678:	dd2b      	ble.n	80176d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801767a:	2b00      	cmp	r3, #0
 801767c:	db29      	blt.n	80176d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801767e:	9807      	ldr	r0, [sp, #28]
 8017680:	1c59      	adds	r1, r3, #1
 8017682:	4288      	cmp	r0, r1
 8017684:	dd25      	ble.n	80176d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017686:	9b06      	ldr	r3, [sp, #24]
 8017688:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801768a:	3b01      	subs	r3, #1
 801768c:	fb02 4203 	mla	r2, r2, r3, r4
 8017690:	1412      	asrs	r2, r2, #16
 8017692:	d428      	bmi.n	80176e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017694:	3201      	adds	r2, #1
 8017696:	4297      	cmp	r7, r2
 8017698:	dd25      	ble.n	80176e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801769a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801769c:	fb02 6303 	mla	r3, r2, r3, r6
 80176a0:	141b      	asrs	r3, r3, #16
 80176a2:	d420      	bmi.n	80176e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80176a4:	9a07      	ldr	r2, [sp, #28]
 80176a6:	3301      	adds	r3, #1
 80176a8:	429a      	cmp	r2, r3
 80176aa:	dd1c      	ble.n	80176e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80176ac:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80176b0:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 80176b4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80176b8:	f1b8 0f00 	cmp.w	r8, #0
 80176bc:	f300 8129 	bgt.w	8017912 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 80176c0:	9b06      	ldr	r3, [sp, #24]
 80176c2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80176c6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80176ca:	e0cb      	b.n	8017864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 80176cc:	1c51      	adds	r1, r2, #1
 80176ce:	f040 80bd 	bne.w	801784c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80176d2:	42ba      	cmp	r2, r7
 80176d4:	f280 80ba 	bge.w	801784c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80176d8:	1c5a      	adds	r2, r3, #1
 80176da:	f2c0 80b7 	blt.w	801784c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80176de:	9a07      	ldr	r2, [sp, #28]
 80176e0:	4293      	cmp	r3, r2
 80176e2:	f280 80b3 	bge.w	801784c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80176e6:	f8dd b018 	ldr.w	fp, [sp, #24]
 80176ea:	46c8      	mov	r8, r9
 80176ec:	f1bb 0f00 	cmp.w	fp, #0
 80176f0:	dde6      	ble.n	80176c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80176f2:	1421      	asrs	r1, r4, #16
 80176f4:	ea4f 4226 	mov.w	r2, r6, asr #16
 80176f8:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80176fc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017700:	f100 80ef 	bmi.w	80178e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8017704:	f101 0c01 	add.w	ip, r1, #1
 8017708:	4567      	cmp	r7, ip
 801770a:	f340 80ec 	ble.w	80178e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 801770e:	2a00      	cmp	r2, #0
 8017710:	f2c0 80e9 	blt.w	80178e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017714:	9d07      	ldr	r5, [sp, #28]
 8017716:	f102 0c01 	add.w	ip, r2, #1
 801771a:	4565      	cmp	r5, ip
 801771c:	f340 80e3 	ble.w	80178e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017720:	fb02 1207 	mla	r2, r2, r7, r1
 8017724:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017726:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 801772a:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 801772e:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017732:	b138      	cbz	r0, 8017744 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8017734:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017736:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017738:	4472      	add	r2, lr
 801773a:	f83e 5005 	ldrh.w	r5, [lr, r5]
 801773e:	8852      	ldrh	r2, [r2, #2]
 8017740:	950e      	str	r5, [sp, #56]	; 0x38
 8017742:	920f      	str	r2, [sp, #60]	; 0x3c
 8017744:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017748:	fb13 f200 	smulbb	r2, r3, r0
 801774c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017750:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017754:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017758:	10d2      	asrs	r2, r2, #3
 801775a:	ea4e 0c0c 	orr.w	ip, lr, ip
 801775e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017762:	f1c0 0e10 	rsb	lr, r0, #16
 8017766:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801776a:	ebae 0e03 	sub.w	lr, lr, r3
 801776e:	ea4a 0101 	orr.w	r1, sl, r1
 8017772:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017776:	4359      	muls	r1, r3
 8017778:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801777a:	9d08      	ldr	r5, [sp, #32]
 801777c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017780:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017784:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017788:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801778c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017790:	ea4c 0c03 	orr.w	ip, ip, r3
 8017794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017796:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017798:	041b      	lsls	r3, r3, #16
 801779a:	fb02 ec0c 	mla	ip, r2, ip, lr
 801779e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80177a2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80177a6:	ea43 030e 	orr.w	r3, r3, lr
 80177aa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80177ae:	fb02 c203 	mla	r2, r2, r3, ip
 80177b2:	0d53      	lsrs	r3, r2, #21
 80177b4:	0952      	lsrs	r2, r2, #5
 80177b6:	f8b8 c000 	ldrh.w	ip, [r8]
 80177ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80177be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80177c2:	431a      	orrs	r2, r3
 80177c4:	b292      	uxth	r2, r2
 80177c6:	ea4f 212c 	mov.w	r1, ip, asr #8
 80177ca:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80177ce:	1210      	asrs	r0, r2, #8
 80177d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80177d4:	fb11 f105 	smulbb	r1, r1, r5
 80177d8:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80177dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80177e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80177e4:	fb00 1003 	mla	r0, r0, r3, r1
 80177e8:	fa5f fc8c 	uxtb.w	ip, ip
 80177ec:	10d1      	asrs	r1, r2, #3
 80177ee:	00d2      	lsls	r2, r2, #3
 80177f0:	fb1c fc05 	smulbb	ip, ip, r5
 80177f4:	b2d2      	uxtb	r2, r2
 80177f6:	fb02 c203 	mla	r2, r2, r3, ip
 80177fa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80177fe:	b280      	uxth	r0, r0
 8017800:	b292      	uxth	r2, r2
 8017802:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017806:	fb1e fe05 	smulbb	lr, lr, r5
 801780a:	fb01 e103 	mla	r1, r1, r3, lr
 801780e:	f102 0c01 	add.w	ip, r2, #1
 8017812:	1c43      	adds	r3, r0, #1
 8017814:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017818:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801781c:	b289      	uxth	r1, r1
 801781e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017822:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017826:	4313      	orrs	r3, r2
 8017828:	1c4a      	adds	r2, r1, #1
 801782a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801782e:	0949      	lsrs	r1, r1, #5
 8017830:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017834:	430b      	orrs	r3, r1
 8017836:	f8a8 3000 	strh.w	r3, [r8]
 801783a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801783c:	441c      	add	r4, r3
 801783e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017840:	f108 0802 	add.w	r8, r8, #2
 8017844:	441e      	add	r6, r3
 8017846:	f10b 3bff 	add.w	fp, fp, #4294967295
 801784a:	e74f      	b.n	80176ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801784c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801784e:	441c      	add	r4, r3
 8017850:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017852:	441e      	add	r6, r3
 8017854:	9b06      	ldr	r3, [sp, #24]
 8017856:	3b01      	subs	r3, #1
 8017858:	9306      	str	r3, [sp, #24]
 801785a:	f109 0902 	add.w	r9, r9, #2
 801785e:	e701      	b.n	8017664 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017860:	f47f af11 	bne.w	8017686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017864:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017866:	2b00      	cmp	r3, #0
 8017868:	f340 80ef 	ble.w	8017a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 801786c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017870:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017874:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017878:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801787a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801787e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017882:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017886:	eef0 6a48 	vmov.f32	s13, s16
 801788a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801788e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017892:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017896:	ee16 4a90 	vmov	r4, s13
 801789a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801789e:	eef0 6a68 	vmov.f32	s13, s17
 80178a2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80178a6:	ee18 2a10 	vmov	r2, s16
 80178aa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80178ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80178b2:	ee18 2a90 	vmov	r2, s17
 80178b6:	9329      	str	r3, [sp, #164]	; 0xa4
 80178b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80178ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80178be:	932a      	str	r3, [sp, #168]	; 0xa8
 80178c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80178c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80178c4:	3b01      	subs	r3, #1
 80178c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80178cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80178ce:	bf08      	it	eq
 80178d0:	4613      	moveq	r3, r2
 80178d2:	ee16 6a90 	vmov	r6, s13
 80178d6:	9306      	str	r3, [sp, #24]
 80178d8:	eef0 8a67 	vmov.f32	s17, s15
 80178dc:	eeb0 8a47 	vmov.f32	s16, s14
 80178e0:	e6b9      	b.n	8017656 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80178e2:	1c4d      	adds	r5, r1, #1
 80178e4:	d1a9      	bne.n	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80178e6:	428f      	cmp	r7, r1
 80178e8:	dda7      	ble.n	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80178ea:	1c55      	adds	r5, r2, #1
 80178ec:	dba5      	blt.n	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80178ee:	9d07      	ldr	r5, [sp, #28]
 80178f0:	4295      	cmp	r5, r2
 80178f2:	dda2      	ble.n	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 80178f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80178f6:	9101      	str	r1, [sp, #4]
 80178f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80178fc:	9b07      	ldr	r3, [sp, #28]
 80178fe:	9300      	str	r3, [sp, #0]
 8017900:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8017904:	463b      	mov	r3, r7
 8017906:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017908:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801790a:	4641      	mov	r1, r8
 801790c:	f7ff fd9a 	bl	8017444 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017910:	e793      	b.n	801783a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017912:	1422      	asrs	r2, r4, #16
 8017914:	1431      	asrs	r1, r6, #16
 8017916:	fb07 2101 	mla	r1, r7, r1, r2
 801791a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801791c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801791e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017922:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017926:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801792a:	8851      	ldrh	r1, [r2, #2]
 801792c:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017930:	f1be 0f00 	cmp.w	lr, #0
 8017934:	d006      	beq.n	8017944 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8017936:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017938:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801793a:	1810      	adds	r0, r2, r0
 801793c:	5b52      	ldrh	r2, [r2, r5]
 801793e:	9210      	str	r2, [sp, #64]	; 0x40
 8017940:	8842      	ldrh	r2, [r0, #2]
 8017942:	9211      	str	r2, [sp, #68]	; 0x44
 8017944:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017948:	fb13 f20e 	smulbb	r2, r3, lr
 801794c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017950:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017954:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017958:	10d2      	asrs	r2, r2, #3
 801795a:	ea40 000c 	orr.w	r0, r0, ip
 801795e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017962:	f1ce 0c10 	rsb	ip, lr, #16
 8017966:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801796a:	ebac 0c03 	sub.w	ip, ip, r3
 801796e:	ea4b 0101 	orr.w	r1, fp, r1
 8017972:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017976:	4359      	muls	r1, r3
 8017978:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801797a:	9d08      	ldr	r5, [sp, #32]
 801797c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017980:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017984:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017988:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 801798c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801798e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017992:	ea4b 0000 	orr.w	r0, fp, r0
 8017996:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801799a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801799e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80179a2:	fb02 c000 	mla	r0, r2, r0, ip
 80179a6:	ea4b 0b03 	orr.w	fp, fp, r3
 80179aa:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80179ae:	fb02 0b0b 	mla	fp, r2, fp, r0
 80179b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80179b4:	ea4f 515b 	mov.w	r1, fp, lsr #21
 80179b8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80179bc:	8812      	ldrh	r2, [r2, #0]
 80179be:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80179c2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80179c6:	ea41 0b0b 	orr.w	fp, r1, fp
 80179ca:	fa1f f38b 	uxth.w	r3, fp
 80179ce:	1211      	asrs	r1, r2, #8
 80179d0:	1218      	asrs	r0, r3, #8
 80179d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80179d6:	fb11 f105 	smulbb	r1, r1, r5
 80179da:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80179de:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80179e2:	00d2      	lsls	r2, r2, #3
 80179e4:	fb00 100a 	mla	r0, r0, sl, r1
 80179e8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80179ec:	10d9      	asrs	r1, r3, #3
 80179ee:	b2d2      	uxtb	r2, r2
 80179f0:	00db      	lsls	r3, r3, #3
 80179f2:	fb1c fc05 	smulbb	ip, ip, r5
 80179f6:	fb12 f205 	smulbb	r2, r2, r5
 80179fa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80179fe:	b2db      	uxtb	r3, r3
 8017a00:	b280      	uxth	r0, r0
 8017a02:	fb01 c10a 	mla	r1, r1, sl, ip
 8017a06:	fb03 230a 	mla	r3, r3, sl, r2
 8017a0a:	b29b      	uxth	r3, r3
 8017a0c:	b289      	uxth	r1, r1
 8017a0e:	1c42      	adds	r2, r0, #1
 8017a10:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017a14:	f101 0c01 	add.w	ip, r1, #1
 8017a18:	1c5a      	adds	r2, r3, #1
 8017a1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017a1e:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017a22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017a26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a2a:	0949      	lsrs	r1, r1, #5
 8017a2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017a2e:	4310      	orrs	r0, r2
 8017a30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017a34:	4308      	orrs	r0, r1
 8017a36:	f823 0b02 	strh.w	r0, [r3], #2
 8017a3a:	930d      	str	r3, [sp, #52]	; 0x34
 8017a3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017a3e:	441c      	add	r4, r3
 8017a40:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a42:	f108 38ff 	add.w	r8, r8, #4294967295
 8017a46:	441e      	add	r6, r3
 8017a48:	e636      	b.n	80176b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8017a4a:	b015      	add	sp, #84	; 0x54
 8017a4c:	ecbd 8b08 	vpop	{d8-d11}
 8017a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8017a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a58:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8017a5c:	fb06 5c03 	mla	ip, r6, r3, r5
 8017a60:	2e00      	cmp	r6, #0
 8017a62:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8017a66:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8017a6a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8017a6e:	8808      	ldrh	r0, [r1, #0]
 8017a70:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8017a74:	db2e      	blt.n	8017ad4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017a76:	45b0      	cmp	r8, r6
 8017a78:	dd2c      	ble.n	8017ad4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017a7a:	2d00      	cmp	r5, #0
 8017a7c:	db28      	blt.n	8017ad0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017a7e:	42ab      	cmp	r3, r5
 8017a80:	dd26      	ble.n	8017ad0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017a82:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8017a86:	1c6a      	adds	r2, r5, #1
 8017a88:	d427      	bmi.n	8017ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017a8a:	4293      	cmp	r3, r2
 8017a8c:	dd25      	ble.n	8017ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017a8e:	b324      	cbz	r4, 8017ada <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017a90:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8017a94:	3601      	adds	r6, #1
 8017a96:	d424      	bmi.n	8017ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017a98:	45b0      	cmp	r8, r6
 8017a9a:	dd22      	ble.n	8017ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017a9c:	b31f      	cbz	r7, 8017ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8017a9e:	2d00      	cmp	r5, #0
 8017aa0:	db1d      	blt.n	8017ade <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017aa2:	42ab      	cmp	r3, r5
 8017aa4:	dd1b      	ble.n	8017ade <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017aa6:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8017aaa:	3501      	adds	r5, #1
 8017aac:	d405      	bmi.n	8017aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017aae:	42ab      	cmp	r3, r5
 8017ab0:	dd03      	ble.n	8017aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017ab2:	b124      	cbz	r4, 8017abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8017ab4:	3301      	adds	r3, #1
 8017ab6:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8017aba:	2c0f      	cmp	r4, #15
 8017abc:	d801      	bhi.n	8017ac2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017abe:	2f0f      	cmp	r7, #15
 8017ac0:	d914      	bls.n	8017aec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8017ac2:	4b27      	ldr	r3, [pc, #156]	; (8017b60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8017ac4:	4a27      	ldr	r2, [pc, #156]	; (8017b64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8017ac6:	4828      	ldr	r0, [pc, #160]	; (8017b68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8017ac8:	f240 11ef 	movw	r1, #495	; 0x1ef
 8017acc:	f002 fc52 	bl	801a374 <__assert_func>
 8017ad0:	4684      	mov	ip, r0
 8017ad2:	e7d8      	b.n	8017a86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8017ad4:	4602      	mov	r2, r0
 8017ad6:	4684      	mov	ip, r0
 8017ad8:	e7dc      	b.n	8017a94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017ada:	4602      	mov	r2, r0
 8017adc:	e7da      	b.n	8017a94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017ade:	4606      	mov	r6, r0
 8017ae0:	e7e3      	b.n	8017aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8017ae2:	4606      	mov	r6, r0
 8017ae4:	e7e9      	b.n	8017aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017ae6:	2c0f      	cmp	r4, #15
 8017ae8:	d8eb      	bhi.n	8017ac2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017aea:	4606      	mov	r6, r0
 8017aec:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8017af0:	fb14 f307 	smulbb	r3, r4, r7
 8017af4:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017af8:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017afc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017b00:	10db      	asrs	r3, r3, #3
 8017b02:	ea45 0c0c 	orr.w	ip, r5, ip
 8017b06:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017b0a:	f1c7 0510 	rsb	r5, r7, #16
 8017b0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b12:	1b2d      	subs	r5, r5, r4
 8017b14:	ea4e 0202 	orr.w	r2, lr, r2
 8017b18:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8017b1c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8017b20:	4354      	muls	r4, r2
 8017b22:	fb05 450c 	mla	r5, r5, ip, r4
 8017b26:	0404      	lsls	r4, r0, #16
 8017b28:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017b2c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017b30:	4320      	orrs	r0, r4
 8017b32:	fb03 5400 	mla	r4, r3, r0, r5
 8017b36:	0430      	lsls	r0, r6, #16
 8017b38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017b3c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8017b40:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8017b44:	4330      	orrs	r0, r6
 8017b46:	fb07 4000 	mla	r0, r7, r0, r4
 8017b4a:	0d43      	lsrs	r3, r0, #21
 8017b4c:	0940      	lsrs	r0, r0, #5
 8017b4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017b56:	4318      	orrs	r0, r3
 8017b58:	8008      	strh	r0, [r1, #0]
 8017b5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017b5e:	bf00      	nop
 8017b60:	0801dee5 	.word	0x0801dee5
 8017b64:	0801e4e6 	.word	0x0801e4e6
 8017b68:	0801df6d 	.word	0x0801df6d

08017b6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b70:	ed2d 8b0a 	vpush	{d8-d12}
 8017b74:	b093      	sub	sp, #76	; 0x4c
 8017b76:	461d      	mov	r5, r3
 8017b78:	9210      	str	r2, [sp, #64]	; 0x40
 8017b7a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017b7c:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8017b80:	9208      	str	r2, [sp, #32]
 8017b82:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8017b86:	910b      	str	r1, [sp, #44]	; 0x2c
 8017b88:	6859      	ldr	r1, [r3, #4]
 8017b8a:	681b      	ldr	r3, [r3, #0]
 8017b8c:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8017b90:	9011      	str	r0, [sp, #68]	; 0x44
 8017b92:	fb01 2707 	mla	r7, r1, r7, r2
 8017b96:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8017b9a:	9307      	str	r3, [sp, #28]
 8017b9c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017b9e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017ba2:	681b      	ldr	r3, [r3, #0]
 8017ba4:	9309      	str	r3, [sp, #36]	; 0x24
 8017ba6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017baa:	eeb0 aa40 	vmov.f32	s20, s0
 8017bae:	eef0 9a60 	vmov.f32	s19, s1
 8017bb2:	eeb0 9a41 	vmov.f32	s18, s2
 8017bb6:	eeb0 8a62 	vmov.f32	s16, s5
 8017bba:	eef0 8a43 	vmov.f32	s17, s6
 8017bbe:	eeb0 ca44 	vmov.f32	s24, s8
 8017bc2:	eef0 ba64 	vmov.f32	s23, s9
 8017bc6:	eeb0 ba45 	vmov.f32	s22, s10
 8017bca:	930a      	str	r3, [sp, #40]	; 0x28
 8017bcc:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8017bd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017bd2:	2b00      	cmp	r3, #0
 8017bd4:	dc03      	bgt.n	8017bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8017bd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017bd8:	2b00      	cmp	r3, #0
 8017bda:	f340 816c 	ble.w	8017eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017bde:	2d00      	cmp	r5, #0
 8017be0:	f340 80b6 	ble.w	8017d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8017be4:	1422      	asrs	r2, r4, #16
 8017be6:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017bea:	d428      	bmi.n	8017c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8017bec:	1c51      	adds	r1, r2, #1
 8017bee:	4588      	cmp	r8, r1
 8017bf0:	dd27      	ble.n	8017c42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017bf2:	2b00      	cmp	r3, #0
 8017bf4:	db25      	blt.n	8017c42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017bf6:	9808      	ldr	r0, [sp, #32]
 8017bf8:	1c59      	adds	r1, r3, #1
 8017bfa:	4288      	cmp	r0, r1
 8017bfc:	dd21      	ble.n	8017c42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017bfe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c00:	1e6b      	subs	r3, r5, #1
 8017c02:	fb02 4203 	mla	r2, r2, r3, r4
 8017c06:	1412      	asrs	r2, r2, #16
 8017c08:	d422      	bmi.n	8017c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c0a:	3201      	adds	r2, #1
 8017c0c:	4590      	cmp	r8, r2
 8017c0e:	dd1f      	ble.n	8017c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c10:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017c12:	fb02 6303 	mla	r3, r2, r3, r6
 8017c16:	141b      	asrs	r3, r3, #16
 8017c18:	d41a      	bmi.n	8017c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c1a:	9a08      	ldr	r2, [sp, #32]
 8017c1c:	3301      	adds	r3, #1
 8017c1e:	429a      	cmp	r2, r3
 8017c20:	dd16      	ble.n	8017c50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017c22:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017c26:	46a9      	mov	r9, r5
 8017c28:	f1b9 0f00 	cmp.w	r9, #0
 8017c2c:	f300 80e4 	bgt.w	8017df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8017c30:	9b07      	ldr	r3, [sp, #28]
 8017c32:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017c36:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8017c3a:	9307      	str	r3, [sp, #28]
 8017c3c:	e08a      	b.n	8017d54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8017c3e:	1c51      	adds	r1, r2, #1
 8017c40:	d17d      	bne.n	8017d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c42:	4542      	cmp	r2, r8
 8017c44:	da7b      	bge.n	8017d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c46:	1c5a      	adds	r2, r3, #1
 8017c48:	db79      	blt.n	8017d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c4a:	9a08      	ldr	r2, [sp, #32]
 8017c4c:	4293      	cmp	r3, r2
 8017c4e:	da76      	bge.n	8017d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c50:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8017c54:	46aa      	mov	sl, r5
 8017c56:	f1ba 0f00 	cmp.w	sl, #0
 8017c5a:	dde9      	ble.n	8017c30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8017c5c:	1421      	asrs	r1, r4, #16
 8017c5e:	ea4f 4226 	mov.w	r2, r6, asr #16
 8017c62:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017c66:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017c6a:	f100 80b0 	bmi.w	8017dce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8017c6e:	f101 0c01 	add.w	ip, r1, #1
 8017c72:	45e0      	cmp	r8, ip
 8017c74:	f340 80ad 	ble.w	8017dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8017c78:	2a00      	cmp	r2, #0
 8017c7a:	f2c0 80aa 	blt.w	8017dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8017c7e:	9f08      	ldr	r7, [sp, #32]
 8017c80:	f102 0c01 	add.w	ip, r2, #1
 8017c84:	4567      	cmp	r7, ip
 8017c86:	f340 80a4 	ble.w	8017dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8017c8a:	fb02 1208 	mla	r2, r2, r8, r1
 8017c8e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017c90:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8017c94:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8017c98:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017c9c:	b138      	cbz	r0, 8017cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8017c9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017ca0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017ca2:	4472      	add	r2, lr
 8017ca4:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8017ca8:	8852      	ldrh	r2, [r2, #2]
 8017caa:	970c      	str	r7, [sp, #48]	; 0x30
 8017cac:	920d      	str	r2, [sp, #52]	; 0x34
 8017cae:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017cb2:	fb13 f200 	smulbb	r2, r3, r0
 8017cb6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017cba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017cbe:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017cc2:	10d2      	asrs	r2, r2, #3
 8017cc4:	ea4e 0c0c 	orr.w	ip, lr, ip
 8017cc8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017ccc:	f1c0 0e10 	rsb	lr, r0, #16
 8017cd0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017cd4:	ebae 0e03 	sub.w	lr, lr, r3
 8017cd8:	ea4b 0101 	orr.w	r1, fp, r1
 8017cdc:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017ce0:	4359      	muls	r1, r3
 8017ce2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ce4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017ce8:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017cec:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017cf0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017cf4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017cf8:	ea4c 0c03 	orr.w	ip, ip, r3
 8017cfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cfe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017d00:	041b      	lsls	r3, r3, #16
 8017d02:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017d06:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017d0a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017d0e:	ea43 030e 	orr.w	r3, r3, lr
 8017d12:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017d16:	fb02 c203 	mla	r2, r2, r3, ip
 8017d1a:	0d53      	lsrs	r3, r2, #21
 8017d1c:	0952      	lsrs	r2, r2, #5
 8017d1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d22:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017d26:	431a      	orrs	r2, r3
 8017d28:	f8a9 2000 	strh.w	r2, [r9]
 8017d2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d2e:	441c      	add	r4, r3
 8017d30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017d32:	f109 0902 	add.w	r9, r9, #2
 8017d36:	441e      	add	r6, r3
 8017d38:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017d3c:	e78b      	b.n	8017c56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8017d3e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d40:	441c      	add	r4, r3
 8017d42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017d44:	441e      	add	r6, r3
 8017d46:	9b07      	ldr	r3, [sp, #28]
 8017d48:	3302      	adds	r3, #2
 8017d4a:	3d01      	subs	r5, #1
 8017d4c:	9307      	str	r3, [sp, #28]
 8017d4e:	e746      	b.n	8017bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8017d50:	f47f af55 	bne.w	8017bfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017d54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d56:	2b00      	cmp	r3, #0
 8017d58:	f340 80ad 	ble.w	8017eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017d5c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8017d60:	ee79 9aab 	vadd.f32	s19, s19, s23
 8017d64:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8017d68:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017d6a:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8017d6e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017d72:	eef0 6a48 	vmov.f32	s13, s16
 8017d76:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017d7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017d7e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017d82:	ee16 4a90 	vmov	r4, s13
 8017d86:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017d8a:	eef0 6a68 	vmov.f32	s13, s17
 8017d8e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017d92:	ee18 2a10 	vmov	r2, s16
 8017d96:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017d9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d9e:	ee18 2a90 	vmov	r2, s17
 8017da2:	9329      	str	r3, [sp, #164]	; 0xa4
 8017da4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8017daa:	932a      	str	r3, [sp, #168]	; 0xa8
 8017dac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017dae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017db0:	3b01      	subs	r3, #1
 8017db2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017db6:	930b      	str	r3, [sp, #44]	; 0x2c
 8017db8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017dba:	ee16 6a90 	vmov	r6, s13
 8017dbe:	bf14      	ite	ne
 8017dc0:	461d      	movne	r5, r3
 8017dc2:	4615      	moveq	r5, r2
 8017dc4:	eef0 8a67 	vmov.f32	s17, s15
 8017dc8:	eeb0 8a47 	vmov.f32	s16, s14
 8017dcc:	e700      	b.n	8017bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8017dce:	1c4f      	adds	r7, r1, #1
 8017dd0:	d1ac      	bne.n	8017d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017dd2:	4588      	cmp	r8, r1
 8017dd4:	ddaa      	ble.n	8017d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017dd6:	1c57      	adds	r7, r2, #1
 8017dd8:	dba8      	blt.n	8017d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017dda:	9f08      	ldr	r7, [sp, #32]
 8017ddc:	4297      	cmp	r7, r2
 8017dde:	dda5      	ble.n	8017d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017de0:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8017de4:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8017de8:	9700      	str	r7, [sp, #0]
 8017dea:	4643      	mov	r3, r8
 8017dec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017dee:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017df0:	4649      	mov	r1, r9
 8017df2:	f7ff fe2f 	bl	8017a54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8017df6:	e799      	b.n	8017d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017df8:	1422      	asrs	r2, r4, #16
 8017dfa:	1431      	asrs	r1, r6, #16
 8017dfc:	fb08 2101 	mla	r1, r8, r1, r2
 8017e00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017e02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017e04:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017e08:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017e0c:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017e10:	8851      	ldrh	r1, [r2, #2]
 8017e12:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017e16:	f1be 0f00 	cmp.w	lr, #0
 8017e1a:	d006      	beq.n	8017e2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8017e1c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017e1e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017e20:	1810      	adds	r0, r2, r0
 8017e22:	5bd2      	ldrh	r2, [r2, r7]
 8017e24:	920e      	str	r2, [sp, #56]	; 0x38
 8017e26:	8842      	ldrh	r2, [r0, #2]
 8017e28:	920f      	str	r2, [sp, #60]	; 0x3c
 8017e2a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017e2e:	fb13 f20e 	smulbb	r2, r3, lr
 8017e32:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017e36:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017e3a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017e3e:	10d2      	asrs	r2, r2, #3
 8017e40:	ea40 000c 	orr.w	r0, r0, ip
 8017e44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e48:	f1ce 0c10 	rsb	ip, lr, #16
 8017e4c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e50:	ebac 0c03 	sub.w	ip, ip, r3
 8017e54:	ea4a 0101 	orr.w	r1, sl, r1
 8017e58:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017e5c:	4359      	muls	r1, r3
 8017e5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017e60:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017e64:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017e68:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017e6c:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8017e70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017e72:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017e74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e78:	041b      	lsls	r3, r3, #16
 8017e7a:	ea4a 0000 	orr.w	r0, sl, r0
 8017e7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017e82:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8017e86:	fb02 c000 	mla	r0, r2, r0, ip
 8017e8a:	ea43 0a0a 	orr.w	sl, r3, sl
 8017e8e:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8017e92:	fb02 000a 	mla	r0, r2, sl, r0
 8017e96:	0d43      	lsrs	r3, r0, #21
 8017e98:	0940      	lsrs	r0, r0, #5
 8017e9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017ea2:	4318      	orrs	r0, r3
 8017ea4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ea6:	f82b 0b02 	strh.w	r0, [fp], #2
 8017eaa:	441c      	add	r4, r3
 8017eac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017eae:	f109 39ff 	add.w	r9, r9, #4294967295
 8017eb2:	441e      	add	r6, r3
 8017eb4:	e6b8      	b.n	8017c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8017eb6:	b013      	add	sp, #76	; 0x4c
 8017eb8:	ecbd 8b0a 	vpop	{d8-d12}
 8017ebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8017ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ec4:	8808      	ldrh	r0, [r1, #0]
 8017ec6:	b085      	sub	sp, #20
 8017ec8:	1206      	asrs	r6, r0, #8
 8017eca:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8017ece:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017ed2:	9600      	str	r6, [sp, #0]
 8017ed4:	10c6      	asrs	r6, r0, #3
 8017ed6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017eda:	9601      	str	r6, [sp, #4]
 8017edc:	00c0      	lsls	r0, r0, #3
 8017ede:	fb04 c603 	mla	r6, r4, r3, ip
 8017ee2:	b2c0      	uxtb	r0, r0
 8017ee4:	4691      	mov	r9, r2
 8017ee6:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8017eea:	9a00      	ldr	r2, [sp, #0]
 8017eec:	9002      	str	r0, [sp, #8]
 8017eee:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8017ef2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8017ef6:	9a01      	ldr	r2, [sp, #4]
 8017ef8:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017efc:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8017f00:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017f04:	2c00      	cmp	r4, #0
 8017f06:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8017f0a:	db3a      	blt.n	8017f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8017f0c:	45a0      	cmp	r8, r4
 8017f0e:	dd38      	ble.n	8017f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8017f10:	f1bc 0f00 	cmp.w	ip, #0
 8017f14:	db33      	blt.n	8017f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8017f16:	4563      	cmp	r3, ip
 8017f18:	dd31      	ble.n	8017f7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8017f1a:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8017f1e:	f11c 0601 	adds.w	r6, ip, #1
 8017f22:	d431      	bmi.n	8017f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017f24:	42b3      	cmp	r3, r6
 8017f26:	dd2f      	ble.n	8017f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017f28:	b375      	cbz	r5, 8017f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017f2a:	f8de 6004 	ldr.w	r6, [lr, #4]
 8017f2e:	3401      	adds	r4, #1
 8017f30:	d42e      	bmi.n	8017f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017f32:	45a0      	cmp	r8, r4
 8017f34:	dd2c      	ble.n	8017f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017f36:	b35f      	cbz	r7, 8017f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017f38:	f1bc 0f00 	cmp.w	ip, #0
 8017f3c:	db26      	blt.n	8017f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017f3e:	4563      	cmp	r3, ip
 8017f40:	dd24      	ble.n	8017f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017f42:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8017f46:	f11c 0c01 	adds.w	ip, ip, #1
 8017f4a:	d405      	bmi.n	8017f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017f4c:	4563      	cmp	r3, ip
 8017f4e:	dd03      	ble.n	8017f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017f50:	b115      	cbz	r5, 8017f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017f52:	3301      	adds	r3, #1
 8017f54:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8017f58:	2d0f      	cmp	r5, #15
 8017f5a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017f5e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017f62:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017f66:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8017f6a:	d801      	bhi.n	8017f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8017f6c:	2f0f      	cmp	r7, #15
 8017f6e:	d911      	bls.n	8017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017f70:	4b82      	ldr	r3, [pc, #520]	; (801817c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8017f72:	4a83      	ldr	r2, [pc, #524]	; (8018180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8017f74:	4883      	ldr	r0, [pc, #524]	; (8018184 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8017f76:	f240 210d 	movw	r1, #525	; 0x20d
 8017f7a:	f002 f9fb 	bl	801a374 <__assert_func>
 8017f7e:	4602      	mov	r2, r0
 8017f80:	e7cd      	b.n	8017f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017f82:	4606      	mov	r6, r0
 8017f84:	4602      	mov	r2, r0
 8017f86:	e7d2      	b.n	8017f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017f88:	4606      	mov	r6, r0
 8017f8a:	e7d0      	b.n	8017f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8017f8c:	4604      	mov	r4, r0
 8017f8e:	e7da      	b.n	8017f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8017f90:	4604      	mov	r4, r0
 8017f92:	e7e1      	b.n	8017f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017f94:	b2ab      	uxth	r3, r5
 8017f96:	b2bf      	uxth	r7, r7
 8017f98:	fb03 fe07 	mul.w	lr, r3, r7
 8017f9c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017fa0:	011b      	lsls	r3, r3, #4
 8017fa2:	eba3 0c0e 	sub.w	ip, r3, lr
 8017fa6:	b2bf      	uxth	r7, r7
 8017fa8:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8017fac:	fa1f fc8c 	uxth.w	ip, ip
 8017fb0:	1bed      	subs	r5, r5, r7
 8017fb2:	b2ad      	uxth	r5, r5
 8017fb4:	fb0c f30a 	mul.w	r3, ip, sl
 8017fb8:	fb05 330b 	mla	r3, r5, fp, r3
 8017fbc:	fb07 3309 	mla	r3, r7, r9, r3
 8017fc0:	fb0e 3308 	mla	r3, lr, r8, r3
 8017fc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017fc8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017fcc:	9303      	str	r3, [sp, #12]
 8017fce:	d018      	beq.n	8018002 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8017fd0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017fd4:	fb0b f303 	mul.w	r3, fp, r3
 8017fd8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017fdc:	fb0b fb02 	mul.w	fp, fp, r2
 8017fe0:	0a1a      	lsrs	r2, r3, #8
 8017fe2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017fe6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017fea:	441a      	add	r2, r3
 8017fec:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8017ff0:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017ff4:	0a12      	lsrs	r2, r2, #8
 8017ff6:	0a1b      	lsrs	r3, r3, #8
 8017ff8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017ffc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018000:	431a      	orrs	r2, r3
 8018002:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018006:	d019      	beq.n	801803c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8018008:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801800c:	fb0a fb0b 	mul.w	fp, sl, fp
 8018010:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018014:	fb0a fa06 	mul.w	sl, sl, r6
 8018018:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801801c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018020:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018024:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018028:	445e      	add	r6, fp
 801802a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801802e:	0a36      	lsrs	r6, r6, #8
 8018030:	0a1b      	lsrs	r3, r3, #8
 8018032:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018036:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801803a:	431e      	orrs	r6, r3
 801803c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018040:	d019      	beq.n	8018076 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8018042:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018046:	fb09 fa0a 	mul.w	sl, r9, sl
 801804a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801804e:	fb09 f904 	mul.w	r9, r9, r4
 8018052:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018056:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801805a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801805e:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018062:	4454      	add	r4, sl
 8018064:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018068:	0a24      	lsrs	r4, r4, #8
 801806a:	0a1b      	lsrs	r3, r3, #8
 801806c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018070:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018074:	431c      	orrs	r4, r3
 8018076:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801807a:	d019      	beq.n	80180b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801807c:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018080:	fb08 f909 	mul.w	r9, r8, r9
 8018084:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018088:	fb08 f800 	mul.w	r8, r8, r0
 801808c:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018090:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018094:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018098:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801809c:	4448      	add	r0, r9
 801809e:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80180a2:	0a00      	lsrs	r0, r0, #8
 80180a4:	0a1b      	lsrs	r3, r3, #8
 80180a6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80180aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80180ae:	4318      	orrs	r0, r3
 80180b0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80180b4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80180b8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80180bc:	fb0c f808 	mul.w	r8, ip, r8
 80180c0:	fb0c f606 	mul.w	r6, ip, r6
 80180c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80180c8:	fb05 6202 	mla	r2, r5, r2, r6
 80180cc:	fb05 8803 	mla	r8, r5, r3, r8
 80180d0:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80180d4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80180d8:	fb07 8803 	mla	r8, r7, r3, r8
 80180dc:	fb07 2704 	mla	r7, r7, r4, r2
 80180e0:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80180e4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80180e8:	fb0e 8303 	mla	r3, lr, r3, r8
 80180ec:	fb0e 7e00 	mla	lr, lr, r0, r7
 80180f0:	0a1b      	lsrs	r3, r3, #8
 80180f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80180f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80180fa:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80180fe:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018102:	ea43 0e0e 	orr.w	lr, r3, lr
 8018106:	9b03      	ldr	r3, [sp, #12]
 8018108:	b2a4      	uxth	r4, r4
 801810a:	4363      	muls	r3, r4
 801810c:	1c5a      	adds	r2, r3, #1
 801810e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018112:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8018116:	9b00      	ldr	r3, [sp, #0]
 8018118:	b2d2      	uxtb	r2, r2
 801811a:	ea4f 451e 	mov.w	r5, lr, lsr #16
 801811e:	fb13 f302 	smulbb	r3, r3, r2
 8018122:	fb05 3304 	mla	r3, r5, r4, r3
 8018126:	b29d      	uxth	r5, r3
 8018128:	9b01      	ldr	r3, [sp, #4]
 801812a:	f3ce 2007 	ubfx	r0, lr, #8, #8
 801812e:	fb13 f302 	smulbb	r3, r3, r2
 8018132:	fb00 3004 	mla	r0, r0, r4, r3
 8018136:	9b02      	ldr	r3, [sp, #8]
 8018138:	fa5f fe8e 	uxtb.w	lr, lr
 801813c:	fb13 f202 	smulbb	r2, r3, r2
 8018140:	fb0e 2e04 	mla	lr, lr, r4, r2
 8018144:	fa1f fe8e 	uxth.w	lr, lr
 8018148:	b280      	uxth	r0, r0
 801814a:	f10e 0201 	add.w	r2, lr, #1
 801814e:	1c6b      	adds	r3, r5, #1
 8018150:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018154:	1c42      	adds	r2, r0, #1
 8018156:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801815a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801815e:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018162:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018166:	0952      	lsrs	r2, r2, #5
 8018168:	ea43 030e 	orr.w	r3, r3, lr
 801816c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018170:	4313      	orrs	r3, r2
 8018172:	800b      	strh	r3, [r1, #0]
 8018174:	b005      	add	sp, #20
 8018176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801817a:	bf00      	nop
 801817c:	0801dee5 	.word	0x0801dee5
 8018180:	0801e43d 	.word	0x0801e43d
 8018184:	0801df6d 	.word	0x0801df6d

08018188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801818c:	ed2d 8b08 	vpush	{d8-d11}
 8018190:	b099      	sub	sp, #100	; 0x64
 8018192:	eeb0 aa40 	vmov.f32	s20, s0
 8018196:	9306      	str	r3, [sp, #24]
 8018198:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801819c:	9307      	str	r3, [sp, #28]
 801819e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80181a2:	9216      	str	r2, [sp, #88]	; 0x58
 80181a4:	9310      	str	r3, [sp, #64]	; 0x40
 80181a6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80181a8:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80181ac:	9113      	str	r1, [sp, #76]	; 0x4c
 80181ae:	9315      	str	r3, [sp, #84]	; 0x54
 80181b0:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80181b4:	9017      	str	r0, [sp, #92]	; 0x5c
 80181b6:	6850      	ldr	r0, [r2, #4]
 80181b8:	6812      	ldr	r2, [r2, #0]
 80181ba:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80181bc:	fb00 1303 	mla	r3, r0, r3, r1
 80181c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80181c4:	930a      	str	r3, [sp, #40]	; 0x28
 80181c6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80181c8:	681b      	ldr	r3, [r3, #0]
 80181ca:	9312      	str	r3, [sp, #72]	; 0x48
 80181cc:	9b07      	ldr	r3, [sp, #28]
 80181ce:	009b      	lsls	r3, r3, #2
 80181d0:	eef0 9a60 	vmov.f32	s19, s1
 80181d4:	eeb0 9a41 	vmov.f32	s18, s2
 80181d8:	eeb0 8a62 	vmov.f32	s16, s5
 80181dc:	eef0 8a43 	vmov.f32	s17, s6
 80181e0:	eef0 ba44 	vmov.f32	s23, s8
 80181e4:	eeb0 ba64 	vmov.f32	s22, s9
 80181e8:	eef0 aa45 	vmov.f32	s21, s10
 80181ec:	930e      	str	r3, [sp, #56]	; 0x38
 80181ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80181f0:	2b00      	cmp	r3, #0
 80181f2:	dc03      	bgt.n	80181fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80181f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80181f6:	2b00      	cmp	r3, #0
 80181f8:	f340 8352 	ble.w	80188a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80181fc:	9b06      	ldr	r3, [sp, #24]
 80181fe:	2b00      	cmp	r3, #0
 8018200:	f340 81a8 	ble.w	8018554 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8018204:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018206:	1412      	asrs	r2, r2, #16
 8018208:	ea4f 4324 	mov.w	r3, r4, asr #16
 801820c:	d430      	bmi.n	8018270 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801820e:	9807      	ldr	r0, [sp, #28]
 8018210:	1c51      	adds	r1, r2, #1
 8018212:	4288      	cmp	r0, r1
 8018214:	dd2f      	ble.n	8018276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018216:	2b00      	cmp	r3, #0
 8018218:	db2d      	blt.n	8018276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801821a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801821c:	1c59      	adds	r1, r3, #1
 801821e:	4288      	cmp	r0, r1
 8018220:	dd29      	ble.n	8018276 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018222:	9b06      	ldr	r3, [sp, #24]
 8018224:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018226:	992b      	ldr	r1, [sp, #172]	; 0xac
 8018228:	3b01      	subs	r3, #1
 801822a:	fb02 1203 	mla	r2, r2, r3, r1
 801822e:	1412      	asrs	r2, r2, #16
 8018230:	d42c      	bmi.n	801828c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018232:	9907      	ldr	r1, [sp, #28]
 8018234:	3201      	adds	r2, #1
 8018236:	4291      	cmp	r1, r2
 8018238:	dd28      	ble.n	801828c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801823a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801823c:	fb02 4303 	mla	r3, r2, r3, r4
 8018240:	141b      	asrs	r3, r3, #16
 8018242:	d423      	bmi.n	801828c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018244:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018246:	3301      	adds	r3, #1
 8018248:	429a      	cmp	r2, r3
 801824a:	dd1f      	ble.n	801828c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801824c:	9b06      	ldr	r3, [sp, #24]
 801824e:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8018252:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8018256:	9311      	str	r3, [sp, #68]	; 0x44
 8018258:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801825a:	2b00      	cmp	r3, #0
 801825c:	f300 81e3 	bgt.w	8018626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8018260:	9b06      	ldr	r3, [sp, #24]
 8018262:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018266:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018268:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801826c:	930a      	str	r3, [sp, #40]	; 0x28
 801826e:	e173      	b.n	8018558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8018270:	1c51      	adds	r1, r2, #1
 8018272:	f040 8162 	bne.w	801853a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018276:	9907      	ldr	r1, [sp, #28]
 8018278:	428a      	cmp	r2, r1
 801827a:	f280 815e 	bge.w	801853a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801827e:	1c5f      	adds	r7, r3, #1
 8018280:	f2c0 815b 	blt.w	801853a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018284:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018286:	4293      	cmp	r3, r2
 8018288:	f280 8157 	bge.w	801853a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801828c:	9b06      	ldr	r3, [sp, #24]
 801828e:	9314      	str	r3, [sp, #80]	; 0x50
 8018290:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8018294:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018296:	9311      	str	r3, [sp, #68]	; 0x44
 8018298:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801829a:	2b00      	cmp	r3, #0
 801829c:	dde0      	ble.n	8018260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801829e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80182a0:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80182a4:	1412      	asrs	r2, r2, #16
 80182a6:	ea4f 4324 	mov.w	r3, r4, asr #16
 80182aa:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80182ae:	f100 81a1 	bmi.w	80185f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 80182b2:	9e07      	ldr	r6, [sp, #28]
 80182b4:	1c55      	adds	r5, r2, #1
 80182b6:	42ae      	cmp	r6, r5
 80182b8:	f340 819e 	ble.w	80185f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80182bc:	2b00      	cmp	r3, #0
 80182be:	f2c0 819b 	blt.w	80185f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80182c2:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80182c4:	1c5d      	adds	r5, r3, #1
 80182c6:	42ae      	cmp	r6, r5
 80182c8:	f340 8196 	ble.w	80185f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80182cc:	9d07      	ldr	r5, [sp, #28]
 80182ce:	fb03 2305 	mla	r3, r3, r5, r2
 80182d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80182d4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80182d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80182dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80182e0:	2800      	cmp	r0, #0
 80182e2:	f000 8178 	beq.w	80185d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80182e6:	686a      	ldr	r2, [r5, #4]
 80182e8:	920b      	str	r2, [sp, #44]	; 0x2c
 80182ea:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80182ee:	2900      	cmp	r1, #0
 80182f0:	f000 817a 	beq.w	80185e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 80182f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80182f6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80182f8:	18aa      	adds	r2, r5, r2
 80182fa:	59ad      	ldr	r5, [r5, r6]
 80182fc:	6852      	ldr	r2, [r2, #4]
 80182fe:	9508      	str	r5, [sp, #32]
 8018300:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8018304:	920c      	str	r2, [sp, #48]	; 0x30
 8018306:	0e15      	lsrs	r5, r2, #24
 8018308:	b280      	uxth	r0, r0
 801830a:	b289      	uxth	r1, r1
 801830c:	fb00 fb01 	mul.w	fp, r0, r1
 8018310:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8018314:	0100      	lsls	r0, r0, #4
 8018316:	eba0 090b 	sub.w	r9, r0, fp
 801831a:	b289      	uxth	r1, r1
 801831c:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8018320:	fa1f f989 	uxth.w	r9, r9
 8018324:	1a52      	subs	r2, r2, r1
 8018326:	b292      	uxth	r2, r2
 8018328:	fb09 f008 	mul.w	r0, r9, r8
 801832c:	fb02 000c 	mla	r0, r2, ip, r0
 8018330:	fb01 000a 	mla	r0, r1, sl, r0
 8018334:	fb0b 0005 	mla	r0, fp, r5, r0
 8018338:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801833c:	2800      	cmp	r0, #0
 801833e:	f000 80ef 	beq.w	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018342:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018346:	d01b      	beq.n	8018380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8018348:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801834c:	fb0c fe0e 	mul.w	lr, ip, lr
 8018350:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018354:	fb0c fc03 	mul.w	ip, ip, r3
 8018358:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801835c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018360:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018364:	4473      	add	r3, lr
 8018366:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801836a:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801836e:	0a1b      	lsrs	r3, r3, #8
 8018370:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018374:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018378:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801837c:	ea43 030e 	orr.w	r3, r3, lr
 8018380:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018384:	d01e      	beq.n	80183c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8018386:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018388:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801838c:	fb08 fc0c 	mul.w	ip, r8, ip
 8018390:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8018394:	fb08 f80e 	mul.w	r8, r8, lr
 8018398:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801839c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183a0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80183a4:	44e6      	add	lr, ip
 80183a6:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80183aa:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80183ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80183b2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80183b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183ba:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80183be:	ea4e 0608 	orr.w	r6, lr, r8
 80183c2:	960b      	str	r6, [sp, #44]	; 0x2c
 80183c4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80183c8:	d01e      	beq.n	8018408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 80183ca:	9e08      	ldr	r6, [sp, #32]
 80183cc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80183d0:	fb0a f808 	mul.w	r8, sl, r8
 80183d4:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80183d8:	fb0a fa0c 	mul.w	sl, sl, ip
 80183dc:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80183e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183e4:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80183e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80183ec:	44c6      	add	lr, r8
 80183ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80183f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80183f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80183fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80183fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018402:	ea4e 060a 	orr.w	r6, lr, sl
 8018406:	9608      	str	r6, [sp, #32]
 8018408:	2dff      	cmp	r5, #255	; 0xff
 801840a:	d01d      	beq.n	8018448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801840c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801840e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018412:	fb05 f808 	mul.w	r8, r5, r8
 8018416:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 801841a:	fb05 f50c 	mul.w	r5, r5, ip
 801841e:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018422:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018426:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801842a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801842e:	44c6      	add	lr, r8
 8018430:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018434:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018438:	0a2d      	lsrs	r5, r5, #8
 801843a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801843e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018442:	ea4e 0505 	orr.w	r5, lr, r5
 8018446:	950c      	str	r5, [sp, #48]	; 0x30
 8018448:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801844a:	9e08      	ldr	r6, [sp, #32]
 801844c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018450:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018454:	fb09 f505 	mul.w	r5, r9, r5
 8018458:	fb02 550c 	mla	r5, r2, ip, r5
 801845c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018460:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018462:	fb01 550c 	mla	r5, r1, ip, r5
 8018466:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801846a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801846c:	fb0b 550c 	mla	r5, fp, ip, r5
 8018470:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018474:	fb09 f90c 	mul.w	r9, r9, ip
 8018478:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801847c:	fb02 9303 	mla	r3, r2, r3, r9
 8018480:	9a08      	ldr	r2, [sp, #32]
 8018482:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8018486:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018488:	fb01 330e 	mla	r3, r1, lr, r3
 801848c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018490:	fb0b 3b01 	mla	fp, fp, r1, r3
 8018494:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018496:	0a2d      	lsrs	r5, r5, #8
 8018498:	f8b3 c000 	ldrh.w	ip, [r3]
 801849c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80184a0:	fb00 f307 	mul.w	r3, r0, r7
 80184a4:	1c58      	adds	r0, r3, #1
 80184a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80184aa:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80184ae:	ea45 050b 	orr.w	r5, r5, fp
 80184b2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80184b6:	0c29      	lsrs	r1, r5, #16
 80184b8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80184bc:	ea4f 232c 	mov.w	r3, ip, asr #8
 80184c0:	b2c0      	uxtb	r0, r0
 80184c2:	fb11 f107 	smulbb	r1, r1, r7
 80184c6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80184ca:	fb03 1300 	mla	r3, r3, r0, r1
 80184ce:	b299      	uxth	r1, r3
 80184d0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80184d4:	f3c5 2307 	ubfx	r3, r5, #8, #8
 80184d8:	fb13 f307 	smulbb	r3, r3, r7
 80184dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80184e0:	fb02 3200 	mla	r2, r2, r0, r3
 80184e4:	b2ed      	uxtb	r5, r5
 80184e6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80184ea:	b2db      	uxtb	r3, r3
 80184ec:	fb15 f507 	smulbb	r5, r5, r7
 80184f0:	fb03 5500 	mla	r5, r3, r0, r5
 80184f4:	b292      	uxth	r2, r2
 80184f6:	b2ad      	uxth	r5, r5
 80184f8:	1c4b      	adds	r3, r1, #1
 80184fa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80184fe:	1c68      	adds	r0, r5, #1
 8018500:	1c51      	adds	r1, r2, #1
 8018502:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8018506:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801850a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801850e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018512:	0952      	lsrs	r2, r2, #5
 8018514:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018518:	432b      	orrs	r3, r5
 801851a:	4313      	orrs	r3, r2
 801851c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801851e:	8013      	strh	r3, [r2, #0]
 8018520:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018522:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018524:	3302      	adds	r3, #2
 8018526:	9311      	str	r3, [sp, #68]	; 0x44
 8018528:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801852a:	4413      	add	r3, r2
 801852c:	932b      	str	r3, [sp, #172]	; 0xac
 801852e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018530:	441c      	add	r4, r3
 8018532:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018534:	3b01      	subs	r3, #1
 8018536:	9314      	str	r3, [sp, #80]	; 0x50
 8018538:	e6ae      	b.n	8018298 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801853a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801853c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801853e:	4413      	add	r3, r2
 8018540:	932b      	str	r3, [sp, #172]	; 0xac
 8018542:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018544:	441c      	add	r4, r3
 8018546:	9b06      	ldr	r3, [sp, #24]
 8018548:	3b01      	subs	r3, #1
 801854a:	9306      	str	r3, [sp, #24]
 801854c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801854e:	3302      	adds	r3, #2
 8018550:	930a      	str	r3, [sp, #40]	; 0x28
 8018552:	e653      	b.n	80181fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018554:	f47f ae65 	bne.w	8018222 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018558:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801855a:	2b00      	cmp	r3, #0
 801855c:	f340 81a0 	ble.w	80188a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018560:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018564:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018568:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801856c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801856e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018572:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018576:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801857a:	eef0 6a48 	vmov.f32	s13, s16
 801857e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018582:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018586:	ee37 8a48 	vsub.f32	s16, s14, s16
 801858a:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 801858e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018592:	eef0 6a68 	vmov.f32	s13, s17
 8018596:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801859a:	ee18 2a10 	vmov	r2, s16
 801859e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80185a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80185a6:	ee18 2a90 	vmov	r2, s17
 80185aa:	932d      	str	r3, [sp, #180]	; 0xb4
 80185ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80185ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80185b2:	932e      	str	r3, [sp, #184]	; 0xb8
 80185b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80185b6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80185b8:	3b01      	subs	r3, #1
 80185ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80185be:	9313      	str	r3, [sp, #76]	; 0x4c
 80185c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80185c2:	bf08      	it	eq
 80185c4:	4613      	moveq	r3, r2
 80185c6:	ee16 4a90 	vmov	r4, s13
 80185ca:	9306      	str	r3, [sp, #24]
 80185cc:	eef0 8a67 	vmov.f32	s17, s15
 80185d0:	eeb0 8a47 	vmov.f32	s16, s14
 80185d4:	e60b      	b.n	80181ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80185d6:	b151      	cbz	r1, 80185ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80185d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80185da:	58aa      	ldr	r2, [r5, r2]
 80185dc:	9208      	str	r2, [sp, #32]
 80185de:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80185e2:	25ff      	movs	r5, #255	; 0xff
 80185e4:	46a8      	mov	r8, r5
 80185e6:	e68f      	b.n	8018308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80185e8:	25ff      	movs	r5, #255	; 0xff
 80185ea:	46aa      	mov	sl, r5
 80185ec:	e68c      	b.n	8018308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 80185ee:	25ff      	movs	r5, #255	; 0xff
 80185f0:	46aa      	mov	sl, r5
 80185f2:	e7f7      	b.n	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 80185f4:	1c56      	adds	r6, r2, #1
 80185f6:	d193      	bne.n	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80185f8:	9d07      	ldr	r5, [sp, #28]
 80185fa:	4295      	cmp	r5, r2
 80185fc:	dd90      	ble.n	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80185fe:	1c5d      	adds	r5, r3, #1
 8018600:	db8e      	blt.n	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018602:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018604:	429d      	cmp	r5, r3
 8018606:	dd8b      	ble.n	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018608:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801860a:	9201      	str	r2, [sp, #4]
 801860c:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8018610:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018612:	9300      	str	r3, [sp, #0]
 8018614:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018618:	9b07      	ldr	r3, [sp, #28]
 801861a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801861c:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8018620:	f7ff fc4e 	bl	8017ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018624:	e77c      	b.n	8018520 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018626:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018628:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801862a:	9d07      	ldr	r5, [sp, #28]
 801862c:	1412      	asrs	r2, r2, #16
 801862e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018632:	1423      	asrs	r3, r4, #16
 8018634:	fb05 2303 	mla	r3, r5, r3, r2
 8018638:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801863a:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 801863e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018642:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018646:	0e1e      	lsrs	r6, r3, #24
 8018648:	2900      	cmp	r1, #0
 801864a:	f000 811a 	beq.w	8018882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 801864e:	686a      	ldr	r2, [r5, #4]
 8018650:	920d      	str	r2, [sp, #52]	; 0x34
 8018652:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018656:	2800      	cmp	r0, #0
 8018658:	f000 811c 	beq.w	8018894 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 801865c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801865e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018660:	18aa      	adds	r2, r5, r2
 8018662:	59ed      	ldr	r5, [r5, r7]
 8018664:	6852      	ldr	r2, [r2, #4]
 8018666:	9509      	str	r5, [sp, #36]	; 0x24
 8018668:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801866c:	920f      	str	r2, [sp, #60]	; 0x3c
 801866e:	0e15      	lsrs	r5, r2, #24
 8018670:	b289      	uxth	r1, r1
 8018672:	b280      	uxth	r0, r0
 8018674:	fb01 f900 	mul.w	r9, r1, r0
 8018678:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801867c:	0109      	lsls	r1, r1, #4
 801867e:	eba1 0e09 	sub.w	lr, r1, r9
 8018682:	b280      	uxth	r0, r0
 8018684:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018688:	fa1f fe8e 	uxth.w	lr, lr
 801868c:	1a12      	subs	r2, r2, r0
 801868e:	b292      	uxth	r2, r2
 8018690:	fb0e f10c 	mul.w	r1, lr, ip
 8018694:	fb02 1106 	mla	r1, r2, r6, r1
 8018698:	fb00 1108 	mla	r1, r0, r8, r1
 801869c:	fb09 1105 	mla	r1, r9, r5, r1
 80186a0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80186a4:	2900      	cmp	r1, #0
 80186a6:	f000 80e0 	beq.w	801886a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80186aa:	2eff      	cmp	r6, #255	; 0xff
 80186ac:	d016      	beq.n	80186dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 80186ae:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80186b2:	4377      	muls	r7, r6
 80186b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80186b8:	435e      	muls	r6, r3
 80186ba:	0a3b      	lsrs	r3, r7, #8
 80186bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80186c0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80186c4:	443b      	add	r3, r7
 80186c6:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80186ca:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80186ce:	0a1b      	lsrs	r3, r3, #8
 80186d0:	0a3f      	lsrs	r7, r7, #8
 80186d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80186d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80186da:	433b      	orrs	r3, r7
 80186dc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80186e0:	d01d      	beq.n	801871e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80186e2:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80186e4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80186e6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80186ea:	fb0c f606 	mul.w	r6, ip, r6
 80186ee:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80186f2:	fb0c fc07 	mul.w	ip, ip, r7
 80186f6:	0a37      	lsrs	r7, r6, #8
 80186f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80186fc:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018700:	4437      	add	r7, r6
 8018702:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8018706:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801870a:	0a3f      	lsrs	r7, r7, #8
 801870c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018710:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018714:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018718:	ea47 060c 	orr.w	r6, r7, ip
 801871c:	960d      	str	r6, [sp, #52]	; 0x34
 801871e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018722:	d01d      	beq.n	8018760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8018724:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018726:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801872a:	fb08 fc0c 	mul.w	ip, r8, ip
 801872e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018732:	fb08 f806 	mul.w	r8, r8, r6
 8018736:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801873a:	f508 7680 	add.w	r6, r8, #256	; 0x100
 801873e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018742:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018746:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 801874a:	4467      	add	r7, ip
 801874c:	0a3f      	lsrs	r7, r7, #8
 801874e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018752:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018756:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801875a:	ea47 0608 	orr.w	r6, r7, r8
 801875e:	9609      	str	r6, [sp, #36]	; 0x24
 8018760:	2dff      	cmp	r5, #255	; 0xff
 8018762:	d01a      	beq.n	801879a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8018764:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018766:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 801876a:	fb05 fc0c 	mul.w	ip, r5, ip
 801876e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018772:	4375      	muls	r5, r6
 8018774:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018778:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801877c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018780:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018784:	4467      	add	r7, ip
 8018786:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 801878a:	0a3f      	lsrs	r7, r7, #8
 801878c:	0a2d      	lsrs	r5, r5, #8
 801878e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018792:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018796:	433d      	orrs	r5, r7
 8018798:	950f      	str	r5, [sp, #60]	; 0x3c
 801879a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801879c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80187a0:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80187a4:	fb0e f505 	mul.w	r5, lr, r5
 80187a8:	fb02 5506 	mla	r5, r2, r6, r5
 80187ac:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80187ae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80187b2:	fb00 5506 	mla	r5, r0, r6, r5
 80187b6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80187b8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80187bc:	fb09 5506 	mla	r5, r9, r6, r5
 80187c0:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80187c2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80187c6:	fb0e fe06 	mul.w	lr, lr, r6
 80187ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80187ce:	fb02 e303 	mla	r3, r2, r3, lr
 80187d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80187d4:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80187d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80187da:	fb00 3307 	mla	r3, r0, r7, r3
 80187de:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80187e2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80187e6:	fb01 f10b 	mul.w	r1, r1, fp
 80187ea:	0a2d      	lsrs	r5, r5, #8
 80187ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187f0:	f8ba 0000 	ldrh.w	r0, [sl]
 80187f4:	1c4b      	adds	r3, r1, #1
 80187f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80187fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80187fe:	ea45 050c 	orr.w	r5, r5, ip
 8018802:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018806:	1202      	asrs	r2, r0, #8
 8018808:	0c2b      	lsrs	r3, r5, #16
 801880a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801880e:	b2c9      	uxtb	r1, r1
 8018810:	fb13 f30b 	smulbb	r3, r3, fp
 8018814:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018818:	fb02 3201 	mla	r2, r2, r1, r3
 801881c:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018820:	10c3      	asrs	r3, r0, #3
 8018822:	b2ed      	uxtb	r5, r5
 8018824:	00c0      	lsls	r0, r0, #3
 8018826:	b2c0      	uxtb	r0, r0
 8018828:	fb15 f50b 	smulbb	r5, r5, fp
 801882c:	fb00 5001 	mla	r0, r0, r1, r5
 8018830:	b292      	uxth	r2, r2
 8018832:	fb16 f60b 	smulbb	r6, r6, fp
 8018836:	b280      	uxth	r0, r0
 8018838:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801883c:	fb03 6301 	mla	r3, r3, r1, r6
 8018840:	1c51      	adds	r1, r2, #1
 8018842:	1c46      	adds	r6, r0, #1
 8018844:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018848:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801884c:	b29b      	uxth	r3, r3
 801884e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018852:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018856:	4332      	orrs	r2, r6
 8018858:	1c5e      	adds	r6, r3, #1
 801885a:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801885e:	095b      	lsrs	r3, r3, #5
 8018860:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018864:	431a      	orrs	r2, r3
 8018866:	f8aa 2000 	strh.w	r2, [sl]
 801886a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801886c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801886e:	4413      	add	r3, r2
 8018870:	932b      	str	r3, [sp, #172]	; 0xac
 8018872:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018874:	441c      	add	r4, r3
 8018876:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018878:	3b01      	subs	r3, #1
 801887a:	f10a 0a02 	add.w	sl, sl, #2
 801887e:	9311      	str	r3, [sp, #68]	; 0x44
 8018880:	e4ea      	b.n	8018258 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018882:	b150      	cbz	r0, 801889a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8018884:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018886:	58aa      	ldr	r2, [r5, r2]
 8018888:	9209      	str	r2, [sp, #36]	; 0x24
 801888a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801888e:	25ff      	movs	r5, #255	; 0xff
 8018890:	46ac      	mov	ip, r5
 8018892:	e6ed      	b.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018894:	25ff      	movs	r5, #255	; 0xff
 8018896:	46a8      	mov	r8, r5
 8018898:	e6ea      	b.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801889a:	25ff      	movs	r5, #255	; 0xff
 801889c:	46a8      	mov	r8, r5
 801889e:	e7f7      	b.n	8018890 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 80188a0:	b019      	add	sp, #100	; 0x64
 80188a2:	ecbd 8b08 	vpop	{d8-d11}
 80188a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080188ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80188ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188b0:	8808      	ldrh	r0, [r1, #0]
 80188b2:	b085      	sub	sp, #20
 80188b4:	1206      	asrs	r6, r0, #8
 80188b6:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80188ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80188be:	9600      	str	r6, [sp, #0]
 80188c0:	10c6      	asrs	r6, r0, #3
 80188c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80188c6:	9601      	str	r6, [sp, #4]
 80188c8:	00c0      	lsls	r0, r0, #3
 80188ca:	fb04 c603 	mla	r6, r4, r3, ip
 80188ce:	b2c0      	uxtb	r0, r0
 80188d0:	4691      	mov	r9, r2
 80188d2:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80188d6:	9a00      	ldr	r2, [sp, #0]
 80188d8:	9002      	str	r0, [sp, #8]
 80188da:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80188de:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80188e2:	9a01      	ldr	r2, [sp, #4]
 80188e4:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 80188e8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80188ec:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80188f0:	2c00      	cmp	r4, #0
 80188f2:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80188f6:	db3a      	blt.n	801896e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 80188f8:	45a0      	cmp	r8, r4
 80188fa:	dd38      	ble.n	801896e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 80188fc:	f1bc 0f00 	cmp.w	ip, #0
 8018900:	db33      	blt.n	801896a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018902:	4563      	cmp	r3, ip
 8018904:	dd31      	ble.n	801896a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018906:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 801890a:	f11c 0601 	adds.w	r6, ip, #1
 801890e:	d431      	bmi.n	8018974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018910:	42b3      	cmp	r3, r6
 8018912:	dd2f      	ble.n	8018974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018914:	b375      	cbz	r5, 8018974 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018916:	f8de 6004 	ldr.w	r6, [lr, #4]
 801891a:	3401      	adds	r4, #1
 801891c:	d42e      	bmi.n	801897c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801891e:	45a0      	cmp	r8, r4
 8018920:	dd2c      	ble.n	801897c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018922:	b35f      	cbz	r7, 801897c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018924:	f1bc 0f00 	cmp.w	ip, #0
 8018928:	db26      	blt.n	8018978 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801892a:	4563      	cmp	r3, ip
 801892c:	dd24      	ble.n	8018978 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801892e:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018932:	f11c 0c01 	adds.w	ip, ip, #1
 8018936:	d405      	bmi.n	8018944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018938:	4563      	cmp	r3, ip
 801893a:	dd03      	ble.n	8018944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801893c:	b115      	cbz	r5, 8018944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801893e:	3301      	adds	r3, #1
 8018940:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018944:	2d0f      	cmp	r5, #15
 8018946:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801894a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801894e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018952:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018956:	d801      	bhi.n	801895c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8018958:	2f0f      	cmp	r7, #15
 801895a:	d911      	bls.n	8018980 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801895c:	4b7b      	ldr	r3, [pc, #492]	; (8018b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801895e:	4a7c      	ldr	r2, [pc, #496]	; (8018b50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8018960:	487c      	ldr	r0, [pc, #496]	; (8018b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8018962:	f240 210d 	movw	r1, #525	; 0x20d
 8018966:	f001 fd05 	bl	801a374 <__assert_func>
 801896a:	4602      	mov	r2, r0
 801896c:	e7cd      	b.n	801890a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801896e:	4606      	mov	r6, r0
 8018970:	4602      	mov	r2, r0
 8018972:	e7d2      	b.n	801891a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018974:	4606      	mov	r6, r0
 8018976:	e7d0      	b.n	801891a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018978:	4604      	mov	r4, r0
 801897a:	e7da      	b.n	8018932 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801897c:	4604      	mov	r4, r0
 801897e:	e7e1      	b.n	8018944 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018980:	b2ab      	uxth	r3, r5
 8018982:	b2bf      	uxth	r7, r7
 8018984:	fb03 fe07 	mul.w	lr, r3, r7
 8018988:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801898c:	011b      	lsls	r3, r3, #4
 801898e:	eba3 0c0e 	sub.w	ip, r3, lr
 8018992:	b2bf      	uxth	r7, r7
 8018994:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018998:	fa1f fc8c 	uxth.w	ip, ip
 801899c:	1bed      	subs	r5, r5, r7
 801899e:	b2ad      	uxth	r5, r5
 80189a0:	fb0c f30a 	mul.w	r3, ip, sl
 80189a4:	fb05 330b 	mla	r3, r5, fp, r3
 80189a8:	fb07 3309 	mla	r3, r7, r9, r3
 80189ac:	fb0e 3308 	mla	r3, lr, r8, r3
 80189b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80189b4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80189b8:	9303      	str	r3, [sp, #12]
 80189ba:	d018      	beq.n	80189ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 80189bc:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80189c0:	fb0b f303 	mul.w	r3, fp, r3
 80189c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80189c8:	fb0b fb02 	mul.w	fp, fp, r2
 80189cc:	0a1a      	lsrs	r2, r3, #8
 80189ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80189d2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80189d6:	441a      	add	r2, r3
 80189d8:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80189dc:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80189e0:	0a12      	lsrs	r2, r2, #8
 80189e2:	0a1b      	lsrs	r3, r3, #8
 80189e4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80189e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80189ec:	431a      	orrs	r2, r3
 80189ee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80189f2:	d019      	beq.n	8018a28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 80189f4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80189f8:	fb0a fb0b 	mul.w	fp, sl, fp
 80189fc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018a00:	fb0a fa06 	mul.w	sl, sl, r6
 8018a04:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018a08:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018a0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018a10:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018a14:	445e      	add	r6, fp
 8018a16:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018a1a:	0a36      	lsrs	r6, r6, #8
 8018a1c:	0a1b      	lsrs	r3, r3, #8
 8018a1e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018a22:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a26:	431e      	orrs	r6, r3
 8018a28:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018a2c:	d019      	beq.n	8018a62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8018a2e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018a32:	fb09 fa0a 	mul.w	sl, r9, sl
 8018a36:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018a3a:	fb09 f904 	mul.w	r9, r9, r4
 8018a3e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018a42:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018a46:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018a4a:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018a4e:	4454      	add	r4, sl
 8018a50:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018a54:	0a24      	lsrs	r4, r4, #8
 8018a56:	0a1b      	lsrs	r3, r3, #8
 8018a58:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018a5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a60:	431c      	orrs	r4, r3
 8018a62:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018a66:	d019      	beq.n	8018a9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8018a68:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018a6c:	fb08 f909 	mul.w	r9, r8, r9
 8018a70:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018a74:	fb08 f800 	mul.w	r8, r8, r0
 8018a78:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018a7c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018a80:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018a84:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018a88:	4448      	add	r0, r9
 8018a8a:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018a8e:	0a00      	lsrs	r0, r0, #8
 8018a90:	0a1b      	lsrs	r3, r3, #8
 8018a92:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a9a:	4318      	orrs	r0, r3
 8018a9c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018aa0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018aa4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018aa8:	fb0c f808 	mul.w	r8, ip, r8
 8018aac:	fb0c f606 	mul.w	r6, ip, r6
 8018ab0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018ab4:	fb05 8803 	mla	r8, r5, r3, r8
 8018ab8:	fb05 6202 	mla	r2, r5, r2, r6
 8018abc:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8018ac0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018ac4:	fb07 8803 	mla	r8, r7, r3, r8
 8018ac8:	fb07 2704 	mla	r7, r7, r4, r2
 8018acc:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018ad0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018ad4:	fb0e 8303 	mla	r3, lr, r3, r8
 8018ad8:	fb0e 7e00 	mla	lr, lr, r0, r7
 8018adc:	0a1b      	lsrs	r3, r3, #8
 8018ade:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018ae2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018ae6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018aea:	ea43 0e0e 	orr.w	lr, r3, lr
 8018aee:	9b03      	ldr	r3, [sp, #12]
 8018af0:	9800      	ldr	r0, [sp, #0]
 8018af2:	9c01      	ldr	r4, [sp, #4]
 8018af4:	9a02      	ldr	r2, [sp, #8]
 8018af6:	43db      	mvns	r3, r3
 8018af8:	b2db      	uxtb	r3, r3
 8018afa:	4358      	muls	r0, r3
 8018afc:	435c      	muls	r4, r3
 8018afe:	435a      	muls	r2, r3
 8018b00:	1c43      	adds	r3, r0, #1
 8018b02:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018b06:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8018b0a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018b0e:	4b12      	ldr	r3, [pc, #72]	; (8018b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 8018b10:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8018b14:	1c50      	adds	r0, r2, #1
 8018b16:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018b1a:	fa5f f28e 	uxtb.w	r2, lr
 8018b1e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018b22:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8018b26:	1c62      	adds	r2, r4, #1
 8018b28:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018b2c:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8018b30:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018b34:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018b38:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018b3c:	ea43 0e0e 	orr.w	lr, r3, lr
 8018b40:	f8a1 e000 	strh.w	lr, [r1]
 8018b44:	b005      	add	sp, #20
 8018b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b4a:	bf00      	nop
 8018b4c:	0801dee5 	.word	0x0801dee5
 8018b50:	0801e43d 	.word	0x0801e43d
 8018b54:	0801df6d 	.word	0x0801df6d
 8018b58:	fffff800 	.word	0xfffff800

08018b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b60:	ed2d 8b08 	vpush	{d8-d11}
 8018b64:	b097      	sub	sp, #92	; 0x5c
 8018b66:	eeb0 aa40 	vmov.f32	s20, s0
 8018b6a:	9306      	str	r3, [sp, #24]
 8018b6c:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8018b70:	9307      	str	r3, [sp, #28]
 8018b72:	9214      	str	r2, [sp, #80]	; 0x50
 8018b74:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8018b78:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018b7a:	9112      	str	r1, [sp, #72]	; 0x48
 8018b7c:	9310      	str	r3, [sp, #64]	; 0x40
 8018b7e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018b82:	9015      	str	r0, [sp, #84]	; 0x54
 8018b84:	6850      	ldr	r0, [r2, #4]
 8018b86:	6812      	ldr	r2, [r2, #0]
 8018b88:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8018b8a:	fb00 1303 	mla	r3, r0, r3, r1
 8018b8e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018b92:	930a      	str	r3, [sp, #40]	; 0x28
 8018b94:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018b96:	681b      	ldr	r3, [r3, #0]
 8018b98:	9311      	str	r3, [sp, #68]	; 0x44
 8018b9a:	9b07      	ldr	r3, [sp, #28]
 8018b9c:	009b      	lsls	r3, r3, #2
 8018b9e:	eef0 9a60 	vmov.f32	s19, s1
 8018ba2:	eeb0 9a41 	vmov.f32	s18, s2
 8018ba6:	eeb0 8a62 	vmov.f32	s16, s5
 8018baa:	eef0 8a43 	vmov.f32	s17, s6
 8018bae:	eef0 ba44 	vmov.f32	s23, s8
 8018bb2:	eeb0 ba64 	vmov.f32	s22, s9
 8018bb6:	eef0 aa45 	vmov.f32	s21, s10
 8018bba:	930e      	str	r3, [sp, #56]	; 0x38
 8018bbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018bbe:	2b00      	cmp	r3, #0
 8018bc0:	dc03      	bgt.n	8018bca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8018bc2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018bc4:	2b00      	cmp	r3, #0
 8018bc6:	f340 8361 	ble.w	801928c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8018bca:	9b06      	ldr	r3, [sp, #24]
 8018bcc:	2b00      	cmp	r3, #0
 8018bce:	f340 819b 	ble.w	8018f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8018bd2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018bd4:	1412      	asrs	r2, r2, #16
 8018bd6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018bda:	d42e      	bmi.n	8018c3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8018bdc:	9807      	ldr	r0, [sp, #28]
 8018bde:	1c51      	adds	r1, r2, #1
 8018be0:	4288      	cmp	r0, r1
 8018be2:	dd2d      	ble.n	8018c40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018be4:	2b00      	cmp	r3, #0
 8018be6:	db2b      	blt.n	8018c40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018be8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018bea:	1c59      	adds	r1, r3, #1
 8018bec:	4288      	cmp	r0, r1
 8018bee:	dd27      	ble.n	8018c40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018bf0:	9b06      	ldr	r3, [sp, #24]
 8018bf2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018bf4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018bf6:	3b01      	subs	r3, #1
 8018bf8:	fb02 1203 	mla	r2, r2, r3, r1
 8018bfc:	1412      	asrs	r2, r2, #16
 8018bfe:	d42a      	bmi.n	8018c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018c00:	9907      	ldr	r1, [sp, #28]
 8018c02:	3201      	adds	r2, #1
 8018c04:	4291      	cmp	r1, r2
 8018c06:	dd26      	ble.n	8018c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018c08:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8018c0a:	fb02 5303 	mla	r3, r2, r3, r5
 8018c0e:	141b      	asrs	r3, r3, #16
 8018c10:	d421      	bmi.n	8018c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018c12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018c14:	3301      	adds	r3, #1
 8018c16:	429a      	cmp	r2, r3
 8018c18:	dd1d      	ble.n	8018c56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018c1a:	9b06      	ldr	r3, [sp, #24]
 8018c1c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8018c20:	9313      	str	r3, [sp, #76]	; 0x4c
 8018c22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c24:	2b00      	cmp	r3, #0
 8018c26:	f300 81e3 	bgt.w	8018ff0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8018c2a:	9b06      	ldr	r3, [sp, #24]
 8018c2c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018c30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c32:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018c36:	930a      	str	r3, [sp, #40]	; 0x28
 8018c38:	e168      	b.n	8018f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8018c3a:	1c51      	adds	r1, r2, #1
 8018c3c:	f040 8157 	bne.w	8018eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018c40:	9907      	ldr	r1, [sp, #28]
 8018c42:	428a      	cmp	r2, r1
 8018c44:	f280 8153 	bge.w	8018eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018c48:	1c5f      	adds	r7, r3, #1
 8018c4a:	f2c0 8150 	blt.w	8018eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018c4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018c50:	4293      	cmp	r3, r2
 8018c52:	f280 814c 	bge.w	8018eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018c56:	9b06      	ldr	r3, [sp, #24]
 8018c58:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018c5a:	9313      	str	r3, [sp, #76]	; 0x4c
 8018c5c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c5e:	2b00      	cmp	r3, #0
 8018c60:	dde3      	ble.n	8018c2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8018c62:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018c64:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018c66:	1409      	asrs	r1, r1, #16
 8018c68:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018c6c:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8018c70:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018c74:	f100 81a3 	bmi.w	8018fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8018c78:	9c07      	ldr	r4, [sp, #28]
 8018c7a:	1c4e      	adds	r6, r1, #1
 8018c7c:	42b4      	cmp	r4, r6
 8018c7e:	f340 81a0 	ble.w	8018fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018c82:	2b00      	cmp	r3, #0
 8018c84:	f2c0 819d 	blt.w	8018fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018c88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018c8a:	1c5e      	adds	r6, r3, #1
 8018c8c:	42b4      	cmp	r4, r6
 8018c8e:	f340 8198 	ble.w	8018fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018c92:	9c07      	ldr	r4, [sp, #28]
 8018c94:	fb03 1304 	mla	r3, r3, r4, r1
 8018c98:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018c9a:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8018c9e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8018ca2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018ca6:	2a00      	cmp	r2, #0
 8018ca8:	f000 816f 	beq.w	8018f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018cac:	6871      	ldr	r1, [r6, #4]
 8018cae:	910b      	str	r1, [sp, #44]	; 0x2c
 8018cb0:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8018cb4:	2800      	cmp	r0, #0
 8018cb6:	f000 8171 	beq.w	8018f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8018cba:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018cbc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018cbe:	1871      	adds	r1, r6, r1
 8018cc0:	5934      	ldr	r4, [r6, r4]
 8018cc2:	6849      	ldr	r1, [r1, #4]
 8018cc4:	9408      	str	r4, [sp, #32]
 8018cc6:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8018cca:	910c      	str	r1, [sp, #48]	; 0x30
 8018ccc:	0e0e      	lsrs	r6, r1, #24
 8018cce:	b292      	uxth	r2, r2
 8018cd0:	b280      	uxth	r0, r0
 8018cd2:	fb02 fb00 	mul.w	fp, r2, r0
 8018cd6:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8018cda:	0112      	lsls	r2, r2, #4
 8018cdc:	eba2 090b 	sub.w	r9, r2, fp
 8018ce0:	b280      	uxth	r0, r0
 8018ce2:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018ce6:	fa1f f989 	uxth.w	r9, r9
 8018cea:	1a09      	subs	r1, r1, r0
 8018cec:	b289      	uxth	r1, r1
 8018cee:	fb09 f208 	mul.w	r2, r9, r8
 8018cf2:	fb01 220c 	mla	r2, r1, ip, r2
 8018cf6:	fb00 220a 	mla	r2, r0, sl, r2
 8018cfa:	fb0b 2206 	mla	r2, fp, r6, r2
 8018cfe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018d02:	2a00      	cmp	r2, #0
 8018d04:	f000 80e8 	beq.w	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018d08:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018d0c:	d01b      	beq.n	8018d46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8018d0e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018d12:	fb0c fe0e 	mul.w	lr, ip, lr
 8018d16:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018d1a:	fb0c fc03 	mul.w	ip, ip, r3
 8018d1e:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8018d22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018d26:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018d2a:	4473      	add	r3, lr
 8018d2c:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8018d30:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8018d34:	0a1b      	lsrs	r3, r3, #8
 8018d36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018d3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018d3e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018d42:	ea43 030e 	orr.w	r3, r3, lr
 8018d46:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018d4a:	d01e      	beq.n	8018d8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8018d4c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018d4e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018d52:	fb08 fc0c 	mul.w	ip, r8, ip
 8018d56:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018d5a:	fb08 f80e 	mul.w	r8, r8, lr
 8018d5e:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018d62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018d66:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018d6a:	44e6      	add	lr, ip
 8018d6c:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8018d70:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018d74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018d78:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018d7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018d80:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018d84:	ea4e 0408 	orr.w	r4, lr, r8
 8018d88:	940b      	str	r4, [sp, #44]	; 0x2c
 8018d8a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018d8e:	d01e      	beq.n	8018dce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8018d90:	9c08      	ldr	r4, [sp, #32]
 8018d92:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8018d96:	fb0a f808 	mul.w	r8, sl, r8
 8018d9a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018d9e:	fb0a fa0c 	mul.w	sl, sl, ip
 8018da2:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018da6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018daa:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018dae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018db2:	44c6      	add	lr, r8
 8018db4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018db8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018dbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018dc0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018dc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018dc8:	ea4e 040a 	orr.w	r4, lr, sl
 8018dcc:	9408      	str	r4, [sp, #32]
 8018dce:	2eff      	cmp	r6, #255	; 0xff
 8018dd0:	d01d      	beq.n	8018e0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8018dd2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018dd4:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8018dd8:	fb06 f808 	mul.w	r8, r6, r8
 8018ddc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018de0:	fb06 f60c 	mul.w	r6, r6, ip
 8018de4:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018de8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018dec:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018df0:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8018df4:	44c6      	add	lr, r8
 8018df6:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8018dfa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018dfe:	0a36      	lsrs	r6, r6, #8
 8018e00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e04:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018e08:	ea4e 0406 	orr.w	r4, lr, r6
 8018e0c:	940c      	str	r4, [sp, #48]	; 0x30
 8018e0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018e10:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8018e14:	9c08      	ldr	r4, [sp, #32]
 8018e16:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018e1a:	fb09 f606 	mul.w	r6, r9, r6
 8018e1e:	fb01 660c 	mla	r6, r1, ip, r6
 8018e22:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018e26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018e28:	fb00 660c 	mla	r6, r0, ip, r6
 8018e2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018e30:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018e32:	fb0b 660c 	mla	r6, fp, ip, r6
 8018e36:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018e3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e3e:	fb09 f90c 	mul.w	r9, r9, ip
 8018e42:	fb01 9303 	mla	r3, r1, r3, r9
 8018e46:	9908      	ldr	r1, [sp, #32]
 8018e48:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8018e4c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018e4e:	fb00 330e 	mla	r3, r0, lr, r3
 8018e52:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8018e56:	fb0b 3b00 	mla	fp, fp, r0, r3
 8018e5a:	0a36      	lsrs	r6, r6, #8
 8018e5c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018e60:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e64:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018e68:	ea46 060b 	orr.w	r6, r6, fp
 8018e6c:	2aff      	cmp	r2, #255	; 0xff
 8018e6e:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8018e72:	f000 8099 	beq.w	8018fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8018e76:	8839      	ldrh	r1, [r7, #0]
 8018e78:	43d2      	mvns	r2, r2
 8018e7a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8018e7e:	fa5f fe82 	uxtb.w	lr, r2
 8018e82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e86:	fb0c fc0e 	mul.w	ip, ip, lr
 8018e8a:	10c8      	asrs	r0, r1, #3
 8018e8c:	00ca      	lsls	r2, r1, #3
 8018e8e:	f10c 0101 	add.w	r1, ip, #1
 8018e92:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8018e96:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8018e9a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018e9e:	b2d2      	uxtb	r2, r2
 8018ea0:	4952      	ldr	r1, [pc, #328]	; (8018fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8018ea2:	fb02 f20e 	mul.w	r2, r2, lr
 8018ea6:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8018eaa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018eae:	1c51      	adds	r1, r2, #1
 8018eb0:	fb00 f00e 	mul.w	r0, r0, lr
 8018eb4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018eb8:	b2f6      	uxtb	r6, r6
 8018eba:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8018ebe:	1c42      	adds	r2, r0, #1
 8018ec0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ec4:	b2db      	uxtb	r3, r3
 8018ec6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018eca:	00db      	lsls	r3, r3, #3
 8018ecc:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8018ed0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018ed4:	431e      	orrs	r6, r3
 8018ed6:	803e      	strh	r6, [r7, #0]
 8018ed8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018eda:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018edc:	441a      	add	r2, r3
 8018ede:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ee0:	9229      	str	r2, [sp, #164]	; 0xa4
 8018ee2:	441d      	add	r5, r3
 8018ee4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018ee6:	3b01      	subs	r3, #1
 8018ee8:	3702      	adds	r7, #2
 8018eea:	9313      	str	r3, [sp, #76]	; 0x4c
 8018eec:	e6b6      	b.n	8018c5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8018eee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018ef0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018ef2:	441a      	add	r2, r3
 8018ef4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ef6:	9229      	str	r2, [sp, #164]	; 0xa4
 8018ef8:	441d      	add	r5, r3
 8018efa:	9b06      	ldr	r3, [sp, #24]
 8018efc:	3b01      	subs	r3, #1
 8018efe:	9306      	str	r3, [sp, #24]
 8018f00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f02:	3302      	adds	r3, #2
 8018f04:	930a      	str	r3, [sp, #40]	; 0x28
 8018f06:	e660      	b.n	8018bca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8018f08:	f47f ae72 	bne.w	8018bf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8018f0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018f0e:	2b00      	cmp	r3, #0
 8018f10:	f340 81bc 	ble.w	801928c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8018f14:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f1c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f20:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f22:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f26:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f2a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f2e:	eef0 6a48 	vmov.f32	s13, s16
 8018f32:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f3a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f3e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018f42:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f46:	eef0 6a68 	vmov.f32	s13, s17
 8018f4a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f4e:	ee18 2a10 	vmov	r2, s16
 8018f52:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f5a:	ee18 2a90 	vmov	r2, s17
 8018f5e:	932b      	str	r3, [sp, #172]	; 0xac
 8018f60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f66:	932c      	str	r3, [sp, #176]	; 0xb0
 8018f68:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018f6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f6c:	3b01      	subs	r3, #1
 8018f6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f72:	9312      	str	r3, [sp, #72]	; 0x48
 8018f74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f76:	bf08      	it	eq
 8018f78:	4613      	moveq	r3, r2
 8018f7a:	ee16 5a90 	vmov	r5, s13
 8018f7e:	9306      	str	r3, [sp, #24]
 8018f80:	eef0 8a67 	vmov.f32	s17, s15
 8018f84:	eeb0 8a47 	vmov.f32	s16, s14
 8018f88:	e618      	b.n	8018bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8018f8a:	b150      	cbz	r0, 8018fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8018f8c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018f8e:	5871      	ldr	r1, [r6, r1]
 8018f90:	9108      	str	r1, [sp, #32]
 8018f92:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8018f96:	26ff      	movs	r6, #255	; 0xff
 8018f98:	46b0      	mov	r8, r6
 8018f9a:	e698      	b.n	8018cce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8018f9c:	26ff      	movs	r6, #255	; 0xff
 8018f9e:	46b2      	mov	sl, r6
 8018fa0:	e695      	b.n	8018cce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8018fa2:	26ff      	movs	r6, #255	; 0xff
 8018fa4:	46b2      	mov	sl, r6
 8018fa6:	e7f7      	b.n	8018f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8018fa8:	0972      	lsrs	r2, r6, #5
 8018faa:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8018fae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fb2:	f023 0307 	bic.w	r3, r3, #7
 8018fb6:	4313      	orrs	r3, r2
 8018fb8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018fbc:	e78a      	b.n	8018ed4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8018fbe:	1c4e      	adds	r6, r1, #1
 8018fc0:	d18a      	bne.n	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018fc2:	9c07      	ldr	r4, [sp, #28]
 8018fc4:	428c      	cmp	r4, r1
 8018fc6:	dd87      	ble.n	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018fc8:	1c5c      	adds	r4, r3, #1
 8018fca:	db85      	blt.n	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018fcc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018fce:	429c      	cmp	r4, r3
 8018fd0:	dd82      	ble.n	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018fd2:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8018fd6:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8018fda:	9400      	str	r4, [sp, #0]
 8018fdc:	9b07      	ldr	r3, [sp, #28]
 8018fde:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018fe0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018fe2:	4639      	mov	r1, r7
 8018fe4:	f7ff fc62 	bl	80188ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8018fe8:	e776      	b.n	8018ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018fea:	bf00      	nop
 8018fec:	fffff800 	.word	0xfffff800
 8018ff0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018ff2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018ff4:	9c07      	ldr	r4, [sp, #28]
 8018ff6:	1409      	asrs	r1, r1, #16
 8018ff8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018ffc:	142b      	asrs	r3, r5, #16
 8018ffe:	fb04 1303 	mla	r3, r4, r3, r1
 8019002:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019004:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019008:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801900c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019010:	0e1f      	lsrs	r7, r3, #24
 8019012:	2a00      	cmp	r2, #0
 8019014:	f000 811d 	beq.w	8019252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8019018:	6871      	ldr	r1, [r6, #4]
 801901a:	910d      	str	r1, [sp, #52]	; 0x34
 801901c:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8019020:	2800      	cmp	r0, #0
 8019022:	f000 811f 	beq.w	8019264 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019026:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019028:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801902a:	1871      	adds	r1, r6, r1
 801902c:	5934      	ldr	r4, [r6, r4]
 801902e:	6849      	ldr	r1, [r1, #4]
 8019030:	9409      	str	r4, [sp, #36]	; 0x24
 8019032:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019036:	910f      	str	r1, [sp, #60]	; 0x3c
 8019038:	0e0e      	lsrs	r6, r1, #24
 801903a:	b292      	uxth	r2, r2
 801903c:	b280      	uxth	r0, r0
 801903e:	fb02 fb00 	mul.w	fp, r2, r0
 8019042:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019046:	0112      	lsls	r2, r2, #4
 8019048:	eba2 080b 	sub.w	r8, r2, fp
 801904c:	b280      	uxth	r0, r0
 801904e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019052:	fa1f f888 	uxth.w	r8, r8
 8019056:	1a09      	subs	r1, r1, r0
 8019058:	b289      	uxth	r1, r1
 801905a:	fb08 f20e 	mul.w	r2, r8, lr
 801905e:	fb01 2207 	mla	r2, r1, r7, r2
 8019062:	fb00 2209 	mla	r2, r0, r9, r2
 8019066:	fb0b 2206 	mla	r2, fp, r6, r2
 801906a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801906e:	2a00      	cmp	r2, #0
 8019070:	f000 80e3 	beq.w	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019074:	2fff      	cmp	r7, #255	; 0xff
 8019076:	d01a      	beq.n	80190ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8019078:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801907c:	fb07 fc0c 	mul.w	ip, r7, ip
 8019080:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019084:	435f      	muls	r7, r3
 8019086:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801908a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801908e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019092:	4463      	add	r3, ip
 8019094:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8019098:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801909c:	0a1b      	lsrs	r3, r3, #8
 801909e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80190a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80190a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80190aa:	ea43 030c 	orr.w	r3, r3, ip
 80190ae:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80190b2:	d01e      	beq.n	80190f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80190b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80190b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80190ba:	fb0e f707 	mul.w	r7, lr, r7
 80190be:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80190c2:	fb0e fe0c 	mul.w	lr, lr, ip
 80190c6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80190ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80190ce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80190d2:	44bc      	add	ip, r7
 80190d4:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80190d8:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80190dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80190e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80190e8:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80190ec:	ea4c 040e 	orr.w	r4, ip, lr
 80190f0:	940d      	str	r4, [sp, #52]	; 0x34
 80190f2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80190f6:	d01e      	beq.n	8019136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 80190f8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80190fa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80190fe:	fb09 fe0e 	mul.w	lr, r9, lr
 8019102:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019106:	fb09 f907 	mul.w	r9, r9, r7
 801910a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801910e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019112:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019116:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801911a:	44f4      	add	ip, lr
 801911c:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8019120:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019124:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019128:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801912c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019130:	ea4c 0409 	orr.w	r4, ip, r9
 8019134:	9409      	str	r4, [sp, #36]	; 0x24
 8019136:	2eff      	cmp	r6, #255	; 0xff
 8019138:	d01c      	beq.n	8019174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801913a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801913c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019140:	fb06 fe0e 	mul.w	lr, r6, lr
 8019144:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019148:	437e      	muls	r6, r7
 801914a:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801914e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019152:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019156:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801915a:	44f4      	add	ip, lr
 801915c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019164:	0a36      	lsrs	r6, r6, #8
 8019166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801916a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801916e:	ea4c 0406 	orr.w	r4, ip, r6
 8019172:	940f      	str	r4, [sp, #60]	; 0x3c
 8019174:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019176:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801917a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801917c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8019180:	fb08 f606 	mul.w	r6, r8, r6
 8019184:	fb01 6607 	mla	r6, r1, r7, r6
 8019188:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801918c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801918e:	fb00 6607 	mla	r6, r0, r7, r6
 8019192:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019196:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019198:	fb0b 6607 	mla	r6, fp, r7, r6
 801919c:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80191a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80191a4:	fb08 f807 	mul.w	r8, r8, r7
 80191a8:	fb01 8303 	mla	r3, r1, r3, r8
 80191ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 80191ae:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80191b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80191b4:	fb00 330c 	mla	r3, r0, ip, r3
 80191b8:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80191bc:	fb0b 3e0e 	mla	lr, fp, lr, r3
 80191c0:	0a36      	lsrs	r6, r6, #8
 80191c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80191c6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80191ca:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80191ce:	ea46 060e 	orr.w	r6, r6, lr
 80191d2:	2aff      	cmp	r2, #255	; 0xff
 80191d4:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80191d8:	d04a      	beq.n	8019270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80191da:	f8ba 1000 	ldrh.w	r1, [sl]
 80191de:	43d2      	mvns	r2, r2
 80191e0:	120f      	asrs	r7, r1, #8
 80191e2:	fa5f fc82 	uxtb.w	ip, r2
 80191e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80191ea:	fb07 f70c 	mul.w	r7, r7, ip
 80191ee:	10c8      	asrs	r0, r1, #3
 80191f0:	00ca      	lsls	r2, r1, #3
 80191f2:	1c79      	adds	r1, r7, #1
 80191f4:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80191f8:	0c37      	lsrs	r7, r6, #16
 80191fa:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80191fe:	b2d2      	uxtb	r2, r2
 8019200:	4925      	ldr	r1, [pc, #148]	; (8019298 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 8019202:	fb02 f20c 	mul.w	r2, r2, ip
 8019206:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801920a:	1c51      	adds	r1, r2, #1
 801920c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019210:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019214:	b2f6      	uxtb	r6, r6
 8019216:	fb00 f00c 	mul.w	r0, r0, ip
 801921a:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801921e:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8019222:	1c46      	adds	r6, r0, #1
 8019224:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8019228:	b2de      	uxtb	r6, r3
 801922a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801922e:	00f6      	lsls	r6, r6, #3
 8019230:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019234:	4337      	orrs	r7, r6
 8019236:	f8aa 7000 	strh.w	r7, [sl]
 801923a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801923c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801923e:	441a      	add	r2, r3
 8019240:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019242:	9229      	str	r2, [sp, #164]	; 0xa4
 8019244:	441d      	add	r5, r3
 8019246:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019248:	3b01      	subs	r3, #1
 801924a:	f10a 0a02 	add.w	sl, sl, #2
 801924e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019250:	e4e7      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 8019252:	b150      	cbz	r0, 801926a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8019254:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019256:	5871      	ldr	r1, [r6, r1]
 8019258:	9109      	str	r1, [sp, #36]	; 0x24
 801925a:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801925e:	26ff      	movs	r6, #255	; 0xff
 8019260:	46b6      	mov	lr, r6
 8019262:	e6ea      	b.n	801903a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019264:	26ff      	movs	r6, #255	; 0xff
 8019266:	46b1      	mov	r9, r6
 8019268:	e6e7      	b.n	801903a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801926a:	26ff      	movs	r6, #255	; 0xff
 801926c:	46b1      	mov	r9, r6
 801926e:	e7f7      	b.n	8019260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8019270:	0972      	lsrs	r2, r6, #5
 8019272:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019276:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801927a:	f023 0307 	bic.w	r3, r3, #7
 801927e:	4313      	orrs	r3, r2
 8019280:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019284:	431e      	orrs	r6, r3
 8019286:	f8aa 6000 	strh.w	r6, [sl]
 801928a:	e7d6      	b.n	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801928c:	b017      	add	sp, #92	; 0x5c
 801928e:	ecbd 8b08 	vpop	{d8-d11}
 8019292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019296:	bf00      	nop
 8019298:	fffff800 	.word	0xfffff800

0801929c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801929c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80192a0:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80192a4:	2c00      	cmp	r4, #0
 80192a6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80192aa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80192ae:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80192b2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80192b6:	fb04 ce03 	mla	lr, r4, r3, ip
 80192ba:	db60      	blt.n	801937e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80192bc:	45a1      	cmp	r9, r4
 80192be:	dd5e      	ble.n	801937e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80192c0:	f1bc 0f00 	cmp.w	ip, #0
 80192c4:	db59      	blt.n	801937a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80192c6:	45e0      	cmp	r8, ip
 80192c8:	dd57      	ble.n	801937a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80192ca:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80192ce:	f01e 0f01 	tst.w	lr, #1
 80192d2:	5c16      	ldrb	r6, [r2, r0]
 80192d4:	bf0c      	ite	eq
 80192d6:	f006 060f 	andeq.w	r6, r6, #15
 80192da:	1136      	asrne	r6, r6, #4
 80192dc:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80192e0:	b2f6      	uxtb	r6, r6
 80192e2:	f11c 0001 	adds.w	r0, ip, #1
 80192e6:	d44d      	bmi.n	8019384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80192e8:	4580      	cmp	r8, r0
 80192ea:	dd4b      	ble.n	8019384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80192ec:	2d00      	cmp	r5, #0
 80192ee:	d04b      	beq.n	8019388 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80192f0:	f10e 0a01 	add.w	sl, lr, #1
 80192f4:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80192f8:	f01a 0f01 	tst.w	sl, #1
 80192fc:	5c10      	ldrb	r0, [r2, r0]
 80192fe:	bf0c      	ite	eq
 8019300:	f000 000f 	andeq.w	r0, r0, #15
 8019304:	1100      	asrne	r0, r0, #4
 8019306:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801930a:	b2c0      	uxtb	r0, r0
 801930c:	3401      	adds	r4, #1
 801930e:	d43f      	bmi.n	8019390 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019310:	45a1      	cmp	r9, r4
 8019312:	dd3d      	ble.n	8019390 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019314:	2f00      	cmp	r7, #0
 8019316:	f000 809e 	beq.w	8019456 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801931a:	f1bc 0f00 	cmp.w	ip, #0
 801931e:	db35      	blt.n	801938c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019320:	45e0      	cmp	r8, ip
 8019322:	dd33      	ble.n	801938c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019324:	eb03 090e 	add.w	r9, r3, lr
 8019328:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801932c:	f019 0f01 	tst.w	r9, #1
 8019330:	5d14      	ldrb	r4, [r2, r4]
 8019332:	bf0c      	ite	eq
 8019334:	f004 040f 	andeq.w	r4, r4, #15
 8019338:	1124      	asrne	r4, r4, #4
 801933a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801933e:	b2e4      	uxtb	r4, r4
 8019340:	f11c 0c01 	adds.w	ip, ip, #1
 8019344:	d427      	bmi.n	8019396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8019346:	45e0      	cmp	r8, ip
 8019348:	dd25      	ble.n	8019396 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801934a:	b335      	cbz	r5, 801939a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801934c:	3301      	adds	r3, #1
 801934e:	449e      	add	lr, r3
 8019350:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019354:	f01e 0f01 	tst.w	lr, #1
 8019358:	5cd2      	ldrb	r2, [r2, r3]
 801935a:	bf0c      	ite	eq
 801935c:	f002 020f 	andeq.w	r2, r2, #15
 8019360:	1112      	asrne	r2, r2, #4
 8019362:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019366:	b2d3      	uxtb	r3, r2
 8019368:	2d0f      	cmp	r5, #15
 801936a:	d917      	bls.n	801939c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801936c:	4b3c      	ldr	r3, [pc, #240]	; (8019460 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801936e:	4a3d      	ldr	r2, [pc, #244]	; (8019464 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8019370:	483d      	ldr	r0, [pc, #244]	; (8019468 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8019372:	f240 210d 	movw	r1, #525	; 0x20d
 8019376:	f000 fffd 	bl	801a374 <__assert_func>
 801937a:	2600      	movs	r6, #0
 801937c:	e7b1      	b.n	80192e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801937e:	2000      	movs	r0, #0
 8019380:	4606      	mov	r6, r0
 8019382:	e7c3      	b.n	801930c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019384:	2000      	movs	r0, #0
 8019386:	e7c1      	b.n	801930c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019388:	4628      	mov	r0, r5
 801938a:	e7bf      	b.n	801930c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801938c:	2400      	movs	r4, #0
 801938e:	e7d7      	b.n	8019340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019390:	2300      	movs	r3, #0
 8019392:	461c      	mov	r4, r3
 8019394:	e7e8      	b.n	8019368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019396:	2300      	movs	r3, #0
 8019398:	e7e6      	b.n	8019368 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801939a:	462b      	mov	r3, r5
 801939c:	2f0f      	cmp	r7, #15
 801939e:	d8e5      	bhi.n	801936c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80193a0:	b2ad      	uxth	r5, r5
 80193a2:	b2bf      	uxth	r7, r7
 80193a4:	fb05 fc07 	mul.w	ip, r5, r7
 80193a8:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80193ac:	012d      	lsls	r5, r5, #4
 80193ae:	b2bf      	uxth	r7, r7
 80193b0:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80193b4:	eba5 050c 	sub.w	r5, r5, ip
 80193b8:	1bd2      	subs	r2, r2, r7
 80193ba:	b2ad      	uxth	r5, r5
 80193bc:	b292      	uxth	r2, r2
 80193be:	4368      	muls	r0, r5
 80193c0:	fb06 0002 	mla	r0, r6, r2, r0
 80193c4:	fb07 0404 	mla	r4, r7, r4, r0
 80193c8:	fb0c 4303 	mla	r3, ip, r3, r4
 80193cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80193d0:	2b00      	cmp	r3, #0
 80193d2:	d03e      	beq.n	8019452 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 80193d4:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 80193d8:	4a24      	ldr	r2, [pc, #144]	; (801946c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 80193da:	4343      	muls	r3, r0
 80193dc:	1c58      	adds	r0, r3, #1
 80193de:	6816      	ldr	r6, [r2, #0]
 80193e0:	880a      	ldrh	r2, [r1, #0]
 80193e2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80193e6:	1200      	asrs	r0, r0, #8
 80193e8:	b284      	uxth	r4, r0
 80193ea:	1215      	asrs	r5, r2, #8
 80193ec:	43c0      	mvns	r0, r0
 80193ee:	b2c3      	uxtb	r3, r0
 80193f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80193f4:	0a30      	lsrs	r0, r6, #8
 80193f6:	fb15 f503 	smulbb	r5, r5, r3
 80193fa:	10d7      	asrs	r7, r2, #3
 80193fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019400:	fb00 5004 	mla	r0, r0, r4, r5
 8019404:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019408:	08f5      	lsrs	r5, r6, #3
 801940a:	00d2      	lsls	r2, r2, #3
 801940c:	fb17 f703 	smulbb	r7, r7, r3
 8019410:	b2d2      	uxtb	r2, r2
 8019412:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019416:	00f6      	lsls	r6, r6, #3
 8019418:	fb05 7504 	mla	r5, r5, r4, r7
 801941c:	fb12 f303 	smulbb	r3, r2, r3
 8019420:	b2f6      	uxtb	r6, r6
 8019422:	fb06 3304 	mla	r3, r6, r4, r3
 8019426:	b2ad      	uxth	r5, r5
 8019428:	b29a      	uxth	r2, r3
 801942a:	b280      	uxth	r0, r0
 801942c:	1c6b      	adds	r3, r5, #1
 801942e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019432:	1c44      	adds	r4, r0, #1
 8019434:	095b      	lsrs	r3, r3, #5
 8019436:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801943a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801943e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019442:	4303      	orrs	r3, r0
 8019444:	1c50      	adds	r0, r2, #1
 8019446:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801944a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801944e:	4313      	orrs	r3, r2
 8019450:	800b      	strh	r3, [r1, #0]
 8019452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019456:	2d0f      	cmp	r5, #15
 8019458:	d888      	bhi.n	801936c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801945a:	463b      	mov	r3, r7
 801945c:	463c      	mov	r4, r7
 801945e:	e79f      	b.n	80193a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8019460:	0801dee5 	.word	0x0801dee5
 8019464:	0801e43d 	.word	0x0801e43d
 8019468:	0801df6d 	.word	0x0801df6d
 801946c:	200120b4 	.word	0x200120b4

08019470 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019474:	ed2d 8b08 	vpush	{d8-d11}
 8019478:	b099      	sub	sp, #100	; 0x64
 801947a:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801947e:	9309      	str	r3, [sp, #36]	; 0x24
 8019480:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8019484:	930a      	str	r3, [sp, #40]	; 0x28
 8019486:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801948a:	9216      	str	r2, [sp, #88]	; 0x58
 801948c:	930b      	str	r3, [sp, #44]	; 0x2c
 801948e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019490:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019494:	910f      	str	r1, [sp, #60]	; 0x3c
 8019496:	9310      	str	r3, [sp, #64]	; 0x40
 8019498:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801949c:	9017      	str	r0, [sp, #92]	; 0x5c
 801949e:	6850      	ldr	r0, [r2, #4]
 80194a0:	6812      	ldr	r2, [r2, #0]
 80194a2:	fb00 1303 	mla	r3, r0, r3, r1
 80194a6:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 80194aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80194ac:	3301      	adds	r3, #1
 80194ae:	f023 0301 	bic.w	r3, r3, #1
 80194b2:	930c      	str	r3, [sp, #48]	; 0x30
 80194b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80194b6:	681f      	ldr	r7, [r3, #0]
 80194b8:	eeb0 aa40 	vmov.f32	s20, s0
 80194bc:	eef0 9a60 	vmov.f32	s19, s1
 80194c0:	eeb0 9a41 	vmov.f32	s18, s2
 80194c4:	eeb0 8a62 	vmov.f32	s16, s5
 80194c8:	eef0 8a43 	vmov.f32	s17, s6
 80194cc:	eef0 ba44 	vmov.f32	s23, s8
 80194d0:	eeb0 ba64 	vmov.f32	s22, s9
 80194d4:	eef0 aa45 	vmov.f32	s21, s10
 80194d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80194da:	2b00      	cmp	r3, #0
 80194dc:	dc03      	bgt.n	80194e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80194de:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80194e0:	2b00      	cmp	r3, #0
 80194e2:	f340 8267 	ble.w	80199b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80194e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194e8:	2b00      	cmp	r3, #0
 80194ea:	f340 811e 	ble.w	801972a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 80194ee:	1422      	asrs	r2, r4, #16
 80194f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80194f4:	d42d      	bmi.n	8019552 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80194f6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80194f8:	1c51      	adds	r1, r2, #1
 80194fa:	4288      	cmp	r0, r1
 80194fc:	dd2c      	ble.n	8019558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80194fe:	2b00      	cmp	r3, #0
 8019500:	db2a      	blt.n	8019558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019502:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019504:	1c59      	adds	r1, r3, #1
 8019506:	4288      	cmp	r0, r1
 8019508:	dd26      	ble.n	8019558 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801950a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801950c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801950e:	3b01      	subs	r3, #1
 8019510:	fb02 4203 	mla	r2, r2, r3, r4
 8019514:	1412      	asrs	r2, r2, #16
 8019516:	d42a      	bmi.n	801956e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019518:	990a      	ldr	r1, [sp, #40]	; 0x28
 801951a:	3201      	adds	r2, #1
 801951c:	4291      	cmp	r1, r2
 801951e:	dd26      	ble.n	801956e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019520:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019522:	fb02 6303 	mla	r3, r2, r3, r6
 8019526:	141b      	asrs	r3, r3, #16
 8019528:	d421      	bmi.n	801956e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801952a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801952c:	3301      	adds	r3, #1
 801952e:	429a      	cmp	r2, r3
 8019530:	dd1d      	ble.n	801956e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019532:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019536:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801953a:	9311      	str	r3, [sp, #68]	; 0x44
 801953c:	46d1      	mov	r9, sl
 801953e:	f1bb 0f00 	cmp.w	fp, #0
 8019542:	f300 8162 	bgt.w	801980a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 8019546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019548:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801954c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019550:	e0ed      	b.n	801972e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8019552:	1c51      	adds	r1, r2, #1
 8019554:	f040 80df 	bne.w	8019716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8019558:	990a      	ldr	r1, [sp, #40]	; 0x28
 801955a:	4291      	cmp	r1, r2
 801955c:	f340 80db 	ble.w	8019716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8019560:	1c5a      	adds	r2, r3, #1
 8019562:	f2c0 80d8 	blt.w	8019716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8019566:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019568:	4293      	cmp	r3, r2
 801956a:	f280 80d4 	bge.w	8019716 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801956e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019572:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8019576:	9311      	str	r3, [sp, #68]	; 0x44
 8019578:	46d0      	mov	r8, sl
 801957a:	f1b9 0f00 	cmp.w	r9, #0
 801957e:	dde2      	ble.n	8019546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019580:	1420      	asrs	r0, r4, #16
 8019582:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019586:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801958a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801958e:	f100 8121 	bmi.w	80197d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 8019592:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019594:	f100 0c01 	add.w	ip, r0, #1
 8019598:	4565      	cmp	r5, ip
 801959a:	f340 811d 	ble.w	80197d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801959e:	2b00      	cmp	r3, #0
 80195a0:	f2c0 811a 	blt.w	80197d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80195a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80195a6:	f103 0c01 	add.w	ip, r3, #1
 80195aa:	4565      	cmp	r5, ip
 80195ac:	f340 8114 	ble.w	80197d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80195b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80195b2:	fb03 0305 	mla	r3, r3, r5, r0
 80195b6:	0858      	lsrs	r0, r3, #1
 80195b8:	07dd      	lsls	r5, r3, #31
 80195ba:	5c38      	ldrb	r0, [r7, r0]
 80195bc:	bf54      	ite	pl
 80195be:	f000 000f 	andpl.w	r0, r0, #15
 80195c2:	1100      	asrmi	r0, r0, #4
 80195c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80195c8:	b2c0      	uxtb	r0, r0
 80195ca:	2a00      	cmp	r2, #0
 80195cc:	f000 80ee 	beq.w	80197ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 80195d0:	f103 0e01 	add.w	lr, r3, #1
 80195d4:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80195d8:	f01e 0f01 	tst.w	lr, #1
 80195dc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80195e0:	bf0c      	ite	eq
 80195e2:	f00c 0c0f 	andeq.w	ip, ip, #15
 80195e6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80195ea:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80195ee:	fa5f f58c 	uxtb.w	r5, ip
 80195f2:	9512      	str	r5, [sp, #72]	; 0x48
 80195f4:	b1f9      	cbz	r1, 8019636 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80195f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80195f8:	442b      	add	r3, r5
 80195fa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80195fe:	07dd      	lsls	r5, r3, #31
 8019600:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019604:	bf54      	ite	pl
 8019606:	f00c 0c0f 	andpl.w	ip, ip, #15
 801960a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801960e:	3301      	adds	r3, #1
 8019610:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019614:	fa5f f58c 	uxtb.w	r5, ip
 8019618:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801961c:	950d      	str	r5, [sp, #52]	; 0x34
 801961e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019622:	07dd      	lsls	r5, r3, #31
 8019624:	bf54      	ite	pl
 8019626:	f00c 030f 	andpl.w	r3, ip, #15
 801962a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801962e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019632:	b2db      	uxtb	r3, r3
 8019634:	9313      	str	r3, [sp, #76]	; 0x4c
 8019636:	b292      	uxth	r2, r2
 8019638:	b289      	uxth	r1, r1
 801963a:	fb02 f301 	mul.w	r3, r2, r1
 801963e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019642:	0112      	lsls	r2, r2, #4
 8019644:	b289      	uxth	r1, r1
 8019646:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801964a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801964c:	1ad2      	subs	r2, r2, r3
 801964e:	ebac 0c01 	sub.w	ip, ip, r1
 8019652:	b292      	uxth	r2, r2
 8019654:	436a      	muls	r2, r5
 8019656:	fa1f fc8c 	uxth.w	ip, ip
 801965a:	fb00 200c 	mla	r0, r0, ip, r2
 801965e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019660:	fb01 0102 	mla	r1, r1, r2, r0
 8019664:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019666:	fb03 1302 	mla	r3, r3, r2, r1
 801966a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801966e:	2b00      	cmp	r3, #0
 8019670:	d048      	beq.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8019672:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019674:	4ace      	ldr	r2, [pc, #824]	; (80199b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8019676:	434b      	muls	r3, r1
 8019678:	1c59      	adds	r1, r3, #1
 801967a:	f8d2 e000 	ldr.w	lr, [r2]
 801967e:	f8b8 2000 	ldrh.w	r2, [r8]
 8019682:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019686:	121b      	asrs	r3, r3, #8
 8019688:	b299      	uxth	r1, r3
 801968a:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801968e:	43db      	mvns	r3, r3
 8019690:	b2db      	uxtb	r3, r3
 8019692:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8019696:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801969a:	fb1c fc03 	smulbb	ip, ip, r3
 801969e:	ea4f 0be2 	mov.w	fp, r2, asr #3
 80196a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80196a6:	fb00 c001 	mla	r0, r0, r1, ip
 80196aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80196ae:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 80196b2:	fb1b fb03 	smulbb	fp, fp, r3
 80196b6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80196ba:	00d2      	lsls	r2, r2, #3
 80196bc:	fb0c bc01 	mla	ip, ip, r1, fp
 80196c0:	b2d2      	uxtb	r2, r2
 80196c2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80196c6:	fb12 f303 	smulbb	r3, r2, r3
 80196ca:	fa1f fc8c 	uxth.w	ip, ip
 80196ce:	fa5f fe8e 	uxtb.w	lr, lr
 80196d2:	b280      	uxth	r0, r0
 80196d4:	fb0e 3101 	mla	r1, lr, r1, r3
 80196d8:	f10c 0201 	add.w	r2, ip, #1
 80196dc:	b289      	uxth	r1, r1
 80196de:	1c43      	adds	r3, r0, #1
 80196e0:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80196e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80196e8:	0952      	lsrs	r2, r2, #5
 80196ea:	1c4b      	adds	r3, r1, #1
 80196ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80196f0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80196f4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80196f8:	4310      	orrs	r0, r2
 80196fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80196fe:	4308      	orrs	r0, r1
 8019700:	f8a8 0000 	strh.w	r0, [r8]
 8019704:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019706:	441c      	add	r4, r3
 8019708:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801970a:	f108 0802 	add.w	r8, r8, #2
 801970e:	441e      	add	r6, r3
 8019710:	f109 39ff 	add.w	r9, r9, #4294967295
 8019714:	e731      	b.n	801957a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8019716:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019718:	441c      	add	r4, r3
 801971a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801971c:	441e      	add	r6, r3
 801971e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019720:	3b01      	subs	r3, #1
 8019722:	9309      	str	r3, [sp, #36]	; 0x24
 8019724:	f10a 0a02 	add.w	sl, sl, #2
 8019728:	e6dd      	b.n	80194e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801972a:	f47f aeee 	bne.w	801950a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801972e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019730:	2b00      	cmp	r3, #0
 8019732:	f340 813f 	ble.w	80199b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8019736:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801973a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801973e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019742:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019744:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019748:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801974c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019750:	eef0 6a48 	vmov.f32	s13, s16
 8019754:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019758:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801975c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019760:	ee16 4a90 	vmov	r4, s13
 8019764:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019768:	eef0 6a68 	vmov.f32	s13, s17
 801976c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019770:	ee18 2a10 	vmov	r2, s16
 8019774:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019778:	fb92 f3f3 	sdiv	r3, r2, r3
 801977c:	ee18 2a90 	vmov	r2, s17
 8019780:	932d      	str	r3, [sp, #180]	; 0xb4
 8019782:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019784:	fb92 f3f3 	sdiv	r3, r2, r3
 8019788:	932e      	str	r3, [sp, #184]	; 0xb8
 801978a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801978c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801978e:	3b01      	subs	r3, #1
 8019790:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019794:	930f      	str	r3, [sp, #60]	; 0x3c
 8019796:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019798:	bf08      	it	eq
 801979a:	4613      	moveq	r3, r2
 801979c:	ee16 6a90 	vmov	r6, s13
 80197a0:	9309      	str	r3, [sp, #36]	; 0x24
 80197a2:	eef0 8a67 	vmov.f32	s17, s15
 80197a6:	eeb0 8a47 	vmov.f32	s16, s14
 80197aa:	e695      	b.n	80194d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80197ac:	2900      	cmp	r1, #0
 80197ae:	f43f af42 	beq.w	8019636 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80197b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80197b4:	442b      	add	r3, r5
 80197b6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80197ba:	07db      	lsls	r3, r3, #31
 80197bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80197c0:	bf54      	ite	pl
 80197c2:	f00c 030f 	andpl.w	r3, ip, #15
 80197c6:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80197ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80197ce:	b2db      	uxtb	r3, r3
 80197d0:	930d      	str	r3, [sp, #52]	; 0x34
 80197d2:	e730      	b.n	8019636 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 80197d4:	1c45      	adds	r5, r0, #1
 80197d6:	d195      	bne.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80197d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80197da:	4285      	cmp	r5, r0
 80197dc:	dd92      	ble.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80197de:	1c5d      	adds	r5, r3, #1
 80197e0:	db90      	blt.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80197e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80197e4:	429d      	cmp	r5, r3
 80197e6:	dd8d      	ble.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 80197e8:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80197ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80197ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80197f0:	9301      	str	r3, [sp, #4]
 80197f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80197f4:	9002      	str	r0, [sp, #8]
 80197f6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80197fa:	9300      	str	r3, [sp, #0]
 80197fc:	463a      	mov	r2, r7
 80197fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019800:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019802:	4641      	mov	r1, r8
 8019804:	f7ff fd4a 	bl	801929c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019808:	e77c      	b.n	8019704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 801980a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801980c:	1422      	asrs	r2, r4, #16
 801980e:	1433      	asrs	r3, r6, #16
 8019810:	fb05 2303 	mla	r3, r5, r3, r2
 8019814:	085a      	lsrs	r2, r3, #1
 8019816:	07dd      	lsls	r5, r3, #31
 8019818:	5cba      	ldrb	r2, [r7, r2]
 801981a:	bf54      	ite	pl
 801981c:	f002 020f 	andpl.w	r2, r2, #15
 8019820:	1112      	asrmi	r2, r2, #4
 8019822:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019826:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801982a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801982e:	b2d2      	uxtb	r2, r2
 8019830:	2900      	cmp	r1, #0
 8019832:	f000 80a8 	beq.w	8019986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 8019836:	f103 0e01 	add.w	lr, r3, #1
 801983a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801983e:	f01e 0f01 	tst.w	lr, #1
 8019842:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019846:	bf0c      	ite	eq
 8019848:	f00c 0c0f 	andeq.w	ip, ip, #15
 801984c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019850:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019854:	fa5f f58c 	uxtb.w	r5, ip
 8019858:	9514      	str	r5, [sp, #80]	; 0x50
 801985a:	b300      	cbz	r0, 801989e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801985c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801985e:	442b      	add	r3, r5
 8019860:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019864:	07dd      	lsls	r5, r3, #31
 8019866:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801986a:	bf54      	ite	pl
 801986c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019870:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019874:	3301      	adds	r3, #1
 8019876:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801987a:	fa5f f58c 	uxtb.w	r5, ip
 801987e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019882:	950e      	str	r5, [sp, #56]	; 0x38
 8019884:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019888:	07dd      	lsls	r5, r3, #31
 801988a:	bf54      	ite	pl
 801988c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019890:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019894:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019898:	fa5f f38c 	uxtb.w	r3, ip
 801989c:	9315      	str	r3, [sp, #84]	; 0x54
 801989e:	b289      	uxth	r1, r1
 80198a0:	b280      	uxth	r0, r0
 80198a2:	fb01 f300 	mul.w	r3, r1, r0
 80198a6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80198aa:	0109      	lsls	r1, r1, #4
 80198ac:	b280      	uxth	r0, r0
 80198ae:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80198b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80198b4:	1ac9      	subs	r1, r1, r3
 80198b6:	ebac 0c00 	sub.w	ip, ip, r0
 80198ba:	b289      	uxth	r1, r1
 80198bc:	4369      	muls	r1, r5
 80198be:	fa1f fc8c 	uxth.w	ip, ip
 80198c2:	fb02 120c 	mla	r2, r2, ip, r1
 80198c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80198c8:	fb00 2001 	mla	r0, r0, r1, r2
 80198cc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80198ce:	fb03 0302 	mla	r3, r3, r2, r0
 80198d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80198d6:	2b00      	cmp	r3, #0
 80198d8:	d04c      	beq.n	8019974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 80198da:	9910      	ldr	r1, [sp, #64]	; 0x40
 80198dc:	4a34      	ldr	r2, [pc, #208]	; (80199b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 80198de:	434b      	muls	r3, r1
 80198e0:	1c59      	adds	r1, r3, #1
 80198e2:	f8d2 e000 	ldr.w	lr, [r2]
 80198e6:	f8b9 2000 	ldrh.w	r2, [r9]
 80198ea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80198ee:	121b      	asrs	r3, r3, #8
 80198f0:	b299      	uxth	r1, r3
 80198f2:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80198f6:	43db      	mvns	r3, r3
 80198f8:	b2db      	uxtb	r3, r3
 80198fa:	ea4f 201e 	mov.w	r0, lr, lsr #8
 80198fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019902:	fb1c fc03 	smulbb	ip, ip, r3
 8019906:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801990a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801990e:	fb00 c001 	mla	r0, r0, r1, ip
 8019912:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019916:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801991a:	fb18 f803 	smulbb	r8, r8, r3
 801991e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019922:	00d2      	lsls	r2, r2, #3
 8019924:	fb0c 8c01 	mla	ip, ip, r1, r8
 8019928:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801992c:	b2d2      	uxtb	r2, r2
 801992e:	fa1f fc8c 	uxth.w	ip, ip
 8019932:	fa5f fe8e 	uxtb.w	lr, lr
 8019936:	fb12 f203 	smulbb	r2, r2, r3
 801993a:	b280      	uxth	r0, r0
 801993c:	fb0e 2201 	mla	r2, lr, r1, r2
 8019940:	f10c 0801 	add.w	r8, ip, #1
 8019944:	b292      	uxth	r2, r2
 8019946:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801994a:	f100 0801 	add.w	r8, r0, #1
 801994e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019952:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8019956:	1c51      	adds	r1, r2, #1
 8019958:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801995c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019960:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019964:	ea4c 0c00 	orr.w	ip, ip, r0
 8019968:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801996c:	ea4c 0c02 	orr.w	ip, ip, r2
 8019970:	f8a9 c000 	strh.w	ip, [r9]
 8019974:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019976:	441c      	add	r4, r3
 8019978:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801997a:	f109 0902 	add.w	r9, r9, #2
 801997e:	441e      	add	r6, r3
 8019980:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019984:	e5db      	b.n	801953e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019986:	2800      	cmp	r0, #0
 8019988:	d089      	beq.n	801989e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801998a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801998c:	442b      	add	r3, r5
 801998e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019992:	07db      	lsls	r3, r3, #31
 8019994:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019998:	bf54      	ite	pl
 801999a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801999e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80199a2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80199a6:	fa5f f38c 	uxtb.w	r3, ip
 80199aa:	930e      	str	r3, [sp, #56]	; 0x38
 80199ac:	e777      	b.n	801989e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80199ae:	bf00      	nop
 80199b0:	200120b4 	.word	0x200120b4
 80199b4:	b019      	add	sp, #100	; 0x64
 80199b6:	ecbd 8b08 	vpop	{d8-d11}
 80199ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199be:	bf00      	nop

080199c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80199c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80199c4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80199c8:	2c00      	cmp	r4, #0
 80199ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80199ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80199d2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80199d6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80199da:	fb04 ce03 	mla	lr, r4, r3, ip
 80199de:	db60      	blt.n	8019aa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80199e0:	45a1      	cmp	r9, r4
 80199e2:	dd5e      	ble.n	8019aa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80199e4:	f1bc 0f00 	cmp.w	ip, #0
 80199e8:	db59      	blt.n	8019a9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80199ea:	45e0      	cmp	r8, ip
 80199ec:	dd57      	ble.n	8019a9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80199ee:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80199f2:	f01e 0f01 	tst.w	lr, #1
 80199f6:	5c16      	ldrb	r6, [r2, r0]
 80199f8:	bf0c      	ite	eq
 80199fa:	f006 060f 	andeq.w	r6, r6, #15
 80199fe:	1136      	asrne	r6, r6, #4
 8019a00:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019a04:	b2f6      	uxtb	r6, r6
 8019a06:	f11c 0001 	adds.w	r0, ip, #1
 8019a0a:	d44d      	bmi.n	8019aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019a0c:	4580      	cmp	r8, r0
 8019a0e:	dd4b      	ble.n	8019aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019a10:	2d00      	cmp	r5, #0
 8019a12:	d04b      	beq.n	8019aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019a14:	f10e 0a01 	add.w	sl, lr, #1
 8019a18:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019a1c:	f01a 0f01 	tst.w	sl, #1
 8019a20:	5c10      	ldrb	r0, [r2, r0]
 8019a22:	bf0c      	ite	eq
 8019a24:	f000 000f 	andeq.w	r0, r0, #15
 8019a28:	1100      	asrne	r0, r0, #4
 8019a2a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019a2e:	b2c0      	uxtb	r0, r0
 8019a30:	3401      	adds	r4, #1
 8019a32:	d43f      	bmi.n	8019ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019a34:	45a1      	cmp	r9, r4
 8019a36:	dd3d      	ble.n	8019ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019a38:	2f00      	cmp	r7, #0
 8019a3a:	f000 8097 	beq.w	8019b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8019a3e:	f1bc 0f00 	cmp.w	ip, #0
 8019a42:	db35      	blt.n	8019ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019a44:	45e0      	cmp	r8, ip
 8019a46:	dd33      	ble.n	8019ab0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019a48:	eb03 090e 	add.w	r9, r3, lr
 8019a4c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019a50:	f019 0f01 	tst.w	r9, #1
 8019a54:	5d14      	ldrb	r4, [r2, r4]
 8019a56:	bf0c      	ite	eq
 8019a58:	f004 040f 	andeq.w	r4, r4, #15
 8019a5c:	1124      	asrne	r4, r4, #4
 8019a5e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019a62:	b2e4      	uxtb	r4, r4
 8019a64:	f11c 0c01 	adds.w	ip, ip, #1
 8019a68:	d427      	bmi.n	8019aba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019a6a:	45e0      	cmp	r8, ip
 8019a6c:	dd25      	ble.n	8019aba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019a6e:	b335      	cbz	r5, 8019abe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8019a70:	3301      	adds	r3, #1
 8019a72:	449e      	add	lr, r3
 8019a74:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019a78:	f01e 0f01 	tst.w	lr, #1
 8019a7c:	5cd2      	ldrb	r2, [r2, r3]
 8019a7e:	bf0c      	ite	eq
 8019a80:	f002 020f 	andeq.w	r2, r2, #15
 8019a84:	1112      	asrne	r2, r2, #4
 8019a86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a8a:	b2d3      	uxtb	r3, r2
 8019a8c:	2d0f      	cmp	r5, #15
 8019a8e:	d917      	bls.n	8019ac0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8019a90:	4b39      	ldr	r3, [pc, #228]	; (8019b78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8019a92:	4a3a      	ldr	r2, [pc, #232]	; (8019b7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8019a94:	483a      	ldr	r0, [pc, #232]	; (8019b80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 8019a96:	f240 210d 	movw	r1, #525	; 0x20d
 8019a9a:	f000 fc6b 	bl	801a374 <__assert_func>
 8019a9e:	2600      	movs	r6, #0
 8019aa0:	e7b1      	b.n	8019a06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8019aa2:	2000      	movs	r0, #0
 8019aa4:	4606      	mov	r6, r0
 8019aa6:	e7c3      	b.n	8019a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019aa8:	2000      	movs	r0, #0
 8019aaa:	e7c1      	b.n	8019a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019aac:	4628      	mov	r0, r5
 8019aae:	e7bf      	b.n	8019a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019ab0:	2400      	movs	r4, #0
 8019ab2:	e7d7      	b.n	8019a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8019ab4:	2300      	movs	r3, #0
 8019ab6:	461c      	mov	r4, r3
 8019ab8:	e7e8      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019aba:	2300      	movs	r3, #0
 8019abc:	e7e6      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8019abe:	462b      	mov	r3, r5
 8019ac0:	2f0f      	cmp	r7, #15
 8019ac2:	d8e5      	bhi.n	8019a90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019ac4:	b2ad      	uxth	r5, r5
 8019ac6:	b2bf      	uxth	r7, r7
 8019ac8:	fb05 fc07 	mul.w	ip, r5, r7
 8019acc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019ad0:	012d      	lsls	r5, r5, #4
 8019ad2:	b2bf      	uxth	r7, r7
 8019ad4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019ad8:	eba5 050c 	sub.w	r5, r5, ip
 8019adc:	1bd2      	subs	r2, r2, r7
 8019ade:	b2ad      	uxth	r5, r5
 8019ae0:	b292      	uxth	r2, r2
 8019ae2:	4368      	muls	r0, r5
 8019ae4:	fb06 0002 	mla	r0, r6, r2, r0
 8019ae8:	fb07 0404 	mla	r4, r7, r4, r0
 8019aec:	fb0c 4303 	mla	r3, ip, r3, r4
 8019af0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019af4:	2b00      	cmp	r3, #0
 8019af6:	d037      	beq.n	8019b68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8019af8:	4a22      	ldr	r2, [pc, #136]	; (8019b84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8019afa:	6816      	ldr	r6, [r2, #0]
 8019afc:	880a      	ldrh	r2, [r1, #0]
 8019afe:	b298      	uxth	r0, r3
 8019b00:	1215      	asrs	r5, r2, #8
 8019b02:	43db      	mvns	r3, r3
 8019b04:	b2db      	uxtb	r3, r3
 8019b06:	0a34      	lsrs	r4, r6, #8
 8019b08:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019b0c:	fb15 f503 	smulbb	r5, r5, r3
 8019b10:	10d7      	asrs	r7, r2, #3
 8019b12:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019b16:	fb04 5400 	mla	r4, r4, r0, r5
 8019b1a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b1e:	08f5      	lsrs	r5, r6, #3
 8019b20:	fb17 f703 	smulbb	r7, r7, r3
 8019b24:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019b28:	00d2      	lsls	r2, r2, #3
 8019b2a:	fb05 7500 	mla	r5, r5, r0, r7
 8019b2e:	b2d2      	uxtb	r2, r2
 8019b30:	00f6      	lsls	r6, r6, #3
 8019b32:	fb12 f303 	smulbb	r3, r2, r3
 8019b36:	b2ad      	uxth	r5, r5
 8019b38:	b2f6      	uxtb	r6, r6
 8019b3a:	b2a4      	uxth	r4, r4
 8019b3c:	fb06 3000 	mla	r0, r6, r0, r3
 8019b40:	1c6b      	adds	r3, r5, #1
 8019b42:	b280      	uxth	r0, r0
 8019b44:	1c62      	adds	r2, r4, #1
 8019b46:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019b4a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019b4e:	095b      	lsrs	r3, r3, #5
 8019b50:	1c42      	adds	r2, r0, #1
 8019b52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b56:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019b5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019b5e:	4323      	orrs	r3, r4
 8019b60:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019b64:	4303      	orrs	r3, r0
 8019b66:	800b      	strh	r3, [r1, #0]
 8019b68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b6c:	2d0f      	cmp	r5, #15
 8019b6e:	d88f      	bhi.n	8019a90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019b70:	463b      	mov	r3, r7
 8019b72:	463c      	mov	r4, r7
 8019b74:	e7a6      	b.n	8019ac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8019b76:	bf00      	nop
 8019b78:	0801dee5 	.word	0x0801dee5
 8019b7c:	0801e43d 	.word	0x0801e43d
 8019b80:	0801df6d 	.word	0x0801df6d
 8019b84:	200120b4 	.word	0x200120b4

08019b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b8c:	ed2d 8b08 	vpush	{d8-d11}
 8019b90:	b095      	sub	sp, #84	; 0x54
 8019b92:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8019b96:	9306      	str	r3, [sp, #24]
 8019b98:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 8019b9c:	9307      	str	r3, [sp, #28]
 8019b9e:	920d      	str	r2, [sp, #52]	; 0x34
 8019ba0:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8019ba4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019ba6:	910a      	str	r1, [sp, #40]	; 0x28
 8019ba8:	9308      	str	r3, [sp, #32]
 8019baa:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8019bae:	9013      	str	r0, [sp, #76]	; 0x4c
 8019bb0:	6850      	ldr	r0, [r2, #4]
 8019bb2:	6812      	ldr	r2, [r2, #0]
 8019bb4:	fb00 1303 	mla	r3, r0, r3, r1
 8019bb8:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 8019bbc:	9b07      	ldr	r3, [sp, #28]
 8019bbe:	3301      	adds	r3, #1
 8019bc0:	f023 0301 	bic.w	r3, r3, #1
 8019bc4:	9309      	str	r3, [sp, #36]	; 0x24
 8019bc6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019bc8:	681f      	ldr	r7, [r3, #0]
 8019bca:	eeb0 aa40 	vmov.f32	s20, s0
 8019bce:	eef0 9a60 	vmov.f32	s19, s1
 8019bd2:	eeb0 9a41 	vmov.f32	s18, s2
 8019bd6:	eeb0 8a62 	vmov.f32	s16, s5
 8019bda:	eef0 8a43 	vmov.f32	s17, s6
 8019bde:	eef0 ba44 	vmov.f32	s23, s8
 8019be2:	eeb0 ba64 	vmov.f32	s22, s9
 8019be6:	eef0 aa45 	vmov.f32	s21, s10
 8019bea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019bec:	2b00      	cmp	r3, #0
 8019bee:	dc03      	bgt.n	8019bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8019bf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019bf2:	2b00      	cmp	r3, #0
 8019bf4:	f340 825c 	ble.w	801a0b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8019bf8:	9b06      	ldr	r3, [sp, #24]
 8019bfa:	2b00      	cmp	r3, #0
 8019bfc:	f340 8119 	ble.w	8019e32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 8019c00:	1422      	asrs	r2, r4, #16
 8019c02:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c06:	d42d      	bmi.n	8019c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8019c08:	9807      	ldr	r0, [sp, #28]
 8019c0a:	1c51      	adds	r1, r2, #1
 8019c0c:	4288      	cmp	r0, r1
 8019c0e:	dd2c      	ble.n	8019c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019c10:	2b00      	cmp	r3, #0
 8019c12:	db2a      	blt.n	8019c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019c14:	9808      	ldr	r0, [sp, #32]
 8019c16:	1c59      	adds	r1, r3, #1
 8019c18:	4288      	cmp	r0, r1
 8019c1a:	dd26      	ble.n	8019c6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019c1c:	9b06      	ldr	r3, [sp, #24]
 8019c1e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019c20:	3b01      	subs	r3, #1
 8019c22:	fb02 4203 	mla	r2, r2, r3, r4
 8019c26:	1412      	asrs	r2, r2, #16
 8019c28:	d42a      	bmi.n	8019c80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019c2a:	9907      	ldr	r1, [sp, #28]
 8019c2c:	3201      	adds	r2, #1
 8019c2e:	4291      	cmp	r1, r2
 8019c30:	dd26      	ble.n	8019c80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019c32:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019c34:	fb02 6303 	mla	r3, r2, r3, r6
 8019c38:	141b      	asrs	r3, r3, #16
 8019c3a:	d421      	bmi.n	8019c80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019c3c:	9a08      	ldr	r2, [sp, #32]
 8019c3e:	3301      	adds	r3, #1
 8019c40:	429a      	cmp	r2, r3
 8019c42:	dd1d      	ble.n	8019c80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019c44:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8019c48:	f8dd a018 	ldr.w	sl, [sp, #24]
 8019c4c:	930e      	str	r3, [sp, #56]	; 0x38
 8019c4e:	46d8      	mov	r8, fp
 8019c50:	f1ba 0f00 	cmp.w	sl, #0
 8019c54:	f300 8161 	bgt.w	8019f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019c58:	9b06      	ldr	r3, [sp, #24]
 8019c5a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c5e:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 8019c62:	e0e8      	b.n	8019e36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 8019c64:	1c51      	adds	r1, r2, #1
 8019c66:	f040 80da 	bne.w	8019e1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019c6a:	9907      	ldr	r1, [sp, #28]
 8019c6c:	4291      	cmp	r1, r2
 8019c6e:	f340 80d6 	ble.w	8019e1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019c72:	1c5a      	adds	r2, r3, #1
 8019c74:	f2c0 80d3 	blt.w	8019e1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019c78:	9a08      	ldr	r2, [sp, #32]
 8019c7a:	4293      	cmp	r3, r2
 8019c7c:	f280 80cf 	bge.w	8019e1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019c80:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8019c84:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019c88:	46d8      	mov	r8, fp
 8019c8a:	f1b9 0f00 	cmp.w	r9, #0
 8019c8e:	dde3      	ble.n	8019c58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8019c90:	1420      	asrs	r0, r4, #16
 8019c92:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019c96:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019c9a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019c9e:	f100 8124 	bmi.w	8019eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8019ca2:	9d07      	ldr	r5, [sp, #28]
 8019ca4:	f100 0c01 	add.w	ip, r0, #1
 8019ca8:	4565      	cmp	r5, ip
 8019caa:	f340 8120 	ble.w	8019eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019cae:	2b00      	cmp	r3, #0
 8019cb0:	f2c0 811d 	blt.w	8019eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019cb4:	9d08      	ldr	r5, [sp, #32]
 8019cb6:	f103 0c01 	add.w	ip, r3, #1
 8019cba:	4565      	cmp	r5, ip
 8019cbc:	f340 8117 	ble.w	8019eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019cc0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019cc2:	fb03 0305 	mla	r3, r3, r5, r0
 8019cc6:	0858      	lsrs	r0, r3, #1
 8019cc8:	07dd      	lsls	r5, r3, #31
 8019cca:	5c38      	ldrb	r0, [r7, r0]
 8019ccc:	bf54      	ite	pl
 8019cce:	f000 000f 	andpl.w	r0, r0, #15
 8019cd2:	1100      	asrmi	r0, r0, #4
 8019cd4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019cd8:	b2c0      	uxtb	r0, r0
 8019cda:	2a00      	cmp	r2, #0
 8019cdc:	f000 80ea 	beq.w	8019eb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 8019ce0:	f103 0e01 	add.w	lr, r3, #1
 8019ce4:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019ce8:	f01e 0f01 	tst.w	lr, #1
 8019cec:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019cf0:	bf0c      	ite	eq
 8019cf2:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019cf6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019cfa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019cfe:	fa5f fc8c 	uxtb.w	ip, ip
 8019d02:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8019d06:	b1f9      	cbz	r1, 8019d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019d08:	4453      	add	r3, sl
 8019d0a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019d0e:	07dd      	lsls	r5, r3, #31
 8019d10:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019d14:	bf54      	ite	pl
 8019d16:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019d1a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019d1e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019d22:	3301      	adds	r3, #1
 8019d24:	fa5f fc8c 	uxtb.w	ip, ip
 8019d28:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8019d2c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019d30:	07dd      	lsls	r5, r3, #31
 8019d32:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019d36:	bf54      	ite	pl
 8019d38:	f00c 030f 	andpl.w	r3, ip, #15
 8019d3c:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019d40:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019d44:	b2db      	uxtb	r3, r3
 8019d46:	9310      	str	r3, [sp, #64]	; 0x40
 8019d48:	b292      	uxth	r2, r2
 8019d4a:	b289      	uxth	r1, r1
 8019d4c:	fb02 f301 	mul.w	r3, r2, r1
 8019d50:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019d54:	0112      	lsls	r2, r2, #4
 8019d56:	b289      	uxth	r1, r1
 8019d58:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019d5c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019d5e:	1ad2      	subs	r2, r2, r3
 8019d60:	ebac 0c01 	sub.w	ip, ip, r1
 8019d64:	b292      	uxth	r2, r2
 8019d66:	436a      	muls	r2, r5
 8019d68:	fa1f fc8c 	uxth.w	ip, ip
 8019d6c:	fb00 200c 	mla	r0, r0, ip, r2
 8019d70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d72:	fb01 0102 	mla	r1, r1, r2, r0
 8019d76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d78:	fb03 1302 	mla	r3, r3, r2, r1
 8019d7c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019d80:	2b00      	cmp	r3, #0
 8019d82:	d043      	beq.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019d84:	4ac9      	ldr	r2, [pc, #804]	; (801a0ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8019d86:	6811      	ldr	r1, [r2, #0]
 8019d88:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8019d8c:	08ca      	lsrs	r2, r1, #3
 8019d8e:	00c9      	lsls	r1, r1, #3
 8019d90:	b2c9      	uxtb	r1, r1
 8019d92:	2bff      	cmp	r3, #255	; 0xff
 8019d94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019d98:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019d9c:	460d      	mov	r5, r1
 8019d9e:	f000 809c 	beq.w	8019eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 8019da2:	f8b8 c000 	ldrh.w	ip, [r8]
 8019da6:	b299      	uxth	r1, r3
 8019da8:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019dac:	43db      	mvns	r3, r3
 8019dae:	b2db      	uxtb	r3, r3
 8019db0:	fb1e fe01 	smulbb	lr, lr, r1
 8019db4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019db8:	fb00 e003 	mla	r0, r0, r3, lr
 8019dbc:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019dc0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019dc4:	fb12 f201 	smulbb	r2, r2, r1
 8019dc8:	fb0e 2203 	mla	r2, lr, r3, r2
 8019dcc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019dd0:	b292      	uxth	r2, r2
 8019dd2:	fb15 f101 	smulbb	r1, r5, r1
 8019dd6:	fa5f fc8c 	uxtb.w	ip, ip
 8019dda:	b280      	uxth	r0, r0
 8019ddc:	fb0c 1303 	mla	r3, ip, r3, r1
 8019de0:	f102 0e01 	add.w	lr, r2, #1
 8019de4:	b29b      	uxth	r3, r3
 8019de6:	1c41      	adds	r1, r0, #1
 8019de8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019dec:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019df0:	0952      	lsrs	r2, r2, #5
 8019df2:	1c59      	adds	r1, r3, #1
 8019df4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019df8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019dfc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019e00:	4310      	orrs	r0, r2
 8019e02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e06:	4318      	orrs	r0, r3
 8019e08:	f8a8 0000 	strh.w	r0, [r8]
 8019e0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e0e:	441c      	add	r4, r3
 8019e10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e12:	f108 0802 	add.w	r8, r8, #2
 8019e16:	441e      	add	r6, r3
 8019e18:	f109 39ff 	add.w	r9, r9, #4294967295
 8019e1c:	e735      	b.n	8019c8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 8019e1e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e20:	441c      	add	r4, r3
 8019e22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e24:	441e      	add	r6, r3
 8019e26:	9b06      	ldr	r3, [sp, #24]
 8019e28:	3b01      	subs	r3, #1
 8019e2a:	9306      	str	r3, [sp, #24]
 8019e2c:	f10b 0b02 	add.w	fp, fp, #2
 8019e30:	e6e2      	b.n	8019bf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8019e32:	f47f aef3 	bne.w	8019c1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019e36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e38:	2b00      	cmp	r3, #0
 8019e3a:	f340 8139 	ble.w	801a0b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8019e3e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019e42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e46:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019e4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019e4c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019e50:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019e54:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019e58:	eef0 6a48 	vmov.f32	s13, s16
 8019e5c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019e60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e64:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019e68:	ee16 4a90 	vmov	r4, s13
 8019e6c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019e70:	eef0 6a68 	vmov.f32	s13, s17
 8019e74:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019e78:	ee18 2a10 	vmov	r2, s16
 8019e7c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019e80:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e84:	ee18 2a90 	vmov	r2, s17
 8019e88:	9329      	str	r3, [sp, #164]	; 0xa4
 8019e8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019e8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e90:	932a      	str	r3, [sp, #168]	; 0xa8
 8019e92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e94:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019e96:	3b01      	subs	r3, #1
 8019e98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e9c:	930a      	str	r3, [sp, #40]	; 0x28
 8019e9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ea0:	bf08      	it	eq
 8019ea2:	4613      	moveq	r3, r2
 8019ea4:	ee16 6a90 	vmov	r6, s13
 8019ea8:	9306      	str	r3, [sp, #24]
 8019eaa:	eef0 8a67 	vmov.f32	s17, s15
 8019eae:	eeb0 8a47 	vmov.f32	s16, s14
 8019eb2:	e69a      	b.n	8019bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8019eb4:	2900      	cmp	r1, #0
 8019eb6:	f43f af47 	beq.w	8019d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019eba:	4453      	add	r3, sl
 8019ebc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019ec0:	07db      	lsls	r3, r3, #31
 8019ec2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019ec6:	bf54      	ite	pl
 8019ec8:	f00c 030f 	andpl.w	r3, ip, #15
 8019ecc:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019ed0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019ed4:	b2db      	uxtb	r3, r3
 8019ed6:	930b      	str	r3, [sp, #44]	; 0x2c
 8019ed8:	e736      	b.n	8019d48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019eda:	00d2      	lsls	r2, r2, #3
 8019edc:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8019ee0:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8019ee4:	f8a8 1000 	strh.w	r1, [r8]
 8019ee8:	e790      	b.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019eea:	1c45      	adds	r5, r0, #1
 8019eec:	d18e      	bne.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019eee:	9d07      	ldr	r5, [sp, #28]
 8019ef0:	4285      	cmp	r5, r0
 8019ef2:	dd8b      	ble.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019ef4:	1c5d      	adds	r5, r3, #1
 8019ef6:	db89      	blt.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019ef8:	9d08      	ldr	r5, [sp, #32]
 8019efa:	429d      	cmp	r5, r3
 8019efc:	dd86      	ble.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019efe:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8019f02:	9b07      	ldr	r3, [sp, #28]
 8019f04:	9300      	str	r3, [sp, #0]
 8019f06:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8019f0a:	9501      	str	r5, [sp, #4]
 8019f0c:	4653      	mov	r3, sl
 8019f0e:	463a      	mov	r2, r7
 8019f10:	4641      	mov	r1, r8
 8019f12:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f14:	f7ff fd54 	bl	80199c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019f18:	e778      	b.n	8019e0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019f1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019f1c:	1422      	asrs	r2, r4, #16
 8019f1e:	1433      	asrs	r3, r6, #16
 8019f20:	fb01 2303 	mla	r3, r1, r3, r2
 8019f24:	085a      	lsrs	r2, r3, #1
 8019f26:	07d9      	lsls	r1, r3, #31
 8019f28:	5cba      	ldrb	r2, [r7, r2]
 8019f2a:	bf54      	ite	pl
 8019f2c:	f002 020f 	andpl.w	r2, r2, #15
 8019f30:	1112      	asrmi	r2, r2, #4
 8019f32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019f36:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019f3a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019f3e:	b2d2      	uxtb	r2, r2
 8019f40:	2800      	cmp	r0, #0
 8019f42:	f000 8099 	beq.w	801a078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 8019f46:	f103 0e01 	add.w	lr, r3, #1
 8019f4a:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8019f4e:	f01e 0f01 	tst.w	lr, #1
 8019f52:	5c79      	ldrb	r1, [r7, r1]
 8019f54:	bf0c      	ite	eq
 8019f56:	f001 010f 	andeq.w	r1, r1, #15
 8019f5a:	1109      	asrne	r1, r1, #4
 8019f5c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019f60:	b2c9      	uxtb	r1, r1
 8019f62:	9111      	str	r1, [sp, #68]	; 0x44
 8019f64:	f1bc 0f00 	cmp.w	ip, #0
 8019f68:	d018      	beq.n	8019f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019f6a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019f6c:	440b      	add	r3, r1
 8019f6e:	0859      	lsrs	r1, r3, #1
 8019f70:	07dd      	lsls	r5, r3, #31
 8019f72:	5c79      	ldrb	r1, [r7, r1]
 8019f74:	bf54      	ite	pl
 8019f76:	f001 010f 	andpl.w	r1, r1, #15
 8019f7a:	1109      	asrmi	r1, r1, #4
 8019f7c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019f80:	b2c9      	uxtb	r1, r1
 8019f82:	3301      	adds	r3, #1
 8019f84:	910c      	str	r1, [sp, #48]	; 0x30
 8019f86:	0859      	lsrs	r1, r3, #1
 8019f88:	07dd      	lsls	r5, r3, #31
 8019f8a:	5c79      	ldrb	r1, [r7, r1]
 8019f8c:	bf54      	ite	pl
 8019f8e:	f001 010f 	andpl.w	r1, r1, #15
 8019f92:	1109      	asrmi	r1, r1, #4
 8019f94:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019f98:	b2c9      	uxtb	r1, r1
 8019f9a:	9112      	str	r1, [sp, #72]	; 0x48
 8019f9c:	b280      	uxth	r0, r0
 8019f9e:	fa1f fc8c 	uxth.w	ip, ip
 8019fa2:	fb00 f30c 	mul.w	r3, r0, ip
 8019fa6:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8019faa:	0100      	lsls	r0, r0, #4
 8019fac:	fa1f fc8c 	uxth.w	ip, ip
 8019fb0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8019fb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fb6:	1ac0      	subs	r0, r0, r3
 8019fb8:	eba1 010c 	sub.w	r1, r1, ip
 8019fbc:	b280      	uxth	r0, r0
 8019fbe:	b289      	uxth	r1, r1
 8019fc0:	4368      	muls	r0, r5
 8019fc2:	fb02 0201 	mla	r2, r2, r1, r0
 8019fc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019fc8:	fb0c 2c01 	mla	ip, ip, r1, r2
 8019fcc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019fce:	fb03 c302 	mla	r3, r3, r2, ip
 8019fd2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019fd6:	2b00      	cmp	r3, #0
 8019fd8:	d045      	beq.n	801a066 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019fda:	4a34      	ldr	r2, [pc, #208]	; (801a0ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8019fdc:	6811      	ldr	r1, [r2, #0]
 8019fde:	2bff      	cmp	r3, #255	; 0xff
 8019fe0:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8019fe4:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8019fe8:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8019fec:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019ff0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019ff4:	b2c9      	uxtb	r1, r1
 8019ff6:	d050      	beq.n	801a09a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8019ff8:	f8b8 c000 	ldrh.w	ip, [r8]
 8019ffc:	fa1f f983 	uxth.w	r9, r3
 801a000:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a004:	43db      	mvns	r3, r3
 801a006:	b2db      	uxtb	r3, r3
 801a008:	fb1e fe09 	smulbb	lr, lr, r9
 801a00c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a010:	fb00 e003 	mla	r0, r0, r3, lr
 801a014:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801a018:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a01c:	fb12 f209 	smulbb	r2, r2, r9
 801a020:	fb0e 2203 	mla	r2, lr, r3, r2
 801a024:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a028:	b292      	uxth	r2, r2
 801a02a:	fa5f fc8c 	uxtb.w	ip, ip
 801a02e:	fb11 f109 	smulbb	r1, r1, r9
 801a032:	b280      	uxth	r0, r0
 801a034:	fb0c 1103 	mla	r1, ip, r3, r1
 801a038:	f102 0e01 	add.w	lr, r2, #1
 801a03c:	b289      	uxth	r1, r1
 801a03e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801a042:	f100 0e01 	add.w	lr, r0, #1
 801a046:	0952      	lsrs	r2, r2, #5
 801a048:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a04c:	1c4b      	adds	r3, r1, #1
 801a04e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a052:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a056:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a05a:	4302      	orrs	r2, r0
 801a05c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a060:	430a      	orrs	r2, r1
 801a062:	f8a8 2000 	strh.w	r2, [r8]
 801a066:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a068:	441c      	add	r4, r3
 801a06a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a06c:	f108 0802 	add.w	r8, r8, #2
 801a070:	441e      	add	r6, r3
 801a072:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a076:	e5eb      	b.n	8019c50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801a078:	f1bc 0f00 	cmp.w	ip, #0
 801a07c:	d08e      	beq.n	8019f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801a07e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a080:	440b      	add	r3, r1
 801a082:	0859      	lsrs	r1, r3, #1
 801a084:	07db      	lsls	r3, r3, #31
 801a086:	5c79      	ldrb	r1, [r7, r1]
 801a088:	bf54      	ite	pl
 801a08a:	f001 010f 	andpl.w	r1, r1, #15
 801a08e:	1109      	asrmi	r1, r1, #4
 801a090:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a094:	b2c9      	uxtb	r1, r1
 801a096:	910c      	str	r1, [sp, #48]	; 0x30
 801a098:	e780      	b.n	8019f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 801a09a:	00d2      	lsls	r2, r2, #3
 801a09c:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a0a0:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801a0a4:	f8a8 1000 	strh.w	r1, [r8]
 801a0a8:	e7dd      	b.n	801a066 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a0aa:	bf00      	nop
 801a0ac:	200120b4 	.word	0x200120b4
 801a0b0:	b015      	add	sp, #84	; 0x54
 801a0b2:	ecbd 8b08 	vpop	{d8-d11}
 801a0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0ba:	bf00      	nop

0801a0bc <CRC_Lock>:
 801a0bc:	b530      	push	{r4, r5, lr}
 801a0be:	4a1d      	ldr	r2, [pc, #116]	; (801a134 <CRC_Lock+0x78>)
 801a0c0:	6813      	ldr	r3, [r2, #0]
 801a0c2:	f023 0301 	bic.w	r3, r3, #1
 801a0c6:	6013      	str	r3, [r2, #0]
 801a0c8:	4b1b      	ldr	r3, [pc, #108]	; (801a138 <CRC_Lock+0x7c>)
 801a0ca:	681a      	ldr	r2, [r3, #0]
 801a0cc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a0d0:	4022      	ands	r2, r4
 801a0d2:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a0d6:	42aa      	cmp	r2, r5
 801a0d8:	d005      	beq.n	801a0e6 <CRC_Lock+0x2a>
 801a0da:	681b      	ldr	r3, [r3, #0]
 801a0dc:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a0e0:	4023      	ands	r3, r4
 801a0e2:	4293      	cmp	r3, r2
 801a0e4:	d11d      	bne.n	801a122 <CRC_Lock+0x66>
 801a0e6:	4b15      	ldr	r3, [pc, #84]	; (801a13c <CRC_Lock+0x80>)
 801a0e8:	681b      	ldr	r3, [r3, #0]
 801a0ea:	b9d3      	cbnz	r3, 801a122 <CRC_Lock+0x66>
 801a0ec:	4a14      	ldr	r2, [pc, #80]	; (801a140 <CRC_Lock+0x84>)
 801a0ee:	6813      	ldr	r3, [r2, #0]
 801a0f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a0f4:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801a0f8:	d006      	beq.n	801a108 <CRC_Lock+0x4c>
 801a0fa:	6813      	ldr	r3, [r2, #0]
 801a0fc:	f240 4283 	movw	r2, #1155	; 0x483
 801a100:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a104:	4293      	cmp	r3, r2
 801a106:	d10c      	bne.n	801a122 <CRC_Lock+0x66>
 801a108:	4b0e      	ldr	r3, [pc, #56]	; (801a144 <CRC_Lock+0x88>)
 801a10a:	2201      	movs	r2, #1
 801a10c:	601a      	str	r2, [r3, #0]
 801a10e:	681a      	ldr	r2, [r3, #0]
 801a110:	2a00      	cmp	r2, #0
 801a112:	d1fc      	bne.n	801a10e <CRC_Lock+0x52>
 801a114:	4b0c      	ldr	r3, [pc, #48]	; (801a148 <CRC_Lock+0x8c>)
 801a116:	6018      	str	r0, [r3, #0]
 801a118:	6818      	ldr	r0, [r3, #0]
 801a11a:	1a43      	subs	r3, r0, r1
 801a11c:	4258      	negs	r0, r3
 801a11e:	4158      	adcs	r0, r3
 801a120:	bd30      	pop	{r4, r5, pc}
 801a122:	4b0a      	ldr	r3, [pc, #40]	; (801a14c <CRC_Lock+0x90>)
 801a124:	2201      	movs	r2, #1
 801a126:	601a      	str	r2, [r3, #0]
 801a128:	681a      	ldr	r2, [r3, #0]
 801a12a:	2a00      	cmp	r2, #0
 801a12c:	d1fc      	bne.n	801a128 <CRC_Lock+0x6c>
 801a12e:	4b08      	ldr	r3, [pc, #32]	; (801a150 <CRC_Lock+0x94>)
 801a130:	e7f1      	b.n	801a116 <CRC_Lock+0x5a>
 801a132:	bf00      	nop
 801a134:	e0002000 	.word	0xe0002000
 801a138:	e000ed00 	.word	0xe000ed00
 801a13c:	e0042000 	.word	0xe0042000
 801a140:	5c001000 	.word	0x5c001000
 801a144:	58024c08 	.word	0x58024c08
 801a148:	58024c00 	.word	0x58024c00
 801a14c:	40023008 	.word	0x40023008
 801a150:	40023000 	.word	0x40023000

0801a154 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a154:	6101      	str	r1, [r0, #16]
 801a156:	4770      	bx	lr

0801a158 <_ZN8touchgfx8Gestures4tickEv>:
 801a158:	7b83      	ldrb	r3, [r0, #14]
 801a15a:	b14b      	cbz	r3, 801a170 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a15c:	8903      	ldrh	r3, [r0, #8]
 801a15e:	3301      	adds	r3, #1
 801a160:	b29b      	uxth	r3, r3
 801a162:	2b07      	cmp	r3, #7
 801a164:	8103      	strh	r3, [r0, #8]
 801a166:	bf81      	itttt	hi
 801a168:	2300      	movhi	r3, #0
 801a16a:	8143      	strhhi	r3, [r0, #10]
 801a16c:	8183      	strhhi	r3, [r0, #12]
 801a16e:	7383      	strbhi	r3, [r0, #14]
 801a170:	4770      	bx	lr
	...

0801a174 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a174:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a178:	4604      	mov	r4, r0
 801a17a:	8880      	ldrh	r0, [r0, #4]
 801a17c:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a180:	4698      	mov	r8, r3
 801a182:	eba8 0000 	sub.w	r0, r8, r0
 801a186:	4b1c      	ldr	r3, [pc, #112]	; (801a1f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a188:	9300      	str	r3, [sp, #0]
 801a18a:	b280      	uxth	r0, r0
 801a18c:	2300      	movs	r3, #0
 801a18e:	f88d 3004 	strb.w	r3, [sp, #4]
 801a192:	b203      	sxth	r3, r0
 801a194:	2b00      	cmp	r3, #0
 801a196:	bfb8      	it	lt
 801a198:	4240      	neglt	r0, r0
 801a19a:	4617      	mov	r7, r2
 801a19c:	8aa2      	ldrh	r2, [r4, #20]
 801a19e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a1a2:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a1a6:	bfb8      	it	lt
 801a1a8:	b203      	sxthlt	r3, r0
 801a1aa:	460e      	mov	r6, r1
 801a1ac:	4293      	cmp	r3, r2
 801a1ae:	88e1      	ldrh	r1, [r4, #6]
 801a1b0:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a1b4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a1b8:	dc08      	bgt.n	801a1cc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a1ba:	1a69      	subs	r1, r5, r1
 801a1bc:	b289      	uxth	r1, r1
 801a1be:	b20b      	sxth	r3, r1
 801a1c0:	2b00      	cmp	r3, #0
 801a1c2:	bfbc      	itt	lt
 801a1c4:	4249      	neglt	r1, r1
 801a1c6:	b20b      	sxthlt	r3, r1
 801a1c8:	429a      	cmp	r2, r3
 801a1ca:	da13      	bge.n	801a1f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801a1cc:	6920      	ldr	r0, [r4, #16]
 801a1ce:	6803      	ldr	r3, [r0, #0]
 801a1d0:	4669      	mov	r1, sp
 801a1d2:	685b      	ldr	r3, [r3, #4]
 801a1d4:	4798      	blx	r3
 801a1d6:	eba8 0606 	sub.w	r6, r8, r6
 801a1da:	2300      	movs	r3, #0
 801a1dc:	1bef      	subs	r7, r5, r7
 801a1de:	2001      	movs	r0, #1
 801a1e0:	8123      	strh	r3, [r4, #8]
 801a1e2:	8166      	strh	r6, [r4, #10]
 801a1e4:	81a7      	strh	r7, [r4, #12]
 801a1e6:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a1ea:	80e5      	strh	r5, [r4, #6]
 801a1ec:	73a0      	strb	r0, [r4, #14]
 801a1ee:	b004      	add	sp, #16
 801a1f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a1f4:	2000      	movs	r0, #0
 801a1f6:	e7fa      	b.n	801a1ee <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801a1f8:	0801d374 	.word	0x0801d374

0801a1fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a1fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a1fe:	461e      	mov	r6, r3
 801a200:	1e4b      	subs	r3, r1, #1
 801a202:	2b01      	cmp	r3, #1
 801a204:	b085      	sub	sp, #20
 801a206:	4604      	mov	r4, r0
 801a208:	460d      	mov	r5, r1
 801a20a:	4617      	mov	r7, r2
 801a20c:	d84b      	bhi.n	801a2a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a20e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a212:	1cd3      	adds	r3, r2, #3
 801a214:	b29b      	uxth	r3, r3
 801a216:	2b06      	cmp	r3, #6
 801a218:	d916      	bls.n	801a248 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a21a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801a2bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a21e:	f8cd c004 	str.w	ip, [sp, #4]
 801a222:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a226:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a22a:	6900      	ldr	r0, [r0, #16]
 801a22c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a230:	f04f 0c00 	mov.w	ip, #0
 801a234:	f88d c008 	strb.w	ip, [sp, #8]
 801a238:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a23c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a240:	6803      	ldr	r3, [r0, #0]
 801a242:	a901      	add	r1, sp, #4
 801a244:	689b      	ldr	r3, [r3, #8]
 801a246:	4798      	blx	r3
 801a248:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a24c:	1cd3      	adds	r3, r2, #3
 801a24e:	b29b      	uxth	r3, r3
 801a250:	2b06      	cmp	r3, #6
 801a252:	d916      	bls.n	801a282 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a254:	f8df c064 	ldr.w	ip, [pc, #100]	; 801a2bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801a258:	f8cd c004 	str.w	ip, [sp, #4]
 801a25c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a260:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a264:	6920      	ldr	r0, [r4, #16]
 801a266:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a26a:	f04f 0c01 	mov.w	ip, #1
 801a26e:	f88d c008 	strb.w	ip, [sp, #8]
 801a272:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a276:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a27a:	6803      	ldr	r3, [r0, #0]
 801a27c:	a901      	add	r1, sp, #4
 801a27e:	689b      	ldr	r3, [r3, #8]
 801a280:	4798      	blx	r3
 801a282:	4b0d      	ldr	r3, [pc, #52]	; (801a2b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801a284:	9301      	str	r3, [sp, #4]
 801a286:	6920      	ldr	r0, [r4, #16]
 801a288:	f88d 5008 	strb.w	r5, [sp, #8]
 801a28c:	2300      	movs	r3, #0
 801a28e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a292:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a296:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a29a:	6803      	ldr	r3, [r0, #0]
 801a29c:	a901      	add	r1, sp, #4
 801a29e:	681b      	ldr	r3, [r3, #0]
 801a2a0:	4798      	blx	r3
 801a2a2:	b005      	add	sp, #20
 801a2a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a2a6:	2900      	cmp	r1, #0
 801a2a8:	d1eb      	bne.n	801a282 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a2aa:	80a2      	strh	r2, [r4, #4]
 801a2ac:	80c6      	strh	r6, [r0, #6]
 801a2ae:	60a1      	str	r1, [r4, #8]
 801a2b0:	81a1      	strh	r1, [r4, #12]
 801a2b2:	73a1      	strb	r1, [r4, #14]
 801a2b4:	e7e5      	b.n	801a282 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a2b6:	bf00      	nop
 801a2b8:	0801d360 	.word	0x0801d360
 801a2bc:	0801d388 	.word	0x0801d388

0801a2c0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801a2c0:	b570      	push	{r4, r5, r6, lr}
 801a2c2:	790b      	ldrb	r3, [r1, #4]
 801a2c4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801a2c8:	2b00      	cmp	r3, #0
 801a2ca:	bf0c      	ite	eq
 801a2cc:	2301      	moveq	r3, #1
 801a2ce:	2300      	movne	r3, #0
 801a2d0:	4604      	mov	r4, r0
 801a2d2:	460e      	mov	r6, r1
 801a2d4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801a2d8:	d110      	bne.n	801a2fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801a2da:	b185      	cbz	r5, 801a2fe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 801a2dc:	7933      	ldrb	r3, [r6, #4]
 801a2de:	2b01      	cmp	r3, #1
 801a2e0:	d113      	bne.n	801a30a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a2e2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801a2e4:	b188      	cbz	r0, 801a30a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a2e6:	6803      	ldr	r3, [r0, #0]
 801a2e8:	68db      	ldr	r3, [r3, #12]
 801a2ea:	4798      	blx	r3
 801a2ec:	b168      	cbz	r0, 801a30a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a2ee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801a2f0:	6803      	ldr	r3, [r0, #0]
 801a2f2:	4621      	mov	r1, r4
 801a2f4:	689b      	ldr	r3, [r3, #8]
 801a2f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801a2fa:	4718      	bx	r3
 801a2fc:	b12d      	cbz	r5, 801a30a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 801a2fe:	6823      	ldr	r3, [r4, #0]
 801a300:	4620      	mov	r0, r4
 801a302:	695b      	ldr	r3, [r3, #20]
 801a304:	4798      	blx	r3
 801a306:	2d00      	cmp	r5, #0
 801a308:	d1e8      	bne.n	801a2dc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801a30a:	bd70      	pop	{r4, r5, r6, pc}

0801a30c <__aeabi_atexit>:
 801a30c:	460b      	mov	r3, r1
 801a30e:	4601      	mov	r1, r0
 801a310:	4618      	mov	r0, r3
 801a312:	f000 b853 	b.w	801a3bc <__cxa_atexit>

0801a316 <__cxa_pure_virtual>:
 801a316:	b508      	push	{r3, lr}
 801a318:	f000 f820 	bl	801a35c <_ZSt9terminatev>

0801a31c <_ZdlPvj>:
 801a31c:	f000 b80f 	b.w	801a33e <_ZdlPv>

0801a320 <__cxa_guard_acquire>:
 801a320:	6803      	ldr	r3, [r0, #0]
 801a322:	07db      	lsls	r3, r3, #31
 801a324:	d406      	bmi.n	801a334 <__cxa_guard_acquire+0x14>
 801a326:	7843      	ldrb	r3, [r0, #1]
 801a328:	b103      	cbz	r3, 801a32c <__cxa_guard_acquire+0xc>
 801a32a:	deff      	udf	#255	; 0xff
 801a32c:	2301      	movs	r3, #1
 801a32e:	7043      	strb	r3, [r0, #1]
 801a330:	4618      	mov	r0, r3
 801a332:	4770      	bx	lr
 801a334:	2000      	movs	r0, #0
 801a336:	4770      	bx	lr

0801a338 <__cxa_guard_release>:
 801a338:	2301      	movs	r3, #1
 801a33a:	6003      	str	r3, [r0, #0]
 801a33c:	4770      	bx	lr

0801a33e <_ZdlPv>:
 801a33e:	f000 b88f 	b.w	801a460 <free>

0801a342 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a342:	b508      	push	{r3, lr}
 801a344:	4780      	blx	r0
 801a346:	f000 f80e 	bl	801a366 <abort>
	...

0801a34c <_ZSt13get_terminatev>:
 801a34c:	4b02      	ldr	r3, [pc, #8]	; (801a358 <_ZSt13get_terminatev+0xc>)
 801a34e:	6818      	ldr	r0, [r3, #0]
 801a350:	f3bf 8f5b 	dmb	ish
 801a354:	4770      	bx	lr
 801a356:	bf00      	nop
 801a358:	200000f8 	.word	0x200000f8

0801a35c <_ZSt9terminatev>:
 801a35c:	b508      	push	{r3, lr}
 801a35e:	f7ff fff5 	bl	801a34c <_ZSt13get_terminatev>
 801a362:	f7ff ffee 	bl	801a342 <_ZN10__cxxabiv111__terminateEPFvvE>

0801a366 <abort>:
 801a366:	b508      	push	{r3, lr}
 801a368:	2006      	movs	r0, #6
 801a36a:	f000 fc3d 	bl	801abe8 <raise>
 801a36e:	2001      	movs	r0, #1
 801a370:	f7e7 fe04 	bl	8001f7c <_exit>

0801a374 <__assert_func>:
 801a374:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a376:	461c      	mov	r4, r3
 801a378:	4b09      	ldr	r3, [pc, #36]	; (801a3a0 <__assert_func+0x2c>)
 801a37a:	681b      	ldr	r3, [r3, #0]
 801a37c:	4605      	mov	r5, r0
 801a37e:	68d8      	ldr	r0, [r3, #12]
 801a380:	b152      	cbz	r2, 801a398 <__assert_func+0x24>
 801a382:	4b08      	ldr	r3, [pc, #32]	; (801a3a4 <__assert_func+0x30>)
 801a384:	9100      	str	r1, [sp, #0]
 801a386:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801a38a:	4907      	ldr	r1, [pc, #28]	; (801a3a8 <__assert_func+0x34>)
 801a38c:	462b      	mov	r3, r5
 801a38e:	4622      	mov	r2, r4
 801a390:	f000 f828 	bl	801a3e4 <fiprintf>
 801a394:	f7ff ffe7 	bl	801a366 <abort>
 801a398:	4b04      	ldr	r3, [pc, #16]	; (801a3ac <__assert_func+0x38>)
 801a39a:	461a      	mov	r2, r3
 801a39c:	e7f2      	b.n	801a384 <__assert_func+0x10>
 801a39e:	bf00      	nop
 801a3a0:	200000fc 	.word	0x200000fc
 801a3a4:	0801e678 	.word	0x0801e678
 801a3a8:	0801e685 	.word	0x0801e685
 801a3ac:	0801e6b3 	.word	0x0801e6b3

0801a3b0 <atexit>:
 801a3b0:	2300      	movs	r3, #0
 801a3b2:	4601      	mov	r1, r0
 801a3b4:	461a      	mov	r2, r3
 801a3b6:	4618      	mov	r0, r3
 801a3b8:	f000 bcf2 	b.w	801ada0 <__register_exitproc>

0801a3bc <__cxa_atexit>:
 801a3bc:	b510      	push	{r4, lr}
 801a3be:	4c05      	ldr	r4, [pc, #20]	; (801a3d4 <__cxa_atexit+0x18>)
 801a3c0:	4613      	mov	r3, r2
 801a3c2:	b12c      	cbz	r4, 801a3d0 <__cxa_atexit+0x14>
 801a3c4:	460a      	mov	r2, r1
 801a3c6:	4601      	mov	r1, r0
 801a3c8:	2002      	movs	r0, #2
 801a3ca:	f000 fce9 	bl	801ada0 <__register_exitproc>
 801a3ce:	bd10      	pop	{r4, pc}
 801a3d0:	4620      	mov	r0, r4
 801a3d2:	e7fc      	b.n	801a3ce <__cxa_atexit+0x12>
 801a3d4:	0801ada1 	.word	0x0801ada1

0801a3d8 <__errno>:
 801a3d8:	4b01      	ldr	r3, [pc, #4]	; (801a3e0 <__errno+0x8>)
 801a3da:	6818      	ldr	r0, [r3, #0]
 801a3dc:	4770      	bx	lr
 801a3de:	bf00      	nop
 801a3e0:	200000fc 	.word	0x200000fc

0801a3e4 <fiprintf>:
 801a3e4:	b40e      	push	{r1, r2, r3}
 801a3e6:	b503      	push	{r0, r1, lr}
 801a3e8:	4601      	mov	r1, r0
 801a3ea:	ab03      	add	r3, sp, #12
 801a3ec:	4805      	ldr	r0, [pc, #20]	; (801a404 <fiprintf+0x20>)
 801a3ee:	f853 2b04 	ldr.w	r2, [r3], #4
 801a3f2:	6800      	ldr	r0, [r0, #0]
 801a3f4:	9301      	str	r3, [sp, #4]
 801a3f6:	f000 f921 	bl	801a63c <_vfiprintf_r>
 801a3fa:	b002      	add	sp, #8
 801a3fc:	f85d eb04 	ldr.w	lr, [sp], #4
 801a400:	b003      	add	sp, #12
 801a402:	4770      	bx	lr
 801a404:	200000fc 	.word	0x200000fc

0801a408 <__libc_init_array>:
 801a408:	b570      	push	{r4, r5, r6, lr}
 801a40a:	4e0d      	ldr	r6, [pc, #52]	; (801a440 <__libc_init_array+0x38>)
 801a40c:	4c0d      	ldr	r4, [pc, #52]	; (801a444 <__libc_init_array+0x3c>)
 801a40e:	1ba4      	subs	r4, r4, r6
 801a410:	10a4      	asrs	r4, r4, #2
 801a412:	2500      	movs	r5, #0
 801a414:	42a5      	cmp	r5, r4
 801a416:	d109      	bne.n	801a42c <__libc_init_array+0x24>
 801a418:	4e0b      	ldr	r6, [pc, #44]	; (801a448 <__libc_init_array+0x40>)
 801a41a:	4c0c      	ldr	r4, [pc, #48]	; (801a44c <__libc_init_array+0x44>)
 801a41c:	f000 ffb0 	bl	801b380 <_init>
 801a420:	1ba4      	subs	r4, r4, r6
 801a422:	10a4      	asrs	r4, r4, #2
 801a424:	2500      	movs	r5, #0
 801a426:	42a5      	cmp	r5, r4
 801a428:	d105      	bne.n	801a436 <__libc_init_array+0x2e>
 801a42a:	bd70      	pop	{r4, r5, r6, pc}
 801a42c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a430:	4798      	blx	r3
 801a432:	3501      	adds	r5, #1
 801a434:	e7ee      	b.n	801a414 <__libc_init_array+0xc>
 801a436:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801a43a:	4798      	blx	r3
 801a43c:	3501      	adds	r5, #1
 801a43e:	e7f2      	b.n	801a426 <__libc_init_array+0x1e>
 801a440:	0819e8b0 	.word	0x0819e8b0
 801a444:	0819e8b0 	.word	0x0819e8b0
 801a448:	0819e8b0 	.word	0x0819e8b0
 801a44c:	0819e8c4 	.word	0x0819e8c4

0801a450 <malloc>:
 801a450:	4b02      	ldr	r3, [pc, #8]	; (801a45c <malloc+0xc>)
 801a452:	4601      	mov	r1, r0
 801a454:	6818      	ldr	r0, [r3, #0]
 801a456:	f000 b86d 	b.w	801a534 <_malloc_r>
 801a45a:	bf00      	nop
 801a45c:	200000fc 	.word	0x200000fc

0801a460 <free>:
 801a460:	4b02      	ldr	r3, [pc, #8]	; (801a46c <free+0xc>)
 801a462:	4601      	mov	r1, r0
 801a464:	6818      	ldr	r0, [r3, #0]
 801a466:	f000 b817 	b.w	801a498 <_free_r>
 801a46a:	bf00      	nop
 801a46c:	200000fc 	.word	0x200000fc

0801a470 <memcpy>:
 801a470:	b510      	push	{r4, lr}
 801a472:	1e43      	subs	r3, r0, #1
 801a474:	440a      	add	r2, r1
 801a476:	4291      	cmp	r1, r2
 801a478:	d100      	bne.n	801a47c <memcpy+0xc>
 801a47a:	bd10      	pop	{r4, pc}
 801a47c:	f811 4b01 	ldrb.w	r4, [r1], #1
 801a480:	f803 4f01 	strb.w	r4, [r3, #1]!
 801a484:	e7f7      	b.n	801a476 <memcpy+0x6>

0801a486 <memset>:
 801a486:	4402      	add	r2, r0
 801a488:	4603      	mov	r3, r0
 801a48a:	4293      	cmp	r3, r2
 801a48c:	d100      	bne.n	801a490 <memset+0xa>
 801a48e:	4770      	bx	lr
 801a490:	f803 1b01 	strb.w	r1, [r3], #1
 801a494:	e7f9      	b.n	801a48a <memset+0x4>
	...

0801a498 <_free_r>:
 801a498:	b538      	push	{r3, r4, r5, lr}
 801a49a:	4605      	mov	r5, r0
 801a49c:	2900      	cmp	r1, #0
 801a49e:	d045      	beq.n	801a52c <_free_r+0x94>
 801a4a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801a4a4:	1f0c      	subs	r4, r1, #4
 801a4a6:	2b00      	cmp	r3, #0
 801a4a8:	bfb8      	it	lt
 801a4aa:	18e4      	addlt	r4, r4, r3
 801a4ac:	f000 feba 	bl	801b224 <__malloc_lock>
 801a4b0:	4a1f      	ldr	r2, [pc, #124]	; (801a530 <_free_r+0x98>)
 801a4b2:	6813      	ldr	r3, [r2, #0]
 801a4b4:	4610      	mov	r0, r2
 801a4b6:	b933      	cbnz	r3, 801a4c6 <_free_r+0x2e>
 801a4b8:	6063      	str	r3, [r4, #4]
 801a4ba:	6014      	str	r4, [r2, #0]
 801a4bc:	4628      	mov	r0, r5
 801a4be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a4c2:	f000 beb0 	b.w	801b226 <__malloc_unlock>
 801a4c6:	42a3      	cmp	r3, r4
 801a4c8:	d90c      	bls.n	801a4e4 <_free_r+0x4c>
 801a4ca:	6821      	ldr	r1, [r4, #0]
 801a4cc:	1862      	adds	r2, r4, r1
 801a4ce:	4293      	cmp	r3, r2
 801a4d0:	bf04      	itt	eq
 801a4d2:	681a      	ldreq	r2, [r3, #0]
 801a4d4:	685b      	ldreq	r3, [r3, #4]
 801a4d6:	6063      	str	r3, [r4, #4]
 801a4d8:	bf04      	itt	eq
 801a4da:	1852      	addeq	r2, r2, r1
 801a4dc:	6022      	streq	r2, [r4, #0]
 801a4de:	6004      	str	r4, [r0, #0]
 801a4e0:	e7ec      	b.n	801a4bc <_free_r+0x24>
 801a4e2:	4613      	mov	r3, r2
 801a4e4:	685a      	ldr	r2, [r3, #4]
 801a4e6:	b10a      	cbz	r2, 801a4ec <_free_r+0x54>
 801a4e8:	42a2      	cmp	r2, r4
 801a4ea:	d9fa      	bls.n	801a4e2 <_free_r+0x4a>
 801a4ec:	6819      	ldr	r1, [r3, #0]
 801a4ee:	1858      	adds	r0, r3, r1
 801a4f0:	42a0      	cmp	r0, r4
 801a4f2:	d10b      	bne.n	801a50c <_free_r+0x74>
 801a4f4:	6820      	ldr	r0, [r4, #0]
 801a4f6:	4401      	add	r1, r0
 801a4f8:	1858      	adds	r0, r3, r1
 801a4fa:	4282      	cmp	r2, r0
 801a4fc:	6019      	str	r1, [r3, #0]
 801a4fe:	d1dd      	bne.n	801a4bc <_free_r+0x24>
 801a500:	6810      	ldr	r0, [r2, #0]
 801a502:	6852      	ldr	r2, [r2, #4]
 801a504:	605a      	str	r2, [r3, #4]
 801a506:	4401      	add	r1, r0
 801a508:	6019      	str	r1, [r3, #0]
 801a50a:	e7d7      	b.n	801a4bc <_free_r+0x24>
 801a50c:	d902      	bls.n	801a514 <_free_r+0x7c>
 801a50e:	230c      	movs	r3, #12
 801a510:	602b      	str	r3, [r5, #0]
 801a512:	e7d3      	b.n	801a4bc <_free_r+0x24>
 801a514:	6820      	ldr	r0, [r4, #0]
 801a516:	1821      	adds	r1, r4, r0
 801a518:	428a      	cmp	r2, r1
 801a51a:	bf04      	itt	eq
 801a51c:	6811      	ldreq	r1, [r2, #0]
 801a51e:	6852      	ldreq	r2, [r2, #4]
 801a520:	6062      	str	r2, [r4, #4]
 801a522:	bf04      	itt	eq
 801a524:	1809      	addeq	r1, r1, r0
 801a526:	6021      	streq	r1, [r4, #0]
 801a528:	605c      	str	r4, [r3, #4]
 801a52a:	e7c7      	b.n	801a4bc <_free_r+0x24>
 801a52c:	bd38      	pop	{r3, r4, r5, pc}
 801a52e:	bf00      	nop
 801a530:	200121c8 	.word	0x200121c8

0801a534 <_malloc_r>:
 801a534:	b570      	push	{r4, r5, r6, lr}
 801a536:	1ccd      	adds	r5, r1, #3
 801a538:	f025 0503 	bic.w	r5, r5, #3
 801a53c:	3508      	adds	r5, #8
 801a53e:	2d0c      	cmp	r5, #12
 801a540:	bf38      	it	cc
 801a542:	250c      	movcc	r5, #12
 801a544:	2d00      	cmp	r5, #0
 801a546:	4606      	mov	r6, r0
 801a548:	db01      	blt.n	801a54e <_malloc_r+0x1a>
 801a54a:	42a9      	cmp	r1, r5
 801a54c:	d903      	bls.n	801a556 <_malloc_r+0x22>
 801a54e:	230c      	movs	r3, #12
 801a550:	6033      	str	r3, [r6, #0]
 801a552:	2000      	movs	r0, #0
 801a554:	bd70      	pop	{r4, r5, r6, pc}
 801a556:	f000 fe65 	bl	801b224 <__malloc_lock>
 801a55a:	4a21      	ldr	r2, [pc, #132]	; (801a5e0 <_malloc_r+0xac>)
 801a55c:	6814      	ldr	r4, [r2, #0]
 801a55e:	4621      	mov	r1, r4
 801a560:	b991      	cbnz	r1, 801a588 <_malloc_r+0x54>
 801a562:	4c20      	ldr	r4, [pc, #128]	; (801a5e4 <_malloc_r+0xb0>)
 801a564:	6823      	ldr	r3, [r4, #0]
 801a566:	b91b      	cbnz	r3, 801a570 <_malloc_r+0x3c>
 801a568:	4630      	mov	r0, r6
 801a56a:	f000 fb05 	bl	801ab78 <_sbrk_r>
 801a56e:	6020      	str	r0, [r4, #0]
 801a570:	4629      	mov	r1, r5
 801a572:	4630      	mov	r0, r6
 801a574:	f000 fb00 	bl	801ab78 <_sbrk_r>
 801a578:	1c43      	adds	r3, r0, #1
 801a57a:	d124      	bne.n	801a5c6 <_malloc_r+0x92>
 801a57c:	230c      	movs	r3, #12
 801a57e:	6033      	str	r3, [r6, #0]
 801a580:	4630      	mov	r0, r6
 801a582:	f000 fe50 	bl	801b226 <__malloc_unlock>
 801a586:	e7e4      	b.n	801a552 <_malloc_r+0x1e>
 801a588:	680b      	ldr	r3, [r1, #0]
 801a58a:	1b5b      	subs	r3, r3, r5
 801a58c:	d418      	bmi.n	801a5c0 <_malloc_r+0x8c>
 801a58e:	2b0b      	cmp	r3, #11
 801a590:	d90f      	bls.n	801a5b2 <_malloc_r+0x7e>
 801a592:	600b      	str	r3, [r1, #0]
 801a594:	50cd      	str	r5, [r1, r3]
 801a596:	18cc      	adds	r4, r1, r3
 801a598:	4630      	mov	r0, r6
 801a59a:	f000 fe44 	bl	801b226 <__malloc_unlock>
 801a59e:	f104 000b 	add.w	r0, r4, #11
 801a5a2:	1d23      	adds	r3, r4, #4
 801a5a4:	f020 0007 	bic.w	r0, r0, #7
 801a5a8:	1ac3      	subs	r3, r0, r3
 801a5aa:	d0d3      	beq.n	801a554 <_malloc_r+0x20>
 801a5ac:	425a      	negs	r2, r3
 801a5ae:	50e2      	str	r2, [r4, r3]
 801a5b0:	e7d0      	b.n	801a554 <_malloc_r+0x20>
 801a5b2:	428c      	cmp	r4, r1
 801a5b4:	684b      	ldr	r3, [r1, #4]
 801a5b6:	bf16      	itet	ne
 801a5b8:	6063      	strne	r3, [r4, #4]
 801a5ba:	6013      	streq	r3, [r2, #0]
 801a5bc:	460c      	movne	r4, r1
 801a5be:	e7eb      	b.n	801a598 <_malloc_r+0x64>
 801a5c0:	460c      	mov	r4, r1
 801a5c2:	6849      	ldr	r1, [r1, #4]
 801a5c4:	e7cc      	b.n	801a560 <_malloc_r+0x2c>
 801a5c6:	1cc4      	adds	r4, r0, #3
 801a5c8:	f024 0403 	bic.w	r4, r4, #3
 801a5cc:	42a0      	cmp	r0, r4
 801a5ce:	d005      	beq.n	801a5dc <_malloc_r+0xa8>
 801a5d0:	1a21      	subs	r1, r4, r0
 801a5d2:	4630      	mov	r0, r6
 801a5d4:	f000 fad0 	bl	801ab78 <_sbrk_r>
 801a5d8:	3001      	adds	r0, #1
 801a5da:	d0cf      	beq.n	801a57c <_malloc_r+0x48>
 801a5dc:	6025      	str	r5, [r4, #0]
 801a5de:	e7db      	b.n	801a598 <_malloc_r+0x64>
 801a5e0:	200121c8 	.word	0x200121c8
 801a5e4:	200121cc 	.word	0x200121cc

0801a5e8 <__sfputc_r>:
 801a5e8:	6893      	ldr	r3, [r2, #8]
 801a5ea:	3b01      	subs	r3, #1
 801a5ec:	2b00      	cmp	r3, #0
 801a5ee:	b410      	push	{r4}
 801a5f0:	6093      	str	r3, [r2, #8]
 801a5f2:	da08      	bge.n	801a606 <__sfputc_r+0x1e>
 801a5f4:	6994      	ldr	r4, [r2, #24]
 801a5f6:	42a3      	cmp	r3, r4
 801a5f8:	db01      	blt.n	801a5fe <__sfputc_r+0x16>
 801a5fa:	290a      	cmp	r1, #10
 801a5fc:	d103      	bne.n	801a606 <__sfputc_r+0x1e>
 801a5fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a602:	f000 bb0d 	b.w	801ac20 <__swbuf_r>
 801a606:	6813      	ldr	r3, [r2, #0]
 801a608:	1c58      	adds	r0, r3, #1
 801a60a:	6010      	str	r0, [r2, #0]
 801a60c:	7019      	strb	r1, [r3, #0]
 801a60e:	4608      	mov	r0, r1
 801a610:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a614:	4770      	bx	lr

0801a616 <__sfputs_r>:
 801a616:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a618:	4606      	mov	r6, r0
 801a61a:	460f      	mov	r7, r1
 801a61c:	4614      	mov	r4, r2
 801a61e:	18d5      	adds	r5, r2, r3
 801a620:	42ac      	cmp	r4, r5
 801a622:	d101      	bne.n	801a628 <__sfputs_r+0x12>
 801a624:	2000      	movs	r0, #0
 801a626:	e007      	b.n	801a638 <__sfputs_r+0x22>
 801a628:	463a      	mov	r2, r7
 801a62a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a62e:	4630      	mov	r0, r6
 801a630:	f7ff ffda 	bl	801a5e8 <__sfputc_r>
 801a634:	1c43      	adds	r3, r0, #1
 801a636:	d1f3      	bne.n	801a620 <__sfputs_r+0xa>
 801a638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801a63c <_vfiprintf_r>:
 801a63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a640:	460c      	mov	r4, r1
 801a642:	b09d      	sub	sp, #116	; 0x74
 801a644:	4617      	mov	r7, r2
 801a646:	461d      	mov	r5, r3
 801a648:	4606      	mov	r6, r0
 801a64a:	b118      	cbz	r0, 801a654 <_vfiprintf_r+0x18>
 801a64c:	6983      	ldr	r3, [r0, #24]
 801a64e:	b90b      	cbnz	r3, 801a654 <_vfiprintf_r+0x18>
 801a650:	f000 fcfa 	bl	801b048 <__sinit>
 801a654:	4b7c      	ldr	r3, [pc, #496]	; (801a848 <_vfiprintf_r+0x20c>)
 801a656:	429c      	cmp	r4, r3
 801a658:	d158      	bne.n	801a70c <_vfiprintf_r+0xd0>
 801a65a:	6874      	ldr	r4, [r6, #4]
 801a65c:	89a3      	ldrh	r3, [r4, #12]
 801a65e:	0718      	lsls	r0, r3, #28
 801a660:	d55e      	bpl.n	801a720 <_vfiprintf_r+0xe4>
 801a662:	6923      	ldr	r3, [r4, #16]
 801a664:	2b00      	cmp	r3, #0
 801a666:	d05b      	beq.n	801a720 <_vfiprintf_r+0xe4>
 801a668:	2300      	movs	r3, #0
 801a66a:	9309      	str	r3, [sp, #36]	; 0x24
 801a66c:	2320      	movs	r3, #32
 801a66e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801a672:	2330      	movs	r3, #48	; 0x30
 801a674:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801a678:	9503      	str	r5, [sp, #12]
 801a67a:	f04f 0b01 	mov.w	fp, #1
 801a67e:	46b8      	mov	r8, r7
 801a680:	4645      	mov	r5, r8
 801a682:	f815 3b01 	ldrb.w	r3, [r5], #1
 801a686:	b10b      	cbz	r3, 801a68c <_vfiprintf_r+0x50>
 801a688:	2b25      	cmp	r3, #37	; 0x25
 801a68a:	d154      	bne.n	801a736 <_vfiprintf_r+0xfa>
 801a68c:	ebb8 0a07 	subs.w	sl, r8, r7
 801a690:	d00b      	beq.n	801a6aa <_vfiprintf_r+0x6e>
 801a692:	4653      	mov	r3, sl
 801a694:	463a      	mov	r2, r7
 801a696:	4621      	mov	r1, r4
 801a698:	4630      	mov	r0, r6
 801a69a:	f7ff ffbc 	bl	801a616 <__sfputs_r>
 801a69e:	3001      	adds	r0, #1
 801a6a0:	f000 80c2 	beq.w	801a828 <_vfiprintf_r+0x1ec>
 801a6a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a6a6:	4453      	add	r3, sl
 801a6a8:	9309      	str	r3, [sp, #36]	; 0x24
 801a6aa:	f898 3000 	ldrb.w	r3, [r8]
 801a6ae:	2b00      	cmp	r3, #0
 801a6b0:	f000 80ba 	beq.w	801a828 <_vfiprintf_r+0x1ec>
 801a6b4:	2300      	movs	r3, #0
 801a6b6:	f04f 32ff 	mov.w	r2, #4294967295
 801a6ba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801a6be:	9304      	str	r3, [sp, #16]
 801a6c0:	9307      	str	r3, [sp, #28]
 801a6c2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801a6c6:	931a      	str	r3, [sp, #104]	; 0x68
 801a6c8:	46a8      	mov	r8, r5
 801a6ca:	2205      	movs	r2, #5
 801a6cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 801a6d0:	485e      	ldr	r0, [pc, #376]	; (801a84c <_vfiprintf_r+0x210>)
 801a6d2:	f7e5 fd8d 	bl	80001f0 <memchr>
 801a6d6:	9b04      	ldr	r3, [sp, #16]
 801a6d8:	bb78      	cbnz	r0, 801a73a <_vfiprintf_r+0xfe>
 801a6da:	06d9      	lsls	r1, r3, #27
 801a6dc:	bf44      	itt	mi
 801a6de:	2220      	movmi	r2, #32
 801a6e0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801a6e4:	071a      	lsls	r2, r3, #28
 801a6e6:	bf44      	itt	mi
 801a6e8:	222b      	movmi	r2, #43	; 0x2b
 801a6ea:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801a6ee:	782a      	ldrb	r2, [r5, #0]
 801a6f0:	2a2a      	cmp	r2, #42	; 0x2a
 801a6f2:	d02a      	beq.n	801a74a <_vfiprintf_r+0x10e>
 801a6f4:	9a07      	ldr	r2, [sp, #28]
 801a6f6:	46a8      	mov	r8, r5
 801a6f8:	2000      	movs	r0, #0
 801a6fa:	250a      	movs	r5, #10
 801a6fc:	4641      	mov	r1, r8
 801a6fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a702:	3b30      	subs	r3, #48	; 0x30
 801a704:	2b09      	cmp	r3, #9
 801a706:	d969      	bls.n	801a7dc <_vfiprintf_r+0x1a0>
 801a708:	b360      	cbz	r0, 801a764 <_vfiprintf_r+0x128>
 801a70a:	e024      	b.n	801a756 <_vfiprintf_r+0x11a>
 801a70c:	4b50      	ldr	r3, [pc, #320]	; (801a850 <_vfiprintf_r+0x214>)
 801a70e:	429c      	cmp	r4, r3
 801a710:	d101      	bne.n	801a716 <_vfiprintf_r+0xda>
 801a712:	68b4      	ldr	r4, [r6, #8]
 801a714:	e7a2      	b.n	801a65c <_vfiprintf_r+0x20>
 801a716:	4b4f      	ldr	r3, [pc, #316]	; (801a854 <_vfiprintf_r+0x218>)
 801a718:	429c      	cmp	r4, r3
 801a71a:	bf08      	it	eq
 801a71c:	68f4      	ldreq	r4, [r6, #12]
 801a71e:	e79d      	b.n	801a65c <_vfiprintf_r+0x20>
 801a720:	4621      	mov	r1, r4
 801a722:	4630      	mov	r0, r6
 801a724:	f000 face 	bl	801acc4 <__swsetup_r>
 801a728:	2800      	cmp	r0, #0
 801a72a:	d09d      	beq.n	801a668 <_vfiprintf_r+0x2c>
 801a72c:	f04f 30ff 	mov.w	r0, #4294967295
 801a730:	b01d      	add	sp, #116	; 0x74
 801a732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a736:	46a8      	mov	r8, r5
 801a738:	e7a2      	b.n	801a680 <_vfiprintf_r+0x44>
 801a73a:	4a44      	ldr	r2, [pc, #272]	; (801a84c <_vfiprintf_r+0x210>)
 801a73c:	1a80      	subs	r0, r0, r2
 801a73e:	fa0b f000 	lsl.w	r0, fp, r0
 801a742:	4318      	orrs	r0, r3
 801a744:	9004      	str	r0, [sp, #16]
 801a746:	4645      	mov	r5, r8
 801a748:	e7be      	b.n	801a6c8 <_vfiprintf_r+0x8c>
 801a74a:	9a03      	ldr	r2, [sp, #12]
 801a74c:	1d11      	adds	r1, r2, #4
 801a74e:	6812      	ldr	r2, [r2, #0]
 801a750:	9103      	str	r1, [sp, #12]
 801a752:	2a00      	cmp	r2, #0
 801a754:	db01      	blt.n	801a75a <_vfiprintf_r+0x11e>
 801a756:	9207      	str	r2, [sp, #28]
 801a758:	e004      	b.n	801a764 <_vfiprintf_r+0x128>
 801a75a:	4252      	negs	r2, r2
 801a75c:	f043 0302 	orr.w	r3, r3, #2
 801a760:	9207      	str	r2, [sp, #28]
 801a762:	9304      	str	r3, [sp, #16]
 801a764:	f898 3000 	ldrb.w	r3, [r8]
 801a768:	2b2e      	cmp	r3, #46	; 0x2e
 801a76a:	d10e      	bne.n	801a78a <_vfiprintf_r+0x14e>
 801a76c:	f898 3001 	ldrb.w	r3, [r8, #1]
 801a770:	2b2a      	cmp	r3, #42	; 0x2a
 801a772:	d138      	bne.n	801a7e6 <_vfiprintf_r+0x1aa>
 801a774:	9b03      	ldr	r3, [sp, #12]
 801a776:	1d1a      	adds	r2, r3, #4
 801a778:	681b      	ldr	r3, [r3, #0]
 801a77a:	9203      	str	r2, [sp, #12]
 801a77c:	2b00      	cmp	r3, #0
 801a77e:	bfb8      	it	lt
 801a780:	f04f 33ff 	movlt.w	r3, #4294967295
 801a784:	f108 0802 	add.w	r8, r8, #2
 801a788:	9305      	str	r3, [sp, #20]
 801a78a:	4d33      	ldr	r5, [pc, #204]	; (801a858 <_vfiprintf_r+0x21c>)
 801a78c:	f898 1000 	ldrb.w	r1, [r8]
 801a790:	2203      	movs	r2, #3
 801a792:	4628      	mov	r0, r5
 801a794:	f7e5 fd2c 	bl	80001f0 <memchr>
 801a798:	b140      	cbz	r0, 801a7ac <_vfiprintf_r+0x170>
 801a79a:	2340      	movs	r3, #64	; 0x40
 801a79c:	1b40      	subs	r0, r0, r5
 801a79e:	fa03 f000 	lsl.w	r0, r3, r0
 801a7a2:	9b04      	ldr	r3, [sp, #16]
 801a7a4:	4303      	orrs	r3, r0
 801a7a6:	f108 0801 	add.w	r8, r8, #1
 801a7aa:	9304      	str	r3, [sp, #16]
 801a7ac:	f898 1000 	ldrb.w	r1, [r8]
 801a7b0:	482a      	ldr	r0, [pc, #168]	; (801a85c <_vfiprintf_r+0x220>)
 801a7b2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801a7b6:	2206      	movs	r2, #6
 801a7b8:	f108 0701 	add.w	r7, r8, #1
 801a7bc:	f7e5 fd18 	bl	80001f0 <memchr>
 801a7c0:	2800      	cmp	r0, #0
 801a7c2:	d037      	beq.n	801a834 <_vfiprintf_r+0x1f8>
 801a7c4:	4b26      	ldr	r3, [pc, #152]	; (801a860 <_vfiprintf_r+0x224>)
 801a7c6:	bb1b      	cbnz	r3, 801a810 <_vfiprintf_r+0x1d4>
 801a7c8:	9b03      	ldr	r3, [sp, #12]
 801a7ca:	3307      	adds	r3, #7
 801a7cc:	f023 0307 	bic.w	r3, r3, #7
 801a7d0:	3308      	adds	r3, #8
 801a7d2:	9303      	str	r3, [sp, #12]
 801a7d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7d6:	444b      	add	r3, r9
 801a7d8:	9309      	str	r3, [sp, #36]	; 0x24
 801a7da:	e750      	b.n	801a67e <_vfiprintf_r+0x42>
 801a7dc:	fb05 3202 	mla	r2, r5, r2, r3
 801a7e0:	2001      	movs	r0, #1
 801a7e2:	4688      	mov	r8, r1
 801a7e4:	e78a      	b.n	801a6fc <_vfiprintf_r+0xc0>
 801a7e6:	2300      	movs	r3, #0
 801a7e8:	f108 0801 	add.w	r8, r8, #1
 801a7ec:	9305      	str	r3, [sp, #20]
 801a7ee:	4619      	mov	r1, r3
 801a7f0:	250a      	movs	r5, #10
 801a7f2:	4640      	mov	r0, r8
 801a7f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 801a7f8:	3a30      	subs	r2, #48	; 0x30
 801a7fa:	2a09      	cmp	r2, #9
 801a7fc:	d903      	bls.n	801a806 <_vfiprintf_r+0x1ca>
 801a7fe:	2b00      	cmp	r3, #0
 801a800:	d0c3      	beq.n	801a78a <_vfiprintf_r+0x14e>
 801a802:	9105      	str	r1, [sp, #20]
 801a804:	e7c1      	b.n	801a78a <_vfiprintf_r+0x14e>
 801a806:	fb05 2101 	mla	r1, r5, r1, r2
 801a80a:	2301      	movs	r3, #1
 801a80c:	4680      	mov	r8, r0
 801a80e:	e7f0      	b.n	801a7f2 <_vfiprintf_r+0x1b6>
 801a810:	ab03      	add	r3, sp, #12
 801a812:	9300      	str	r3, [sp, #0]
 801a814:	4622      	mov	r2, r4
 801a816:	4b13      	ldr	r3, [pc, #76]	; (801a864 <_vfiprintf_r+0x228>)
 801a818:	a904      	add	r1, sp, #16
 801a81a:	4630      	mov	r0, r6
 801a81c:	f3af 8000 	nop.w
 801a820:	f1b0 3fff 	cmp.w	r0, #4294967295
 801a824:	4681      	mov	r9, r0
 801a826:	d1d5      	bne.n	801a7d4 <_vfiprintf_r+0x198>
 801a828:	89a3      	ldrh	r3, [r4, #12]
 801a82a:	065b      	lsls	r3, r3, #25
 801a82c:	f53f af7e 	bmi.w	801a72c <_vfiprintf_r+0xf0>
 801a830:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a832:	e77d      	b.n	801a730 <_vfiprintf_r+0xf4>
 801a834:	ab03      	add	r3, sp, #12
 801a836:	9300      	str	r3, [sp, #0]
 801a838:	4622      	mov	r2, r4
 801a83a:	4b0a      	ldr	r3, [pc, #40]	; (801a864 <_vfiprintf_r+0x228>)
 801a83c:	a904      	add	r1, sp, #16
 801a83e:	4630      	mov	r0, r6
 801a840:	f000 f888 	bl	801a954 <_printf_i>
 801a844:	e7ec      	b.n	801a820 <_vfiprintf_r+0x1e4>
 801a846:	bf00      	nop
 801a848:	0801e710 	.word	0x0801e710
 801a84c:	0801e6b8 	.word	0x0801e6b8
 801a850:	0801e730 	.word	0x0801e730
 801a854:	0801e6f0 	.word	0x0801e6f0
 801a858:	0801e6be 	.word	0x0801e6be
 801a85c:	0801e6c2 	.word	0x0801e6c2
 801a860:	00000000 	.word	0x00000000
 801a864:	0801a617 	.word	0x0801a617

0801a868 <_printf_common>:
 801a868:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a86c:	4691      	mov	r9, r2
 801a86e:	461f      	mov	r7, r3
 801a870:	688a      	ldr	r2, [r1, #8]
 801a872:	690b      	ldr	r3, [r1, #16]
 801a874:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801a878:	4293      	cmp	r3, r2
 801a87a:	bfb8      	it	lt
 801a87c:	4613      	movlt	r3, r2
 801a87e:	f8c9 3000 	str.w	r3, [r9]
 801a882:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801a886:	4606      	mov	r6, r0
 801a888:	460c      	mov	r4, r1
 801a88a:	b112      	cbz	r2, 801a892 <_printf_common+0x2a>
 801a88c:	3301      	adds	r3, #1
 801a88e:	f8c9 3000 	str.w	r3, [r9]
 801a892:	6823      	ldr	r3, [r4, #0]
 801a894:	0699      	lsls	r1, r3, #26
 801a896:	bf42      	ittt	mi
 801a898:	f8d9 3000 	ldrmi.w	r3, [r9]
 801a89c:	3302      	addmi	r3, #2
 801a89e:	f8c9 3000 	strmi.w	r3, [r9]
 801a8a2:	6825      	ldr	r5, [r4, #0]
 801a8a4:	f015 0506 	ands.w	r5, r5, #6
 801a8a8:	d107      	bne.n	801a8ba <_printf_common+0x52>
 801a8aa:	f104 0a19 	add.w	sl, r4, #25
 801a8ae:	68e3      	ldr	r3, [r4, #12]
 801a8b0:	f8d9 2000 	ldr.w	r2, [r9]
 801a8b4:	1a9b      	subs	r3, r3, r2
 801a8b6:	42ab      	cmp	r3, r5
 801a8b8:	dc28      	bgt.n	801a90c <_printf_common+0xa4>
 801a8ba:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801a8be:	6822      	ldr	r2, [r4, #0]
 801a8c0:	3300      	adds	r3, #0
 801a8c2:	bf18      	it	ne
 801a8c4:	2301      	movne	r3, #1
 801a8c6:	0692      	lsls	r2, r2, #26
 801a8c8:	d42d      	bmi.n	801a926 <_printf_common+0xbe>
 801a8ca:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a8ce:	4639      	mov	r1, r7
 801a8d0:	4630      	mov	r0, r6
 801a8d2:	47c0      	blx	r8
 801a8d4:	3001      	adds	r0, #1
 801a8d6:	d020      	beq.n	801a91a <_printf_common+0xb2>
 801a8d8:	6823      	ldr	r3, [r4, #0]
 801a8da:	68e5      	ldr	r5, [r4, #12]
 801a8dc:	f8d9 2000 	ldr.w	r2, [r9]
 801a8e0:	f003 0306 	and.w	r3, r3, #6
 801a8e4:	2b04      	cmp	r3, #4
 801a8e6:	bf08      	it	eq
 801a8e8:	1aad      	subeq	r5, r5, r2
 801a8ea:	68a3      	ldr	r3, [r4, #8]
 801a8ec:	6922      	ldr	r2, [r4, #16]
 801a8ee:	bf0c      	ite	eq
 801a8f0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a8f4:	2500      	movne	r5, #0
 801a8f6:	4293      	cmp	r3, r2
 801a8f8:	bfc4      	itt	gt
 801a8fa:	1a9b      	subgt	r3, r3, r2
 801a8fc:	18ed      	addgt	r5, r5, r3
 801a8fe:	f04f 0900 	mov.w	r9, #0
 801a902:	341a      	adds	r4, #26
 801a904:	454d      	cmp	r5, r9
 801a906:	d11a      	bne.n	801a93e <_printf_common+0xd6>
 801a908:	2000      	movs	r0, #0
 801a90a:	e008      	b.n	801a91e <_printf_common+0xb6>
 801a90c:	2301      	movs	r3, #1
 801a90e:	4652      	mov	r2, sl
 801a910:	4639      	mov	r1, r7
 801a912:	4630      	mov	r0, r6
 801a914:	47c0      	blx	r8
 801a916:	3001      	adds	r0, #1
 801a918:	d103      	bne.n	801a922 <_printf_common+0xba>
 801a91a:	f04f 30ff 	mov.w	r0, #4294967295
 801a91e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a922:	3501      	adds	r5, #1
 801a924:	e7c3      	b.n	801a8ae <_printf_common+0x46>
 801a926:	18e1      	adds	r1, r4, r3
 801a928:	1c5a      	adds	r2, r3, #1
 801a92a:	2030      	movs	r0, #48	; 0x30
 801a92c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a930:	4422      	add	r2, r4
 801a932:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a936:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a93a:	3302      	adds	r3, #2
 801a93c:	e7c5      	b.n	801a8ca <_printf_common+0x62>
 801a93e:	2301      	movs	r3, #1
 801a940:	4622      	mov	r2, r4
 801a942:	4639      	mov	r1, r7
 801a944:	4630      	mov	r0, r6
 801a946:	47c0      	blx	r8
 801a948:	3001      	adds	r0, #1
 801a94a:	d0e6      	beq.n	801a91a <_printf_common+0xb2>
 801a94c:	f109 0901 	add.w	r9, r9, #1
 801a950:	e7d8      	b.n	801a904 <_printf_common+0x9c>
	...

0801a954 <_printf_i>:
 801a954:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a958:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801a95c:	460c      	mov	r4, r1
 801a95e:	7e09      	ldrb	r1, [r1, #24]
 801a960:	b085      	sub	sp, #20
 801a962:	296e      	cmp	r1, #110	; 0x6e
 801a964:	4617      	mov	r7, r2
 801a966:	4606      	mov	r6, r0
 801a968:	4698      	mov	r8, r3
 801a96a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a96c:	f000 80b3 	beq.w	801aad6 <_printf_i+0x182>
 801a970:	d822      	bhi.n	801a9b8 <_printf_i+0x64>
 801a972:	2963      	cmp	r1, #99	; 0x63
 801a974:	d036      	beq.n	801a9e4 <_printf_i+0x90>
 801a976:	d80a      	bhi.n	801a98e <_printf_i+0x3a>
 801a978:	2900      	cmp	r1, #0
 801a97a:	f000 80b9 	beq.w	801aaf0 <_printf_i+0x19c>
 801a97e:	2958      	cmp	r1, #88	; 0x58
 801a980:	f000 8083 	beq.w	801aa8a <_printf_i+0x136>
 801a984:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a988:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801a98c:	e032      	b.n	801a9f4 <_printf_i+0xa0>
 801a98e:	2964      	cmp	r1, #100	; 0x64
 801a990:	d001      	beq.n	801a996 <_printf_i+0x42>
 801a992:	2969      	cmp	r1, #105	; 0x69
 801a994:	d1f6      	bne.n	801a984 <_printf_i+0x30>
 801a996:	6820      	ldr	r0, [r4, #0]
 801a998:	6813      	ldr	r3, [r2, #0]
 801a99a:	0605      	lsls	r5, r0, #24
 801a99c:	f103 0104 	add.w	r1, r3, #4
 801a9a0:	d52a      	bpl.n	801a9f8 <_printf_i+0xa4>
 801a9a2:	681b      	ldr	r3, [r3, #0]
 801a9a4:	6011      	str	r1, [r2, #0]
 801a9a6:	2b00      	cmp	r3, #0
 801a9a8:	da03      	bge.n	801a9b2 <_printf_i+0x5e>
 801a9aa:	222d      	movs	r2, #45	; 0x2d
 801a9ac:	425b      	negs	r3, r3
 801a9ae:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801a9b2:	486f      	ldr	r0, [pc, #444]	; (801ab70 <_printf_i+0x21c>)
 801a9b4:	220a      	movs	r2, #10
 801a9b6:	e039      	b.n	801aa2c <_printf_i+0xd8>
 801a9b8:	2973      	cmp	r1, #115	; 0x73
 801a9ba:	f000 809d 	beq.w	801aaf8 <_printf_i+0x1a4>
 801a9be:	d808      	bhi.n	801a9d2 <_printf_i+0x7e>
 801a9c0:	296f      	cmp	r1, #111	; 0x6f
 801a9c2:	d020      	beq.n	801aa06 <_printf_i+0xb2>
 801a9c4:	2970      	cmp	r1, #112	; 0x70
 801a9c6:	d1dd      	bne.n	801a984 <_printf_i+0x30>
 801a9c8:	6823      	ldr	r3, [r4, #0]
 801a9ca:	f043 0320 	orr.w	r3, r3, #32
 801a9ce:	6023      	str	r3, [r4, #0]
 801a9d0:	e003      	b.n	801a9da <_printf_i+0x86>
 801a9d2:	2975      	cmp	r1, #117	; 0x75
 801a9d4:	d017      	beq.n	801aa06 <_printf_i+0xb2>
 801a9d6:	2978      	cmp	r1, #120	; 0x78
 801a9d8:	d1d4      	bne.n	801a984 <_printf_i+0x30>
 801a9da:	2378      	movs	r3, #120	; 0x78
 801a9dc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801a9e0:	4864      	ldr	r0, [pc, #400]	; (801ab74 <_printf_i+0x220>)
 801a9e2:	e055      	b.n	801aa90 <_printf_i+0x13c>
 801a9e4:	6813      	ldr	r3, [r2, #0]
 801a9e6:	1d19      	adds	r1, r3, #4
 801a9e8:	681b      	ldr	r3, [r3, #0]
 801a9ea:	6011      	str	r1, [r2, #0]
 801a9ec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a9f0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a9f4:	2301      	movs	r3, #1
 801a9f6:	e08c      	b.n	801ab12 <_printf_i+0x1be>
 801a9f8:	681b      	ldr	r3, [r3, #0]
 801a9fa:	6011      	str	r1, [r2, #0]
 801a9fc:	f010 0f40 	tst.w	r0, #64	; 0x40
 801aa00:	bf18      	it	ne
 801aa02:	b21b      	sxthne	r3, r3
 801aa04:	e7cf      	b.n	801a9a6 <_printf_i+0x52>
 801aa06:	6813      	ldr	r3, [r2, #0]
 801aa08:	6825      	ldr	r5, [r4, #0]
 801aa0a:	1d18      	adds	r0, r3, #4
 801aa0c:	6010      	str	r0, [r2, #0]
 801aa0e:	0628      	lsls	r0, r5, #24
 801aa10:	d501      	bpl.n	801aa16 <_printf_i+0xc2>
 801aa12:	681b      	ldr	r3, [r3, #0]
 801aa14:	e002      	b.n	801aa1c <_printf_i+0xc8>
 801aa16:	0668      	lsls	r0, r5, #25
 801aa18:	d5fb      	bpl.n	801aa12 <_printf_i+0xbe>
 801aa1a:	881b      	ldrh	r3, [r3, #0]
 801aa1c:	4854      	ldr	r0, [pc, #336]	; (801ab70 <_printf_i+0x21c>)
 801aa1e:	296f      	cmp	r1, #111	; 0x6f
 801aa20:	bf14      	ite	ne
 801aa22:	220a      	movne	r2, #10
 801aa24:	2208      	moveq	r2, #8
 801aa26:	2100      	movs	r1, #0
 801aa28:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801aa2c:	6865      	ldr	r5, [r4, #4]
 801aa2e:	60a5      	str	r5, [r4, #8]
 801aa30:	2d00      	cmp	r5, #0
 801aa32:	f2c0 8095 	blt.w	801ab60 <_printf_i+0x20c>
 801aa36:	6821      	ldr	r1, [r4, #0]
 801aa38:	f021 0104 	bic.w	r1, r1, #4
 801aa3c:	6021      	str	r1, [r4, #0]
 801aa3e:	2b00      	cmp	r3, #0
 801aa40:	d13d      	bne.n	801aabe <_printf_i+0x16a>
 801aa42:	2d00      	cmp	r5, #0
 801aa44:	f040 808e 	bne.w	801ab64 <_printf_i+0x210>
 801aa48:	4665      	mov	r5, ip
 801aa4a:	2a08      	cmp	r2, #8
 801aa4c:	d10b      	bne.n	801aa66 <_printf_i+0x112>
 801aa4e:	6823      	ldr	r3, [r4, #0]
 801aa50:	07db      	lsls	r3, r3, #31
 801aa52:	d508      	bpl.n	801aa66 <_printf_i+0x112>
 801aa54:	6923      	ldr	r3, [r4, #16]
 801aa56:	6862      	ldr	r2, [r4, #4]
 801aa58:	429a      	cmp	r2, r3
 801aa5a:	bfde      	ittt	le
 801aa5c:	2330      	movle	r3, #48	; 0x30
 801aa5e:	f805 3c01 	strble.w	r3, [r5, #-1]
 801aa62:	f105 35ff 	addle.w	r5, r5, #4294967295
 801aa66:	ebac 0305 	sub.w	r3, ip, r5
 801aa6a:	6123      	str	r3, [r4, #16]
 801aa6c:	f8cd 8000 	str.w	r8, [sp]
 801aa70:	463b      	mov	r3, r7
 801aa72:	aa03      	add	r2, sp, #12
 801aa74:	4621      	mov	r1, r4
 801aa76:	4630      	mov	r0, r6
 801aa78:	f7ff fef6 	bl	801a868 <_printf_common>
 801aa7c:	3001      	adds	r0, #1
 801aa7e:	d14d      	bne.n	801ab1c <_printf_i+0x1c8>
 801aa80:	f04f 30ff 	mov.w	r0, #4294967295
 801aa84:	b005      	add	sp, #20
 801aa86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801aa8a:	4839      	ldr	r0, [pc, #228]	; (801ab70 <_printf_i+0x21c>)
 801aa8c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801aa90:	6813      	ldr	r3, [r2, #0]
 801aa92:	6821      	ldr	r1, [r4, #0]
 801aa94:	1d1d      	adds	r5, r3, #4
 801aa96:	681b      	ldr	r3, [r3, #0]
 801aa98:	6015      	str	r5, [r2, #0]
 801aa9a:	060a      	lsls	r2, r1, #24
 801aa9c:	d50b      	bpl.n	801aab6 <_printf_i+0x162>
 801aa9e:	07ca      	lsls	r2, r1, #31
 801aaa0:	bf44      	itt	mi
 801aaa2:	f041 0120 	orrmi.w	r1, r1, #32
 801aaa6:	6021      	strmi	r1, [r4, #0]
 801aaa8:	b91b      	cbnz	r3, 801aab2 <_printf_i+0x15e>
 801aaaa:	6822      	ldr	r2, [r4, #0]
 801aaac:	f022 0220 	bic.w	r2, r2, #32
 801aab0:	6022      	str	r2, [r4, #0]
 801aab2:	2210      	movs	r2, #16
 801aab4:	e7b7      	b.n	801aa26 <_printf_i+0xd2>
 801aab6:	064d      	lsls	r5, r1, #25
 801aab8:	bf48      	it	mi
 801aaba:	b29b      	uxthmi	r3, r3
 801aabc:	e7ef      	b.n	801aa9e <_printf_i+0x14a>
 801aabe:	4665      	mov	r5, ip
 801aac0:	fbb3 f1f2 	udiv	r1, r3, r2
 801aac4:	fb02 3311 	mls	r3, r2, r1, r3
 801aac8:	5cc3      	ldrb	r3, [r0, r3]
 801aaca:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801aace:	460b      	mov	r3, r1
 801aad0:	2900      	cmp	r1, #0
 801aad2:	d1f5      	bne.n	801aac0 <_printf_i+0x16c>
 801aad4:	e7b9      	b.n	801aa4a <_printf_i+0xf6>
 801aad6:	6813      	ldr	r3, [r2, #0]
 801aad8:	6825      	ldr	r5, [r4, #0]
 801aada:	6961      	ldr	r1, [r4, #20]
 801aadc:	1d18      	adds	r0, r3, #4
 801aade:	6010      	str	r0, [r2, #0]
 801aae0:	0628      	lsls	r0, r5, #24
 801aae2:	681b      	ldr	r3, [r3, #0]
 801aae4:	d501      	bpl.n	801aaea <_printf_i+0x196>
 801aae6:	6019      	str	r1, [r3, #0]
 801aae8:	e002      	b.n	801aaf0 <_printf_i+0x19c>
 801aaea:	066a      	lsls	r2, r5, #25
 801aaec:	d5fb      	bpl.n	801aae6 <_printf_i+0x192>
 801aaee:	8019      	strh	r1, [r3, #0]
 801aaf0:	2300      	movs	r3, #0
 801aaf2:	6123      	str	r3, [r4, #16]
 801aaf4:	4665      	mov	r5, ip
 801aaf6:	e7b9      	b.n	801aa6c <_printf_i+0x118>
 801aaf8:	6813      	ldr	r3, [r2, #0]
 801aafa:	1d19      	adds	r1, r3, #4
 801aafc:	6011      	str	r1, [r2, #0]
 801aafe:	681d      	ldr	r5, [r3, #0]
 801ab00:	6862      	ldr	r2, [r4, #4]
 801ab02:	2100      	movs	r1, #0
 801ab04:	4628      	mov	r0, r5
 801ab06:	f7e5 fb73 	bl	80001f0 <memchr>
 801ab0a:	b108      	cbz	r0, 801ab10 <_printf_i+0x1bc>
 801ab0c:	1b40      	subs	r0, r0, r5
 801ab0e:	6060      	str	r0, [r4, #4]
 801ab10:	6863      	ldr	r3, [r4, #4]
 801ab12:	6123      	str	r3, [r4, #16]
 801ab14:	2300      	movs	r3, #0
 801ab16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ab1a:	e7a7      	b.n	801aa6c <_printf_i+0x118>
 801ab1c:	6923      	ldr	r3, [r4, #16]
 801ab1e:	462a      	mov	r2, r5
 801ab20:	4639      	mov	r1, r7
 801ab22:	4630      	mov	r0, r6
 801ab24:	47c0      	blx	r8
 801ab26:	3001      	adds	r0, #1
 801ab28:	d0aa      	beq.n	801aa80 <_printf_i+0x12c>
 801ab2a:	6823      	ldr	r3, [r4, #0]
 801ab2c:	079b      	lsls	r3, r3, #30
 801ab2e:	d413      	bmi.n	801ab58 <_printf_i+0x204>
 801ab30:	68e0      	ldr	r0, [r4, #12]
 801ab32:	9b03      	ldr	r3, [sp, #12]
 801ab34:	4298      	cmp	r0, r3
 801ab36:	bfb8      	it	lt
 801ab38:	4618      	movlt	r0, r3
 801ab3a:	e7a3      	b.n	801aa84 <_printf_i+0x130>
 801ab3c:	2301      	movs	r3, #1
 801ab3e:	464a      	mov	r2, r9
 801ab40:	4639      	mov	r1, r7
 801ab42:	4630      	mov	r0, r6
 801ab44:	47c0      	blx	r8
 801ab46:	3001      	adds	r0, #1
 801ab48:	d09a      	beq.n	801aa80 <_printf_i+0x12c>
 801ab4a:	3501      	adds	r5, #1
 801ab4c:	68e3      	ldr	r3, [r4, #12]
 801ab4e:	9a03      	ldr	r2, [sp, #12]
 801ab50:	1a9b      	subs	r3, r3, r2
 801ab52:	42ab      	cmp	r3, r5
 801ab54:	dcf2      	bgt.n	801ab3c <_printf_i+0x1e8>
 801ab56:	e7eb      	b.n	801ab30 <_printf_i+0x1dc>
 801ab58:	2500      	movs	r5, #0
 801ab5a:	f104 0919 	add.w	r9, r4, #25
 801ab5e:	e7f5      	b.n	801ab4c <_printf_i+0x1f8>
 801ab60:	2b00      	cmp	r3, #0
 801ab62:	d1ac      	bne.n	801aabe <_printf_i+0x16a>
 801ab64:	7803      	ldrb	r3, [r0, #0]
 801ab66:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801ab6a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801ab6e:	e76c      	b.n	801aa4a <_printf_i+0xf6>
 801ab70:	0801e6c9 	.word	0x0801e6c9
 801ab74:	0801e6da 	.word	0x0801e6da

0801ab78 <_sbrk_r>:
 801ab78:	b538      	push	{r3, r4, r5, lr}
 801ab7a:	4c06      	ldr	r4, [pc, #24]	; (801ab94 <_sbrk_r+0x1c>)
 801ab7c:	2300      	movs	r3, #0
 801ab7e:	4605      	mov	r5, r0
 801ab80:	4608      	mov	r0, r1
 801ab82:	6023      	str	r3, [r4, #0]
 801ab84:	f7e7 fa28 	bl	8001fd8 <_sbrk>
 801ab88:	1c43      	adds	r3, r0, #1
 801ab8a:	d102      	bne.n	801ab92 <_sbrk_r+0x1a>
 801ab8c:	6823      	ldr	r3, [r4, #0]
 801ab8e:	b103      	cbz	r3, 801ab92 <_sbrk_r+0x1a>
 801ab90:	602b      	str	r3, [r5, #0]
 801ab92:	bd38      	pop	{r3, r4, r5, pc}
 801ab94:	200126f0 	.word	0x200126f0

0801ab98 <_raise_r>:
 801ab98:	291f      	cmp	r1, #31
 801ab9a:	b538      	push	{r3, r4, r5, lr}
 801ab9c:	4604      	mov	r4, r0
 801ab9e:	460d      	mov	r5, r1
 801aba0:	d904      	bls.n	801abac <_raise_r+0x14>
 801aba2:	2316      	movs	r3, #22
 801aba4:	6003      	str	r3, [r0, #0]
 801aba6:	f04f 30ff 	mov.w	r0, #4294967295
 801abaa:	bd38      	pop	{r3, r4, r5, pc}
 801abac:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801abae:	b112      	cbz	r2, 801abb6 <_raise_r+0x1e>
 801abb0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801abb4:	b94b      	cbnz	r3, 801abca <_raise_r+0x32>
 801abb6:	4620      	mov	r0, r4
 801abb8:	f000 f830 	bl	801ac1c <_getpid_r>
 801abbc:	462a      	mov	r2, r5
 801abbe:	4601      	mov	r1, r0
 801abc0:	4620      	mov	r0, r4
 801abc2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801abc6:	f000 b817 	b.w	801abf8 <_kill_r>
 801abca:	2b01      	cmp	r3, #1
 801abcc:	d00a      	beq.n	801abe4 <_raise_r+0x4c>
 801abce:	1c59      	adds	r1, r3, #1
 801abd0:	d103      	bne.n	801abda <_raise_r+0x42>
 801abd2:	2316      	movs	r3, #22
 801abd4:	6003      	str	r3, [r0, #0]
 801abd6:	2001      	movs	r0, #1
 801abd8:	e7e7      	b.n	801abaa <_raise_r+0x12>
 801abda:	2400      	movs	r4, #0
 801abdc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801abe0:	4628      	mov	r0, r5
 801abe2:	4798      	blx	r3
 801abe4:	2000      	movs	r0, #0
 801abe6:	e7e0      	b.n	801abaa <_raise_r+0x12>

0801abe8 <raise>:
 801abe8:	4b02      	ldr	r3, [pc, #8]	; (801abf4 <raise+0xc>)
 801abea:	4601      	mov	r1, r0
 801abec:	6818      	ldr	r0, [r3, #0]
 801abee:	f7ff bfd3 	b.w	801ab98 <_raise_r>
 801abf2:	bf00      	nop
 801abf4:	200000fc 	.word	0x200000fc

0801abf8 <_kill_r>:
 801abf8:	b538      	push	{r3, r4, r5, lr}
 801abfa:	4c07      	ldr	r4, [pc, #28]	; (801ac18 <_kill_r+0x20>)
 801abfc:	2300      	movs	r3, #0
 801abfe:	4605      	mov	r5, r0
 801ac00:	4608      	mov	r0, r1
 801ac02:	4611      	mov	r1, r2
 801ac04:	6023      	str	r3, [r4, #0]
 801ac06:	f7e7 f9b1 	bl	8001f6c <_kill>
 801ac0a:	1c43      	adds	r3, r0, #1
 801ac0c:	d102      	bne.n	801ac14 <_kill_r+0x1c>
 801ac0e:	6823      	ldr	r3, [r4, #0]
 801ac10:	b103      	cbz	r3, 801ac14 <_kill_r+0x1c>
 801ac12:	602b      	str	r3, [r5, #0]
 801ac14:	bd38      	pop	{r3, r4, r5, pc}
 801ac16:	bf00      	nop
 801ac18:	200126f0 	.word	0x200126f0

0801ac1c <_getpid_r>:
 801ac1c:	f7e7 b9a4 	b.w	8001f68 <_getpid>

0801ac20 <__swbuf_r>:
 801ac20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac22:	460e      	mov	r6, r1
 801ac24:	4614      	mov	r4, r2
 801ac26:	4605      	mov	r5, r0
 801ac28:	b118      	cbz	r0, 801ac32 <__swbuf_r+0x12>
 801ac2a:	6983      	ldr	r3, [r0, #24]
 801ac2c:	b90b      	cbnz	r3, 801ac32 <__swbuf_r+0x12>
 801ac2e:	f000 fa0b 	bl	801b048 <__sinit>
 801ac32:	4b21      	ldr	r3, [pc, #132]	; (801acb8 <__swbuf_r+0x98>)
 801ac34:	429c      	cmp	r4, r3
 801ac36:	d12a      	bne.n	801ac8e <__swbuf_r+0x6e>
 801ac38:	686c      	ldr	r4, [r5, #4]
 801ac3a:	69a3      	ldr	r3, [r4, #24]
 801ac3c:	60a3      	str	r3, [r4, #8]
 801ac3e:	89a3      	ldrh	r3, [r4, #12]
 801ac40:	071a      	lsls	r2, r3, #28
 801ac42:	d52e      	bpl.n	801aca2 <__swbuf_r+0x82>
 801ac44:	6923      	ldr	r3, [r4, #16]
 801ac46:	b363      	cbz	r3, 801aca2 <__swbuf_r+0x82>
 801ac48:	6923      	ldr	r3, [r4, #16]
 801ac4a:	6820      	ldr	r0, [r4, #0]
 801ac4c:	1ac0      	subs	r0, r0, r3
 801ac4e:	6963      	ldr	r3, [r4, #20]
 801ac50:	b2f6      	uxtb	r6, r6
 801ac52:	4283      	cmp	r3, r0
 801ac54:	4637      	mov	r7, r6
 801ac56:	dc04      	bgt.n	801ac62 <__swbuf_r+0x42>
 801ac58:	4621      	mov	r1, r4
 801ac5a:	4628      	mov	r0, r5
 801ac5c:	f000 f98a 	bl	801af74 <_fflush_r>
 801ac60:	bb28      	cbnz	r0, 801acae <__swbuf_r+0x8e>
 801ac62:	68a3      	ldr	r3, [r4, #8]
 801ac64:	3b01      	subs	r3, #1
 801ac66:	60a3      	str	r3, [r4, #8]
 801ac68:	6823      	ldr	r3, [r4, #0]
 801ac6a:	1c5a      	adds	r2, r3, #1
 801ac6c:	6022      	str	r2, [r4, #0]
 801ac6e:	701e      	strb	r6, [r3, #0]
 801ac70:	6963      	ldr	r3, [r4, #20]
 801ac72:	3001      	adds	r0, #1
 801ac74:	4283      	cmp	r3, r0
 801ac76:	d004      	beq.n	801ac82 <__swbuf_r+0x62>
 801ac78:	89a3      	ldrh	r3, [r4, #12]
 801ac7a:	07db      	lsls	r3, r3, #31
 801ac7c:	d519      	bpl.n	801acb2 <__swbuf_r+0x92>
 801ac7e:	2e0a      	cmp	r6, #10
 801ac80:	d117      	bne.n	801acb2 <__swbuf_r+0x92>
 801ac82:	4621      	mov	r1, r4
 801ac84:	4628      	mov	r0, r5
 801ac86:	f000 f975 	bl	801af74 <_fflush_r>
 801ac8a:	b190      	cbz	r0, 801acb2 <__swbuf_r+0x92>
 801ac8c:	e00f      	b.n	801acae <__swbuf_r+0x8e>
 801ac8e:	4b0b      	ldr	r3, [pc, #44]	; (801acbc <__swbuf_r+0x9c>)
 801ac90:	429c      	cmp	r4, r3
 801ac92:	d101      	bne.n	801ac98 <__swbuf_r+0x78>
 801ac94:	68ac      	ldr	r4, [r5, #8]
 801ac96:	e7d0      	b.n	801ac3a <__swbuf_r+0x1a>
 801ac98:	4b09      	ldr	r3, [pc, #36]	; (801acc0 <__swbuf_r+0xa0>)
 801ac9a:	429c      	cmp	r4, r3
 801ac9c:	bf08      	it	eq
 801ac9e:	68ec      	ldreq	r4, [r5, #12]
 801aca0:	e7cb      	b.n	801ac3a <__swbuf_r+0x1a>
 801aca2:	4621      	mov	r1, r4
 801aca4:	4628      	mov	r0, r5
 801aca6:	f000 f80d 	bl	801acc4 <__swsetup_r>
 801acaa:	2800      	cmp	r0, #0
 801acac:	d0cc      	beq.n	801ac48 <__swbuf_r+0x28>
 801acae:	f04f 37ff 	mov.w	r7, #4294967295
 801acb2:	4638      	mov	r0, r7
 801acb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801acb6:	bf00      	nop
 801acb8:	0801e710 	.word	0x0801e710
 801acbc:	0801e730 	.word	0x0801e730
 801acc0:	0801e6f0 	.word	0x0801e6f0

0801acc4 <__swsetup_r>:
 801acc4:	4b32      	ldr	r3, [pc, #200]	; (801ad90 <__swsetup_r+0xcc>)
 801acc6:	b570      	push	{r4, r5, r6, lr}
 801acc8:	681d      	ldr	r5, [r3, #0]
 801acca:	4606      	mov	r6, r0
 801accc:	460c      	mov	r4, r1
 801acce:	b125      	cbz	r5, 801acda <__swsetup_r+0x16>
 801acd0:	69ab      	ldr	r3, [r5, #24]
 801acd2:	b913      	cbnz	r3, 801acda <__swsetup_r+0x16>
 801acd4:	4628      	mov	r0, r5
 801acd6:	f000 f9b7 	bl	801b048 <__sinit>
 801acda:	4b2e      	ldr	r3, [pc, #184]	; (801ad94 <__swsetup_r+0xd0>)
 801acdc:	429c      	cmp	r4, r3
 801acde:	d10f      	bne.n	801ad00 <__swsetup_r+0x3c>
 801ace0:	686c      	ldr	r4, [r5, #4]
 801ace2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ace6:	b29a      	uxth	r2, r3
 801ace8:	0715      	lsls	r5, r2, #28
 801acea:	d42c      	bmi.n	801ad46 <__swsetup_r+0x82>
 801acec:	06d0      	lsls	r0, r2, #27
 801acee:	d411      	bmi.n	801ad14 <__swsetup_r+0x50>
 801acf0:	2209      	movs	r2, #9
 801acf2:	6032      	str	r2, [r6, #0]
 801acf4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801acf8:	81a3      	strh	r3, [r4, #12]
 801acfa:	f04f 30ff 	mov.w	r0, #4294967295
 801acfe:	e03e      	b.n	801ad7e <__swsetup_r+0xba>
 801ad00:	4b25      	ldr	r3, [pc, #148]	; (801ad98 <__swsetup_r+0xd4>)
 801ad02:	429c      	cmp	r4, r3
 801ad04:	d101      	bne.n	801ad0a <__swsetup_r+0x46>
 801ad06:	68ac      	ldr	r4, [r5, #8]
 801ad08:	e7eb      	b.n	801ace2 <__swsetup_r+0x1e>
 801ad0a:	4b24      	ldr	r3, [pc, #144]	; (801ad9c <__swsetup_r+0xd8>)
 801ad0c:	429c      	cmp	r4, r3
 801ad0e:	bf08      	it	eq
 801ad10:	68ec      	ldreq	r4, [r5, #12]
 801ad12:	e7e6      	b.n	801ace2 <__swsetup_r+0x1e>
 801ad14:	0751      	lsls	r1, r2, #29
 801ad16:	d512      	bpl.n	801ad3e <__swsetup_r+0x7a>
 801ad18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801ad1a:	b141      	cbz	r1, 801ad2e <__swsetup_r+0x6a>
 801ad1c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801ad20:	4299      	cmp	r1, r3
 801ad22:	d002      	beq.n	801ad2a <__swsetup_r+0x66>
 801ad24:	4630      	mov	r0, r6
 801ad26:	f7ff fbb7 	bl	801a498 <_free_r>
 801ad2a:	2300      	movs	r3, #0
 801ad2c:	6363      	str	r3, [r4, #52]	; 0x34
 801ad2e:	89a3      	ldrh	r3, [r4, #12]
 801ad30:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801ad34:	81a3      	strh	r3, [r4, #12]
 801ad36:	2300      	movs	r3, #0
 801ad38:	6063      	str	r3, [r4, #4]
 801ad3a:	6923      	ldr	r3, [r4, #16]
 801ad3c:	6023      	str	r3, [r4, #0]
 801ad3e:	89a3      	ldrh	r3, [r4, #12]
 801ad40:	f043 0308 	orr.w	r3, r3, #8
 801ad44:	81a3      	strh	r3, [r4, #12]
 801ad46:	6923      	ldr	r3, [r4, #16]
 801ad48:	b94b      	cbnz	r3, 801ad5e <__swsetup_r+0x9a>
 801ad4a:	89a3      	ldrh	r3, [r4, #12]
 801ad4c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801ad50:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801ad54:	d003      	beq.n	801ad5e <__swsetup_r+0x9a>
 801ad56:	4621      	mov	r1, r4
 801ad58:	4630      	mov	r0, r6
 801ad5a:	f000 fa23 	bl	801b1a4 <__smakebuf_r>
 801ad5e:	89a2      	ldrh	r2, [r4, #12]
 801ad60:	f012 0301 	ands.w	r3, r2, #1
 801ad64:	d00c      	beq.n	801ad80 <__swsetup_r+0xbc>
 801ad66:	2300      	movs	r3, #0
 801ad68:	60a3      	str	r3, [r4, #8]
 801ad6a:	6963      	ldr	r3, [r4, #20]
 801ad6c:	425b      	negs	r3, r3
 801ad6e:	61a3      	str	r3, [r4, #24]
 801ad70:	6923      	ldr	r3, [r4, #16]
 801ad72:	b953      	cbnz	r3, 801ad8a <__swsetup_r+0xc6>
 801ad74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ad78:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801ad7c:	d1ba      	bne.n	801acf4 <__swsetup_r+0x30>
 801ad7e:	bd70      	pop	{r4, r5, r6, pc}
 801ad80:	0792      	lsls	r2, r2, #30
 801ad82:	bf58      	it	pl
 801ad84:	6963      	ldrpl	r3, [r4, #20]
 801ad86:	60a3      	str	r3, [r4, #8]
 801ad88:	e7f2      	b.n	801ad70 <__swsetup_r+0xac>
 801ad8a:	2000      	movs	r0, #0
 801ad8c:	e7f7      	b.n	801ad7e <__swsetup_r+0xba>
 801ad8e:	bf00      	nop
 801ad90:	200000fc 	.word	0x200000fc
 801ad94:	0801e710 	.word	0x0801e710
 801ad98:	0801e730 	.word	0x0801e730
 801ad9c:	0801e6f0 	.word	0x0801e6f0

0801ada0 <__register_exitproc>:
 801ada0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ada4:	4d2c      	ldr	r5, [pc, #176]	; (801ae58 <__register_exitproc+0xb8>)
 801ada6:	682c      	ldr	r4, [r5, #0]
 801ada8:	4607      	mov	r7, r0
 801adaa:	460e      	mov	r6, r1
 801adac:	4691      	mov	r9, r2
 801adae:	4698      	mov	r8, r3
 801adb0:	b934      	cbnz	r4, 801adc0 <__register_exitproc+0x20>
 801adb2:	4b2a      	ldr	r3, [pc, #168]	; (801ae5c <__register_exitproc+0xbc>)
 801adb4:	4c2a      	ldr	r4, [pc, #168]	; (801ae60 <__register_exitproc+0xc0>)
 801adb6:	602c      	str	r4, [r5, #0]
 801adb8:	b113      	cbz	r3, 801adc0 <__register_exitproc+0x20>
 801adba:	681b      	ldr	r3, [r3, #0]
 801adbc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801adc0:	6863      	ldr	r3, [r4, #4]
 801adc2:	2b1f      	cmp	r3, #31
 801adc4:	dd3d      	ble.n	801ae42 <__register_exitproc+0xa2>
 801adc6:	4b27      	ldr	r3, [pc, #156]	; (801ae64 <__register_exitproc+0xc4>)
 801adc8:	b91b      	cbnz	r3, 801add2 <__register_exitproc+0x32>
 801adca:	f04f 30ff 	mov.w	r0, #4294967295
 801adce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801add2:	208c      	movs	r0, #140	; 0x8c
 801add4:	f7ff fb3c 	bl	801a450 <malloc>
 801add8:	4604      	mov	r4, r0
 801adda:	2800      	cmp	r0, #0
 801addc:	d0f5      	beq.n	801adca <__register_exitproc+0x2a>
 801adde:	2300      	movs	r3, #0
 801ade0:	682a      	ldr	r2, [r5, #0]
 801ade2:	6002      	str	r2, [r0, #0]
 801ade4:	6043      	str	r3, [r0, #4]
 801ade6:	6028      	str	r0, [r5, #0]
 801ade8:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801adec:	b30f      	cbz	r7, 801ae32 <__register_exitproc+0x92>
 801adee:	f44f 7084 	mov.w	r0, #264	; 0x108
 801adf2:	f7ff fb2d 	bl	801a450 <malloc>
 801adf6:	2800      	cmp	r0, #0
 801adf8:	d0e7      	beq.n	801adca <__register_exitproc+0x2a>
 801adfa:	2300      	movs	r3, #0
 801adfc:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801ae00:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801ae04:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801ae08:	6862      	ldr	r2, [r4, #4]
 801ae0a:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801ae0e:	2301      	movs	r3, #1
 801ae10:	4093      	lsls	r3, r2
 801ae12:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801ae16:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801ae1a:	431a      	orrs	r2, r3
 801ae1c:	2f02      	cmp	r7, #2
 801ae1e:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801ae22:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801ae26:	bf02      	ittt	eq
 801ae28:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801ae2c:	4313      	orreq	r3, r2
 801ae2e:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801ae32:	6863      	ldr	r3, [r4, #4]
 801ae34:	1c5a      	adds	r2, r3, #1
 801ae36:	3302      	adds	r3, #2
 801ae38:	6062      	str	r2, [r4, #4]
 801ae3a:	2000      	movs	r0, #0
 801ae3c:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801ae40:	e7c5      	b.n	801adce <__register_exitproc+0x2e>
 801ae42:	2f00      	cmp	r7, #0
 801ae44:	d0f5      	beq.n	801ae32 <__register_exitproc+0x92>
 801ae46:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801ae4a:	2800      	cmp	r0, #0
 801ae4c:	d1dc      	bne.n	801ae08 <__register_exitproc+0x68>
 801ae4e:	4b05      	ldr	r3, [pc, #20]	; (801ae64 <__register_exitproc+0xc4>)
 801ae50:	2b00      	cmp	r3, #0
 801ae52:	d0ba      	beq.n	801adca <__register_exitproc+0x2a>
 801ae54:	e7cb      	b.n	801adee <__register_exitproc+0x4e>
 801ae56:	bf00      	nop
 801ae58:	20012364 	.word	0x20012364
 801ae5c:	0801e6ec 	.word	0x0801e6ec
 801ae60:	200122d8 	.word	0x200122d8
 801ae64:	0801a451 	.word	0x0801a451

0801ae68 <__sflush_r>:
 801ae68:	898a      	ldrh	r2, [r1, #12]
 801ae6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae6e:	4605      	mov	r5, r0
 801ae70:	0710      	lsls	r0, r2, #28
 801ae72:	460c      	mov	r4, r1
 801ae74:	d458      	bmi.n	801af28 <__sflush_r+0xc0>
 801ae76:	684b      	ldr	r3, [r1, #4]
 801ae78:	2b00      	cmp	r3, #0
 801ae7a:	dc05      	bgt.n	801ae88 <__sflush_r+0x20>
 801ae7c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801ae7e:	2b00      	cmp	r3, #0
 801ae80:	dc02      	bgt.n	801ae88 <__sflush_r+0x20>
 801ae82:	2000      	movs	r0, #0
 801ae84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae88:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ae8a:	2e00      	cmp	r6, #0
 801ae8c:	d0f9      	beq.n	801ae82 <__sflush_r+0x1a>
 801ae8e:	2300      	movs	r3, #0
 801ae90:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ae94:	682f      	ldr	r7, [r5, #0]
 801ae96:	6a21      	ldr	r1, [r4, #32]
 801ae98:	602b      	str	r3, [r5, #0]
 801ae9a:	d032      	beq.n	801af02 <__sflush_r+0x9a>
 801ae9c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801ae9e:	89a3      	ldrh	r3, [r4, #12]
 801aea0:	075a      	lsls	r2, r3, #29
 801aea2:	d505      	bpl.n	801aeb0 <__sflush_r+0x48>
 801aea4:	6863      	ldr	r3, [r4, #4]
 801aea6:	1ac0      	subs	r0, r0, r3
 801aea8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801aeaa:	b10b      	cbz	r3, 801aeb0 <__sflush_r+0x48>
 801aeac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801aeae:	1ac0      	subs	r0, r0, r3
 801aeb0:	2300      	movs	r3, #0
 801aeb2:	4602      	mov	r2, r0
 801aeb4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801aeb6:	6a21      	ldr	r1, [r4, #32]
 801aeb8:	4628      	mov	r0, r5
 801aeba:	47b0      	blx	r6
 801aebc:	1c43      	adds	r3, r0, #1
 801aebe:	89a3      	ldrh	r3, [r4, #12]
 801aec0:	d106      	bne.n	801aed0 <__sflush_r+0x68>
 801aec2:	6829      	ldr	r1, [r5, #0]
 801aec4:	291d      	cmp	r1, #29
 801aec6:	d848      	bhi.n	801af5a <__sflush_r+0xf2>
 801aec8:	4a29      	ldr	r2, [pc, #164]	; (801af70 <__sflush_r+0x108>)
 801aeca:	40ca      	lsrs	r2, r1
 801aecc:	07d6      	lsls	r6, r2, #31
 801aece:	d544      	bpl.n	801af5a <__sflush_r+0xf2>
 801aed0:	2200      	movs	r2, #0
 801aed2:	6062      	str	r2, [r4, #4]
 801aed4:	04d9      	lsls	r1, r3, #19
 801aed6:	6922      	ldr	r2, [r4, #16]
 801aed8:	6022      	str	r2, [r4, #0]
 801aeda:	d504      	bpl.n	801aee6 <__sflush_r+0x7e>
 801aedc:	1c42      	adds	r2, r0, #1
 801aede:	d101      	bne.n	801aee4 <__sflush_r+0x7c>
 801aee0:	682b      	ldr	r3, [r5, #0]
 801aee2:	b903      	cbnz	r3, 801aee6 <__sflush_r+0x7e>
 801aee4:	6560      	str	r0, [r4, #84]	; 0x54
 801aee6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801aee8:	602f      	str	r7, [r5, #0]
 801aeea:	2900      	cmp	r1, #0
 801aeec:	d0c9      	beq.n	801ae82 <__sflush_r+0x1a>
 801aeee:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801aef2:	4299      	cmp	r1, r3
 801aef4:	d002      	beq.n	801aefc <__sflush_r+0x94>
 801aef6:	4628      	mov	r0, r5
 801aef8:	f7ff face 	bl	801a498 <_free_r>
 801aefc:	2000      	movs	r0, #0
 801aefe:	6360      	str	r0, [r4, #52]	; 0x34
 801af00:	e7c0      	b.n	801ae84 <__sflush_r+0x1c>
 801af02:	2301      	movs	r3, #1
 801af04:	4628      	mov	r0, r5
 801af06:	47b0      	blx	r6
 801af08:	1c41      	adds	r1, r0, #1
 801af0a:	d1c8      	bne.n	801ae9e <__sflush_r+0x36>
 801af0c:	682b      	ldr	r3, [r5, #0]
 801af0e:	2b00      	cmp	r3, #0
 801af10:	d0c5      	beq.n	801ae9e <__sflush_r+0x36>
 801af12:	2b1d      	cmp	r3, #29
 801af14:	d001      	beq.n	801af1a <__sflush_r+0xb2>
 801af16:	2b16      	cmp	r3, #22
 801af18:	d101      	bne.n	801af1e <__sflush_r+0xb6>
 801af1a:	602f      	str	r7, [r5, #0]
 801af1c:	e7b1      	b.n	801ae82 <__sflush_r+0x1a>
 801af1e:	89a3      	ldrh	r3, [r4, #12]
 801af20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801af24:	81a3      	strh	r3, [r4, #12]
 801af26:	e7ad      	b.n	801ae84 <__sflush_r+0x1c>
 801af28:	690f      	ldr	r7, [r1, #16]
 801af2a:	2f00      	cmp	r7, #0
 801af2c:	d0a9      	beq.n	801ae82 <__sflush_r+0x1a>
 801af2e:	0793      	lsls	r3, r2, #30
 801af30:	680e      	ldr	r6, [r1, #0]
 801af32:	bf08      	it	eq
 801af34:	694b      	ldreq	r3, [r1, #20]
 801af36:	600f      	str	r7, [r1, #0]
 801af38:	bf18      	it	ne
 801af3a:	2300      	movne	r3, #0
 801af3c:	eba6 0807 	sub.w	r8, r6, r7
 801af40:	608b      	str	r3, [r1, #8]
 801af42:	f1b8 0f00 	cmp.w	r8, #0
 801af46:	dd9c      	ble.n	801ae82 <__sflush_r+0x1a>
 801af48:	4643      	mov	r3, r8
 801af4a:	463a      	mov	r2, r7
 801af4c:	6a21      	ldr	r1, [r4, #32]
 801af4e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801af50:	4628      	mov	r0, r5
 801af52:	47b0      	blx	r6
 801af54:	2800      	cmp	r0, #0
 801af56:	dc06      	bgt.n	801af66 <__sflush_r+0xfe>
 801af58:	89a3      	ldrh	r3, [r4, #12]
 801af5a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801af5e:	81a3      	strh	r3, [r4, #12]
 801af60:	f04f 30ff 	mov.w	r0, #4294967295
 801af64:	e78e      	b.n	801ae84 <__sflush_r+0x1c>
 801af66:	4407      	add	r7, r0
 801af68:	eba8 0800 	sub.w	r8, r8, r0
 801af6c:	e7e9      	b.n	801af42 <__sflush_r+0xda>
 801af6e:	bf00      	nop
 801af70:	20400001 	.word	0x20400001

0801af74 <_fflush_r>:
 801af74:	b538      	push	{r3, r4, r5, lr}
 801af76:	690b      	ldr	r3, [r1, #16]
 801af78:	4605      	mov	r5, r0
 801af7a:	460c      	mov	r4, r1
 801af7c:	b1db      	cbz	r3, 801afb6 <_fflush_r+0x42>
 801af7e:	b118      	cbz	r0, 801af88 <_fflush_r+0x14>
 801af80:	6983      	ldr	r3, [r0, #24]
 801af82:	b90b      	cbnz	r3, 801af88 <_fflush_r+0x14>
 801af84:	f000 f860 	bl	801b048 <__sinit>
 801af88:	4b0c      	ldr	r3, [pc, #48]	; (801afbc <_fflush_r+0x48>)
 801af8a:	429c      	cmp	r4, r3
 801af8c:	d109      	bne.n	801afa2 <_fflush_r+0x2e>
 801af8e:	686c      	ldr	r4, [r5, #4]
 801af90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801af94:	b17b      	cbz	r3, 801afb6 <_fflush_r+0x42>
 801af96:	4621      	mov	r1, r4
 801af98:	4628      	mov	r0, r5
 801af9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801af9e:	f7ff bf63 	b.w	801ae68 <__sflush_r>
 801afa2:	4b07      	ldr	r3, [pc, #28]	; (801afc0 <_fflush_r+0x4c>)
 801afa4:	429c      	cmp	r4, r3
 801afa6:	d101      	bne.n	801afac <_fflush_r+0x38>
 801afa8:	68ac      	ldr	r4, [r5, #8]
 801afaa:	e7f1      	b.n	801af90 <_fflush_r+0x1c>
 801afac:	4b05      	ldr	r3, [pc, #20]	; (801afc4 <_fflush_r+0x50>)
 801afae:	429c      	cmp	r4, r3
 801afb0:	bf08      	it	eq
 801afb2:	68ec      	ldreq	r4, [r5, #12]
 801afb4:	e7ec      	b.n	801af90 <_fflush_r+0x1c>
 801afb6:	2000      	movs	r0, #0
 801afb8:	bd38      	pop	{r3, r4, r5, pc}
 801afba:	bf00      	nop
 801afbc:	0801e710 	.word	0x0801e710
 801afc0:	0801e730 	.word	0x0801e730
 801afc4:	0801e6f0 	.word	0x0801e6f0

0801afc8 <std>:
 801afc8:	2300      	movs	r3, #0
 801afca:	b510      	push	{r4, lr}
 801afcc:	4604      	mov	r4, r0
 801afce:	e9c0 3300 	strd	r3, r3, [r0]
 801afd2:	6083      	str	r3, [r0, #8]
 801afd4:	8181      	strh	r1, [r0, #12]
 801afd6:	6643      	str	r3, [r0, #100]	; 0x64
 801afd8:	81c2      	strh	r2, [r0, #14]
 801afda:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801afde:	6183      	str	r3, [r0, #24]
 801afe0:	4619      	mov	r1, r3
 801afe2:	2208      	movs	r2, #8
 801afe4:	305c      	adds	r0, #92	; 0x5c
 801afe6:	f7ff fa4e 	bl	801a486 <memset>
 801afea:	4b05      	ldr	r3, [pc, #20]	; (801b000 <std+0x38>)
 801afec:	6263      	str	r3, [r4, #36]	; 0x24
 801afee:	4b05      	ldr	r3, [pc, #20]	; (801b004 <std+0x3c>)
 801aff0:	62a3      	str	r3, [r4, #40]	; 0x28
 801aff2:	4b05      	ldr	r3, [pc, #20]	; (801b008 <std+0x40>)
 801aff4:	62e3      	str	r3, [r4, #44]	; 0x2c
 801aff6:	4b05      	ldr	r3, [pc, #20]	; (801b00c <std+0x44>)
 801aff8:	6224      	str	r4, [r4, #32]
 801affa:	6323      	str	r3, [r4, #48]	; 0x30
 801affc:	bd10      	pop	{r4, pc}
 801affe:	bf00      	nop
 801b000:	0801b229 	.word	0x0801b229
 801b004:	0801b24b 	.word	0x0801b24b
 801b008:	0801b283 	.word	0x0801b283
 801b00c:	0801b2a7 	.word	0x0801b2a7

0801b010 <_cleanup_r>:
 801b010:	4901      	ldr	r1, [pc, #4]	; (801b018 <_cleanup_r+0x8>)
 801b012:	f000 b885 	b.w	801b120 <_fwalk_reent>
 801b016:	bf00      	nop
 801b018:	0801af75 	.word	0x0801af75

0801b01c <__sfmoreglue>:
 801b01c:	b570      	push	{r4, r5, r6, lr}
 801b01e:	1e4a      	subs	r2, r1, #1
 801b020:	2568      	movs	r5, #104	; 0x68
 801b022:	4355      	muls	r5, r2
 801b024:	460e      	mov	r6, r1
 801b026:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b02a:	f7ff fa83 	bl	801a534 <_malloc_r>
 801b02e:	4604      	mov	r4, r0
 801b030:	b140      	cbz	r0, 801b044 <__sfmoreglue+0x28>
 801b032:	2100      	movs	r1, #0
 801b034:	e9c0 1600 	strd	r1, r6, [r0]
 801b038:	300c      	adds	r0, #12
 801b03a:	60a0      	str	r0, [r4, #8]
 801b03c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b040:	f7ff fa21 	bl	801a486 <memset>
 801b044:	4620      	mov	r0, r4
 801b046:	bd70      	pop	{r4, r5, r6, pc}

0801b048 <__sinit>:
 801b048:	6983      	ldr	r3, [r0, #24]
 801b04a:	b510      	push	{r4, lr}
 801b04c:	4604      	mov	r4, r0
 801b04e:	bb33      	cbnz	r3, 801b09e <__sinit+0x56>
 801b050:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801b054:	6503      	str	r3, [r0, #80]	; 0x50
 801b056:	4b12      	ldr	r3, [pc, #72]	; (801b0a0 <__sinit+0x58>)
 801b058:	4a12      	ldr	r2, [pc, #72]	; (801b0a4 <__sinit+0x5c>)
 801b05a:	681b      	ldr	r3, [r3, #0]
 801b05c:	6282      	str	r2, [r0, #40]	; 0x28
 801b05e:	4298      	cmp	r0, r3
 801b060:	bf04      	itt	eq
 801b062:	2301      	moveq	r3, #1
 801b064:	6183      	streq	r3, [r0, #24]
 801b066:	f000 f81f 	bl	801b0a8 <__sfp>
 801b06a:	6060      	str	r0, [r4, #4]
 801b06c:	4620      	mov	r0, r4
 801b06e:	f000 f81b 	bl	801b0a8 <__sfp>
 801b072:	60a0      	str	r0, [r4, #8]
 801b074:	4620      	mov	r0, r4
 801b076:	f000 f817 	bl	801b0a8 <__sfp>
 801b07a:	2200      	movs	r2, #0
 801b07c:	60e0      	str	r0, [r4, #12]
 801b07e:	2104      	movs	r1, #4
 801b080:	6860      	ldr	r0, [r4, #4]
 801b082:	f7ff ffa1 	bl	801afc8 <std>
 801b086:	2201      	movs	r2, #1
 801b088:	2109      	movs	r1, #9
 801b08a:	68a0      	ldr	r0, [r4, #8]
 801b08c:	f7ff ff9c 	bl	801afc8 <std>
 801b090:	2202      	movs	r2, #2
 801b092:	2112      	movs	r1, #18
 801b094:	68e0      	ldr	r0, [r4, #12]
 801b096:	f7ff ff97 	bl	801afc8 <std>
 801b09a:	2301      	movs	r3, #1
 801b09c:	61a3      	str	r3, [r4, #24]
 801b09e:	bd10      	pop	{r4, pc}
 801b0a0:	0801e6b4 	.word	0x0801e6b4
 801b0a4:	0801b011 	.word	0x0801b011

0801b0a8 <__sfp>:
 801b0a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b0aa:	4b1b      	ldr	r3, [pc, #108]	; (801b118 <__sfp+0x70>)
 801b0ac:	681e      	ldr	r6, [r3, #0]
 801b0ae:	69b3      	ldr	r3, [r6, #24]
 801b0b0:	4607      	mov	r7, r0
 801b0b2:	b913      	cbnz	r3, 801b0ba <__sfp+0x12>
 801b0b4:	4630      	mov	r0, r6
 801b0b6:	f7ff ffc7 	bl	801b048 <__sinit>
 801b0ba:	3648      	adds	r6, #72	; 0x48
 801b0bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b0c0:	3b01      	subs	r3, #1
 801b0c2:	d503      	bpl.n	801b0cc <__sfp+0x24>
 801b0c4:	6833      	ldr	r3, [r6, #0]
 801b0c6:	b133      	cbz	r3, 801b0d6 <__sfp+0x2e>
 801b0c8:	6836      	ldr	r6, [r6, #0]
 801b0ca:	e7f7      	b.n	801b0bc <__sfp+0x14>
 801b0cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b0d0:	b16d      	cbz	r5, 801b0ee <__sfp+0x46>
 801b0d2:	3468      	adds	r4, #104	; 0x68
 801b0d4:	e7f4      	b.n	801b0c0 <__sfp+0x18>
 801b0d6:	2104      	movs	r1, #4
 801b0d8:	4638      	mov	r0, r7
 801b0da:	f7ff ff9f 	bl	801b01c <__sfmoreglue>
 801b0de:	6030      	str	r0, [r6, #0]
 801b0e0:	2800      	cmp	r0, #0
 801b0e2:	d1f1      	bne.n	801b0c8 <__sfp+0x20>
 801b0e4:	230c      	movs	r3, #12
 801b0e6:	603b      	str	r3, [r7, #0]
 801b0e8:	4604      	mov	r4, r0
 801b0ea:	4620      	mov	r0, r4
 801b0ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b0ee:	4b0b      	ldr	r3, [pc, #44]	; (801b11c <__sfp+0x74>)
 801b0f0:	6665      	str	r5, [r4, #100]	; 0x64
 801b0f2:	e9c4 5500 	strd	r5, r5, [r4]
 801b0f6:	60a5      	str	r5, [r4, #8]
 801b0f8:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801b0fc:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801b100:	2208      	movs	r2, #8
 801b102:	4629      	mov	r1, r5
 801b104:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b108:	f7ff f9bd 	bl	801a486 <memset>
 801b10c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b110:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b114:	e7e9      	b.n	801b0ea <__sfp+0x42>
 801b116:	bf00      	nop
 801b118:	0801e6b4 	.word	0x0801e6b4
 801b11c:	ffff0001 	.word	0xffff0001

0801b120 <_fwalk_reent>:
 801b120:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b124:	4680      	mov	r8, r0
 801b126:	4689      	mov	r9, r1
 801b128:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b12c:	2600      	movs	r6, #0
 801b12e:	b914      	cbnz	r4, 801b136 <_fwalk_reent+0x16>
 801b130:	4630      	mov	r0, r6
 801b132:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b136:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801b13a:	3f01      	subs	r7, #1
 801b13c:	d501      	bpl.n	801b142 <_fwalk_reent+0x22>
 801b13e:	6824      	ldr	r4, [r4, #0]
 801b140:	e7f5      	b.n	801b12e <_fwalk_reent+0xe>
 801b142:	89ab      	ldrh	r3, [r5, #12]
 801b144:	2b01      	cmp	r3, #1
 801b146:	d907      	bls.n	801b158 <_fwalk_reent+0x38>
 801b148:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b14c:	3301      	adds	r3, #1
 801b14e:	d003      	beq.n	801b158 <_fwalk_reent+0x38>
 801b150:	4629      	mov	r1, r5
 801b152:	4640      	mov	r0, r8
 801b154:	47c8      	blx	r9
 801b156:	4306      	orrs	r6, r0
 801b158:	3568      	adds	r5, #104	; 0x68
 801b15a:	e7ee      	b.n	801b13a <_fwalk_reent+0x1a>

0801b15c <__swhatbuf_r>:
 801b15c:	b570      	push	{r4, r5, r6, lr}
 801b15e:	460e      	mov	r6, r1
 801b160:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b164:	2900      	cmp	r1, #0
 801b166:	b096      	sub	sp, #88	; 0x58
 801b168:	4614      	mov	r4, r2
 801b16a:	461d      	mov	r5, r3
 801b16c:	da07      	bge.n	801b17e <__swhatbuf_r+0x22>
 801b16e:	2300      	movs	r3, #0
 801b170:	602b      	str	r3, [r5, #0]
 801b172:	89b3      	ldrh	r3, [r6, #12]
 801b174:	061a      	lsls	r2, r3, #24
 801b176:	d410      	bmi.n	801b19a <__swhatbuf_r+0x3e>
 801b178:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b17c:	e00e      	b.n	801b19c <__swhatbuf_r+0x40>
 801b17e:	466a      	mov	r2, sp
 801b180:	f000 f8b8 	bl	801b2f4 <_fstat_r>
 801b184:	2800      	cmp	r0, #0
 801b186:	dbf2      	blt.n	801b16e <__swhatbuf_r+0x12>
 801b188:	9a01      	ldr	r2, [sp, #4]
 801b18a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b18e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b192:	425a      	negs	r2, r3
 801b194:	415a      	adcs	r2, r3
 801b196:	602a      	str	r2, [r5, #0]
 801b198:	e7ee      	b.n	801b178 <__swhatbuf_r+0x1c>
 801b19a:	2340      	movs	r3, #64	; 0x40
 801b19c:	2000      	movs	r0, #0
 801b19e:	6023      	str	r3, [r4, #0]
 801b1a0:	b016      	add	sp, #88	; 0x58
 801b1a2:	bd70      	pop	{r4, r5, r6, pc}

0801b1a4 <__smakebuf_r>:
 801b1a4:	898b      	ldrh	r3, [r1, #12]
 801b1a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b1a8:	079d      	lsls	r5, r3, #30
 801b1aa:	4606      	mov	r6, r0
 801b1ac:	460c      	mov	r4, r1
 801b1ae:	d507      	bpl.n	801b1c0 <__smakebuf_r+0x1c>
 801b1b0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b1b4:	6023      	str	r3, [r4, #0]
 801b1b6:	6123      	str	r3, [r4, #16]
 801b1b8:	2301      	movs	r3, #1
 801b1ba:	6163      	str	r3, [r4, #20]
 801b1bc:	b002      	add	sp, #8
 801b1be:	bd70      	pop	{r4, r5, r6, pc}
 801b1c0:	ab01      	add	r3, sp, #4
 801b1c2:	466a      	mov	r2, sp
 801b1c4:	f7ff ffca 	bl	801b15c <__swhatbuf_r>
 801b1c8:	9900      	ldr	r1, [sp, #0]
 801b1ca:	4605      	mov	r5, r0
 801b1cc:	4630      	mov	r0, r6
 801b1ce:	f7ff f9b1 	bl	801a534 <_malloc_r>
 801b1d2:	b948      	cbnz	r0, 801b1e8 <__smakebuf_r+0x44>
 801b1d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b1d8:	059a      	lsls	r2, r3, #22
 801b1da:	d4ef      	bmi.n	801b1bc <__smakebuf_r+0x18>
 801b1dc:	f023 0303 	bic.w	r3, r3, #3
 801b1e0:	f043 0302 	orr.w	r3, r3, #2
 801b1e4:	81a3      	strh	r3, [r4, #12]
 801b1e6:	e7e3      	b.n	801b1b0 <__smakebuf_r+0xc>
 801b1e8:	4b0d      	ldr	r3, [pc, #52]	; (801b220 <__smakebuf_r+0x7c>)
 801b1ea:	62b3      	str	r3, [r6, #40]	; 0x28
 801b1ec:	89a3      	ldrh	r3, [r4, #12]
 801b1ee:	6020      	str	r0, [r4, #0]
 801b1f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b1f4:	81a3      	strh	r3, [r4, #12]
 801b1f6:	9b00      	ldr	r3, [sp, #0]
 801b1f8:	6163      	str	r3, [r4, #20]
 801b1fa:	9b01      	ldr	r3, [sp, #4]
 801b1fc:	6120      	str	r0, [r4, #16]
 801b1fe:	b15b      	cbz	r3, 801b218 <__smakebuf_r+0x74>
 801b200:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b204:	4630      	mov	r0, r6
 801b206:	f000 f887 	bl	801b318 <_isatty_r>
 801b20a:	b128      	cbz	r0, 801b218 <__smakebuf_r+0x74>
 801b20c:	89a3      	ldrh	r3, [r4, #12]
 801b20e:	f023 0303 	bic.w	r3, r3, #3
 801b212:	f043 0301 	orr.w	r3, r3, #1
 801b216:	81a3      	strh	r3, [r4, #12]
 801b218:	89a3      	ldrh	r3, [r4, #12]
 801b21a:	431d      	orrs	r5, r3
 801b21c:	81a5      	strh	r5, [r4, #12]
 801b21e:	e7cd      	b.n	801b1bc <__smakebuf_r+0x18>
 801b220:	0801b011 	.word	0x0801b011

0801b224 <__malloc_lock>:
 801b224:	4770      	bx	lr

0801b226 <__malloc_unlock>:
 801b226:	4770      	bx	lr

0801b228 <__sread>:
 801b228:	b510      	push	{r4, lr}
 801b22a:	460c      	mov	r4, r1
 801b22c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b230:	f000 f894 	bl	801b35c <_read_r>
 801b234:	2800      	cmp	r0, #0
 801b236:	bfab      	itete	ge
 801b238:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801b23a:	89a3      	ldrhlt	r3, [r4, #12]
 801b23c:	181b      	addge	r3, r3, r0
 801b23e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801b242:	bfac      	ite	ge
 801b244:	6563      	strge	r3, [r4, #84]	; 0x54
 801b246:	81a3      	strhlt	r3, [r4, #12]
 801b248:	bd10      	pop	{r4, pc}

0801b24a <__swrite>:
 801b24a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b24e:	461f      	mov	r7, r3
 801b250:	898b      	ldrh	r3, [r1, #12]
 801b252:	05db      	lsls	r3, r3, #23
 801b254:	4605      	mov	r5, r0
 801b256:	460c      	mov	r4, r1
 801b258:	4616      	mov	r6, r2
 801b25a:	d505      	bpl.n	801b268 <__swrite+0x1e>
 801b25c:	2302      	movs	r3, #2
 801b25e:	2200      	movs	r2, #0
 801b260:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b264:	f000 f868 	bl	801b338 <_lseek_r>
 801b268:	89a3      	ldrh	r3, [r4, #12]
 801b26a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b26e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801b272:	81a3      	strh	r3, [r4, #12]
 801b274:	4632      	mov	r2, r6
 801b276:	463b      	mov	r3, r7
 801b278:	4628      	mov	r0, r5
 801b27a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b27e:	f000 b817 	b.w	801b2b0 <_write_r>

0801b282 <__sseek>:
 801b282:	b510      	push	{r4, lr}
 801b284:	460c      	mov	r4, r1
 801b286:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b28a:	f000 f855 	bl	801b338 <_lseek_r>
 801b28e:	1c43      	adds	r3, r0, #1
 801b290:	89a3      	ldrh	r3, [r4, #12]
 801b292:	bf15      	itete	ne
 801b294:	6560      	strne	r0, [r4, #84]	; 0x54
 801b296:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801b29a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801b29e:	81a3      	strheq	r3, [r4, #12]
 801b2a0:	bf18      	it	ne
 801b2a2:	81a3      	strhne	r3, [r4, #12]
 801b2a4:	bd10      	pop	{r4, pc}

0801b2a6 <__sclose>:
 801b2a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b2aa:	f000 b813 	b.w	801b2d4 <_close_r>
	...

0801b2b0 <_write_r>:
 801b2b0:	b538      	push	{r3, r4, r5, lr}
 801b2b2:	4c07      	ldr	r4, [pc, #28]	; (801b2d0 <_write_r+0x20>)
 801b2b4:	4605      	mov	r5, r0
 801b2b6:	4608      	mov	r0, r1
 801b2b8:	4611      	mov	r1, r2
 801b2ba:	2200      	movs	r2, #0
 801b2bc:	6022      	str	r2, [r4, #0]
 801b2be:	461a      	mov	r2, r3
 801b2c0:	f7e6 fe70 	bl	8001fa4 <_write>
 801b2c4:	1c43      	adds	r3, r0, #1
 801b2c6:	d102      	bne.n	801b2ce <_write_r+0x1e>
 801b2c8:	6823      	ldr	r3, [r4, #0]
 801b2ca:	b103      	cbz	r3, 801b2ce <_write_r+0x1e>
 801b2cc:	602b      	str	r3, [r5, #0]
 801b2ce:	bd38      	pop	{r3, r4, r5, pc}
 801b2d0:	200126f0 	.word	0x200126f0

0801b2d4 <_close_r>:
 801b2d4:	b538      	push	{r3, r4, r5, lr}
 801b2d6:	4c06      	ldr	r4, [pc, #24]	; (801b2f0 <_close_r+0x1c>)
 801b2d8:	2300      	movs	r3, #0
 801b2da:	4605      	mov	r5, r0
 801b2dc:	4608      	mov	r0, r1
 801b2de:	6023      	str	r3, [r4, #0]
 801b2e0:	f7e6 fe6e 	bl	8001fc0 <_close>
 801b2e4:	1c43      	adds	r3, r0, #1
 801b2e6:	d102      	bne.n	801b2ee <_close_r+0x1a>
 801b2e8:	6823      	ldr	r3, [r4, #0]
 801b2ea:	b103      	cbz	r3, 801b2ee <_close_r+0x1a>
 801b2ec:	602b      	str	r3, [r5, #0]
 801b2ee:	bd38      	pop	{r3, r4, r5, pc}
 801b2f0:	200126f0 	.word	0x200126f0

0801b2f4 <_fstat_r>:
 801b2f4:	b538      	push	{r3, r4, r5, lr}
 801b2f6:	4c07      	ldr	r4, [pc, #28]	; (801b314 <_fstat_r+0x20>)
 801b2f8:	2300      	movs	r3, #0
 801b2fa:	4605      	mov	r5, r0
 801b2fc:	4608      	mov	r0, r1
 801b2fe:	4611      	mov	r1, r2
 801b300:	6023      	str	r3, [r4, #0]
 801b302:	f7e6 fe60 	bl	8001fc6 <_fstat>
 801b306:	1c43      	adds	r3, r0, #1
 801b308:	d102      	bne.n	801b310 <_fstat_r+0x1c>
 801b30a:	6823      	ldr	r3, [r4, #0]
 801b30c:	b103      	cbz	r3, 801b310 <_fstat_r+0x1c>
 801b30e:	602b      	str	r3, [r5, #0]
 801b310:	bd38      	pop	{r3, r4, r5, pc}
 801b312:	bf00      	nop
 801b314:	200126f0 	.word	0x200126f0

0801b318 <_isatty_r>:
 801b318:	b538      	push	{r3, r4, r5, lr}
 801b31a:	4c06      	ldr	r4, [pc, #24]	; (801b334 <_isatty_r+0x1c>)
 801b31c:	2300      	movs	r3, #0
 801b31e:	4605      	mov	r5, r0
 801b320:	4608      	mov	r0, r1
 801b322:	6023      	str	r3, [r4, #0]
 801b324:	f7e6 fe54 	bl	8001fd0 <_isatty>
 801b328:	1c43      	adds	r3, r0, #1
 801b32a:	d102      	bne.n	801b332 <_isatty_r+0x1a>
 801b32c:	6823      	ldr	r3, [r4, #0]
 801b32e:	b103      	cbz	r3, 801b332 <_isatty_r+0x1a>
 801b330:	602b      	str	r3, [r5, #0]
 801b332:	bd38      	pop	{r3, r4, r5, pc}
 801b334:	200126f0 	.word	0x200126f0

0801b338 <_lseek_r>:
 801b338:	b538      	push	{r3, r4, r5, lr}
 801b33a:	4c07      	ldr	r4, [pc, #28]	; (801b358 <_lseek_r+0x20>)
 801b33c:	4605      	mov	r5, r0
 801b33e:	4608      	mov	r0, r1
 801b340:	4611      	mov	r1, r2
 801b342:	2200      	movs	r2, #0
 801b344:	6022      	str	r2, [r4, #0]
 801b346:	461a      	mov	r2, r3
 801b348:	f7e6 fe44 	bl	8001fd4 <_lseek>
 801b34c:	1c43      	adds	r3, r0, #1
 801b34e:	d102      	bne.n	801b356 <_lseek_r+0x1e>
 801b350:	6823      	ldr	r3, [r4, #0]
 801b352:	b103      	cbz	r3, 801b356 <_lseek_r+0x1e>
 801b354:	602b      	str	r3, [r5, #0]
 801b356:	bd38      	pop	{r3, r4, r5, pc}
 801b358:	200126f0 	.word	0x200126f0

0801b35c <_read_r>:
 801b35c:	b538      	push	{r3, r4, r5, lr}
 801b35e:	4c07      	ldr	r4, [pc, #28]	; (801b37c <_read_r+0x20>)
 801b360:	4605      	mov	r5, r0
 801b362:	4608      	mov	r0, r1
 801b364:	4611      	mov	r1, r2
 801b366:	2200      	movs	r2, #0
 801b368:	6022      	str	r2, [r4, #0]
 801b36a:	461a      	mov	r2, r3
 801b36c:	f7e6 fe0c 	bl	8001f88 <_read>
 801b370:	1c43      	adds	r3, r0, #1
 801b372:	d102      	bne.n	801b37a <_read_r+0x1e>
 801b374:	6823      	ldr	r3, [r4, #0]
 801b376:	b103      	cbz	r3, 801b37a <_read_r+0x1e>
 801b378:	602b      	str	r3, [r5, #0]
 801b37a:	bd38      	pop	{r3, r4, r5, pc}
 801b37c:	200126f0 	.word	0x200126f0

0801b380 <_init>:
 801b380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b382:	bf00      	nop
 801b384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b386:	bc08      	pop	{r3}
 801b388:	469e      	mov	lr, r3
 801b38a:	4770      	bx	lr

0801b38c <_fini>:
 801b38c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b38e:	bf00      	nop
 801b390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801b392:	bc08      	pop	{r3}
 801b394:	469e      	mov	lr, r3
 801b396:	4770      	bx	lr
